2012-09-19  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] After zooming into an input field, zoom out when focus is lost.
        https://bugs.webkit.org/show_bug.cgi?id=97128

        Reviewed by Rob Buis.

        When the page has automatically zoomed in for input
        focus, unzoom it when input focus is lost or keyboard hidden.

        Reviewed Internally by Gen Mak.

        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::InputHandler::InputHandler):
        (BlackBerry::WebKit::InputHandler::ensureFocusTextElementVisible):
        * WebKitSupport/InputHandler.h:
        (InputHandler):

2012-09-19  Nima Ghanavatian  <nghanavatian@rim.com>

        [BlackBerry] Clean up the SpellingLog output
        https://bugs.webkit.org/show_bug.cgi?id=97129

        Reviewed by Rob Buis.

        Internally reviewed by Mike Fenton.

        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::InputHandler::spellCheckingRequestCancelled):
        (BlackBerry::WebKit::InputHandler::spellCheckingRequestProcessed):

2012-09-19  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] Add SpellingLog for spell checking options request.
        https://bugs.webkit.org/show_bug.cgi?id=97125

        Reviewed by Rob Buis.

        Add spell checking log to indicate the calculated
        text position for spell checking option requests.

        Reviewed Internally by Nima Ghanavatian.

        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::InputHandler::shouldRequestSpellCheckingOptionsForPoint):

2012-09-19  Jonathan Dong  <jonathan.dong@torchmobile.com.cn>

        [BlackBerry] Add function playerId() in class PageClientBlackBerry
        https://bugs.webkit.org/show_bug.cgi?id=97099

        Reviewed by Yong Li.

        Implemented PageClientBlackBerry::playerID() in class WebPagePrivate,
        and replaced the implementation of FrameLoaderClientBlackBerry::playerId().

        Internally reviewed by Charles Wei.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::playerID):
        (WebKit):
        * Api/WebPage_p.h:
        (WebPagePrivate):
        * WebCoreSupport/FrameLoaderClientBlackBerry.cpp:
        (WebCore::FrameLoaderClientBlackBerry::playerId):

2012-09-19  Abbas Sherawala  <asherawala@rim.com>

        [BlackBerry] BackingStorePrivate::resumeScreenAndBackingStoreUpdates more atomic
        Added a missing 'if' statement.
        https://bugs.webkit.org/show_bug.cgi?id=96925

        PR #180866

        Internally Reviewed by Antonio Gomes.

        Adding an 'if' statement which should have been in PR # 180866 (SHA:b9c06af395c22e)

        Reviewed by Antonio Gomes.

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStorePrivate::resumeScreenAndBackingStoreUpdates):

2012-09-18  Nima Ghanavatian  <nghanavatian@rim.com>

        [BlackBerry] Use didCancel and didSucceed instead of didCheckCancel and didCheckSucceed
        https://bugs.webkit.org/show_bug.cgi?id=97033

        Reviewed by Rob Buis.

        Using these preferred public methods (the latter has a note to be made private) ensures that
        the right SpellChecker object is being called during the callback in spellCheckingRequestProcessed
        and spellCheckingRequestCancelled.

        Internally reviewed by Mike Fenton.

        By referencing the TextCheckingRequest object's methods, we don't need to keep track of the associated
        SpellChecker for each request. Removing much of the code that was put in place incorrectly to achieve this.

        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::InputHandler::InputHandler):
        (BlackBerry::WebKit::InputHandler::requestCheckingOfString):
        (BlackBerry::WebKit::InputHandler::spellCheckingRequestCancelled):
        (BlackBerry::WebKit::InputHandler::spellCheckingRequestProcessed):
        (BlackBerry::WebKit::InputHandler::getSpellChecker):
        * WebKitSupport/InputHandler.h:
        (InputHandler):

2012-09-18  Jessica Cao  <jecao@rim.com>

        [BlackBerry] Date picker isn't inputting after 'OK'
        https://bugs.webkit.org/show_bug.cgi?id=97031

        PR208052

        Reviewed by Rob Buis

        Checking for !values.contains("-1") will match valid strings like "2012-09-18". Use value != "-1" instead.

        * WebCoreSupport/DatePickerClient.cpp:
        (WebCore::DatePickerClient::setValueAndClosePopup):

2012-09-18  Yong Li  <yoli@rim.com>

        [BlackBerry] Popup page should reference the client with a weak pointer
        https://bugs.webkit.org/show_bug.cgi?id=97028

        Reviewed by Rob Buis.

        RIM PR# 209847.
        Internally reviewed by Mike Fenton.

        Store the pointer in a ref-coutned shared object, and clear the pointer 
        when the client is going to be destroyed, so it won't be accessed by
        the JS function afterwards.

        * WebCoreSupport/PagePopupBlackBerry.cpp:
        (WebCore::PagePopupBlackBerry::PagePopupBlackBerry):
        (WebCore::PagePopupBlackBerry::~PagePopupBlackBerry):
        (WebCore::PagePopupBlackBerry::init):
        (WebCore::setValueAndClosePopupCallback):
        (WebCore::popUpExtensionFinalize):
        (WebCore::PagePopupBlackBerry::installDOMFunction):
        (WebCore::PagePopupBlackBerry::closePopup):
        * WebCoreSupport/PagePopupBlackBerry.h:
        (PagePopupBlackBerry):
        (SharedClientPointer):
        (WebCore::PagePopupBlackBerry::SharedClientPointer::SharedClientPointer):
        (WebCore::PagePopupBlackBerry::SharedClientPointer::clear):
        (WebCore::PagePopupBlackBerry::SharedClientPointer::get):

2012-09-18  Arvid Nilsson  <anilsson@rim.com>

        [BlackBerry] Prevent scroll adjustment of input fields when region of interest mechanism active
        https://bugs.webkit.org/show_bug.cgi?id=96750

        Reviewed by Antonio Gomes.

        The region of interest mechanism replaces the scrolling/zooming
        functionality in InputHandler::ensureFocusTextElementVisible().

        We introduce a new fine-grained setting for the various adjustment
        modes. The WebKit embedder can disable all scroll types in favor of the
        region of interest mechanism by using the new setting.

        PR #208387

        Reviewed internally by Mike Fenton.

        * WebKitSupport/AboutData.cpp:
        (BlackBerry::WebKit::configPage):
        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::InputHandler::ensureFocusTextElementVisible):
        * WebKitSupport/InputHandler.h:

2012-09-17  Jakob Petsovits  <jpetsovits@rim.com>

        [BlackBerry] Remove dysfunctional zoom blit in setViewportSize().
        https://bugs.webkit.org/show_bug.cgi?id=96954
        PR 178411

        Reviewed by Antonio Gomes.

        The blitContents() call removed by this patch used to
        be part of scheduleZoomAboutPoint(). Its goal was to
        display a preview of the zoomed contents, primarily
        when auto-zoomed after rotation. Nested inside a pair
        of screen suspend/resume calls, it has been a pointless
        no-op for a while.

        Antonio's recent change to remove scheduleZoomAboutPoint()
        and call zoomAboutPoint() from setViewportSize() directly
        (the only call site) obsoletes the call completely.
        The zoomAboutPoint() call itself will cause a re-render
        and blit right away, so we don't care about any preview.
        zoomAboutPoint() will also take care of the necessary
        screen/backingstore suspension.

        The result is a vastly simplified block of code.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::setViewportSize):

2012-09-17  Antonio Gomes  <agomes@rim.com>

        [BlackBerry] [FullScreen] entering/leaving fullscreen results in temporary glitches on the screen
        https://bugs.webkit.org/show_bug.cgi?id=96927
        PR #180866

        Reviewed by Yong Li.

        Suspend backing store and screen updates while entering fullscreen,
        and only resume at the end, when viewport is resized.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::WebPagePrivate):
        (BlackBerry::WebKit::WebPagePrivate::setViewportSize):
        * Api/WebPage_p.h:
        (WebPagePrivate):
        * WebCoreSupport/ChromeClientBlackBerry.cpp:
        (WebCore::ChromeClientBlackBerry::enterFullScreenForElement):
        (WebCore::ChromeClientBlackBerry::exitFullScreenForElement):

2012-09-17  Rob Buis  <rbuis@rim.com>

        [BlackBerry] Fix compile problems in WebKit/blackberry
        https://bugs.webkit.org/show_bug.cgi?id=96926

        Reviewed by Antonio Gomes.

        This code is slightly out of date and so will not compile, fix it.

        * WebCoreSupport/BatteryClientBlackBerry.cpp:
        (WebCore::BatteryClientBlackBerry::BatteryClientBlackBerry):
        * WebCoreSupport/BatteryClientBlackBerry.h:
        (WebKit):
        * WebCoreSupport/CredentialTransformData.h:
        * WebCoreSupport/DeviceOrientationClientBlackBerry.cpp:
        (DeviceOrientationClientBlackBerry::onOrientation):
        * WebCoreSupport/InspectorClientBlackBerry.h:
        * WebCoreSupport/PagePopupBlackBerry.cpp:
        * WebKitSupport/DOMSupport.cpp:
        (BlackBerry::WebKit::DOMSupport::isDateTimeInputField):
        (BlackBerry::WebKit::DOMSupport::isTextBasedContentEditableElement):
        * WebKitSupport/DumpRenderTreeSupport.cpp:
        (DumpRenderTreeSupport::numberOfPendingGeolocationPermissionRequests):
        * WebKitSupport/InPageSearchManager.cpp:
        (BlackBerry::WebKit::InPageSearchManager::scopeStringMatches):

2012-09-17  Antonio Gomes  <agomes@rim.com>

        [BlackBerry] BackingStorePrivate::resumeScreenAndBackingStoreUpdates more atomic
        https://bugs.webkit.org/show_bug.cgi?id=96925

        [FullScreen] entering/leaving fullscreen results in temporary glitches on the screen (part 2/3)
        PR #180866

        Reviewed by Rob Buis.
        Internally reviewed by Arvid Nilsson.

        Paraphrasing Arvid "resumeBackingStore will be a truly atomic operation.
        Well more atomic than it was before, with regards to a mix of accelerated and
        non-accelerated compositing content".

        I.e. by committing the root layer (if needed) when resuming the Backing
        Store, we call blitVisibleContents right way, so we are actually shortcutting when
        AC content will get on screen.

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStorePrivate::resumeScreenAndBackingStoreUpdates):

2012-09-17  Peter Wang  <peter.wang@torchmobile.com.cn>

        [BlackBerry] To support "Frames View" of "TimeLine" panel in Inspector
        https://bugs.webkit.org/show_bug.cgi?id=96077

        Reviewed by Rob Buis.

        Invoke the "instrumentBeginFrame" and "instrumentCancelFrame" at the start and end of processing
        render message to record one time of page's update.

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStorePrivate::instrumentBeginFrame):
        (WebKit):
        (BlackBerry::WebKit::BackingStorePrivate::instrumentCancelFrame):
        * Api/BackingStore_p.h:
        * WebKitSupport/RenderQueue.cpp:
        (BlackBerry::WebKit::RenderQueue::render):

2012-09-17  Jakob Petsovits  <jpetsovits@rim.com>

        [BlackBerry] Support copying image data in WebOverlay.
        https://bugs.webkit.org/show_bug.cgi?id=96684
        RIM PR 195444

        Reviewed by Rob Buis.
        Internally reviewed by Arvid Nilsson.

        The publicly exposed WebOverlay class provides a method
        setContentsToImage() to assign a pointer to pixel data,
        which is later used to provide texture data for the
        underlying compositing layer. This works well for static
        images that stay in memory and never change, but not
        so well for images with changing contents or where the
        image data is being reassigned from different image
        sources that are not constantly kept around in memory.

        Due to the delayed upload and delayed fetching of
        EGLImage data by the GPU, we shouldn't assume the caller
        to know how long the image should be retained. Instead,
        we should offer another method of setting image data
        that takes ownership of the pixel data.

        This patch adds an option to setContentsToImage() that
        copies the passed pixel data and doesn't destroy it
        until both the texture is destroyed and the image
        contents are changed. Using this method, the caller can
        withdraw the passed pixel array right after the
        setContentsToImage() call without consequences.

        * Api/WebOverlay.cpp:
        (BlackBerry::WebKit::WebOverlay::setContentsToImage):
        (BlackBerry::WebKit::WebOverlayPrivateWebKitThread::setContentsToImage):
        (BlackBerry::WebKit::WebOverlayLayerCompositingThreadClient::WebOverlayLayerCompositingThreadClient):
        (BlackBerry::WebKit::WebOverlayLayerCompositingThreadClient::invalidate):
        (BlackBerry::WebKit::WebOverlayLayerCompositingThreadClient::setContents):
        (WebKit):
        (BlackBerry::WebKit::WebOverlayLayerCompositingThreadClient::clearUploadedContents):
        (BlackBerry::WebKit::WebOverlayLayerCompositingThreadClient::setContentsToColor):
        (BlackBerry::WebKit::WebOverlayLayerCompositingThreadClient::uploadTexturesIfNeeded):
        (BlackBerry::WebKit::WebOverlayLayerCompositingThreadClient::deleteTextures):
        (BlackBerry::WebKit::WebOverlayPrivateCompositingThread::setContentsToImage):
        * Api/WebOverlay.h:
        * Api/WebOverlay_p.h:
        (WebOverlayPrivate):
        (WebOverlayPrivateWebKitThread):
        (WebOverlayLayerCompositingThreadClient):
        (WebOverlayPrivateCompositingThread):

2012-09-14  Dana Jansens  <danakj@chromium.org>

        Minimize collisions when hashing pairs
        https://bugs.webkit.org/show_bug.cgi?id=96022

        Reviewed by Adrienne Walker.

        Use WTF::pairIntHash() to hash a pair of integers.

        * WebKitSupport/TileIndexHash.h:

2012-09-14  Genevieve Mak  <gmak@rim.com>

        Always send mouse events on pages that don't scroll even if there
        is no mouse move listener attatched.
        PR #208228
        https://bugs.webkit.org/show_bug.cgi?id=96800

        Reviewed by Antonio Gomes.

        Reviewed Internally By Antonio Gomes.

        * WebKitSupport/TouchEventHandler.cpp:
        (BlackBerry::WebKit::TouchEventHandler::handleTouchPoint):

2012-09-14  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] Update the minimum zoom scale when focusing an input field.
        https://bugs.webkit.org/show_bug.cgi?id=96789

        Reviewed by Antonio Gomes.

        PR 188751.

        Increase the minimum font fix and base it on mm instead of pixels.

        Reviewed Internally by Gen Mak.

        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::InputHandler::ensureFocusTextElementVisible):

2012-09-13  Antonio Gomes  <agomes@rim.com>

        [BlackBerry]  Remove the ability to schedule a zoom about point call.
        https://bugs.webkit.org/show_bug.cgi?id=96696

        [FullScreen] entering/leaving fullscreen results in temporary glitches on the screen (Part I)
        PR #180866

        Reviewed by Rob Buis.

        Internally reviewed by Jacky Jiang and Arvid Nilsson.

        Patch replaces the async call to zoomAboutPoint (via scheduling it with a one-shot-0-timer).
        Instead, at its single call site, we inline most of the previous scheduleZoomAboutPoint code,
        and in the end call zoomAboutPoint directly.

        Change was estimulated by Arvid's comment on PRzilla: "There is no longer any reason to have
        zoom about point be async.. That was a hack I did for BB6, back when we were doing everything on the WK
        thread and needed manual time slicing betwren rendering and user interaction."

        The bigger goal though is to be able to remove screen glitches while entering/leaving
        fullscreen mode: since we could accurately use the count-based suspend/resume backing
        store mechanism to prevent it.

        * Api/WebPage.cpp:
        (WebKit):
        (BlackBerry::WebKit::WebPagePrivate::WebPagePrivate):
        (BlackBerry::WebKit::WebPagePrivate::setLoadState):
        (BlackBerry::WebKit::WebPagePrivate::setViewportSize):
        * Api/WebPage_p.h:
        (WebPagePrivate):

2012-09-14  Arvid Nilsson  <anilsson@rim.com>

        [BlackBerry] Add renderTreeAsText API to WebPage
        https://bugs.webkit.org/show_bug.cgi?id=96629

        Reviewed by Antonio Gomes.

        This will be used for automated testing.

        PR #198595

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPage::renderTreeAsText):
        (WebKit):
        * Api/WebPage.h:

2012-09-13  Rob Buis  <rbuis@rim.com>

        [BlackBerry] Cleanup AboutDataEnableFeatures.in
        https://bugs.webkit.org/show_bug.cgi?id=96695

        Reviewed by Antonio Gomes.

        Remove unused features.

        * WebCoreSupport/AboutDataEnableFeatures.in:

2012-09-13  Rob Buis  <rbuis@rim.com>

        [BlackBerry] Rename InspectorOverlay in blackberry/WebKitSupport
        https://bugs.webkit.org/show_bug.cgi?id=96689

        Reviewed by Antonio Gomes.

        Rename to InspectorClientBlackBerry to avoid include problems.

        * WebCoreSupport/InspectorClientBlackBerry.h:
        * WebKitSupport/InspectorOverlayBlackBerry.cpp: Renamed from Source/WebKit/blackberry/WebKitSupport/InspectorOverlay.cpp.
        (WebKit):
        (BlackBerry::WebKit::InspectorOverlay::create):
        (BlackBerry::WebKit::InspectorOverlay::InspectorOverlay):
        (BlackBerry::WebKit::InspectorOverlay::notifySyncRequired):
        (BlackBerry::WebKit::InspectorOverlay::paintContents):
        (BlackBerry::WebKit::InspectorOverlay::showDebugBorders):
        (BlackBerry::WebKit::InspectorOverlay::showRepaintCounter):
        (BlackBerry::WebKit::InspectorOverlay::~InspectorOverlay):
        (BlackBerry::WebKit::InspectorOverlay::clear):
        (BlackBerry::WebKit::InspectorOverlay::update):
        * WebKitSupport/InspectorOverlayBlackBerry.h: Renamed from Source/WebKit/blackberry/WebKitSupport/InspectorOverlay.h.
        (WebCore):
        (WebKit):
        (InspectorOverlay):
        (InspectorOverlayClient):
        (BlackBerry::WebKit::InspectorOverlay::setClient):
        (BlackBerry::WebKit::InspectorOverlay::notifyAnimationStarted):

2012-09-13  Antonio Gomes  <agomes@rim.com>

        Unreviewed, warning fix left over from r128456 (bug 96645)

        * Api/InRegionScroller.cpp:
        (WebKit):

2012-09-13  Genevieve Mak  <gmak@rim.com>

        Continue to send mouse move events to a non-scrollable page
        even if they are not consumed.
        PR #207024
        https://bugs.webkit.org/show_bug.cgi?id=96655

        Reviewed by Antonio Gomes.

        * WebKitSupport/TouchEventHandler.cpp:
        (BlackBerry::WebKit::isMainFrameScrollable):
        (WebKit):
        (BlackBerry::WebKit::TouchEventHandler::handleTouchPoint):

2012-09-13  Jacky Jiang  <zhajiang@rim.com>

        [BlackBerry] Missing conditions in InRegionScrollerPrivate::canScrollRenderBox
        https://bugs.webkit.org/show_bug.cgi?id=96660

        Reviewed by Antonio Gomes.

        PR: 207884
        According to RenderBox::canBeScrolledAndHasScrollableArea(), we should
        bail out early in InRegionScrollerPrivate::canScrollRenderBox() if the
        RenderBox's scroll height equals the client height and the scroll width
        equals the client width. Otherwise, we will miss the conditions.

        * Api/InRegionScroller.cpp:
        (BlackBerry::WebKit::InRegionScrollerPrivate::canScrollRenderBox):

2012-09-13  Jessica Cao  <jecao@rim.com>

        [BlackBerry] Page Popup for Month is non-functional.
        https://bugs.webkit.org/show_bug.cgi?id=96651

        Reviewed by Rob Buis.

        Hook up support for Month popup.

        * WebCoreSupport/DatePickerClient.cpp:
        (WebCore::DatePickerClient::generateHTML):
        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::InputHandler::openDatePopup):

2012-09-13  Antonio Gomes  <agomes@rim.com>

        [BlackBerry] ASSERT failure in InRegionScrollableArea::InRegionScrollableArea
        https://bugs.webkit.org/show_bug.cgi?id=96645
        PR #207307

        Reviewed by George Staikos.

        We use canScrollRenderBox to promote the layer as scrollable instead
        of RenderBox::canScrollAndHasScrollableArea (see comment above the former).
        We should assert against the former as well.

        * Api/InRegionScroller.cpp:
        (BlackBerry::WebKit::InRegionScrollerPrivate::canScrollRenderBox):
        * Api/InRegionScroller_p.h:
        (WebCore):
        (InRegionScrollerPrivate):
        * WebKitSupport/InRegionScrollableArea.cpp:
        (BlackBerry::WebKit::InRegionScrollableArea::InRegionScrollableArea):

2012-09-12  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r127876.
        http://trac.webkit.org/changeset/127876
        https://bugs.webkit.org/show_bug.cgi?id=96600

        mouse click doesn't work for spin button if spin button in
        iframe (Requested by yosin on #webkit).

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::contextNode):
        (BlackBerry::WebKit::WebPagePrivate::nodeForZoomUnderPoint):
        (BlackBerry::WebKit::WebPagePrivate::handleMouseEvent):
        (BlackBerry::WebKit::WebPage::nodeAtPoint):
        * WebKitSupport/FatFingers.cpp:
        (BlackBerry::WebKit::FatFingers::getNodesFromRect):
        (BlackBerry::WebKit::FatFingers::getRelevantInfoFromPoint):
        * WebKitSupport/SelectionHandler.cpp:
        (BlackBerry::WebKit::visiblePositionForPointIgnoringClipping):

2012-09-12  Sami Kyostila  <skyostil@google.com>

        Rename OVERFLOW_SCROLLING as ACCELERATED_OVERFLOW_SCROLLING
        https://bugs.webkit.org/show_bug.cgi?id=96251

        Reviewed by Simon Fraser.

        Rename OVERFLOW_SCROLLING as ACCELERATED_OVERFLOW_SCROLLING to better describe
        the feature it controls.

        * WebCoreSupport/AboutDataEnableFeatures.in:

2012-09-11  Antonio Gomes  <agomes@rim.com>

        [BlackBerry] add a way to overscroll non-overflown content
        https://bugs.webkit.org/show_bug.cgi?id=96331
        PR #195305

        Reviewed by Yong Li.

        Check -webkit-overflow-scrolling value for '-blackberry-touch' instead
        of checking a custom HTML5 attribute.

        No behavioural change. Mostly a rework of r128142.

        * Api/InRegionScroller.cpp:
        (BlackBerry::WebKit::canScrollRenderBox):

2012-09-11  Rob Buis  <rbuis@rim.com>

        [BlackBerry] make pickers/dialogs use appendLiteral
        https://bugs.webkit.org/show_bug.cgi?id=96424

        Reviewed by Antonio Gomes.

        PR 204032

        Other pickers were updated in r128204.

        * WebCoreSupport/ColorPickerClient.cpp:
        (WebCore::ColorPickerClient::generateHTML):
        * WebCoreSupport/PagePopupBlackBerry.cpp:
        (WebCore::PagePopupBlackBerry::generateHTML):

2012-09-11  Konrad Piascik  <kpiascik@rim.com>

        [BlackBerry] Fix history navigation for error pages.
        https://bugs.webkit.org/show_bug.cgi?id=96410

        Reviewed by Rob Buis.

        Fix how history navigation handles restoring view state when navigating between error pages.

        * WebCoreSupport/FrameLoaderClientBlackBerry.cpp:
        (WebCore::FrameLoaderClientBlackBerry::FrameLoaderClientBlackBerry):
        (WebCore::FrameLoaderClientBlackBerry::saveViewStateToItem):
        (WebCore::FrameLoaderClientBlackBerry::restoreViewState):
        * WebCoreSupport/FrameLoaderClientBlackBerry.h:
        (FrameLoaderClientBlackBerry):

2012-09-11  Jinwoo Song  <jinwoo7.song@samsung.com>

        Deploy StringBuilder::appendNumber() and StringBuilder::appendLiteral() in more places
        https://bugs.webkit.org/show_bug.cgi?id=96344

        Reviewed by Benjamin Poulain.

        Use StringBuilder::appendNumber() instead of String::number(). Also deploy 
        StringBuilder::appendLiteral() instead of String::append() in the surrounding code.

        * WebCoreSupport/DatePickerClient.cpp:
        (WebCore::DatePickerClient::generateHTML):
        * WebCoreSupport/SelectPopupClient.cpp:
        (WebCore::SelectPopupClient::generateHTML):

2012-09-11  Jacky Jiang  <zhajiang@rim.com>

        [BlackBerry] InRegion scrollable area dangling pointers were accessed in UI thread
        https://bugs.webkit.org/show_bug.cgi?id=96318

        Reviewed by Antonio Gomes.

        PR: 204066
        Dangling pointers were accessed in UI thread, as the actual InRegion
        scrollable areas of WebKit side had been destroyed before that in
        WebKit thread after UI thread set scrolling to false.
        Notify the client side to clear InRegion scrollable areas before we
        destroy them in WebKit side.

        Internally reviewed by Gen Mak and George Staikos.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::notifyInRegionScrollStopped):
        (BlackBerry::WebKit::WebPagePrivate::setScrollOriginPoint):
        * Api/WebPageClient.h:

2012-09-11  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] Suppress keyboard requests while processing spell checking suggestions.
        https://bugs.webkit.org/show_bug.cgi?id=96394

        Reviewed by Rob Buis.

        Suppress the VKB notification when the touch event
        is a spell checking request.

        PR 192925.

        Reviewed Internally by Gen Mak.

        * WebKitSupport/TouchEventHandler.cpp:
        (BlackBerry::WebKit::TouchEventHandler::handleTouchPoint):

2012-09-11  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] Colour Dialog popup request should return proper state.
        https://bugs.webkit.org/show_bug.cgi?id=96392

        Reviewed by Rob Buis.

        Return proper state from openColorPopup dependent on
        whether the popup actually opened.

        Reviewed Internally by Chris Hutten-Czapski

        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::InputHandler::openColorPopup):

2012-09-11  Nima Ghanavatian  <nghanavatian@rim.com>

        [BlackBerry] Take account for single words that exceed our client character limit
        https://bugs.webkit.org/show_bug.cgi?id=96389

        Fix to the processing of long single-line text using getRangeForSpellCheckWithFineGranularity.
        This was failing if a single word was longer than our maximum allowed limit.

        Internally reviewed by Mike Fenton.

        Reviewed by Rob Buis.

        * WebKitSupport/InputHandler.cpp:
        (WebKit):
        (BlackBerry::WebKit::InputHandler::getRangeForSpellCheckWithFineGranularity):

2012-09-11  Arvid Nilsson  <anilsson@rim.com>

        [BlackBerry] SelectionHandler drops caret change notifications
        https://bugs.webkit.org/show_bug.cgi?id=96378

        Reviewed by Antonio Gomes.

        The selection handler deliberately drops caret change notifications
        while the input handler is processing changes, to avoid displaying
        intermediate state during a complex change.

        However, this meant that the client was never informed of the final
        caret position.

        Fixed by notifying client about caret change after processing ends, if
        one or more caret change notifications were dropped during processing.

        PR #205073

        Reviewed internally by Mike Fenton.

        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::InputHandler::setProcessingChange):
        (WebKit):
        * WebKitSupport/InputHandler.h:
        (InputHandler):
        * WebKitSupport/SelectionHandler.cpp:
        (BlackBerry::WebKit::SelectionHandler::SelectionHandler):
        (BlackBerry::WebKit::SelectionHandler::inputHandlerDidFinishProcessingChange):
        (WebKit):
        (BlackBerry::WebKit::SelectionHandler::selectionPositionChanged):
        (BlackBerry::WebKit::SelectionHandler::notifyCaretPositionChangedIfNeeded):
        * WebKitSupport/SelectionHandler.h:
        (SelectionHandler):

2012-09-10  Antonio Gomes  <agomes@rim.com>

        [BlackBerry] add a way to overscroll non-overflown content
        https://bugs.webkit.org/show_bug.cgi?id=96331
        [UxD] Vertical lists should always be scrollable
        PR #195305

        Reviewed by Yong Li.
        Internally reviewed by Gen Mak.

        Check if the RenderLayer is composited / hardware acceleratable prior to
        check if its contents overflows. If that is the case, check if
        our custom data-blackberry-force-overscroll is present.

        That makes it possible for us to align to UX requirements: settings
        and CCM panels should be always scrollable.

        * Api/InRegionScroller.cpp:
        (BlackBerry::WebKit::canScrollRenderBox):
        * WebKitSupport/InRegionScrollableArea.cpp:
        (BlackBerry::WebKit::InRegionScrollableArea::InRegionScrollableArea):

2012-09-10  Genevieve Mak  <gmak@rim.com>

        Change -data-blackberry-webworks-context to -data-webworks-context
        because not all webworks apps are blackberry apps.
        https://bugs.webkit.org/show_bug.cgi?id=96297

        Reviewed by Antonio Gomes.

        PR #193726
        Rubber Stamped interally by Mike Fenton.

        * WebKitSupport/DOMSupport.cpp:
        (BlackBerry::WebKit::DOMSupport::webWorksContext):

2012-09-09  Arvid Nilsson  <anilsson@rim.com>

        [BlackBerry] Fix flicker due to introduction of the fence extension.
        https://bugs.webkit.org/show_bug.cgi?id=96207

        Reviewed by George Staikos.

        Don't immediately add fence to garbage list, so it is destroyed
        after only one swap, for a set of tiles just because one tile in
        the set gets a new fence, the old fence may still not be signalled
        and before rendering the other tiles in the set we have to wait for it.

        * WebKitSupport/BackingStoreTile.cpp:
        (BlackBerry::WebKit::Fence::~Fence):
        (WebKit):
        * WebKitSupport/BackingStoreTile.h:
        (WebKit):
        (Fence):
        * WebKitSupport/SurfacePool.cpp:
        (BlackBerry::WebKit::SurfacePool::initialize):
        (BlackBerry::WebKit::SurfacePool::notifyBuffersComposited):
        (WebKit):
        (BlackBerry::WebKit::SurfacePool::destroyPlatformSync):
        * WebKitSupport/SurfacePool.h:
        (SurfacePool):

2012-09-08  Max Feil  <mfeil@rim.com>

        [BlackBerry] Exiting fullscreen mode can leave user stuck without Browser menus
        https://bugs.webkit.org/show_bug.cgi?id=96027

        Reviewed by Antonio Gomes.

        The changes for bug 87337 (landed as trunk svn revision 119119)
        introduced a bug. The same conditions are not checked on enter
        fullscreen vs. exit. Web sites such as http://videojs.com
        and youtube's mobile HTML5 player make the div container
        of the video element go fullscreen. This is allowed in
        WebPagePrivate::enterFullScreenForElement() but disallowed in
        WebPagePrivate::exitFullScreenForElement(). I am fixing this by
        allowing containers of video elements to exit fullscreen.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::exitFullScreenForElement):

2012-09-07  Ming Xie  <mxie@rim.com>


        [BlackBerry] Remove browser from the build info page
        https://bugs.webkit.org/show_bug.cgi?id=96162

        Reviewed by George Staikos.
        Internal reviewed by Jeff Rogers.

        WebKit build should not have the build info for browser which is
        built on top of webkit.

        * WebKitSupport/AboutData.cpp:
        (BlackBerry::WebKit::buildPage):

2012-09-07  Yongxin Dai  <yodai@rim.com>

        [BlackBerry] Initialize caret rectangle with invalid location
        https://bugs.webkit.org/show_bug.cgi?id=96011

        Reviewed by Rob Buis.

        In SelectionHandler::selectionPositionChanged() method, startCaret and
        endCaret are used to notify clients about new caret positions. This patch
        initializes startCaret and endCaret with location(-1. -1), and keeps them
        empty before they are assigned to valid values. This would help for other
        classes to check validity of the caret correctly.

        Internal reviewed by Mike Fenton.

        * WebKitSupport/SelectionHandler.cpp:
        (BlackBerry::WebKit::adjustCaretRects):
        (BlackBerry::WebKit::SelectionHandler::selectionPositionChanged):

2012-09-07  Lianghui Chen  <liachen@rim.com>

        [BlackBerry] when one of multiple tabs uses authentication, user can get the auth dialog while the other tab has focus.
        https://bugs.webkit.org/show_bug.cgi?id=95488
        PR: 186597.

        Internally reviewed by Joe Mason.
        Reviewed by Yong Li.

        Use new AuthenticationChallengeClient interface to make authentication
        challenge asynchronous to NetworkJob, MediaPlayerPrivateBlackBerry, and
        other module that will use HTTP authentication. WebPage itself still use
        synchronous authentication though. Switching to asynchronous authentication
        in WebPage will require bigger platform layer change and not very necessary
        at the moment for this bug.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::authenticationChallenge):
        * Api/WebPage_p.h:
        (WebCore):
        (WebPagePrivate):

2012-09-07  Rob Buis  <rbuis@rim.com>

        [BlackBerry] Remove feature about:cache/disable and about:cache/enable
        https://bugs.webkit.org/show_bug.cgi?id=95820

        Reviewed by Yong Li.

        Fix warning that was caused by r127680.

        * WebKitSupport/AboutData.cpp:
        (BlackBerry::WebKit::cachePage):

2012-09-07  Allan Sandfeld Jensen  <allan.jensen@nokia.com>

        Simplify hitTestResultAtPoint and nodesFromRect APIs
        https://bugs.webkit.org/show_bug.cgi?id=95720

        Reviewed by Antonio Gomes.

        Update calls to new API.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::contextNode):
        (BlackBerry::WebKit::WebPagePrivate::nodeForZoomUnderPoint):
        (BlackBerry::WebKit::WebPagePrivate::handleMouseEvent):
        (BlackBerry::WebKit::WebPage::nodeAtPoint):
        * WebKitSupport/FatFingers.cpp:
        (BlackBerry::WebKit::FatFingers::getNodesFromRect):
        (BlackBerry::WebKit::FatFingers::getRelevantInfoFromPoint):
        * WebKitSupport/SelectionHandler.cpp:
        (BlackBerry::WebKit::visiblePositionForPointIgnoringClipping):

2012-09-07  Robin Cao  <robin.cao@torchmobile.com.cn>

        [BlackBerry] Rendering issue after rotation
        https://bugs.webkit.org/show_bug.cgi?id=96094
        PR #201930

        Reviewed by George Staikos.

        The cause of the rendering issue is that the BackingStore tiles
        are not reset after layout. This is a regression of r125680, which
        overwrites a local variable that are used later in the function.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::setViewportSize):

2012-09-06  Crystal Zhang  <haizhang@rim.com>

        [BlackBerry]  Implement a color picker
        https://bugs.webkit.org/show_bug.cgi?id=96001

        Reviewed by Rob Buis.

        Add files for color picker, replace old hook to AIR color picker.

        * WebCoreSupport/ColorPickerClient.cpp: Added.
        (WebCore):
        (WebCore::ColorPickerClient::ColorPickerClient):
        (WebCore::ColorPickerClient::~ColorPickerClient):
        (WebCore::ColorPickerClient::generateHTML):
        (WebCore::ColorPickerClient::closePopup):
        (WebCore::ColorPickerClient::contentSize):
        (WebCore::ColorPickerClient::htmlSource):
        (WebCore::ColorPickerClient::setValueAndClosePopup):
        (WebCore::ColorPickerClient::didClosePopup):
        (WebCore::ColorPickerClient::writeDocument):
        * WebCoreSupport/ColorPickerClient.h: Added.
        (WebKit):
        (WebCore):
        (ColorPickerClient):
        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::InputHandler::openColorPopup):

2012-09-06  Genevieve Mak  <gmak@rim.com>

        Add data-blackberry-webworks-context attribute and set the custom context when
        getting context.
        https://bugs.webkit.org/show_bug.cgi?id=95993

        Reviewed by Antonio Gomes.

        PR #193726
        Reviewed Internally by Mike Fenton.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::webContext):
            - Check for custom WebWorks context and add it if there.
        * WebKitSupport/DOMSupport.cpp:
        (BlackBerry::WebKit::DOMSupport::webWorksContext):
        (DOMSupport):
        * WebKitSupport/DOMSupport.h:
            - Add a method that checks a given element for the data-webworks-context
              attribute and returns its value if present.

2012-09-06  Antonio Gomes  <agomes@rim.com>

        [BlackBerry] Allow overscroll to composited scroll layers
        https://bugs.webkit.org/show_bug.cgi?id=95998
        PR #195305

        Reviewed by Rob Buis.
        Internally reviewed by Gen Mak.

        No need to reset the overscroll limit factor at creation to 0.
        It is already 0 by default, and later on the client sets the
        appropriated value.

        * WebKitSupport/InRegionScrollableArea.cpp:
        (BlackBerry::WebKit::InRegionScrollableArea::InRegionScrollableArea):

2012-09-05  Sam Weinig  <sam@webkit.org>

        Part 2 of removing PlatformString.h, remove PlatformString.h
        https://bugs.webkit.org/show_bug.cgi?id=95931

        Reviewed by Adam Barth.

        Remove PlatformString.h

        * Api/DumpRenderTreeClient.h:
        * WebCoreSupport/ChromeClientBlackBerry.cpp:
        * WebCoreSupport/InspectorClientBlackBerry.h:
        * WebCoreSupport/JavaScriptDebuggerBlackBerry.cpp:
        * WebKitSupport/AboutData.h:

2012-09-05  Jason Liu  <jason.liu@torchmobile.com.cn>

        [BlackBerry] Remove feature about:cache/disable and about:cache/enable
        https://bugs.webkit.org/show_bug.cgi?id=95820

        Reviewed by Rob Buis.

        Remove this feature since we need to add a button in settings.

        * WebKitSupport/AboutData.cpp:
        (BlackBerry::WebKit::cachePage):

2012-09-05  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] Remove deprecated dialog connections.
        https://bugs.webkit.org/show_bug.cgi?id=95868

        Reviewed by Rob Buis.

        PR 187481.
        Remove deprecated logic for unsupported
        Dialog types.

        * Api/WebPageClient.h:
        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::InputHandler::openDatePopup):
        (BlackBerry::WebKit::InputHandler::openColorPopup):

2012-09-05  George Staikos  <staikos@webkit.org>

        [BlackBerry] Assignment operators missing self-check
        https://bugs.webkit.org/show_bug.cgi?id=95774

        Reviewed by Rob Buis.

        Add a test for self-assignment.

        * Api/WebAnimation.cpp:
        (BlackBerry::WebKit::WebAnimation::operator=):
        * Api/WebString.cpp:
        (BlackBerry::WebKit::WebString::operator=):

2012-09-05  Leo Yang  <leoyang@rim.com>

        [BlackBerry] Optimize BackingStorePrivate::isCurrentVisibleJob
        https://bugs.webkit.org/show_bug.cgi?id=95897

        Reviewed by Antonio Gomes.

        Bail out the loop early if one of the not-rendered rectangle is
        not current regular render job.

        No behavior change, just code optimization.

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStorePrivate::isCurrentVisibleJob):

2012-09-05  Benjamin C Meyer  <bmeyer@rim.com>

        [BlackBerry] JavaScriptVariant can crash when operator= is called with itself
        https://bugs.webkit.org/show_bug.cgi?id=95859

        Reviewed by George Staikos.

        * Api/JavaScriptVariant.cpp:
        (BlackBerry::WebKit::JavaScriptVariant::operator=):
        When JavaScriptVariant contains a string and operator= is
        called with itself the memory will be free'd in 'this' and
        then a copy will be attempted from 'that' resulting in a crash.

2012-09-05  Leo Yang  <leoyang@rim.com>

        [BlackBerry] Rotation and then reload causes less sized webpage (PR 190469)
        https://bugs.webkit.org/show_bug.cgi?id=95870

        Reviewed by George Staikos.
        Reviewed internally by Jacky Jiang.

        Use the new zoom to fit scale if the page was zoomed to fit initial scale
        When a page is reloaded the layout size may be changed. So the contents
        size on which the initial scale depends may be changed. Use the new initial
        scale in this case to make sure the page will be zoomed to correct scale.

        * WebCoreSupport/FrameLoaderClientBlackBerry.cpp:
        (WebCore::FrameLoaderClientBlackBerry::restoreViewState):

2012-09-05  Robin Cao  <robin.cao@torchmobile.com.cn>

        [BlackBerry] Do not release shared backingstore memory prematurely
        https://bugs.webkit.org/show_bug.cgi?id=95841
        PR #202517

        Reviewed by George Staikos.

        The BackingStore memory is shared by all web pages. We should check if
        the current backingStore is active before create/release this shared memory.

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStore::createBackingStoreMemory):
        (BlackBerry::WebKit::BackingStore::releaseBackingStoreMemory):

2012-09-05  Andy Chen  <andchen@rim.com>

        [BlackBerry] Implement number of matches and current active match index for find-on-page
        https://bugs.webkit.org/show_bug.cgi?id=95801

        Reviewed by Antonio Gomes.

        - Calculate current match index for find-on-page
        - Notify client when number of matches and current match index update.
        PR 162090 162091.
        Internally reviewed by Mike Fenton and Joe Mason

        * Api/WebPageClient.h:
        * WebKitSupport/InPageSearchManager.cpp:
        (BlackBerry::WebKit::InPageSearchManager::DeferredScopeStringMatches::DeferredScopeStringMatches):
        (BlackBerry::WebKit::InPageSearchManager::DeferredScopeStringMatches::doTimeout):
        (InPageSearchManager::DeferredScopeStringMatches):
        (BlackBerry::WebKit::InPageSearchManager::findNextString):
        (BlackBerry::WebKit::InPageSearchManager::findAndMarkText):
        (BlackBerry::WebKit::InPageSearchManager::scopeStringMatches):
        (BlackBerry::WebKit::InPageSearchManager::scopeStringMatchesSoon):
        (BlackBerry::WebKit::InPageSearchManager::callScopeStringMatches):
        * WebKitSupport/InPageSearchManager.h:
        (InPageSearchManager):

2012-09-04  Rob Buis  <rbuis@rim.com>

        [BlackBerry] FatFingers::cachingStrategy uses incorrect enum value
        https://bugs.webkit.org/show_bug.cgi?id=95783

        Reviewed by Antonio Gomes.

        Use the correct enum values.

        * WebKitSupport/FatFingers.cpp:
        (BlackBerry::WebKit::FatFingers::cachingStrategy):

2012-09-04  Antonio Gomes  <agomes@rim.com>

        [BlackBerry] Use child/ScrollableContent layer's position instead of parent/ScrollLayer's boundsOrigin
        https://bugs.webkit.org/show_bug.cgi?id=95778
        PR #202252

        Reviewed by Rob Buis.
        Internally reviewed by Arvid Nilsson.

        Upstream has switch away from using the parent scroll layer's bounds origin
        in order to translate contents of all its child layers. Instead now, it directly
        sets the scroll position of the child scrollable contents layer.

        Source/WebKit/blackberry:
        * Api/InRegionScroller.cpp:
        (BlackBerry::WebKit::InRegionScrollerPrivate::setScrollPositionCompositingThread):
        * WebKitSupport/InRegionScrollableArea.cpp:
        (BlackBerry::WebKit::InRegionScrollableArea::InRegionScrollableArea):

        No new tests, since it is a catch-up with upstreaming code.

2012-09-04  George Staikos  <staikos@webkit.org>

        [BlackBerry] Fix memory leak in InputHandler
        https://bugs.webkit.org/show_bug.cgi?id=95771

        Reviewed by Rob Buis.

        Simply delete the arrays at function exit.

        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::InputHandler::openSelectPopup):

2012-09-04  George Staikos  <staikos@webkit.org>

        [BlackBerry] pass isMainFrame() through to notifyDocumentOnLoad()
        https://bugs.webkit.org/show_bug.cgi?id=95766

        Reviewed by Rob Buis.

        Passing the frame status through will allow the client to make better
        decisions about how to act on the onload.

        * Api/WebPageClient.h:
        * WebCoreSupport/FrameLoaderClientBlackBerry.cpp:
        (WebCore::FrameLoaderClientBlackBerry::dispatchDidHandleOnloadEvents):

2012-09-04  Rob Buis  <rbuis@rim.com>

        [BlackBerry] Provide virtual dtor for DumpRenderTreeClient
        https://bugs.webkit.org/show_bug.cgi?id=95769

        Reviewed by Yong Li.

        Also remove WTF prefixes.

        * Api/DumpRenderTreeClient.h:

2012-09-04  Mary Wu  <mary.wu@torchmobile.com.cn>

        [BlackBerry] Add webplatform and browser to build info
        https://bugs.webkit.org/show_bug.cgi?id=95715

        Reviewed by George Staikos.

        PR# 202102

        * WebKitSupport/AboutData.cpp:
        (BlackBerry::WebKit::buildPage):

2012-08-31  Jacky Jiang  <zhajiang@rim.com>

        [BlackBerry] ASSERT failure in RenderBlock::checkPositionedObjectsNeedLayout
        https://bugs.webkit.org/show_bug.cgi?id=95611

        Reviewed by Antonio Gomes.

        PR:200127
        Remove r118405 now as we already have a new fix webkit/43f8394b for
        that issue and it is not reproducible anymore after the removal.
        In this way, we can get rid of this ASSERT failure as well.
        Thanks Antonio for the suggestion.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::setViewportSize):

2012-08-31  Joshua Netterfield  <jnetterfield@rim.com>

        [BlackBerry] Eliminate WebGL IT policy
        https://bugs.webkit.org/show_bug.cgi?id=95604
        Internal RIM PR #198764

        Reviewed by Rob Buis.

        This is no longer a requirement for the BlackBerry port.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::init):
        (BlackBerry::WebKit::WebPage::setWebGLEnabled):
        * WebKitSupport/AboutData.cpp:
        (BlackBerry::WebKit::configPage):

2012-08-30  Benjamin Poulain  <bpoulain@apple.com>

        Replace JSC::UString by WTF::String
        https://bugs.webkit.org/show_bug.cgi?id=95271

        Reviewed by Geoffrey Garen.

        Replace UString by String.

        * WebCoreSupport/ClientExtension.cpp:
        * WebCoreSupport/PagePopupBlackBerry.cpp:
        (WebCore::PagePopupBlackBerry::installDomFunction):

2012-08-30  Jacky Jiang  <zhajiang@rim.com>

        [BlackBerry] ASSERT failure in JSC::MarkedAllocator::allocateSlowCase
        https://bugs.webkit.org/show_bug.cgi?id=95492

        Reviewed by Yong Li.

        PR: 200724
        Hold the JSLock for the current thread before we call toRef to avoid
        the ASSERT failure.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::executeJavaScript):

2012-08-30  Antonio Gomes  <agomes@rim.com>

        [BlackBerry] Remove unneeded force-immediate-repaint from InRegionScroller::setLayerScrollPosition
        https://bugs.webkit.org/show_bug.cgi?id=95476
        PR #200704

        Reviewed by Yong Li.

        This code is not needed at this point for neither the fast nor slow in-region
        scroll codepaths, and it is a huge performance beast as it forces all
        containers to get full-repainted per scroll call (in webkit thread).

        Patch also take this opportunity to remove an early-return we
        have in the {i}frame slow scrolling code path so that we can
        adjust the selection handles in this case as well.

        * Api/InRegionScroller.cpp:
        (BlackBerry::WebKit::InRegionScrollerPrivate::setLayerScrollPosition):

2012-08-30  Hanna Ma  <Hanma@rim.com>

        [BlackBerry] node search does not work with elements on touch start listener
        https://bugs.webkit.org/show_bug.cgi?id=95252

        Reviewed by Antonio Gomes.

        Fix the node search function of web insepctor on elements with touch start listener.
        Add methods from webPage to check if the node search functionality is enabled before handling touch events.
        PR194107

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPage::touchEvent):

2012-08-30  Arvid Nilsson  <anilsson@rim.com>

        [BlackBerry] One shot drawing sync flag never cleared when there's no layers
        https://bugs.webkit.org/show_bug.cgi?id=95447

        Reviewed by Antonio Gomes.

        PR 199866
        When we remove the layers, WebKit could tell us we need a one shot
        drawing sync to repaint the BackingStore with the content that was
        previously drawn by layers. We also sometimes set the one shot drawing
        sync flag manually.

        We would bail from commit if there were no layers and not actually
        perform the osds, so it left the osds flag set forever and the
        situation prevails, because nobody will ever clear the osds flag.

        The BackingStore surrenders the responsibility of blitting to the AC
        commit mechanism when a one shot drawing sync is pending, because we
        want the operations render, commit and blit to happen in the correct
        order with no intermediate blits.

        So, no commit means no blit, and the result of regular rendering did
        not show up on screen.

        Fixed by not bailing from commit if there's no layers, instead clearing
        the "needs commit" and osds flags and performing a blit.

        Reviewed internally by Andrew Lo.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::commitRootLayerIfNeeded):

2012-08-30  Gyuyoung Kim  <gyuyoung.kim@samsung.com>

        Use ASCIILiteral for DEFINE_STATIC_LOCAL string
        https://bugs.webkit.org/show_bug.cgi?id=95420

        Reviewed by Benjamin Poulain.

        As recommended by http://trac.webkit.org/wiki/EfficientStrings,
        WebKit needs to use ASCIILiteral for the string of DEFINE_STATIC_LOCAL.

        * Api/WebSettings.cpp:
        (WebKit):

2012-08-29  Nima Ghanavatian  <nghanavatian@rim.com>

        [BlackBerry] Do not use the shadow tree when retrieving the underlying element for FatFinger.
        https://bugs.webkit.org/show_bug.cgi?id=95372

        By using the shadow tree we were getting a mismatch between elements of the
        current element under focus and the one return to us from FatFingers.
        Passing ShadowContentNotAllowed to get the right handle.

        Reviewed by Antonio Gomes.

        * WebKitSupport/TouchEventHandler.cpp:
        (BlackBerry::WebKit::TouchEventHandler::handleTouchPoint):

2012-08-29  Robin Cao  <robin.cao@torchmobile.com.cn>

        [BlackBerry] Move the handling of UserMedia requests to the client
        https://bugs.webkit.org/show_bug.cgi?id=95317
        PR #197283

        Reviewed by George Staikos.

        Internally reviewed by George Staikos.

        Move the logic for user media requests handling to the client, as it requires
        inputs from users. Also adds a origin field to WebUserMediaRequest.

        * Api/WebPageClient.h:
        (Platform):
        * WebCoreSupport/UserMediaClientImpl.cpp:
        (WebCore::UserMediaClientImpl::UserMediaClientImpl):
        (WebCore::UserMediaClientImpl::~UserMediaClientImpl):
        (WebCore::UserMediaClientImpl::requestUserMedia):
        (WebCore::UserMediaClientImpl::cancelUserMediaRequest):
        * WebCoreSupport/UserMediaClientImpl.h:
        (UserMediaClientImpl):

2012-08-29  Antonio Gomes  <agomes@rim.com>

        [BlackBerry] Replace blackberry specific HitTestRequest::FingerUp by TouchEvent + Release
        https://bugs.webkit.org/show_bug.cgi?id=95383

        Reviewed by Rob Buis.

        * WebKitSupport/TouchEventHandler.cpp:
        (BlackBerry::WebKit::TouchEventHandler::touchEventCancel):

2012-08-29  Rob Buis  <rbuis@rim.com>

        [BlackBerry] Adjust wtf include header style
        https://bugs.webkit.org/show_bug.cgi?id=95368

        Reviewed by Yong Li.

        Switch to #include <wtf/...> like the other ports.

        * Api/BlackBerryGlobal.cpp:
        * Api/WebPage.cpp:
        * WebCoreSupport/ChromeClientBlackBerry.cpp:
        * WebCoreSupport/GeolocationControllerClientBlackBerry.h:
        * WebCoreSupport/SelectPopupClient.h:
        * WebKitSupport/AboutData.cpp:
        * WebKitSupport/DOMSupport.cpp:
        * WebKitSupport/GLES2Context.cpp:
        * WebKitSupport/InPageSearchManager.h:
        * WebKitSupport/InputHandler.cpp:

2012-08-29  Jacky Jiang  <zhajiang@rim.com>

        [BlackBerry] Remove unused tapGesture in WebPage.cpp
        https://bugs.webkit.org/show_bug.cgi?id=95357

        Reviewed by Rob Buis.

        Remove unused variable tapGesture in WebPage.cpp.
        Internally reviewed by Gen Mak.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPage::touchEvent):

2012-08-28  Antonio Gomes  <agomes@rim.com>

        [BlackBerry] crash while trying to scroll any inner frame
        https://bugs.webkit.org/show_bug.cgi?id=95287
        PR #198510

        Reviewed by George Staikos.

        Set the starting point of scrolling (slow path only still)
        for inner frames. It was left over as set to 0 by r126474.

        In practice, patch fixes a crash on gmail.com desktop edition.

        * WebKitSupport/InRegionScrollableArea.cpp:
        (BlackBerry::WebKit::InRegionScrollableArea::InRegionScrollableArea):

2012-08-28  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r126914.
        http://trac.webkit.org/changeset/126914
        https://bugs.webkit.org/show_bug.cgi?id=95239

        it breaks everything and fixes nothing (Requested by pizlo on
        #webkit).

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStorePrivate::setBackingStoreRect):
        (BlackBerry::WebKit::BackingStorePrivate::visibleTilesRect):
        (BlackBerry::WebKit::BackingStorePrivate::resetTiles):
        (BlackBerry::WebKit::BackingStorePrivate::updateTiles):
        (BlackBerry::WebKit::BackingStorePrivate::updateTilesForScrollOrNotRenderedRegion):
        (BlackBerry::WebKit::BackingStorePrivate::mapFromTransformedContentsToTiles):
        * WebCoreSupport/NotificationPresenterImpl.cpp:
        (WebCore::NotificationPresenterImpl::cancel):
        (WebCore::NotificationPresenterImpl::onPermission):
        (WebCore::NotificationPresenterImpl::notificationClicked):
        * WebCoreSupport/UserMediaClientImpl.cpp:
        (WebCore::UserMediaClientImpl::cancelUserMediaRequest):
        * WebKitSupport/AboutData.cpp:
        (BlackBerry::WebKit::dumpJSCTypeCountSetToTableHTML):
        * WebKitSupport/FrameLayers.cpp:
        (BlackBerry::WebKit::FrameLayers::removeLayerByFrame):
        (BlackBerry::WebKit::FrameLayers::commitOnWebKitThread):
        (BlackBerry::WebKit::FrameLayers::calculateRootLayer):

2012-08-28  Nima Ghanavatian  <nghanavatian@rim.com>

        [BlackBerry] Spellcheck should be enabled if undefined in content.
        https://bugs.webkit.org/show_bug.cgi?id=95139

        Currently we only enable spellcheck if it is defined as such in
        the web content explicitly.
        Making this change to enable by default, and only turn off if it is
        explicitly set, or if we expect the field to be a username, email or
        url.

        Internally reviewed by Mike Fenton.

        Reviewed by Rob Buis.

        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::InputHandler::requestCheckingOfString):
        (BlackBerry::WebKit::InputHandler::setElementFocused):
        (BlackBerry::WebKit::InputHandler::unlockSequenceMap):
        (WebKit):
        (BlackBerry::WebKit::InputHandler::shouldSpellCheckElement):
        * WebKitSupport/InputHandler.h:
        (InputHandler):

2012-08-28  Caio Marcelo de Oliveira Filho  <caio.oliveira@openbossa.org>

        Rename first/second to key/value in HashMap iterators
        https://bugs.webkit.org/show_bug.cgi?id=82784

        Reviewed by Eric Seidel.

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStorePrivate::setBackingStoreRect):
        (BlackBerry::WebKit::BackingStorePrivate::visibleTilesRect):
        (BlackBerry::WebKit::BackingStorePrivate::resetTiles):
        (BlackBerry::WebKit::BackingStorePrivate::updateTiles):
        (BlackBerry::WebKit::BackingStorePrivate::updateTilesForScrollOrNotRenderedRegion):
        (BlackBerry::WebKit::BackingStorePrivate::mapFromTransformedContentsToTiles):
        * WebCoreSupport/NotificationPresenterImpl.cpp:
        (WebCore::NotificationPresenterImpl::cancel):
        (WebCore::NotificationPresenterImpl::onPermission):
        (WebCore::NotificationPresenterImpl::notificationClicked):
        * WebKitSupport/AboutData.cpp:
        (BlackBerry::WebKit::dumpJSCTypeCountSetToTableHTML):
        * WebKitSupport/FrameLayers.cpp:
        (BlackBerry::WebKit::FrameLayers::removeLayerByFrame):
        (BlackBerry::WebKit::FrameLayers::commitOnWebKitThread):
        (BlackBerry::WebKit::FrameLayers::calculateRootLayer):
        * WebCoreSupport/UserMediaClientImpl.cpp:
        (WebCore::UserMediaClientImpl::cancelUserMediaRequest):

2012-08-28  Nima Ghanavatian  <nghanavatian@rim.com>

        [BlackBerry] Range boundaries should use endOfBlock instead of endOfLine.
        https://bugs.webkit.org/show_bug.cgi?id=95135

        The original implementation used nextLinePosition to iterate
        through the field from the start of each line, and was bounded in
        comparison to the endOfLine. This works fine as long as there aren't any
        empty lines between paragraphs of text, since these will have
        startOfLine == endOfLine and break out.

        Also, protect map access with a mutex in case we get a response
        before updating the map. Further, we should check the Range pointer
        before using it, since its not guaranteed to be valid.

        Internally reviewed by Mike Fenton.

        Reviewed by Antonio Gomes.

        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::InputHandler::spellCheckBlock):

2012-08-28  Andrew Lo  <anlo@rim.com>

        [BlackBerry] One shot drawing synchronization broken
        https://bugs.webkit.org/show_bug.cgi?id=95179

        Reviewed by Antonio Gomes.
        Internally reviewed by Arvid Nilsson.

        Make sure no backing store blits happen during one shot drawing
        synchronization.
        Since we always blit during commit now, make sure we don't blit if
        we commit after a render.
        We no longer need a deferred blit since we don't commit during renderContents
        now. Instead, we only commit & blit once after a full render job.

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStorePrivate::BackingStorePrivate):
        (BlackBerry::WebKit::BackingStorePrivate::repaint):
        (BlackBerry::WebKit::BackingStorePrivate::slowScroll):
        (BlackBerry::WebKit::BackingStorePrivate::renderJob):
        (BlackBerry::WebKit::BackingStorePrivate::blitVisibleContents):
        (BlackBerry::WebKit::BackingStorePrivate::blitContents):
        (BlackBerry::WebKit::BackingStorePrivate::renderContents):
        (WebKit):
        (BlackBerry::WebKit::BackingStorePrivate::drawAndBlendLayersForDirectRendering):
        (BlackBerry::WebKit::BackingStorePrivate::didRenderContent):
        * Api/BackingStore_p.h:
        (BackingStorePrivate):
        * Api/WebPage.cpp:
        (WebKit):
        (BlackBerry::WebKit::WebPagePrivate::rootLayerCommitTimerFired):
        * Api/WebPage_p.h:
        (WebPagePrivate):
        * WebKitSupport/RenderQueue.cpp:
        (BlackBerry::WebKit::RenderQueue::renderAllCurrentRegularRenderJobs):
        (BlackBerry::WebKit::RenderQueue::renderRegularRenderJob):
        (BlackBerry::WebKit::RenderQueue::visibleScrollJobsCompleted):

2012-08-28  Parth Patel  <parpatel@rim.com>

        [BlackBerry] Removing unnecessary include of Class BlackBerryPlatformClient
        https://bugs.webkit.org/show_bug.cgi?id=95113

        Reviewed by Kentaro Hara.

        Refactoring has lead to relocation of many or all methods from Class
        BlackBerryPlatformClient to other classes. Some files include
        BlackBerryPlatformClient but does not use its instance thus these
        includes has to be removed.

        * Api/BackingStore.cpp:

2012-08-28  Andy Chen  <andchen@rim.com>

        [BlackBerry] UpdateViewport uses wrong size for frameView
        https://bugs.webkit.org/show_bug.cgi?id=95138

        Reviewed by Antonio Gomes.
        Internally reviewed by Jakob Petsovits.

        Use actual visible size instead of screen size when updating viewport size,
        otherwise, frameView size would be too big.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::updateViewportSize):

2012-08-28  Andy Chen  <andchen@rim.com>

        [BlackBerry] Pseudo class "active" is broken
        https://bugs.webkit.org/show_bug.cgi?id=95142

        Reviewed by Antonio Gomes.

        Check if an element is affected by active rule before cancelling
        the touch event.
        PR 198544.

        * WebKitSupport/TouchEventHandler.cpp:
        (BlackBerry::WebKit::TouchEventHandler::touchEventCancel):

2012-08-27  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r126836.
        http://trac.webkit.org/changeset/126836
        https://bugs.webkit.org/show_bug.cgi?id=95163

        Broke all Apple ports, EFL, and Qt. (Requested by tkent on
        #webkit).

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStorePrivate::setBackingStoreRect):
        (BlackBerry::WebKit::BackingStorePrivate::visibleTilesRect):
        (BlackBerry::WebKit::BackingStorePrivate::resetTiles):
        (BlackBerry::WebKit::BackingStorePrivate::updateTiles):
        (BlackBerry::WebKit::BackingStorePrivate::updateTilesForScrollOrNotRenderedRegion):
        (BlackBerry::WebKit::BackingStorePrivate::mapFromTransformedContentsToTiles):
        * WebCoreSupport/NotificationPresenterImpl.cpp:
        (WebCore::NotificationPresenterImpl::cancel):
        (WebCore::NotificationPresenterImpl::onPermission):
        (WebCore::NotificationPresenterImpl::notificationClicked):
        * WebKitSupport/AboutData.cpp:
        (BlackBerry::WebKit::dumpJSCTypeCountSetToTableHTML):
        * WebKitSupport/FrameLayers.cpp:
        (BlackBerry::WebKit::FrameLayers::removeLayerByFrame):
        (BlackBerry::WebKit::FrameLayers::commitOnWebKitThread):
        (BlackBerry::WebKit::FrameLayers::calculateRootLayer):

2012-08-27  Caio Marcelo de Oliveira Filho  <caio.oliveira@openbossa.org>

        Rename first/second to key/value in HashMap iterators
        https://bugs.webkit.org/show_bug.cgi?id=82784

        Reviewed by Eric Seidel.

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStorePrivate::setBackingStoreRect):
        (BlackBerry::WebKit::BackingStorePrivate::visibleTilesRect):
        (BlackBerry::WebKit::BackingStorePrivate::resetTiles):
        (BlackBerry::WebKit::BackingStorePrivate::updateTiles):
        (BlackBerry::WebKit::BackingStorePrivate::updateTilesForScrollOrNotRenderedRegion):
        (BlackBerry::WebKit::BackingStorePrivate::mapFromTransformedContentsToTiles):
        * WebCoreSupport/NotificationPresenterImpl.cpp:
        (WebCore::NotificationPresenterImpl::cancel):
        (WebCore::NotificationPresenterImpl::onPermission):
        (WebCore::NotificationPresenterImpl::notificationClicked):
        * WebKitSupport/AboutData.cpp:
        (BlackBerry::WebKit::dumpJSCTypeCountSetToTableHTML):
        * WebKitSupport/FrameLayers.cpp:
        (BlackBerry::WebKit::FrameLayers::removeLayerByFrame):
        (BlackBerry::WebKit::FrameLayers::commitOnWebKitThread):
        (BlackBerry::WebKit::FrameLayers::calculateRootLayer):

2012-08-27  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r126772.
        http://trac.webkit.org/changeset/126772
        https://bugs.webkit.org/show_bug.cgi?id=95137

        "This change breaks news.qq.com" (Requested by leoyang on
        #webkit).

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::fixedLayoutSize):

2012-08-27  Leo Yang  <leoyang@rim.com>

        [BlackBerry] Not using absoluteVisibleOverSize when rotating
        https://bugs.webkit.org/show_bug.cgi?id=95092
        PR #190469

        Reviewed by Antonio Gomes.
        Reviewed internally by Arvid Nilsson.

        When we are rotating don't count absolute overflow visible size
        into fixed layout size because we are in a transient state. The
        absolute overflow visible size remains old size during rotation.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::fixedLayoutSize):

2012-08-25  Antonio Gomes  <agomes@rim.com>

        [BlackBerry] Remove the 'in region scrollable starting node' concept from InRegionScroller
        https://bugs.webkit.org/show_bug.cgi?id=95020

        Reviewed by Rob Buis.

        'In-region start scrolling node' is an obsolete concept, and we can remove it
        in favor of using the information from the cached layers.

        * Api/InRegionScroller.cpp:
        (WebKit):
        (BlackBerry::WebKit::InRegionScrollerPrivate::reset): Adjusted as it used to clear
        the cached 'node'.
        (BlackBerry::WebKit::InRegionScrollerPrivate::isActive): Added method to be
        checked directly instead of only null-checking the previously cached 'node'.
        (BlackBerry::WebKit::InRegionScrollerPrivate::clearDocumentData): New method to
        clear the cached resources if its document is done.
        (BlackBerry::WebKit::InRegionScrollerPrivate::pushBackInRegionScrollable): Adjusted
        to not care about the cached 'node' anymore.
        * Api/InRegionScroller_p.h:
        (InRegionScrollerPrivate):
        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::notifyInRegionScrollStopped): Check ::isActive instead
        of ::hasNode, since the later is gone.
        (BlackBerry::WebKit::WebPagePrivate::enqueueRenderingOfClippedContentOfScrollableAreaAfterInRegionScrolling):
        Changed the method signature, given that we do have a cached 'node' to pass in as parameter anymore.
        (BlackBerry::WebKit::WebPagePrivate::clearDocumentData): Delegate all the related work to InRegionScroller.
        * Api/WebPage_p.h:
        (WebPagePrivate):
        * WebKitSupport/TouchEventHandler.cpp:
        (BlackBerry::WebKit::TouchEventHandler::drawTapHighlight):
.
2012-08-25  Antonio Gomes  <agomes@rim.com>

        BlackBerry] Shrink the in-region nested scrollable list as soon as we can
        https://bugs.webkit.org/show_bug.cgi?id=95019

        Reviewed by Rob Buis.

        We cache all possible nested scrollable in-region layers given a point.
        It is up to the client to pick a view, based on the scroll position and limits
        of each layer, and on the direction user swipes its finger.
        From the point we pick a view on, we stick with it, and any other
        possibly cached layer can be uncached, as it won't be needed.
        Patch provides a simple solution to that.

        * Api/InRegionScroller.cpp:
        (BlackBerry::WebKit::InRegionScrollerPrivate::InRegionScrollerPrivate):
        (BlackBerry::WebKit::InRegionScrollerPrivate::reset):
        (BlackBerry::WebKit::InRegionScrollerPrivate::setScrollPositionWebKitThread):
        (BlackBerry::WebKit::InRegionScrollerPrivate::calculateActiveAndShrinkCachedScrollableAreas):
        (WebKit):
        (BlackBerry::WebKit::InRegionScrollerPrivate::calculateInRegionScrollableAreasForPoint):
        * Api/InRegionScroller_p.h:
        (InRegionScrollerPrivate):

2012-08-25  Antonio Gomes  <agomes@rim.com>

        For convenience, make RenderLayer::enclosingElement a public method.
        https://bugs.webkit.org/show_bug.cgi?id=95018

        Reviewed by George Staikos.

        Make use of the new public RenderLayer::enclosingElement method and
        remove duplicated code.

        * WebKitSupport/InRegionScrollableArea.cpp:
        (BlackBerry::WebKit::InRegionScrollableArea::InRegionScrollableArea):

2012-08-27  Mikhail Pozdnyakov  <mikhail.pozdnyakov@intel.com>

        Rename RegisterProtocolHandler API to NavigatorContentUtils
        https://bugs.webkit.org/show_bug.cgi?id=94920

        Reviewed by Adam Barth.

        Renaming whatever RegisterProtocolHandler-prefixed to NavigatorContentUtils-prefixed.

        * WebCoreSupport/AboutDataEnableFeatures.in:
        * WebCoreSupport/ChromeClientBlackBerry.cpp:
        (WebCore):
        (WebCore::ChromeClientBlackBerry::registerProtocolHandler):
        * WebCoreSupport/ChromeClientBlackBerry.h:
        (ChromeClientBlackBerry):

2012-08-26  Arvid Nilsson  <anilsson@rim.com>

        [BlackBerry] ASSERT failed in WebPagePrivate::commitRootLayerIfNeeded()
        https://bugs.webkit.org/show_bug.cgi?id=94921

        PR 104676
        As visibility changed due to WebPage::setVisible(true),
        resumeRootLayerCommit() would call commitRootLayerIfNeeded(), without
        layouting or rendering. If a one shot drawing sync was pending at this
        time, it would cause the condition
        ASSERT(!needsOneShotDrawingSynchronization()) to fail.

        The comment immediately before the assert states that "In case of one
        shot drawing synchronization, you should first layoutIfNeeded, render,
        then commit and draw the layers". However, resumeRootLayerCommit() did
        no such thing.

        Fixed by removing the call to commitRootLayerIfNeeded() from
        resumeRootLayerCommit(), because the latter is only called in a code
        path where we're going to layout, render and then commit anyway. These
        operations will be performed from resumeBackingStore() which is called
        at the end of setVisible().

        Reviewed by George Staikos.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::resumeRootLayerCommit):

2012-08-24  Adam Treat  <atreat@rim.com>

        [BlackBerry] Web pages are zoomed out to much on initial load
        https://bugs.webkit.org/show_bug.cgi?id=94830

        The previous patch caused a slight regression to the calculation we do
        for the default splitting factor in the render queue.  The default value
        we use to represent the max area should be the tile size.  This was true
        with the old calculation of default max layout width since it was the
        screen size.  The fix is to be explicit and use the tile size directly.

        Reviewed by George Staikos.

        * WebKitSupport/RenderQueue.cpp:
        (BlackBerry::WebKit::RenderQueue::splittingFactor):

2012-08-24  Parth Patel  <parpatel@rim.com>

        [BlackBerry] Changes resulting from moving network related methods
        from platform client to platform settings.
        https://bugs.webkit.org/show_bug.cgi?id=94963

        Reviewed by Yong Li.

        Changes in response to Network methods moved from
        class BlackBerryPlatformClient to class BlackBerryPlatformSettings
        in platform repository.

        * WebKitSupport/AboutData.cpp:
        (BlackBerry::WebKit::cachePage):

2012-08-24  Liam Quinn  <lquinn@rim.com>

        [BlackBerry] Debug assertion fires in BackingStorePrivate::renderJob()
        https://bugs.webkit.org/show_bug.cgi?id=94960

        Reviewed by Adam Treat.

        Change the assertion into an early return as recommended by Adam Treat.

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStorePrivate::renderJob):

2012-08-24  Andrew Lo  <anlo@rim.com>

        [BlackBerry] Animation & UI lag when rendering
        https://bugs.webkit.org/show_bug.cgi?id=94943

        Reviewed by Rob Buis.

        Schedule a backing store blit & composite when commiting root layer.
        This results in compositing not having to wait until after a long render
        operation, increasing responsiveness & fixing animations which skip to
        the last frame due to lag.

        This can cause a blit during a "one shot drawing synchronization", which is
        a render & commit on the AC layers, which may result in flashing.
        However, this can happen in other situations as well, and we feel that
        the responsiveness, reduced lag, and smoothness of animations is
        more important.

        Internal PR194209
        Internally reviewed by: George Staikos.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::commitRootLayer):

2012-08-24  Parth Patel  <parpatel@rim.com>

        [BlackBerry] Changes resulting from moving application directory methods from platform client to platform settings.
        https://bugs.webkit.org/show_bug.cgi?id=94249

        Reviewed by Rob Buis.

        PR# 170160
        Changes in response to Application Directory methods moved from
        Class BlackBerryPlatformClient to BlackBerryPlatformSettings in
        platform respository since these methods are more appropriate in
        class BlackBerryPlatformSettings.

        * WebCoreSupport/IconDatabaseClientBlackBerry.cpp:
        (WebCore::IconDatabaseClientBlackBerry::initIconDatabase):

2012-08-24  Antonio Gomes  <agomes@rim.com>

        [BlackBerry] Touch cancel can cause huge and needless invalidations
        https://bugs.webkit.org/show_bug.cgi?id=94938
        PR #198051

        Reviewed by George Staikos.
        Internally reviewed by Gen Mak.

        In order to remove the possible hover effect on touch_cancel, we always
        invalidate the node under the fat finger, being the fat finger valid or not.

        Point is: having a valid fat finger node does not mean the original touch
        position was actually adjust for clicking or that the fat finger is actually
        valid. We set the fat finger node to be the result of the point-based hit-test
        regardless if it is a click target or not (in order to make our mouse-move
        machinery to work).

        We should can less aggressively invalidate the fat finger node, since it can
        be rather an expensive call (longer than 1s in the worst scenario).

        * WebKitSupport/TouchEventHandler.cpp:
        (BlackBerry::WebKit::TouchEventHandler::touchEventCancel):

2012-08-24  Arvid Nilsson  <anilsson@rim.com>

        [BlackBerry] Add WebPage API to reset block zoom
        https://bugs.webkit.org/show_bug.cgi?id=94863

        PR 187478
        This is an alternative to WebPage::blockZoomAnimationFinished() when
        it's desirable to avoid rerendering of the whole web page at the end
        of block zoom. This is the case when the planned "incremental zoom
        factor" is used instead of zoomAboutPoint and it's relatives.

        Ideally, the block zoom algorithm would be clever enough not to need
        a reset or any form of callback when the animation finishes, but that
        requires the implementation of said incremental zoom factor, which is
        not done yet.

        Reviewed by Antonio Gomes.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPage::resetBlockZoom):
        (WebKit):
        * Api/WebPage.h:

2012-08-23  Antonio Gomes  <agomes@rim.com>

        [BlackBerry] Obsolete the in-region scroll codepath prior to BB10's
        https://bugs.webkit.org/show_bug.cgi?id=94839
        PR #197775

        Reviewed by George Staikos.

        This codepath is not needed anymore, so lets let it RIP.

        The only code addition is due to some code I've moved from WebPagePrivate::scrollNodeRecursively
        and WebPagePrivate::scrollBy to InRegionScrollerPrivate::setLayerScrollPosition.
        Rest is code removal ...

        * Api/InRegionScroller.cpp:
        (BlackBerry::WebKit::InRegionScrollerPrivate::setLayerScrollPosition):
        * Api/InRegionScroller_p.h:
        (InRegionScrollerPrivate):
        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::scrollBy):
        (BlackBerry::WebKit::WebPage::scrollBy):
        * Api/WebPage.h:
        * Api/WebPage_p.h:
        (WebPagePrivate):

2012-08-23  Adam Treat  <atreat@rim.com>

        [BlackBerry] Replace the three different rendering mechanisms for clearing the render queue
        https://bugs.webkit.org/show_bug.cgi?id=94837

        Reviewed by George Staikos.

        PR 197738

        Currently, we have three different mechanisms for clearing the render queue.
        The first mechanism is render on idle.  Whenever the webkit thread becomes idle
        (read: no more events in its queue) we render the next job in the render queue.
         This is the primary means we use for clearing the render queue.  However, this
        mechanism has a flaw, it is such a low priority mechanism that sometimes the
        queue grows so fast due to higher priority events adding rects to the queue
        that this mechanism can't possibly keep up.  That is what leads to the second
        mechanism: rendering right before a timer is fired when we discover that the
        render queue is under pressure and rendering on idle can't keep up.  However,
        there are still degenerate cases where even this mechanism does not allow us to
        keep up.  That brings us to the third mechanism: rendering based on a timer
        that is a catch-all.

        The second and third mechanisms lead to very large render jobs as they try and
        clear the queue faster when it comes under pressure.  These very large render
        jobs end up keeping the webkit thread busy with a message that can take large
        fractions of a second to resolve.

        These three mechanisms were put in place when the backingstore had a different
        overall design that was not truly asynchronous.  This patch replaces these
        three mechanisms with a single one that uses the platform messaging classes to
        full purpose - a uniquely coalescing message that has a higher priority level
        than timers making sure the render queue can never come under pressure.

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStorePrivate::BackingStorePrivate):
        (WebKit):
        (RenderJobMessage):
        (BlackBerry::WebKit::RenderJobMessage::RenderJobMessage):
        (BlackBerry::WebKit::BackingStorePrivate::dispatchRenderJob):
        (BlackBerry::WebKit::BackingStorePrivate::renderJob):
        (BlackBerry::WebKit::BackingStore::blitContents):
        * Api/BackingStore.h:
        * Api/BackingStore_p.h:
        (BackingStorePrivate):
        * Api/WebPage.cpp:
        * Api/WebPage.h:
        * WebKitSupport/RenderQueue.cpp:
        (BlackBerry::WebKit::RenderQueue::reset):
        (BlackBerry::WebKit::RenderQueue::addToRegularQueue):
        (BlackBerry::WebKit::RenderQueue::addToScrollZoomQueue):
        (BlackBerry::WebKit::RenderQueue::clear):
        (BlackBerry::WebKit::RenderQueue::clearVisibleZoom):
        (BlackBerry::WebKit::RenderQueue::render):

2012-08-23  Antonio Gomes  <agomes@rim.com>

        [BlackBerry] Unify slow and fast in-region scrolling code paths
        https://bugs.webkit.org/show_bug.cgi?id=94834
        PR #197662

        Reviewed by Rob Buis.

        Internally reviewed by Arvid Nilsson.

        In order to be able to remove a bunch of obsolete code from
        InRegionScroller.cpp, we need to unify the codepaths for slow
        and fast in-region scrolling.

        This patch caches the root scrollable node of each scrollable block
        in InRegionScrollableArea also for the non-composited-scrolling case now too
        (analogly to the way we cache LayerWebKitThread for the composited scrolling case).

        Now the client (libwebview) can dispatch an in-region scrolling with one single code path,
        making use of a boolean (argh!) to inform if the scroll of the given
        layer supports compositing or not. Later on, this boolean is used to casting the proper element.

        * Api/InRegionScroller.cpp:
        (BlackBerry::WebKit::InRegionScroller::setScrollPositionWebKitThread):
        (BlackBerry::WebKit::InRegionScrollerPrivate::setScrollPositionWebKitThread):
        * Api/InRegionScroller.h:
        * Api/InRegionScroller_p.h:
        (InRegionScrollerPrivate):
        * WebKitSupport/InRegionScrollableArea.cpp:
        (WebKit):
        (BlackBerry::WebKit::InRegionScrollableArea::InRegionScrollableArea):
        (BlackBerry::WebKit::enclosingLayerNode):
        * WebKitSupport/InRegionScrollableArea.h:
        (WebCore):
        (InRegionScrollableArea):

2012-08-23  Jacky Jiang  <zhajiang@rim.com>

        [BlackBerry] Web pages are zoomed out to much on initial load
        https://bugs.webkit.org/show_bug.cgi?id=94830

        Reviewed by Adam Treat.

        PR: 193943
        Browser continuously adds paddings to the left and right sides of the
        main contents which makes the main contents even smaller.
        The issue can be reproduced on the desktop websites such as
        huffingtonpost.ca, bloomberg.com, online.wsj.com, nytimes.com,
        yahoo.com, thestar.com, sina.com.cn, sohu.com and so on.
        The root cause is that we layout those contents at the width of 1280
        although the fixed width of the main contents of those websites is
        less than 1000, which results in adding the paddings.
        To fix this, we need to get back to the default max layout size
        1024 * 768, which will make the main contents of those popular websites
        take full advantage of the screen real estate and look much better.

        Internally reviewed by Adam Treat.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::fixedLayoutSize):
        (BlackBerry::WebKit::WebPagePrivate::recomputeVirtualViewportFromViewportArguments):
        * Api/WebPage_p.h:
        (WebPagePrivate):
        * WebKitSupport/RenderQueue.cpp:
        (BlackBerry::WebKit::RenderQueue::splittingFactor):

2012-08-22  Crystal Zhang  <haizhang@rim.com>

        [BlackBerry] Make all pickers non-zoomable
        https://bugs.webkit.org/show_bug.cgi?id=94729

        Reviewed by Antonio Gomes.

        Move HTML header initialization to PagePopupBlackBerry as that part are all the same, and make all pickers non-zoomable.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::screenSize):
        (WebKit):
        * Api/WebPage_p.h:
        (WebPagePrivate):
        * WebCoreSupport/DatePickerClient.cpp:
        (WebCore::DatePickerClient::generateHTML):
        (WebCore::DatePickerClient::writeDocument):
        * WebCoreSupport/PagePopupBlackBerry.cpp:
        (WebCore::PagePopupBlackBerry::init):
        (WebCore::PagePopupBlackBerry::generateHTML):
        (WebCore):
        * WebCoreSupport/PagePopupBlackBerry.h:
        (PagePopupBlackBerry):
        * WebCoreSupport/SelectPopupClient.cpp:
        (WebCore::SelectPopupClient::generateHTML):
        (WebCore::SelectPopupClient::writeDocument):

2012-08-21  Benjamin C Meyer  <bmeyer@rim.com>

        [BlackBerry] Add option to only add JavaScript object 'qnx' to private webviews
        https://bugs.webkit.org/show_bug.cgi?id=94621

        Reviewed by Yong Li.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPage::enableQnxJavaScriptObject):
        (WebKit):
        (BlackBerry::WebKit::WebPagePrivate::WebPagePrivate):
        * Api/WebPage.h:
        * Api/WebPage_p.h:
        (WebPagePrivate):
        * WebCoreSupport/FrameLoaderClientBlackBerry.cpp:
        (WebCore::FrameLoaderClientBlackBerry::dispatchDidClearWindowObjectInWorld):

2012-08-21  Robin Cao  <robin.cao@torchmobile.com.cn>

        [BlackBerry] Add support for getUserMedia
        https://bugs.webkit.org/show_bug.cgi?id=94591

        Reviewed by George Staikos.

        Implement getUserMedia feature using the platform API.

        PR #153571

        Reviewed internally by George Staikos.

        * WebCoreSupport/UserMediaClientImpl.cpp:
        (WebCore):
        (WebCore::userMediaRequestsMap):
        (WebCore::toMediaStreamSource):
        (WebCore::toMediaStreamDescriptor):
        (WebUserMediaRequestClientImpl):
        (WebCore::WebUserMediaRequestClientImpl::WebUserMediaRequestClientImpl):
        (WebCore::WebUserMediaRequestClientImpl::requestSucceeded):
        (WebCore::WebUserMediaRequestClientImpl::requestFailed):
        (WebCore::UserMediaClientImpl::UserMediaClientImpl):
        (WebCore::UserMediaClientImpl::~UserMediaClientImpl):
        (WebCore::UserMediaClientImpl::requestUserMedia):
        (WebCore::UserMediaClientImpl::cancelUserMediaRequest):
        (WebCore::UserMediaClientImpl::webUserMedia):
        * WebCoreSupport/UserMediaClientImpl.h:
        (BlackBerry):
        (Platform):
        (UserMediaClientImpl):

2012-08-21  Kihong Kwon  <kihong.kwon@samsung.com>

        [EFL][GTK][BlackBerry] Fix build error in the DeviceOrientationClient
        https://bugs.webkit.org/show_bug.cgi?id=94586

        Reviewed by Kentaro Hara.

        Fix build error in the DeviceOrientationClientBlackBerry.cpp.
        It is occured because DeviceOrientation is changed to DeviceOrientationData in the WebCore.

        * WebCoreSupport/DeviceOrientationClientBlackBerry.cpp:
        (DeviceOrientationClientBlackBerry::lastOrientation):

2012-08-21  Jacky Jiang  <zhajiang@rim.com>

        [BlackBerry] about:memory and about:memory-live should show numbers for the chrome process
        https://bugs.webkit.org/show_bug.cgi?id=94531

        Reviewed by Rob Buis.
        Patch by Jacky Jiang  <zhajiang@rim.com>

        PR: 190504
        Add total committed memory of chrome process into about:memory and add
        its peak into about:memory-live.

        Internally reviewed by Yong Li and George Staikos.

        * WebKitSupport/AboutData.cpp:
        (BlackBerry::WebKit::memoryPage):
        (BlackBerry::WebKit::MemoryTracker::clear):
        (MemoryTracker):
        (BlackBerry::WebKit::MemoryTracker::peakTotalCommittedMemoryOfCurrentProcess):
        (BlackBerry::WebKit::MemoryTracker::peakTotalCommittedMemoryOfChromeProcess):
        (BlackBerry::WebKit::MemoryTracker::MemoryTracker):
        (BlackBerry::WebKit::MemoryTracker::updateMemoryPeaks):
        (BlackBerry::WebKit::memoryPeaksToHtmlTable):

2012-08-21  Antonio Gomes  <agomes@rim.com>

        [BlackBerry] Accelerated In-Region Scrolling does not render correctly on rotation
        https://bugs.webkit.org/show_bug.cgi?id=94608
        PR #194754

        Reviewed by Goerge Staikos.

        When one translates/scrolls a HW accelerated scrollable layer, it makes use of
        the OVERRIDE mechanism. Suppose the following scenario:

        - In landscape, the overflow menu is scrollable. Then the user scrolls it so
        that is has scroll position of 0, -100.
        - when he rotates to portrait, the menus fit well to the available space but it
        still has the OVERRIDE set, so it keeps the layer translated at 0, -100.

        Fix is simple: clear the override when we stop scrolling a HW accelerated layer,
        when we destroy the objects.

        * WebKitSupport/InRegionScrollableArea.cpp:
        (BlackBerry::WebKit::InRegionScrollableArea::~InRegionScrollableArea):

2012-08-21  Antonio Gomes  <agomes@rim.com>

        [BlackBerry] Properly notify WebKit when Client stops in-region scrolling
        https://bugs.webkit.org/show_bug.cgi?id=94603
        PR #195813

        Reviewed by Goerge Staikos.

        Simplify the API to get a notification of when a in-region
        scrolling has finished.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::notifyInRegionScrollStopped):
        Removed an unneeded parameter.
        (BlackBerry::WebKit::WebPage::notifyInRegionScrollStopped):
        Ditto.
        * Api/WebPage.h:
        * Api/WebPage_p.h:
        (WebPagePrivate):

2012-08-20  Sean Wang  <Xuewen.Wang@torchmobile.com.cn>

        [BlackBerry] Select popup shows blank content when its option tags contain '\' characters
        https://bugs.webkit.org/show_bug.cgi?id=94321

        Reviewed by George Staikos.

        PR 194224

        When the SelectPopupClient generates HTML, if there is a character '\' in the select options'
        description, we should escape it to avoid the character being interpreted as an escape character.

        * WebCoreSupport/SelectPopupClient.cpp:
        (WebCore::SelectPopupClient::generateHTML):

2012-08-20  Genevieve Mak  <gmak@rim.com>

        [BLACKBERRY] Add notification if an element does not have touch move or mouse move handlers.
        https://bugs.webkit.org/show_bug.cgi?id=94529

        Reviewed by George Staikos.

        Send a notification to the client if the fat finger element does
        not have a mouse move or touch move handler or if it is empty.
        PR #177701

        Reviewed Internally By Mike Lattanzio and Antonio Gomes.

        * Api/WebPageClient.h:
        * WebKitSupport/TouchEventHandler.cpp:
        (BlackBerry::WebKit::TouchEventHandler::handleTouchPoint):

2012-08-17  Antonio Gomes  <agomes@rim.com>

        [BlackBerry] Allow in-region accelerated scrolling take advantage of defer_blits
        https://bugs.webkit.org/show_bug.cgi?id=94379
        PR #194595

        Reviewed by Yong Li.

        Client does the blitting now.

        * Api/InRegionScroller.cpp:
        (BlackBerry::WebKit::InRegionScrollerPrivate::setScrollPositionCompositingThread):

2012-08-17  Jacky Jiang  <zhajiang@rim.com>

        [BlackBerry] On reload, www.sohu.com renders part white background, part overscroll pattern
        https://bugs.webkit.org/show_bug.cgi?id=94348

        Reviewed by Yong Li.
        Jacky Jiang  <zhajiang@rim.com>

        PR: 179200
        This can fix the reload issues of sohu.com, yahoo.com and
        thestar.com/iphone(PR158041). And it is also related with PR178305.

        Internally reviewed by George Staikos.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::setLoadState):  Keeping scales for
        reload was doing more harm than good. Two reasons to remove this:
        (1) During reload, contents rect is changing due to layout updates,
        it is possible that the contents or the white background can't cover
        the whole screen if we are using the previous scales.
        (2) Before reload, the source of the web page can be changed, therefore
        previous scales won't be valid anymore.
        Remove shouldRestoreViewState() as this check here is useless now.
        (BlackBerry::WebKit::WebPagePrivate::zoomToInitialScaleOnLoad):  During
        reload, we should give it a chance to zoom to fit the screen,
        otherwise, it happens that the contents can't cover the whole screen
        until we restore the view state, see PR158041.
        Remove shouldRestoreViewState() as the error page issue PR178305 can be
        covered by reload now.
        * WebCoreSupport/FrameLoaderClientBlackBerry.h: Remove unused shouldRestoreViewState().

2012-08-16  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] Use form state to determine the VKB enter key.
        https://bugs.webkit.org/show_bug.cgi?id=94239

        Reviewed by Rob Buis.

        PR 188234.

        If the enter key for the VKB is not explicitly set, use
        submit if we are in a single line input and a default
        button exists for the form.

        Reviewed Internally by Gen Mak.

        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::InputHandler::setElementFocused):

2012-08-16  Konrad Piascik  <kpiascik@rim.com>

        [BlackBerry] Reload valid page from Error Page keeps history ViewState and zoom.
        https://bugs.webkit.org/show_bug.cgi?id=94123

        Reviewed by Antonio Gomes.

        Reviewed internally by Leo Yang, Jacky Jiang.
        PR 178305

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::setLoadState):Reset the scales and
        the user scalable flag if we're reloading from an error page.
        (BlackBerry::WebKit::WebPagePrivate::updateViewportSize): Don't update the
        viewport size if we're still in the WebPagePrivate::init method.
        (BlackBerry::WebKit::WebPagePrivate::zoomToInitialScaleOnLoad):
        Properly set the shouldZoom flag if we're not going to restore the
        view state.
        * WebCoreSupport/FrameLoaderClientBlackBerry.cpp:
        (WebCore::FrameLoaderClientBlackBerry::FrameLoaderClientBlackBerry):
        (WebCore::FrameLoaderClientBlackBerry::dispatchDidCommitLoad): Set the
        ViewState's shouldSaveViewState flag if we're coming from an error page.
        (WebCore::FrameLoaderClientBlackBerry::saveViewStateToItem): Set the
        new member variable m_shouldRestoreViewState based on the ViewState's
        shouldSaveViewState flag.
        (WebCore::FrameLoaderClientBlackBerry::restoreViewState): Added early
        return if m_shouldRestoreViewState is false.
        * WebCoreSupport/FrameLoaderClientBlackBerry.h: Add new method to have
        the client track whether we should restore the view state.
        (WebCore::FrameLoaderClientBlackBerry::shouldRestoreViewState):
        (FrameLoaderClientBlackBerry):

2012-08-16  Leo Yang  <leoyang@rim.com>

        [BlackBerry] Remove Mobile mode from WebPage.cpp and WebPage_p.h
        https://bugs.webkit.org/show_bug.cgi?id=94223
        PR #192773

        Reviewed by Rob Buis.
        Reviewed internally by Arvid Nilsson.

        Remove Mobile mode as it's not been used. Also remove code that
        handle top-level SVG document because now we can handle it in Desktop mode.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::setLoadState):
        (BlackBerry::WebKit::WebPagePrivate::fixedLayoutSize):
        * Api/WebPage_p.h:

2012-08-16  Arvid Nilsson  <anilsson@rim.com>

        [BlackBerry] SurfacePool::waitForBuffer() sometimes waits for deleted EGLSyncKHR object
        https://bugs.webkit.org/show_bug.cgi?id=94208

        Reviewed by Rob Buis.

        SurfacePool::notifyBuffersComposited() adds a tile's previous
        sync object to the garbage list before replacing it with a new one.
        However, it failed to thoroughly clear all tiles that were referencing
        the old sync object.

        Thus it could happen that if a set of tiles A was composited, then
        another set of tiles B was composited, only the intersection of A and B
        was cleared of the soon-to-be-deleted sync object, and the subtraction
        A - B would reference an invalid sync object in case the BackingStore
        decided to render to one of the tiles in A - B before they were
        composited again.

        Fixed by storing each individual sync object in only one place so we
        don't have to rummage through all tiles and remove stale references to
        sync objects that are about to be destroyed.

        A new reference counted Fence class is added for this purpose, to store
        a sync object. Tiles refer to Fence instances instead of holding a sync
        object directly. Since Fence is reference counted, several tiles can
        refer to the same Fence instance, and clearing its sync object will
        instantly remove it from the grasp of all tiles that depend on that
        Fence.

        Since there's no point in waiting for the same Fence twice, the only
        operation provided on Fence is takePlatformSync() which returns the
        sync object and clears the Fence of its sync object.

        Reviewed internally by Filip Spacek.

        PR 193610

        * WebKitSupport/BackingStoreTile.cpp:
        (BlackBerry::WebKit::TileBuffer::TileBuffer):
        * WebKitSupport/BackingStoreTile.h:
        (BlackBerry):
        (Fence):
        (BlackBerry::Fence::create):
        (BlackBerry::Fence::takePlatformSync):
        (BlackBerry::Fence::Fence):
        (BlackBerry::WebKit::TileBuffer::fence):
        (BlackBerry::WebKit::TileBuffer::setFence):
        (TileBuffer):
        * WebKitSupport/SurfacePool.cpp:
        (BlackBerry::WebKit::SurfacePool::waitForBuffer):
        (BlackBerry::WebKit::SurfacePool::notifyBuffersComposited):
        * WebKitSupport/SurfacePool.h:
        (SurfacePool):

2012-08-16  Rob Buis  <rbuis@rim.com>

        [BlackBerry] Suppress non DRT JS Console output.
        https://bugs.webkit.org/show_bug.cgi?id=94058

        Reviewed by Yong Li.
        Reviewed internally by Ming Xie.

        Some actual test results show JS Console showing up twice, for
        instance traversal/moz-bug559526.html. Only print the DRT specific
        Console message.

        * WebCoreSupport/ChromeClientBlackBerry.cpp:
        (WebCore::ChromeClientBlackBerry::addMessageToConsole):

2012-08-16  Arvid Nilsson  <anilsson@rim.com>

        [BlackBerry] WebGL and Canvas fail to display after being restored from page cache
        https://bugs.webkit.org/show_bug.cgi?id=94105

        Reviewed by George Staikos.

        The EGLImage was being destroyed when releasing layer resources on the
        compositing thread, but the WebKit thread layer never found out and
        failed to create a new image.

        Fixed by extending the release layer resources mechanism to also make a
        pass on the WebKit thread so that thread's layers have a chance to
        delete their textures and related resources.

        Reviewed internally by Filip Spacek.

        PR 192899

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::setLoadState):
        (BlackBerry::WebKit::WebPagePrivate::releaseLayerResources):
        (WebKit):
        (BlackBerry::WebKit::WebPagePrivate::releaseLayerResourcesCompositingThread):
        (BlackBerry::WebKit::WebPagePrivate::suspendRootLayerCommit):
        * Api/WebPage_p.h:
        (WebPagePrivate):
        * WebKitSupport/FrameLayers.cpp:
        (BlackBerry::WebKit::FrameLayers::releaseLayerResources):
        (WebKit):
        * WebKitSupport/FrameLayers.h:
        (FrameLayers):

2012-08-16  Pierre Rossi  <pierre.rossi@gmail.com>

        [Qt] Remove FontQt4, HAVE_QRAWFONT flag and the related dead code
        https://bugs.webkit.org/show_bug.cgi?id=93960

        Reviewed by Simon Hausmann.

        Following the removal of Qt 4 support from trunk in r124879.

        * WebCoreSupport/AboutDataHaveFeatures.in: Remove all traces of HAVE_QRAWFONT's existence.

2012-08-15  Benjamin C Meyer  <bmeyer@rim.com>

        [BlackBerry] When there is an exception we want to check if the ref is 0, not the
        value as JSObjectCallAsFunction returns 0 in that case.
        https://bugs.webkit.org/show_bug.cgi?id=94153

        Reviewed by Yong Li.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPage::executeJavaScriptFunction):

2012-08-15  Yong Li  <yoli@rim.com>

        [BlackBerry] Upstream FrameLoaderClientBlackBerry::securityOriginForNewDocument()
        https://bugs.webkit.org/show_bug.cgi?id=94139

        Reviewed by Antonio Gomes.

        Keep same security origin when a file URL automatically redirects to its child folder.
        This patch will be reverted when we finish the better solution.
        PR# 172333 and PR# 180590.

        * WebCoreSupport/FrameLoaderClientBlackBerry.cpp:
        (WebCore::FrameLoaderClientBlackBerry::FrameLoaderClientBlackBerry):
        (WebCore::FrameLoaderClientBlackBerry::dispatchDidStartProvisionalLoad):
        (WebCore::FrameLoaderClientBlackBerry::securityOriginForNewDocument):
        (WebCore):
        * WebCoreSupport/FrameLoaderClientBlackBerry.h:
        (FrameLoaderClientBlackBerry):

2012-08-15  Yong Li  <yoli@rim.com>

        [BlackBerry] Should not keep recreating GeoTracker in setEnableHighAccuracy()
        https://bugs.webkit.org/show_bug.cgi?id=94136

        Reviewed by Rob Buis.
        Internally reviewed by Lyon Chen.

        PR# 192401.
        1. The prototype of GeoTracker::create() has changed.
        2. Fix the issue that it could recreate tracker unnecessarily when
           setEnableHighAccuracy() is called but accuracy requirment hasn't
           changed.
        3. Fix the issue setEnableHighAccuracy() could start tracking when
           tracker was suspended.

        * WebCoreSupport/GeolocationControllerClientBlackBerry.cpp:
        (GeolocationControllerClientBlackBerry::startUpdating):
        (GeolocationControllerClientBlackBerry::setEnableHighAccuracy):

2012-08-15  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] Use the unconverted attribute instead of composing when deciding to how to handle key input.
        https://bugs.webkit.org/show_bug.cgi?id=94132

        Reviewed by Rob Buis.

        PR 139838.

        Switch direct key input handling to be based on the unconverted
        attribute being present.  Converted keys, even during composition
        are now input directly.

        Reviewed Internally by Nima Ghanavatian.

        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::InputHandler::setText):

2012-08-15  Joshua Netterfield  <jnetterfield@rim.com>

        [BlackBerry] Upstream BlackBerry build fixes
        https://bugs.webkit.org/show_bug.cgi?id=94121

        Reviewed by Rob Buis.

        This includes several build fixes due to incorrect upstream patches.
        These mistakes were never present downstream.

        No new tests, because no new functionality is added.

        * WebCoreSupport/AboutDataEnableFeatures.in:
        * WebCoreSupport/AboutTemplate.html.cpp:
        (writeHeader):

2012-08-15  Leo Yang  <leoyang@rim.com>

        [BlackBerry] Use nested layout when rotating
        https://bugs.webkit.org/show_bug.cgi?id=94117

        Partially patched by Arvid Nilsson.

        Reviewed by George Staikos.
        Reviewed internally by Arvid Nilsson.

        When rotating the content width used for fixedLayoutSize is not
        correct because we are changing the rotation and the content with
        should be determined after layout. So we set the with to 0 if we
        are rotating and beginning the nested layout. And in setViewportSize
        we need a nested layout loop to trigger zoom-to-fit.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::fixedLayoutSize):
        (BlackBerry::WebKit::WebPagePrivate::setViewportSize):

2012-08-14  Antonio Gomes  <agomes@rim.com>

        [BlackBerry] Stop copying ScrollViewBase vector all over
        https://bugs.webkit.org/show_bug.cgi?id=94021

        Reviewed by Rob Buis.

        It outlives long enough in WebKit that we can
        just pass a const+ref of it.

        Internally reviewed by Gen Mak.

        * Api/WebPageClient.h:

2012-08-14  Antonio Gomes  <agomes@rim.com>

        [BlackBerry] Robust-fy the LayerWebKitThread ownership with InRegionScroller
        https://bugs.webkit.org/show_bug.cgi?id=93983
        PR #191737

        Reviewed by Yong Li.

        Patch changes the way we currently keep track of the active scrollable area
        objects: before, we acquired the scrollable areas and just passed them in a vector up
        to the client, copying it over and over again. Also, it was a client responsability to
        delete stuff (BAD!).
        Now, we keep track of vector within InRegionScroller, as a class member, which allows us to
        avoid copies (in follow up patch), and control until when these objects outlive.

        Patch also changes InRegionScrollableArea to "retptr" the composited layer
        associated to it (if any). This ensure we have a non-null scrollable element always.

        As mentioned, InRegionScroller is now responsible for deleting and vector of scrollable areas.

        Internally reviewed by Arvid Nilsson.

        * Api/InRegionScroller.cpp:
        (WebKit):
        (BlackBerry::WebKit::InRegionScrollerPrivate::reset): Method is now responsible for
        deleting the tracked scrollable areas.
        (BlackBerry::WebKit::InRegionScrollerPrivate::calculateInRegionScrollableAreasForPoint):
        Renamed from 'inRegionScrollableAreasForPoint'. It was changed in order to store the
        scrollable area objects instead of just pass a copy of them up to the client.
        (BlackBerry::WebKit::InRegionScrollerPrivate::activeInRegionScrollableAreas): Getter.
        (BlackBerry::WebKit::InRegionScrollerPrivate::pushBackInRegionScrollable): It was
        promoted to a class method instead of a local helper.
        * Api/InRegionScroller_p.h:
        (WebKit):
        (InRegionScrollerPrivate):
        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::setScrollOriginPoint): Adjustments needed due to the
        above changed.
        * WebKitSupport/InRegionScrollableArea.cpp:
        (BlackBerry::WebKit::InRegionScrollableArea::~InRegionScrollableArea): Clear up the cached layer.
        (WebKit):
        (BlackBerry::WebKit::InRegionScrollableArea::InRegionScrollableArea):
        * WebKitSupport/InRegionScrollableArea.h:
        (InRegionScrollableArea):

2012-08-15  Nima Ghanavatian  <nghanavatian@rim.com>

        [BlackBerry] Check for valid field focus before processing a spellcheck request
        https://bugs.webkit.org/show_bug.cgi?id=94115

        Reviewed by Rob Buis.

        PR192891
        Checking for valid field focus before processing the spellcheck
        request.

        Internally reviewed by Mike Fenton.

        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::InputHandler::requestCheckingOfString):

2012-08-14  Adam Barth  <abarth@webkit.org>

        Delete Frame::domWindow() and Frame::existingDOMWindow()
        https://bugs.webkit.org/show_bug.cgi?id=93990

        Reviewed by Eric Seidel.

        * WebCoreSupport/ChromeClientBlackBerry.cpp:
        (WebCore::toOriginString):
        (WebCore::ChromeClientBlackBerry::runJavaScriptAlert):
        (WebCore::ChromeClientBlackBerry::runJavaScriptConfirm):
        (WebCore::ChromeClientBlackBerry::runJavaScriptPrompt):
        (WebCore::ChromeClientBlackBerry::runBeforeUnloadConfirmPanel):
        (WebCore::ChromeClientBlackBerry::requestWebGLPermission):

2012-08-14  Leo Yang  <leoyang@rim.com>

        [BlackBerry] Checkerboard flashes on Go Back
        https://bugs.webkit.org/show_bug.cgi?id=94018

        Reviewed by Yong Li.
        Reviewed internally by Yong Li.

        The backing store need to be suspended before the
        WebPagePrivate::restoreHistoryViewState() is called to avoid UI thread
        drawing checkerboard.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::restoreHistoryViewState):
        * WebCoreSupport/FrameLoaderClientBlackBerry.cpp:
        (WebCore::FrameLoaderClientBlackBerry::restoreViewState):

2012-08-14  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] Remove unnecessary \n's from InputHandler log messages.
        https://bugs.webkit.org/show_bug.cgi?id=94015

        Reviewed by Rob Buis.

        Remove many unnecessary \n's from the end of log messages.

        Reviewed Internally by Nima Ghanavatian.

        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::convertStringToWcharVector):
        (BlackBerry::WebKit::convertSpannableStringToString):
        (BlackBerry::WebKit::InputHandler::spannableTextInRange):
        (BlackBerry::WebKit::InputHandler::setText):
        (BlackBerry::WebKit::InputHandler::setSpannableTextAndRelativeCursor):

2012-08-14  Nima Ghanavatian  <nghanavatian@rim.com>

        [BlackBerry] Queue spellcheck requests with char-count limitations
        https://bugs.webkit.org/show_bug.cgi?id=93866

        Reviewed by Rob Buis.

        PR184196
        Making spellcheck a little more granular so as to work around
        the limitations of the inputservice.
        Also, spellcheck the entire field on focus only if
        spellcheck="on" is explicitly set.

        Internally reviewed by Mike Fenton.

        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::InputHandler::requestCheckingOfString):
        (BlackBerry::WebKit::InputHandler::spellCheckingRequestProcessed):

2012-08-14  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] Use Form helper functions to determine state in DOMSupport::isTextBasedContentEditableElement
        https://bugs.webkit.org/show_bug.cgi?id=93992

        Reviewed by Antonio Gomes.

        Use form control helper functions to determine the editable state
        of the input field.

        * WebKitSupport/DOMSupport.cpp:
        (BlackBerry::WebKit::DOMSupport::isTextBasedContentEditableElement):

2012-08-14  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] Use constructor to initialize rect in TouchEventHandler::drawTapHighlight()
        https://bugs.webkit.org/show_bug.cgi?id=93988

        Reviewed by Antonio Gomes.

        Use constructor to initialize rect in TouchEventHandler::drawTapHighlight()

        * WebKitSupport/TouchEventHandler.cpp:
        (BlackBerry::WebKit::TouchEventHandler::drawTapHighlight):

2012-08-14  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] Fix use of endsWith to use string instead of char.
        https://bugs.webkit.org/show_bug.cgi?id=93994

        Reviewed by Antonio Gomes.

        Regex comparison should use string instead of char comparison.

        * WebKitSupport/DOMSupport.cpp:
        (BlackBerry::WebKit::DOMSupport::elementPatternMatches):

2012-08-14  Jacky Jiang  <zhajiang@rim.com>

        [BlackBerry] Double-tap zoom on blocks on cnn.com desktop page doesn't work
        https://bugs.webkit.org/show_bug.cgi?id=93895

        Reviewed by Antonio Gomes.
        Patch by Jacky Jiang  <zhajiang@rim.com>

        PR: 188232
        When adjusting block zoom node, don't choose a node if the width of the
        node size is very close to the width of the actual visible size as
        block zoom can do nothing on such kind of node. This condition is more
        restrictive than the one based on area and can bail out early.
        In this way, we can get a better node for double-tap zoom.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::bestNodeForZoomUnderPoint):
        (BlackBerry::WebKit::WebPagePrivate::adjustedBlockZoomNodeForZoomAndExpandingRatioLimits):
        * Api/WebPage_p.h:
        (WebPagePrivate):

2012-08-14  Konrad Piascik  <kpiascik@rim.com>

        [BlackBerry] Change the call to setUserScalable to use the setting.
        https://bugs.webkit.org/show_bug.cgi?id=93974

        Reviewed by Rob Buis.

        We should be using the WebSetting and not the current value of m_userScalable.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::recomputeVirtualViewportFromViewportArguments):

2012-08-14  Charles Wei  <charles.wei@torchmobile.com.cn>

        [BlackBerry] Some callback of Select onchange doesn't work
        https://bugs.webkit.org/show_bug.cgi?id=93944

        Reviewed by George Staikos.

        The Selection element is implemented with PagePopup, an HTML-based WebView with
        some Javascripts to make the UI of the select and option lists; The selection
        change is initiated from the javascript code in the Select Webview, and back to
        the native code of SelectPopupClient, which now in turn dispatches
        FormControlChangeEvent to the select element directly, and that causes the
        javascript callback been invoked in the same cycle as the javascript in the
        Popup View, and causes some Javascript Context problem.

        The solution is to send the FormControlChangeEvent asynchronously by a timer, 
        when the JavaScript in the Popup view finishes execution, we then send the
        FormControlChangeEvent to the select element in the content page, that avoids
        the concurrent Javascript context issue.

        * WebCoreSupport/SelectPopupClient.cpp:
        (WebCore::SelectPopupClient::SelectPopupClient):
        (WebCore::SelectPopupClient::setValueAndClosePopup):
        (WebCore):
        (WebCore::SelectPopupClient::notifySelectionChange):
        * WebCoreSupport/SelectPopupClient.h:
        (SelectPopupClient):

2012-08-14  Arvid Nilsson  <anilsson@rim.com>

        [BlackBerry] Get rid of glCopyTexImage2D in Canvas and WebGL code paths
        https://bugs.webkit.org/show_bug.cgi?id=93614

        Reviewed by Antonio Gomes.

        We used to set up resource sharing between the compositing thread
        context and the Canvas and WebGL contexts, and use glCopyTexImage2D to
        get a copy of the framebuffer to use as front buffer for compositing
        purposes.

        Now we instead create an EGLImage and blit the Canvas/WebGL output to
        it. The compositing thread creates a texture from the EGLImage in order
        to composite the output.

        This allows us to turn off resource sharing, so the WebPageCompositor
        no longer needs to pass the compositing thread context to the webkit
        thread.

        Reviewed internally by Filip Spacek.

        PR 188472

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::setCompositor):
        (BlackBerry::WebKit::WebPagePrivate::setCompositorHelper):
        * Api/WebPageCompositor.cpp:
        (BlackBerry::WebKit::WebPageCompositor::WebPageCompositor):
        (BlackBerry::WebKit::WebPageCompositor::~WebPageCompositor):
        * Api/WebPage_p.h:
        (WebPagePrivate):

2012-08-14  Charles Wei  <charles.wei@torchmobile.com.cn>

        [BlackBerry] Enable DNS prefetch
        https://bugs.webkit.org/show_bug.cgi?id=93846

        Reviewed by George Staikos.


        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::init):

2012-08-13  Tom Sepez  <tsepez@chromium.org>

        [chromium] release FrameLoaderClientImpl::m_pluginWidget refptr upon Plugin Document detach.
        https://bugs.webkit.org/show_bug.cgi?id=93283

        Reviewed by Eric Seidel.

        Change the client redirectDataToPlugin method(s) to expect the possibility of
        a NULL argument, keeping existing behaviour otherwise.

        * WebCoreSupport/FrameLoaderClientBlackBerry.cpp:
        (WebCore::FrameLoaderClientBlackBerry::redirectDataToPlugin):

2012-08-13  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] Update API for spell checking suggestions again.
        https://bugs.webkit.org/show_bug.cgi?id=93877

        Reviewed by Antonio Gomes.

        PR 163283.

        Update the spell checking options request API
        to include the caret positions.

        Reviewed internally by Nima Ghanavatian.

        * Api/WebPageClient.h:
        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::InputHandler::shouldRequestSpellCheckingOptionsForPoint):
        (WebKit):
        (BlackBerry::WebKit::InputHandler::requestSpellingCheckingOptions):
        * WebKitSupport/InputHandler.h:
        (Platform):
        (InputHandler):
        * WebKitSupport/TouchEventHandler.cpp:
        (BlackBerry::WebKit::TouchEventHandler::handleTouchPoint):
        * WebKitSupport/TouchEventHandler.h:
        (TouchEventHandler):

2012-08-13  Antonio Gomes  <agomes@rim.com>

        [BlackBerry] Rounding error somewhere when translating CompositingLayer 's for in-region scrolling
        https://bugs.webkit.org/show_bug.cgi?id=93848
        PR #190986

        Reviewed by Yong Li.

        Patch adds a WebKit thread setScrollPosition-like API to InRegionScroller.
        It fixes a mismatch we had of setting a layer's scroll positing directly via
        ::setScrollPosition on the UI thread, but dispatching a coalesceable
        scrollBy(delta) message to WebKit thread.

        * Api/InRegionScroller.cpp:
        (BlackBerry::WebKit::InRegionScroller::setScrollPositionCompositingThread):
        Changed the API name to match other thread specific methods naming.
        (WebKit):
        (BlackBerry::WebKit::InRegionScroller::setScrollPositionWebKitThread):
        Added a setScrollPosition-like method to InRegionScroller public API. Used
        together with its UI-thread counterpart, it can fix some rounding
        errors we have due to mixing ::setScrollPosition and ::scrollBy methods.
        (BlackBerry::WebKit::InRegionScrollerPrivate::setScrollPositionCompositingThread):
        Method renamed. See reasons above.
        (BlackBerry::WebKit::InRegionScrollerPrivate::setScrollPositionWebKitThread):
        Calls fowards the call to ::setLayerScrollPosition (below).
        (BlackBerry::WebKit::InRegionScrollerPrivate::setLayerScrollPosition):
        Sets the scroll position of a given RenderLayer.
        * Api/InRegionScroller.h:
        (InRegionScroller):
        * Api/InRegionScroller_p.h:
        (WebCore):
        (InRegionScrollerPrivate):
        * WebKitSupport/InRegionScrollableArea.cpp:
        (BlackBerry::WebKit::InRegionScrollableArea::InRegionScrollableArea):
        Cache the RenderLayer object associated to a given scrollable area
        instead of its LayerCompositingThread. This way we can use it for
        scrolling from both Compositing/UI and WebKit threads.

2012-08-12  Arvid Nilsson  <anilsson@rim.com>

        [BlackBerry] Tap highlight flashes checkerboard after pinch zoom
        https://bugs.webkit.org/show_bug.cgi?id=93601

        Reviewed by Antonio Gomes.

        Since the tap highlight is usually rather small, we can reimplement
        GraphicsLayerClient::contentsVisible() to always return true in order
        to keep all AC layer tiles cached all the time.

        PR 189895

        * WebKitSupport/DefaultTapHighlight.cpp:
        (BlackBerry::WebKit::DefaultTapHighlight::contentsVisible):
        (WebKit):
        * WebKitSupport/DefaultTapHighlight.h:
        (DefaultTapHighlight):

2012-08-12  Arvid Nilsson  <anilsson@rim.com>

        [BlackBerry] Tap highlight sometimes doesn't disappear
        https://bugs.webkit.org/show_bug.cgi?id=93711

        Reviewed by Antonio Gomes.

        The WebOverlayOverride implementation just changes properties of a
        LayerCompositingThread directly, which means the changes will
        immediately be overwritten on the next commit. Therefore, when the tap
        highlight implementation adds a fade out animation, that animation will
        instantly be removed again if a commit happens for any reason.

        The reason is I totally botched the implementation of
        WebOverlayOverride, it's not wrapping WebCore::LayerOverride at all,
        instead for some reason it's manipulating the LayerCompositingThread
        directly.

        Fixed by actually mapping WebOverlayOverride calls to the corresponding
        WebCore::LayerOverride method, and scheduling a compositing run to make
        the change visible and kick off animations.

        Reviewed internally by Sean Wang.

        PR 188453

        * Api/WebOverlay.cpp:
        (BlackBerry::WebKit::WebOverlayPrivate::override):
        * Api/WebOverlayOverride.cpp:
        (BlackBerry::WebKit::WebOverlayOverride::WebOverlayOverride):
        (BlackBerry::WebKit::WebOverlayOverride::~WebOverlayOverride):
        (BlackBerry::WebKit::WebOverlayOverride::setPosition):
        (BlackBerry::WebKit::WebOverlayOverride::setAnchorPoint):
        (BlackBerry::WebKit::WebOverlayOverride::setSize):
        (BlackBerry::WebKit::WebOverlayOverride::setTransform):
        (BlackBerry::WebKit::WebOverlayOverride::setOpacity):
        (BlackBerry::WebKit::WebOverlayOverride::addAnimation):
        (BlackBerry::WebKit::WebOverlayOverride::removeAnimation):
        * Api/WebOverlayOverride.h:
        * Api/WebOverlay_p.h:
        (WebOverlayPrivate):
        (WebOverlayPrivateWebKitThread):
        (WebOverlayPrivateCompositingThread):

2012-08-10  Benjamin C Meyer  <bmeyer@rim.com>

        Introduce JavaScriptVariant object.
        https://bugs.webkit.org/show_bug.cgi?id=93644

        The JavaScriptVariant can be used for functions that return results from
        JavaScript such as executeJavaScript or functions that take arguments
        to pass a variable to JavaScript and they want to make sure the type
        is correct.

        Convert executeJavaScriptFunction() to use this data type as the
        example, other functions will be converted in the future.

        PR 14929

        Internally reviewed by Joe Mason
        Reviewed by Adam Treat

        * Api/JavaScriptVariant.cpp: Added.
        (WebKit):
        (BlackBerry::WebKit::JSValueRefToBlackBerryJavaScriptVariant):
        (BlackBerry::WebKit::BlackBerryJavaScriptVariantToJSValueRef):
        (BlackBerry::WebKit::JavaScriptVariant::JavaScriptVariant):
        (BlackBerry::WebKit::JavaScriptVariant::~JavaScriptVariant):
        (BlackBerry::WebKit::JavaScriptVariant::operator=):
        (BlackBerry::WebKit::JavaScriptVariant::setType):
        (BlackBerry::WebKit::JavaScriptVariant::type):
        (BlackBerry::WebKit::JavaScriptVariant::setDouble):
        (BlackBerry::WebKit::JavaScriptVariant::doubleValue):
        (BlackBerry::WebKit::JavaScriptVariant::setString):
        (BlackBerry::WebKit::JavaScriptVariant::stringValue):
        (BlackBerry::WebKit::JavaScriptVariant::setBoolean):
        (BlackBerry::WebKit::JavaScriptVariant::booleanValue):
        * Api/JavaScriptVariant.h: Added.
        (WebKit):
        * Api/JavaScriptVariant_p.h: Added.
        (WebKit):
        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPage::executeJavaScriptFunction):
        * Api/WebPage.h:

2012-08-09  Leo Yang  <leoyang@rim.com>

        [BlackBerry] Export InRegionScroller to fix build
        https://bugs.webkit.org/show_bug.cgi?id=93635

        Reviewed by Antonio Gomes.

        Build fix.

        * Api/InRegionScroller.h:

2012-08-08  Jacky Jiang  <zhajiang@rim.com>

        [BlackBerry] Implement about:memory-live
        https://bugs.webkit.org/show_bug.cgi?id=93153

        Reviewed by Yong Li.
        Patch by Jacky Jiang  <zhajiang@rim.com>

        Implementing about:memory-live to track memory peaks:
        - about:memory-live/start: start tracking memory peaks.
        - about:memory-live: show memory peaks every 30ms.
        - about:memory-live/stop: stop tracking and show memory peaks.

        Mainly track the following memory peaks:
        - Total used memory (malloc + JSC).
        - Total committed memory.
        - Total mapped memory.

        Add total committed memory for about:memory

        * WebKitSupport/AboutData.cpp:
        (BlackBerry::WebKit::memoryPage):
        (WebKit):
        (MemoryTracker):
        (BlackBerry::WebKit::MemoryTracker::isActive):
        (BlackBerry::WebKit::MemoryTracker::clear):
        (BlackBerry::WebKit::MemoryTracker::peakTotalUsedMemory):
        (BlackBerry::WebKit::MemoryTracker::peakTotalCommittedMemory):
        (BlackBerry::WebKit::MemoryTracker::peakTotalMappedMemory):
        (BlackBerry::WebKit::MemoryTracker::MemoryTracker):
        (BlackBerry::WebKit::MemoryTracker::instance):
        (BlackBerry::WebKit::MemoryTracker::start):
        (BlackBerry::WebKit::MemoryTracker::stop):
        (BlackBerry::WebKit::MemoryTracker::updateMemoryPeaks):
        (BlackBerry::WebKit::memoryPeaksToHtmlTable):
        (BlackBerry::WebKit::memoryLivePage):
        (BlackBerry::WebKit::aboutData):

2012-08-08  Antonio Gomes  <agomes@rim.com>

        [BlackBerry] Tie up the scrolling machinery to the graphics tree when applicable for in-region scroll
        https://bugs.webkit.org/show_bug.cgi?id=93482
        PR #187672
        Make InRegionScroller a simple public webkit/ API
        PR #188677

        Reviewed by Rob Buis.

        In order to prepare InRegionScroller to be a public API
        in webkit/, the patch:

        1) Renamed the current InRegionScroller class to InRegionScrollerPrivate;
        2) Moved InRegionScroller.cpp|h from WebKitSupport/ to Api/;
        3) Renamed InRegionScroller.h to InRegionScroller_p.h;
        4) Added a new public class implementation to InRegionScroller.h;
        5) Adapted WebPage and TouchEventHandler classes to use InRegionScroller::d directly.

        The most important API here is '::compositedSetScrollPosition'

        It is a  UI/Compositing thread method only and sets the associated LayerCompositingThread
        (camouflaged as a unsigned) for each created InRegionScrollableArea that supports
        composited scrolling.

        The way ::compositedSetScrollPosition "scrolls" a layer is by setting the boundsOrigin
        property to the LayerCompositingThread's 'override' property in the UI/Compositing thread.

        * Api/InRegionScroller.cpp: Renamed from Source/WebKit/blackberry/WebKitSupport/InRegionScroller.cpp.
        (WebKit):
        (BlackBerry::WebKit::InRegionScroller::InRegionScroller):
        (BlackBerry::WebKit::InRegionScroller::~InRegionScroller):
        (BlackBerry::WebKit::InRegionScroller::compositedSetScrollPosition):
        (BlackBerry::WebKit::InRegionScrollerPrivate::InRegionScrollerPrivate):
        (BlackBerry::WebKit::InRegionScrollerPrivate::setNode):
        (BlackBerry::WebKit::InRegionScrollerPrivate::node):
        (BlackBerry::WebKit::InRegionScrollerPrivate::reset):
        (BlackBerry::WebKit::InRegionScrollerPrivate::hasNode):
        (BlackBerry::WebKit::InRegionScrollerPrivate::canScroll):
        (BlackBerry::WebKit::InRegionScrollerPrivate::compositedSetScrollPosition):
        (BlackBerry::WebKit::InRegionScrollerPrivate::scrollBy):
        (BlackBerry::WebKit::InRegionScrollerPrivate::inRegionScrollableAreasForPoint):
        (BlackBerry::WebKit::InRegionScrollerPrivate::scrollNodeRecursively):
        (BlackBerry::WebKit::InRegionScrollerPrivate::scrollRenderer):
        (BlackBerry::WebKit::InRegionScrollerPrivate::adjustScrollDelta):
        (BlackBerry::WebKit::canScrollInnerFrame):
        (BlackBerry::WebKit::canScrollRenderBox):
        (BlackBerry::WebKit::parentLayer):
        (BlackBerry::WebKit::enclosingLayerNode):
        (BlackBerry::WebKit::isNonRenderViewFixedPositionedContainer):
        (BlackBerry::WebKit::pushBackInRegionScrollable):
        * Api/InRegionScroller.h: Copied from Source/WebKit/blackberry/WebKitSupport/InRegionScroller.h.
        (WebKit):
        (InRegionScroller):
        * Api/InRegionScroller_p.h: Renamed from Source/WebKit/blackberry/WebKitSupport/InRegionScroller.h.
        (WebCore):
        (WebKit):
        (InRegionScrollerPrivate):
        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::scrollBy):
        (BlackBerry::WebKit::WebPagePrivate::notifyInRegionScrollStatusChanged):
        (BlackBerry::WebKit::WebPagePrivate::clearDocumentData):
        (BlackBerry::WebKit::WebPagePrivate::setScrollOriginPoint):
        (BlackBerry::WebKit::WebPage::inRegionScroller):
        (WebKit):
        * Api/WebPage.h:
        (WebKit):
        * WebKitSupport/InRegionScrollableArea.cpp:
        (BlackBerry::WebKit::InRegionScrollableArea::InRegionScrollableArea):
        * WebKitSupport/TouchEventHandler.cpp:
        (BlackBerry::WebKit::TouchEventHandler::drawTapHighlight):

2012-08-08  Antonio Gomes  <agomes@rim.com>

        [BlackBerry] Make WebOverlayPrivate::scheduleCompositingRun a WebPagePrivate method.
        https://bugs.webkit.org/show_bug.cgi?id=93480
        PR #188682

        Reviewed by Rob Buis.

        ... this way it can be used by others.

        No behavioural change. Another preparation patch.

        * Api/WebOverlay.cpp:
        (BlackBerry::WebKit::WebOverlayPrivate::scheduleCompositingRun):
        * Api/WebPage.cpp:
        (WebKit):
        (BlackBerry::WebKit::WebPagePrivate::scheduleCompositingRun):
        * Api/WebPage_p.h:
        (WebPagePrivate):

2012-08-08  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r124887.
        http://trac.webkit.org/changeset/124887
        https://bugs.webkit.org/show_bug.cgi?id=93504

        Dependent API being removed. (Requested by mfenton on
        #webkit).

        * Api/WebPageClient.h:
        * WebKitSupport/InputHandler.cpp:
        * WebKitSupport/InputHandler.h:
        (InputHandler):
        * WebKitSupport/TouchEventHandler.cpp:
        (BlackBerry::WebKit::TouchEventHandler::handleTouchPoint):
        (BlackBerry::WebKit::TouchEventHandler::spellCheck):
        (WebKit):
        * WebKitSupport/TouchEventHandler.h:
        (TouchEventHandler):

2012-08-08  Ed Baker  <edbaker@rim.com>

        [BlackBerry] Add relayout after updating fixed reported size
        https://bugs.webkit.org/show_bug.cgi?id=93116
        PR #160059
        
        Reviewed by Antonio Gomes.
        
        Reviewed internally by Antonio Gomes.

        On an orientation change and after fixed reported size is
        updated perform a layout and update the fixed elements after
        scrolling. This will recalculate the height and width of
        fixed position elements using percentage values with the
        new fixed reported size. Otherwise using the old fixed reported
        size in the new orientation overflowing or clipping could occur.
        
        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::setViewportSize):

2012-08-07  Charles Wei  <charles.wei@torchmobile.com.cn>

        [BlackBerry] always set PolicyAction to PolicyIgnore if the chrome returns false for acceptNavigationRequest
        https://bugs.webkit.org/show_bug.cgi?id=93251

        Reviewed by George Staikos.

        In acceptNavigationRequest(), webkit will ask if the chrome will accept the navigation request.
        We will take this chance to see if the request is an internal-webkit protocol, otherwise,
        we will try to launch an external application to handle the request, and ask webkit to ignore
        the request by returning false in acceptNavigationRequest().

        * WebCoreSupport/FrameLoaderClientBlackBerry.cpp:
        (WebCore::FrameLoaderClientBlackBerry::dispatchDecidePolicyForNavigationAction):

2012-08-07  Konrad Piascik  <kpiascik@rim.com>

        [BlackBerry] Change how devicePixelRatio is set.
        https://bugs.webkit.org/show_bug.cgi?id=93385

        Reviewed by Antonio Gomes.

        Change devicePixelRatio to be set immediately after the page is created based
        on the WebSetting.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::init):
        (BlackBerry::WebKit::WebPagePrivate::recomputeVirtualViewportFromViewportArguments):

2012-08-07  Antonio Gomes  <agomes@rim.com>

        [BlackBerry] [FullScreen] No need to scroll 'x' to 0 before entering fullscreen
        https://bugs.webkit.org/show_bug.cgi?id=91750
        PR #178293

        Reviewed by Rob Buis.

        We are not adjusting the 'left' CSS property of the fullscreen wrapper
        properly, so no need to scroll 'x' to 0 anymore.

        Internally reviewed by Jacky Jiang.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::enterFullScreenForElement):

2012-08-07  Antonio Gomes  <agomes@rim.com>

        [BlackBerry][FullScreen] Remove the set/reset of touch modes code when entering/leaving fullscreen
        https://bugs.webkit.org/show_bug.cgi?id=92520
        PR #184511

        Reviewed by Yong Li.
        Internally reviewed by Gen Mak.

        Remove touch mode set/reset when entering/leaving fullscreen
        for media elements through the new FULLSCREEN_API code path.
        The client now handles it.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::WebPagePrivate):
        (BlackBerry::WebKit::WebPagePrivate::enterFullScreenForElement):
        (BlackBerry::WebKit::WebPagePrivate::exitFullScreenForElement):
        * Api/WebPage_p.h:
        (WebPagePrivate):

2012-08-07  Konrad Piascik  <kpiascik@rim.com>

        [BlackBerry] Add missing include in FrameLoaderClienBlackBerry after Base64 moved.
        https://bugs.webkit.org/show_bug.cgi?id=93383

        Reviewed by Rob Buis.

        Base64 moved from platform/text to wtf/text, need to add mssing
        include.

        * WebCoreSupport/FrameLoaderClientBlackBerry.cpp:

2012-08-07  Konrad Piascik  <kpiascik@rim.com>

        [BlackBerry] InspectorOverlay class duplicated in WebCore
        https://bugs.webkit.org/show_bug.cgi?id=93124

        Reviewed by Rob Buis.

        Moved files to better align with namespace names.

        * WebKitSupport/InspectorOverlay.cpp: Renamed from Source/WebKit/blackberry/WebCoreSupport/InspectorOverlay.cpp.
        (WebKit):
        (BlackBerry::WebKit::InspectorOverlay::create):
        (BlackBerry::WebKit::InspectorOverlay::InspectorOverlay):
        (BlackBerry::WebKit::InspectorOverlay::notifySyncRequired):
        (BlackBerry::WebKit::InspectorOverlay::paintContents):
        (BlackBerry::WebKit::InspectorOverlay::showDebugBorders):
        (BlackBerry::WebKit::InspectorOverlay::showRepaintCounter):
        (BlackBerry::WebKit::InspectorOverlay::~InspectorOverlay):
        (BlackBerry::WebKit::InspectorOverlay::clear):
        (BlackBerry::WebKit::InspectorOverlay::update):
        * WebKitSupport/InspectorOverlay.h: Renamed from Source/WebKit/blackberry/WebCoreSupport/InspectorOverlay.h.
        (WebCore):
        (WebKit):
        (InspectorOverlay):
        (InspectorOverlayClient):
        (BlackBerry::WebKit::InspectorOverlay::setClient):
        (BlackBerry::WebKit::InspectorOverlay::notifyAnimationStarted):

2012-08-07  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] Update API for spell checking suggestions.
        https://bugs.webkit.org/show_bug.cgi?id=93356

        Reviewed by Antonio Gomes.

        PR 163283.

        Add connections for updated spell checking options request API.  Move
        all this logic into InputHandler.

        Reviewed Internally by Gen Mak and Nima Ghanavatian.

        * Api/WebPageClient.h:
        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::InputHandler::shouldRequestSpellCheckingOptionsForPoint):
        (WebKit):
        (BlackBerry::WebKit::InputHandler::requestSpellingCheckingOptions):
        * WebKitSupport/InputHandler.h:
        (Platform):
        (InputHandler):
        * WebKitSupport/TouchEventHandler.cpp:
        (BlackBerry::WebKit::TouchEventHandler::handleTouchPoint):
        * WebKitSupport/TouchEventHandler.h:
        (TouchEventHandler):

2012-08-06  Charles Wei  <charles.wei@torchmobile.com.cn>

        [BlackBerry] About: shows PAGE_CACHE not enabled.
        https://bugs.webkit.org/show_bug.cgi?id=93216

        Reviewed by Antonio Gomes.

        Page cache is a feature that can be enabled/disabled at runtime, there's no
        MACRO named PAGE_CACHE to control the feature.

        * WebCoreSupport/AboutDataEnableFeatures.in:

2012-08-03  Yong Li  <yoli@rim.com>

        [BlackBerry] FrameLoaderClient::restoreViewState() shouldn't trigger painting
        https://bugs.webkit.org/show_bug.cgi?id=93141

        Reviewed by Rob Buis.

        PR# 172041.
        It is not always safe to render the page at this point. So we post a message
        instead.

        * Api/WebPage.cpp:
        (WebKit):
        (BlackBerry::WebKit::WebPagePrivate::restoreHistoryViewState):
        * Api/WebPage_p.h:
        (WebPagePrivate):
        * WebCoreSupport/FrameLoaderClientBlackBerry.cpp:
        (WebCore::FrameLoaderClientBlackBerry::restoreViewState):

2012-08-03  Konrad Piascik  <kpiascik@rim.com>

        [BlackBerry] InspectorOverlay class duplicated in WebCore
        https://bugs.webkit.org/show_bug.cgi?id=93124

        Reviewed by Rob Buis.

        Changed namespace of InspectorOverlay from WebCore to
        BlackBerry::WebKit

        * Api/WebPage.cpp:
        (WebKit):
        (BlackBerry::WebKit::WebPagePrivate::setInspectorOverlayClient):
        * Api/WebPage_p.h:
        (WebPagePrivate):
        * WebCoreSupport/InspectorClientBlackBerry.h:
        * WebCoreSupport/InspectorOverlay.cpp:
        (BlackBerry::WebKit::InspectorOverlay::create):
        (BlackBerry::WebKit::InspectorOverlay::InspectorOverlay):
        (BlackBerry::WebKit::InspectorOverlay::notifySyncRequired):
        (BlackBerry::WebKit::InspectorOverlay::paintContents):
        (BlackBerry::WebKit::InspectorOverlay::showDebugBorders):
        (BlackBerry::WebKit::InspectorOverlay::showRepaintCounter):
        (BlackBerry::WebKit::InspectorOverlay::contentsVisible):
        (BlackBerry::WebKit::InspectorOverlay::update):
        * WebCoreSupport/InspectorOverlay.h:
        (WebKit):
        (InspectorOverlayClient):
        (InspectorOverlay):
        (BlackBerry::WebKit::InspectorOverlay::notifyAnimationStarted):

2012-08-03  Arvid Nilsson  <anilsson@rim.com>

        [BlackBerry] Overlays display checkerboard that doesn't resolve
        https://bugs.webkit.org/show_bug.cgi?id=93099

        Reviewed by Antonio Gomes.

        The WebKit-thread overlays, like tap highlight, inspector highlight and
        selection are all part of a separate graphics layer tree rooted in
        WebPagePrivate::m_overlayLayer.

        When LayerRenderer needs to schedule a commit to reactively render
        tiles and resolve checkerboard, it does so through the root layer.
        Since the overlay layer root didn't have a GraphicsLayerClient, there
        was no implementation of GraphicsLayerClient::notifySyncRequired() to
        call, and a commit was never scheduled, thus checkerboard never
        resolved.

        Fixed by adding a fallback implementation of GraphicsLayerClient in
        WebPagePrivate and hooking up the overlay root to it. Also, this
        implementation can be shared by the various overlays to avoide code
        duplication, specifically to implement notifySyncRequired(),
        showDebugBorders() and showRepaintCounter() only once.

        Fixing this revealed a bug where the web page would get stuck in an
        endless sequence of commits. It turned out that
        WebPagePrivate::updateDelegatedOverlays() was called right in the
        middle of the commit operation, after performing the webkit thread part
        of the commit operation but before we continued on the compositing
        thread. Since updateDelegatedOverlays() typically mutates layers, this
        is very bad (layers should not be mutated mid-commit). The mutations
        also cause a new commit to scheduled from within the current, which
        results in an endless sequence of commits.

        Fixed this latter bug by moving the updateDelegatedOverlays() call to
        the beginning of the method where it can cause no harm. This is before
        we mark the web page as no longer needing commit, so even if the
        implementation flips the "needs commit" bit, we will immediately flip
        it back and proceed with commit as usual.

        PR 187458, 184377

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::overlayLayer):
        (BlackBerry::WebKit::WebPagePrivate::commitRootLayerIfNeeded):
        (WebKit):
        (BlackBerry::WebKit::WebPagePrivate::notifySyncRequired):
        (BlackBerry::WebKit::WebPagePrivate::showDebugBorders):
        (BlackBerry::WebKit::WebPagePrivate::showRepaintCounter):
        * Api/WebPage_p.h:
        (WebPagePrivate):
        (BlackBerry::WebKit::WebPagePrivate::notifyAnimationStarted):
        (BlackBerry::WebKit::WebPagePrivate::paintContents):
        * WebCoreSupport/InspectorOverlay.cpp:
        (WebCore::InspectorOverlay::notifySyncRequired):
        (WebCore::InspectorOverlay::showDebugBorders):
        (WebCore::InspectorOverlay::showRepaintCounter):
        * WebKitSupport/DefaultTapHighlight.cpp:
        (BlackBerry::WebKit::DefaultTapHighlight::notifySyncRequired):
        (BlackBerry::WebKit::DefaultTapHighlight::showDebugBorders):
        (WebKit):
        (BlackBerry::WebKit::DefaultTapHighlight::showRepaintCounter):
        * WebKitSupport/DefaultTapHighlight.h:
        (DefaultTapHighlight):
        * WebKitSupport/SelectionOverlay.cpp:
        (BlackBerry::WebKit::SelectionOverlay::notifySyncRequired):
        (BlackBerry::WebKit::SelectionOverlay::showDebugBorders):
        (WebKit):
        (BlackBerry::WebKit::SelectionOverlay::showRepaintCounter):
        * WebKitSupport/SelectionOverlay.h:
        (SelectionOverlay):

2012-08-02  Arvid Nilsson  <anilsson@rim.com>

        [BlackBerry] Add default implementation of GraphicsLayerClient::contentsVisible()
        https://bugs.webkit.org/show_bug.cgi?id=93036

        Reviewed by George Staikos.

        Remove implementation of GraphicsLayerClient::contentsVisible() now
        that it has a default implementation.

        This also fixes a bug where memory usage for the inspector highlight
        overlay would balloon because it returned true from contentsVisible()
        which would cause the LayerTiler to populate all tiles. The default
        implementation returns false instead.

        PR 187458, 184377

        * WebCoreSupport/InspectorOverlay.cpp:
        (WebCore::InspectorOverlay::showRepaintCounter):
        * WebCoreSupport/InspectorOverlay.h:
        (InspectorOverlay):
        * WebKitSupport/DefaultTapHighlight.h:
        * WebKitSupport/SelectionOverlay.h:

2012-08-02  Antonio Gomes  <agomes@rim.com>

        Unreviewed debug build fix (bug 92889)

        * WebKitSupport/InRegionScroller.cpp:
        (BlackBerry::WebKit::pushBackInRegionScrollable):

2012-08-02  Leo Yang  <leoyang@rim.com>

        [BlackBerry] Rounding error of destination rect of checkerboard
        https://bugs.webkit.org/show_bug.cgi?id=93012

        Reviewed by Rob Buis.

        Reviewed internally by Jakob Petsovits.

        Intersect with the destination rectangle to eliminate the rounding error.

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStorePrivate::blitContents):

2012-08-01  Antonio Gomes  <agomes@rim.com>

        [BlackBerry] Implement InRegionScroller class as a in-region scroll controller
        https://bugs.webkit.org/show_bug.cgi?id=92889
        PR #186587

        Reviewed by Yong Li.

        Internally reviewed by Arvid Nilsson.

        Moved all in-region scrolling code out of WebPagePrivate to the just
        created InRegionScroller class. This class aims to:

        1) Centralize all in-region scroll code and clean up WebPagePrivate as a consequence.
        2) Be the bases to add UI/Compositing thread driven scrolls to in-region.

        The patch does not change any functionallity change.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::WebPagePrivate):
        (BlackBerry::WebKit::WebPagePrivate::init):
        (BlackBerry::WebKit::WebPagePrivate::scrollBy):
        (BlackBerry::WebKit::WebPagePrivate::notifyInRegionScrollStatusChanged):
        (BlackBerry::WebKit::WebPagePrivate::clearDocumentData):
        (BlackBerry::WebKit::WebPagePrivate::setScrollOriginPoint):
        * Api/WebPage_p.h:
        (WebPagePrivate):
        * WebKitSupport/InRegionScrollableArea.cpp:
        (BlackBerry::WebKit::InRegionScrollableArea::layer):
        * WebKitSupport/InRegionScroller.cpp: Added.
        (WebKit):
        (BlackBerry::WebKit::canScrollInnerFrame):
        (BlackBerry::WebKit::canScrollRenderBox):
        (BlackBerry::WebKit::parentLayer):
        (BlackBerry::WebKit::enclosingLayerNode):
        (BlackBerry::WebKit::isNonRenderViewFixedPositionedContainer):
        (BlackBerry::WebKit::pushBackInRegionScrollable):
        (BlackBerry::WebKit::InRegionScroller::InRegionScroller):
        (BlackBerry::WebKit::InRegionScroller::setNode):
        (BlackBerry::WebKit::InRegionScroller::node):
        (BlackBerry::WebKit::InRegionScroller::reset):
        (BlackBerry::WebKit::InRegionScroller::isNull):
        (BlackBerry::WebKit::InRegionScroller::scrollBy):
        (BlackBerry::WebKit::InRegionScroller::inRegionScrollableAreasForPoint):
        (BlackBerry::WebKit::InRegionScroller::scrollNodeRecursively):
        (BlackBerry::WebKit::InRegionScroller::scrollRenderer):
        (BlackBerry::WebKit::InRegionScroller::adjustScrollDelta):
        * WebKitSupport/InRegionScroller.h: Added.
        (WebCore):
        (WebKit):
        (InRegionScroller):
        * WebKitSupport/TouchEventHandler.cpp:
        (BlackBerry::WebKit::TouchEventHandler::drawTapHighlight):

2012-08-01  Charles Wei  <charles.wei@torchmobile.com.cn>

        [BlackBerry] Favicon should be Base64 encoded for cross-process passing
        https://bugs.webkit.org/show_bug.cgi?id=92857

        Reviewed by George Staikos.

        The current implementation just passes the internal of SkPixels data to the client,
        which can't be passed accross the process boundary to chrome for processing.
        This patch makes the favicon Base64 encoded so that can be passed to chrome in another process.

        * Api/WebPageClient.h:
        * WebCoreSupport/FrameLoaderClientBlackBerry.cpp:
        (WebCore::FrameLoaderClientBlackBerry::dispatchDidReceiveIcon):

2012-08-01  Jacky Jiang  <zhajiang@rim.com>

        [BlackBerry] Allow client side to add and remove origin access whitelist entries
        https://bugs.webkit.org/show_bug.cgi?id=92790

        Reviewed by Yong Li.

        PR: 172658
        Add two new APIs to add and remove origin access whitelist entries.
        Initialize the BlackBerryAllowCrossSiteRequests WebSetting to false.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::addOriginAccessWhitelistEntry):
        (WebKit):
        (BlackBerry::WebKit::WebPage::addOriginAccessWhitelistEntry):
        (BlackBerry::WebKit::WebPagePrivate::removeOriginAccessWhitelistEntry):
        (BlackBerry::WebKit::WebPage::removeOriginAccessWhitelistEntry):
        * Api/WebPage.h:
        * Api/WebPage_p.h:
        (WebPagePrivate):
        * Api/WebSettings.cpp:
        (BlackBerry::WebKit::WebSettings::standardSettings):

2012-08-01  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] Consolidate suppression of keyboard requests.
        https://bugs.webkit.org/show_bug.cgi?id=92871

        Reviewed by Antonio Gomes.

        Reduce VKB requests even more by applying the filter on
        all requests during processing.

        Reviewed Internally by Gen Mak.

        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::InputHandler::focusedNodeChanged):
        (BlackBerry::WebKit::InputHandler::notifyClientOfKeyboardVisibilityChange):

2012-08-01  Arvid Nilsson  <anilsson@rim.com>

        [BlackBerry] Disable tap highlight when transparent color is specified
        https://bugs.webkit.org/show_bug.cgi?id=92849

        Reviewed by Antonio Gomes.

        When the web page specifies -webkit-tap-highlight-color:rgba(0,0,0,0)
        or any color with alpha value 0, we should disable the tap highlight.

        * WebKitSupport/DefaultTapHighlight.cpp:
        (BlackBerry::WebKit::DefaultTapHighlight::draw):

2012-07-31  Robin Cao  <robin.cao@torchmobile.com.cn>

        [BlackBerry] Pass all file chooser settings to clients
        https://bugs.webkit.org/show_bug.cgi?id=92237

        Reviewed by Rob Buis.

        Expose all file chooser settings to clients.

        * Api/WebPageClient.h:
        * WebCoreSupport/ChromeClientBlackBerry.cpp:
        (WebCore::ChromeClientBlackBerry::runOpenPanel):

2012-07-31  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] Fix crash in InputHandler spell checking.
        https://bugs.webkit.org/show_bug.cgi?id=92763

        Reviewed by Antonio Gomes.

        PR 185574.

        Fix crash in getSpellChecker by guarding the calling paths
        to ensure that m_currentFocusElement is valid.

        Also add ASSERTs for previous crash.

        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::InputHandler::spellCheckingRequestProcessed):
        (BlackBerry::WebKit::InputHandler::spellCheckingRequestCancelled):
        (BlackBerry::WebKit::InputHandler::getSpellChecker):

2012-07-31  Genevieve Mak  <gmak@rim.com>

        Send an onContextMenu event to the page content
        so that context menus can be prevented. We use
        the node's event handler because we want to use
        the fat finger's node. If we use  the EventHandler's
        sendContextMenuEvent it will hit test with the mouse
        position which may not be what we want.
        PR #184032
        https://bugs.webkit.org/show_bug.cgi?id=92766

        Reviewed by Antonio Gomes.
        Reviewed Internally by Antonio Gomes.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::webContext):
        (BlackBerry::WebKit::WebPagePrivate::contextNode):

2012-07-31  Arvid Nilsson  <anilsson@rim.com>

        [BlackBerry] Backing store output flickers when using WebPageCompositor
        https://bugs.webkit.org/show_bug.cgi?id=90291

        Reviewed by Antonio Gomes.

        The backing store doesn't know when the API client swaps the buffers,
        so it doesn't know when to signal the blit generation condition
        variable. Fixed by using EGL fence sync instead, when available, so we
        don't have to know.

        Reviewed internally by Filip Spacek.

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStorePrivate::BackingStorePrivate):
        (BlackBerry::WebKit::BackingStorePrivate::~BackingStorePrivate):
        (BlackBerry::WebKit::BackingStorePrivate::render):
        (BlackBerry::WebKit::BackingStorePrivate::blitContents):
        (BlackBerry::WebKit::BackingStorePrivate::compositeContents):
        * Api/BackingStore_p.h:
        (BackingStorePrivate):
        * WebKitSupport/BackingStoreTile.cpp:
        (BlackBerry::WebKit::TileBuffer::TileBuffer):
        * WebKitSupport/BackingStoreTile.h:
        (BlackBerry::WebKit::TileBuffer::syncObject):
        (BlackBerry::WebKit::TileBuffer::setSyncObject):
        (TileBuffer):
        * WebKitSupport/SurfacePool.cpp:
        (WebKit):
        (BlackBerry::WebKit::SurfacePool::SurfacePool):
        (BlackBerry::WebKit::SurfacePool::initialize):
        (BlackBerry::WebKit::SurfacePool::waitForBuffer):
        (BlackBerry::WebKit::SurfacePool::notifyBuffersComposited):
        * WebKitSupport/SurfacePool.h:
        (SurfacePool):

2012-07-30  Yoshifumi Inoue  <yosin@chromium.org>

        [Forms] Get rid of Element::isReadOnlyFormControl other than CSS related
        https://bugs.webkit.org/show_bug.cgi?id=92612

        Reviewed by Kent Tamura.

        This patch replaces Element::isReadOnlyFormControl() to
        HTMLFormControlElement::readOnly() for preparation of introducing
        Element::shouldMatchReadWriteSelector(), bug 92602.

        * WebKitSupport/DOMSupport.cpp:
        (BlackBerry::WebKit::DOMSupport::isTextBasedContentEditableElement): Replaced isReadOnlyFormControl() by HTMLTextFormControlElement::readOnly().

2012-07-30  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] Optimize the generation of selection details generation.
        https://bugs.webkit.org/show_bug.cgi?id=92522

        Reviewed by Antonio Gomes.

        PR 179264.

        Reduce the number of times we generate selection details notifications.

        This removes several notifications that are handled by the standard
        notification path and makes skipping duplicate notifications the default
        so that only those that must generate a response do.

        Reviewed Internally by Gen Mak.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::notifyTransformedContentsSizeChanged):
        (BlackBerry::WebKit::WebPagePrivate::updateDelegatedOverlays):
        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::InputHandler::setElementUnfocused):
        * WebKitSupport/SelectionHandler.cpp:
        (BlackBerry::WebKit::SelectionHandler::setCaretPosition):
        (BlackBerry::WebKit::SelectionHandler::updateOrHandleInputSelection):
        (BlackBerry::WebKit::SelectionHandler::setSelection):
        (BlackBerry::WebKit::SelectionHandler::selectionPositionChanged):
        * WebKitSupport/SelectionHandler.h:
        (SelectionHandler):

2012-07-30  Robin Cao  <robin.cao@torchmobile.com.cn>

        [BlackBerry] Adapt to changes in the SharedArray platform API
        https://bugs.webkit.org/show_bug.cgi?id=92631

        Reviewed by Rob Buis.

        Adapt to changes in the SharedArray platform API. No behavioural change.

        Reviewed internally by Joe Mason.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPage::getBackForwardList):
        * Api/WebPage.h:
        * Api/WebPageClient.h:
        * WebCoreSupport/ChromeClientBlackBerry.cpp:
        (WebCore::ChromeClientBlackBerry::runOpenPanel):

2012-07-30  Patrick Gansterer  <paroga@webkit.org>

        Replace UnicodeWinCE with UnicodeWchar
        https://bugs.webkit.org/show_bug.cgi?id=92539

        Reviewed by Ryosuke Niwa.

        UnicodeWinCE never contained WinCE specific code. UnicodeWchar
        is a replacement for it, which is mainly based on the functions
        from <wchar.h>. It is ment as a minimal Unicode backend, which
        can be used very easy and has no external dependencies.

        * WebCoreSupport/AboutDataUseFeatures.in:

2012-07-27  Eli Fidler  <efidler@rim.com>

        [BlackBerry] Adapt to change in the FontInfo platform API.
        https://bugs.webkit.org/show_bug.cgi?id=92547

        Reviewed by Yong Li

        RIM PR 161263

        * Api/WebSettings.cpp:
        (BlackBerry::WebKit::WebSettings::standardSettings):

2012-07-27  Yong Li  <yoli@rim.com>

        [BlackBerry] Should support onbeforeunload event and show confirmation dialog
        https://bugs.webkit.org/show_bug.cgi?id=92510

        Reviewed by Antonio Gomes.

        RIM PR# 155878.
        1. Export dispatchBeforeUnloadEvent() so client can call it before going to close the page.
        2. Forward runBeforeUnloadConfirmPanel() call to client so it can show a dialog.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPage::dispatchBeforeUnloadEvent):
        (WebKit):
        * Api/WebPage.h:
        * Api/WebPageClient.h:
        * WebCoreSupport/ChromeClientBlackBerry.cpp:
        (WebCore::ChromeClientBlackBerry::canRunBeforeUnloadConfirmPanel):
        (WebCore::ChromeClientBlackBerry::runBeforeUnloadConfirmPanel):

2012-07-27  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] Switch InputHandler malloc use to fastMalloc for cases that should never fail
        https://bugs.webkit.org/show_bug.cgi?id=92508

        Reviewed by Yong Li.

        Replace common uses of malloc with fastMalloc rather
        than trying to recover gracefully.  If we are truly
        out of memory, crash before corruption occurs.

        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::InputHandler::spannableTextInRange):
        (BlackBerry::WebKit::InputHandler::extractedTextRequest):

2012-07-26  Nima Ghanavatian  <nghanavatian@rim.com>

        [BlackBerry] Remove synchronous spellchecking code
        https://bugs.webkit.org/show_bug.cgi?id=92415

        Removing synchronous spellchecking code path.

        Reviewed by Rob Buis.

        Internally reviewed by Mike Fenton.

        * Api/WebPageClient.h:
        * WebCoreSupport/EditorClientBlackBerry.cpp:
        (WebCore::EditorClientBlackBerry::checkSpellingOfString):

2012-07-26  Nima Ghanavatian  <nghanavatian@rim.com>

        [BlackBerry] Support async spellcheck for the blackberry port
        https://bugs.webkit.org/show_bug.cgi?id=92160

        PR124517
        Implementing support for async spellcheck.

        Reviewed by Rob Buis.

        Internally reviewed by Mike Fenton.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPage::spellCheckingRequestCancelled):
        (WebKit):
        (BlackBerry::WebKit::WebPage::spellCheckingRequestProcessed):
        (BlackBerry::WebKit::WebPagePrivate::didChangeSettings):
        * Api/WebPage.h:
        * Api/WebSettings.cpp:
        (WebKit):
        (BlackBerry::WebKit::WebSettings::standardSettings):
        (BlackBerry::WebKit::WebSettings::isAsynchronousSpellCheckingEnabled):
        (BlackBerry::WebKit::WebSettings::setAsynchronousSpellCheckingEnabled):
        * Api/WebSettings.h:
        * WebCoreSupport/EditorClientBlackBerry.cpp:
        (WebCore):
        (WebCore::EditorClientBlackBerry::requestCheckingOfString):
        (WebCore::EditorClientBlackBerry::checkTextOfParagraph):
        * WebCoreSupport/EditorClientBlackBerry.h:
        (EditorClientBlackBerry):
        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::InputHandler::requestCheckingOfString):
        (BlackBerry::WebKit::InputHandler::convertTransactionIdToSequenceId):
        (WebKit):
        (BlackBerry::WebKit::InputHandler::spellCheckingRequestProcessed):
        (BlackBerry::WebKit::InputHandler::spellCheckingRequestCancelled):
        (BlackBerry::WebKit::InputHandler::getSpellChecker):
        * WebKitSupport/InputHandler.h:
        (WebCore):
        (InputHandler):

2012-07-26  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] Improve the logs in Selection Handler.
        https://bugs.webkit.org/show_bug.cgi?id=92405

        Reviewed by Rob Buis.

        Clean up selection logging, fix priority and style
        of helper function.

        Reviewed Internally by Nima Ghanavatian.

        * WebKitSupport/SelectionHandler.cpp:
        (BlackBerry::WebKit::SelectionHandler::cancelSelection):
        (BlackBerry::WebKit::SelectionHandler::shouldUpdateSelectionOrCaretForPoint):
        (BlackBerry::WebKit::SelectionHandler::setCaretPosition):
        (BlackBerry::WebKit::SelectionHandler::updateOrHandleInputSelection):
        (BlackBerry::WebKit::SelectionHandler::setSelection):
        (BlackBerry::WebKit::SelectionHandler::selectObject):
        (BlackBerry::WebKit::SelectionHandler::selectionPositionChanged):
        (BlackBerry::WebKit::SelectionHandler::caretPositionChanged):

2012-07-26  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] Add timing logs to SelectionHandler.
        https://bugs.webkit.org/show_bug.cgi?id=92404

        Reviewed by Rob Buis.

        Add selection timing logs.

        Reviewed Internally by Nima Ghanavatian.

        * WebKitSupport/SelectionHandler.cpp:
        (BlackBerry::WebKit::SelectionHandler::setSelection):
        (BlackBerry::WebKit::SelectionHandler::selectionPositionChanged):
        * WebKitSupport/SelectionHandler.h:
        (SelectionHandler):

2012-07-26  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] InputHandler failure logs should be logAlways and critical.
        https://bugs.webkit.org/show_bug.cgi?id=92403

        Reviewed by Rob Buis.

        Update Log level for failures and fix mask in log.

        Reviewed Internally by Nima Ghanavatian.

        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::convertStringToWchar):
        (BlackBerry::WebKit::convertStringToWcharVector):
        (BlackBerry::WebKit::convertSpannableStringToString):
        (BlackBerry::WebKit::InputHandler::spannableTextInRange):
        (BlackBerry::WebKit::InputHandler::setTextAttributes):

2012-07-26  Arvid Nilsson  <anilsson@rim.com>

        [BlackBerry] Refactor BackingStorePrivate::BackingStorePrivate::clearAndUpdateTileOfNotRenderedRegion() to avoid touching tile frontbuffer
        https://bugs.webkit.org/show_bug.cgi?id=92095

        Reviewed by George Staikos.

        PR: 141439
        Specifically, we want to avoid changing the rendered region of the
        front buffer without proper synchronization.

        The method is trying to force checkerboard to appear on screen because
        an area was invalidated but the render job was dropped, so the tile
        contents are now invalid.

        Unfortunately it did this in a way which is not thread safe. Fixed by
        making it thread safe, in a way that minimizes memory bandwidth usage.

        Instead of using the customary sequence of copy-back, modify and swap,
        we send a synchronous message to the compositing thread to avoid the
        copy-back step and save memory bandwidth. The trade-off is that the
        WebKit thread might wait a little longer for the compositing thread
        than it would from a waitForCurrentMessage() call.

        The way we synchronize this is rather expensive for the WebKit thread,
        and this method is called rather carelessly, so add various early
        returns to avoid doing it redundantly.

        Internally reviewed by Jakob Petsovits and Adam Treat.

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStorePrivate::indexOfTile):
        (BlackBerry::WebKit::BackingStorePrivate::clearAndUpdateTileOfNotRenderedRegion):
        * Api/BackingStore_p.h:
        (BackingStorePrivate):

2012-07-26  Arvid Nilsson  <anilsson@rim.com>

        [BlackBerry] Refactor BackingStorePrivate::render() to avoid touching tile frontbuffer
        https://bugs.webkit.org/show_bug.cgi?id=91989

        Reviewed by George Staikos.

        PR: 141439
        Specifically, we want to avoid changing the rendered region of the
        front buffer. The code only touched the front buffer rendered region
        if the tile was not committed.

        Instead of immediately marking the tile as committed, and clearing the
        front buffer's rendered region to make it appear as checkerboard, we
        leave the front buffer alone and only mark the tile as committed once
        the front buffer has valid content. Un-committed tiles will also be
        rendered as checkerboard, so leaving it uncommitted is equivalent to
        clearing the front buffer rendered region here.

        In addition to the main change, some related changes follow naturally.

        The copyPreviousContentsToBackSurfaceOfTile() call only makes sense if
        the tile is committed, and the front buffer has valid content.
        Otherwise, clearing the back buffer is equivalent. The code has been
        updated to this effect.

        Since copyPreviousContentsToBackSurfaceOfTile() always sets the
        rendered region to the union of the front and back buffer regions,
        there is no point in the "backBufferIsValid" check. It has been turned
        into an ASSERT instead, just to make sure.

        Internally reviewed by Jakob Petsovits.

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStorePrivate::render):

2012-07-25  Jonathan Dong  <jonathan.dong@torchmobile.com.cn>

        [BlackBerry] Support RTSP in browser
        https://bugs.webkit.org/show_bug.cgi?id=92233

        Reviewed by Rob Buis.

        Handle URL scheme "rtsp://" before creating the DocumentLoader
        and send the request to webkit. As we don't have any application
        which can deal with rtsp invocation for now, we need to create
        a media document to wrap the rtsp url within a video tag which
        makes it load as a normal video clip.

        RIM PR: 169669
        Internally reviewed by Charles Wei <charles.wei@torchmobile.com.cn>.

        * WebCoreSupport/FrameLoaderClientBlackBerry.cpp:
        (WebCore::FrameLoaderClientBlackBerry::createDocumentLoader):

2012-07-25  Jakob Petsovits  <jpetsovits@rim.com>

        [BlackBerry] Rephrase suspend/resume condition to guard against crashes
        https://bugs.webkit.org/show_bug.cgi?id=92300
        PR 182125

        Reviewed by George Staikos.

        When the compositor is removed from a WebPage, it might
        already have unset its context, and issuing a call to
        BackingStore::buffer() would therefore cause a crash.
        Just guarding buffer() from this crash isn't fully
        correct, because then we wouldn't suspend rendering
        for a compositor that had been previously enabled.

        Instead, change the condition to suspend/resume in
        WebPagePrivate::setCompositor() to focus on the
        object that delivers us the buffer. If we can't
        listen to the context or buffer being set, better
        just take the compositor object itself to determine
        whether we have something valid or not... and hope
        that they give us a valid context & buffer in all
        situations when we can actually be rendering.

        Also check compositor->context() in buffer() to be
        non-zero before accessing the context's buffer,
        because more defensive coding can't hurt here.

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStorePrivate::buffer):
        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::setCompositor):

2012-07-25  Joshua Netterfield  <jnetterfield@rim.com>

        [BlackBerry] Update about:config lists
        https://bugs.webkit.org/show_bug.cgi?id=92118

        Reviewed by Rob Buis.

        Remove features from list that have either been removed from WebKit
        or that have been moved from one list to another.

        * WebCoreSupport/AboutDataEnableFeatures.in:
        * WebCoreSupport/AboutDataHaveFeatures.in:
        * WebCoreSupport/AboutDataUseFeatures.in:

2012-07-25  Jacky Jiang  <zhajiang@rim.com>

        [BlackBerry] clock_gettime() in BackingStore.cpp should use CLOCK_MONOTONIC
        https://bugs.webkit.org/show_bug.cgi?id=91898

        Reviewed by Yong Li.

        Let pthread condition variable in BackingStore.cpp use monotonic clock
        to fix a regression caused by r123266.

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStorePrivate::BackingStorePrivate):

2012-07-25  Andy Chen  <andchen@rim.com>

        [BlackBerry] Add "SelectAll" to WebPage
        https://bugs.webkit.org/show_bug.cgi?id=92246

        Reviewed by Antonio Gomes.

        Add "Select All" editor command to WebPage.
        Internally reviewed by Mike Fenton.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPage::selectAll):
        (WebKit):
        * Api/WebPage.h:
        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::InputHandler::selectAll):
        (WebKit):
        * WebKitSupport/InputHandler.h:

2012-07-25  Arvid Nilsson  <anilsson@rim.com>

        [BlackBerry] Don't touch a tile buffer while it's still on its way to the GPU
        https://bugs.webkit.org/show_bug.cgi?id=91992

        Reviewed by Adam Treat.

        PR: 141439
        The copyPreviousContentsToBackSurfaceOfTile() call will also modify
        buffer contents, move it after the blit generation condvar to make sure
        we've waited for the buffer to become available first.

        This is done as part of some general BackingStorePrivate::render()
        cleanup in PR 141439.

        Internally reviewed by Jakob Petsovits.

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStorePrivate::render):

2012-07-25  Jakob Petsovits  <jpetsovits@rim.com>

        [BlackBerry] notifyContentRendered() call missing in two spots
        https://bugs.webkit.org/show_bug.cgi?id=92153
        RIM PR 173340

        Reviewed by Antonio Gomes.

        In dispatchDidFirstVisualLayout() and repaint() in
        immediate mode, we render but don't notify the
        WebPageClient that the content was modified.

        In the long run, we should probably keep track of
        the modified reason from within render() itself
        and use this to automatically notify the client
        from within blitContents() and/or invalidateWindow(),
        depending on the rendering path. That's somewhat of
        a medium-size undertaking though; for now, adding
        the call directly to the renderVisibleContents()
        call sites will do.

        This patch also adds a blitVisibleContents() to
        dispatchDidFirstVisualLayout() where it was
        inexplicably missing, probably on account of
        old code that was never updated.

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStorePrivate::repaint):
        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::resumeBackingStore):
        * WebCoreSupport/FrameLoaderClientBlackBerry.cpp:
        (WebCore::FrameLoaderClientBlackBerry::dispatchDidFirstVisuallyNonEmptyLayout):

2012-07-24  Rob Buis  <rbuis@rim.com>

        [BlackBerry] Do not call settings setters twice on page construction
        https://bugs.webkit.org/show_bug.cgi?id=92157

        Reviewed by Yong Li.

        The WebPagePrivate init method sets some settings value that were
        already set in didChangeSettings. setUseHixie76WebSocketProtocol just
        sets the default value, no need to set it again.
        Also call didChangeSettings explicitly from init, before that we are
        not calling it since the delegate is not set yet.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::init):

2012-07-24  Mike Fenton  <mifenton@rim.com>

        Throttle calls to request the virtual keyboard be shown.
        https://bugs.webkit.org/show_bug.cgi?id=92138

        Reviewed by Rob Buis.

        PR 178465.

        Do not request keyboard visibility change when
        we are actively processing an input event.

        Reviewed Internally by Gen Mak.

        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::InputHandler::focusedNodeChanged):

2012-07-24  Joshua Netterfield  <jnetterfield@rim.com>

        [BlackBerry] Update about:config lists
        https://bugs.webkit.org/show_bug.cgi?id=92118

        Reviewed by Rob Buis.

        We want to have all flags which could be used / have been used by any platform. These lists were created by running:

        * WebCoreSupport/AboutDataEnableFeatures.in: `git grep "ENABLE(" | cut -d "(" -f2 | cut -d ")" -f1 | sort -u`
        * WebCoreSupport/AboutDataHaveFeatures.in: `git grep "HAVE(" | cut -d "(" -f2 | cut -d ")" -f1 | sort -u`
        * WebCoreSupport/AboutDataUseFeatures.in: `git grep "USE(" | cut -d "(" -f2 | cut -d ")" -f1 | sort -u`

2012-07-24  Arvid Nilsson  <anilsson@rim.com>

        [BlackBerry] Remove unused variable in BackingStore.cpp
        https://bugs.webkit.org/show_bug.cgi?id=91987

        Reviewed by Antonio Gomes.

        PR: 141439
        This is done as part of some general BackingStorePrivate::render()
        cleanup in PR 141439.

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStorePrivate::render):

2012-07-23  Yong Li  <yoli@rim.com>

        [BlackBerry] Move about: URL handling out of WebCore
        https://bugs.webkit.org/show_bug.cgi?id=91541

        Reviewed by Rob Buis.

        PR# 181304.
        Move about: URL handling to the right place (FrameLoaderClientBlackBerry::createDocumentLoader), so
        reload and history navigation can work.
        Other changes: Remove about:version which makes little sense. Make about:memory partially visible.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPage::load): Remove the call to loadAbout()
        * Api/WebPage_p.h: Remove loadAbout()
        (WebPagePrivate):
        * WebCoreSupport/FrameLoaderClientBlackBerry.cpp:
        (WebCore::FrameLoaderClientBlackBerry::createDocumentLoader): Construct about: data here.
        * WebKitSupport/AboutData.cpp:
        (BlackBerry::WebKit::numberToHTMLTr): Make it static
        (BlackBerry::WebKit::configPage): Make it static
        (BlackBerry::WebKit::memoryPage): Make it static
        (BlackBerry::WebKit::cachePage):
        (BlackBerry::WebKit::buildPage):
        (BlackBerry::WebKit::creditsPage):
        (BlackBerry::WebKit::cookiePage):
        (BlackBerry::WebKit::aboutData): The only export function that returns HTML source for a given about: URL.
        (WebKit):
        * WebKitSupport/AboutData.h:
        (WebKit):

2012-07-23  Pierre Rossi  <pierre.rossi@gmail.com>

        Unify numTouchEventHandlersChanged and needTouchEvents in the chrome client
        https://bugs.webkit.org/show_bug.cgi?id=91006

        Reviewed by Ryosuke Niwa.

        Removed numTouchEventHandlersChanged stub.

        * WebCoreSupport/ChromeClientBlackBerry.h:

2012-07-22  Kent Tamura  <tkent@chromium.org>

        Rename ENABLE_METER_TAG and ENABLE_PROGRESS_TAG to ENABLE_METER_ELEMENT and ENABLE_PROGRESS_ELEMENT respectively
        https://bugs.webkit.org/show_bug.cgi?id=91941

        Reviewed by Kentaro Hara.

        A flag name for an elmement should be ENABLE_*_ELEMENT.

        * WebCoreSupport/AboutDataEnableFeatures.in:

2012-07-20  Jacky Jiang  <zhajiang@rim.com>

        [BlackBerry] clock_gettime() in BackingStore.cpp should use CLOCK_MONOTONIC
        https://bugs.webkit.org/show_bug.cgi?id=91898

        Reviewed by Yong Li.

        PR: 181043
        Use CLOCK_MONOTONIC when we do expect a monotonic timer.

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStorePrivate::blitContents):

2012-07-20  Crystal Zhang  <haizhang@rim.com>

        [BlackBerry] Add Cancel button for Select popup
        https://bugs.webkit.org/show_bug.cgi?id=91887

        Reviewed by Yong Li.

        PR 177706

        * WebCoreSupport/SelectPopupClient.cpp:
        (WebCore::SelectPopupClient::generateHTML):
        (WebCore::SelectPopupClient::setValueAndClosePopup):

2012-07-19  Mary Wu  <mary.wu@torchmobile.com.cn>

        [BlackBerry] Make sure to send favicon when go back/forward
        https://bugs.webkit.org/show_bug.cgi?id=91808

        Reviewed by George Staikos.

        When go back/forward, if the page was in page cache, it would have no chance
        to send favicon. So we'll send it in commitLoad right after send the blank
        icon.
        RIM PR# 177495

        * WebCoreSupport/FrameLoaderClientBlackBerry.cpp:
        (WebCore::FrameLoaderClientBlackBerry::dispatchDidCommitLoad):

2012-07-19  Jakob Petsovits  <jpetsovits@rim.com>

        [BlackBerry] Suspend when there's no target buffer until an external compositor is set
        https://bugs.webkit.org/show_bug.cgi?id=91686
        RIM PR 174365

        Reviewed by Antonio Gomes.

        If we don't have a client window (i.e. rendering to
        GL directly) and a WebPageCompositor is only set
        after a rendering operation, then we'll try to render
        to BackingStorePrivate::buffer() which doesn't exist
        at this point. That's bad, and gets us various
        assertions and possibly worse.

        Fix it by starting in a screen-suspended state and only
        resuming screen and backingstore once a compositor is
        actually set.

        So, in effect, with this patch applied, the sequence
        of events will look like this:

        1) WebPage & BackingStore are initialize, neither window
           nor compositor exists, therefore buffer() returns 0.
           createSurface() therefore suspends screen and
           backingstore.
        2) loadURL() or loadData() is called, web page is
           fully loaded, however we don't try to render because
           we're still suspended, still have no target buffer.
        3) A WebPageCompositor is being set from outside.
           At the beginning of WebPage::setCompositor() we still
           don't have a buffer() so there's nothing to suspend,
           however, after the sync call to setCompositorHelper()
           the compositor is set so buffer() will return a
           nonzero value, causing us to resume at this point.

        Using the existence of a target buffer to determine
        whether or not to enable rendering or keep it suspended
        seems like a good idea, and the implementation (while
        not quite perfect yet) is a step forward from before.

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStorePrivate::createSurfaces):
        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::setCompositor):
        (BlackBerry::WebKit::WebPagePrivate::setCompositorHelper):
        * Api/WebPage_p.h:
        (WebPagePrivate):

2012-07-19  Jakob Petsovits  <jpetsovits@rim.com>

        [BlackBerry] Allow nested suspend/resume screen & backingstore calls.
        https://bugs.webkit.org/show_bug.cgi?id=91644
        RIM PR 174365

        Reviewed by Adam Treat and Antonio Gomes.

        We expose suspendScreenAndBackingStoreUpdates() to the
        outside API, but also use it internally when reacting
        to a number of happenings, i.e. zooming, viewport resize,
        resetting view state on Committed state or when restoring
        it from previous pages, etc.

        These two can clash. For instance, if we get a suspend
        call from outside that suspends us for app inactivity,
        or we are told to suspend because the main target surface
        is not available at the time, and while being suspended
        we try to rotate, finish loading a page, the we'll end up
        resuming operations even though we shouldn't.

        This patch changes the suspend flag to be a counter
        instead, allowing nested suspend/resume calls and making
        suspend/resume more robust this way. It also changes
        several call sites to make sure suspend/resume calls are
        paired up correctly.

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStorePrivate::BackingStorePrivate):
        (BlackBerry::WebKit::BackingStorePrivate::suspendScreenAndBackingStoreUpdates):
        (BlackBerry::WebKit::BackingStorePrivate::resumeScreenAndBackingStoreUpdates):
        * Api/BackingStore_p.h:
        (BackingStorePrivate):
        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::shouldZoomAboutPoint):
        (BlackBerry::WebKit::WebPagePrivate::zoomAboutPointTimerFired):
        (BlackBerry::WebKit::WebPagePrivate::blockZoomRectForNode):
        * WebCoreSupport/FrameLoaderClientBlackBerry.cpp:
        (WebCore::FrameLoaderClientBlackBerry::restoreViewState):

2012-07-18  Yong Li  <yoli@rim.com>

        [BlackBerry] Move about: URL handling out of WebCore
        https://bugs.webkit.org/show_bug.cgi?id=91541

        Reviewed by Rob Buis.

        Move about URL handling code to WebKit/blackberry. Now when WebPage is asked to load an about URL,
        it directly calls loadString() with the generated source.

        Also move AboutData.h/cpp from WebCoreSupport to WebKitSupport and change their namespace from WebCore
        to BlackBerry::WebKit.

        The change is very mechanical except "procss total memory usage" in about:memory now only accounts used
        bytes and ignore free spaces in malloc.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::loadAbout):
        (WebKit):
        (BlackBerry::WebKit::WebPage::load):
        * Api/WebPage_p.h:
        (WebPagePrivate):
        * WebKitSupport/AboutData.cpp: Renamed from Source/WebKit/blackberry/WebCoreSupport/AboutData.cpp.
        (WebKit):
        (BlackBerry::WebKit::writeFeatures):
        (BlackBerry::WebKit::numberToHTMLTr):
        (BlackBerry::WebKit::bool):
        (BlackBerry::WebKit::configPage):
        (BlackBerry::WebKit::cacheTypeStatisticToHTMLTr):
        (BlackBerry::WebKit::dumpJSCTypeCountSetToTableHTML):
        (BlackBerry::WebKit::memoryPage):
        * WebKitSupport/AboutData.h: Renamed from Source/WebKit/blackberry/WebCoreSupport/AboutData.h.
        (WebKit):

2012-07-17  Jakob Petsovits  <jpetsovits@rim.com>

        [BlackBerry] Remove unnecessary clearWindow() calls and the method itself
        https://bugs.webkit.org/show_bug.cgi?id=91540
        RIM PR 174365

        Reviewed by Adam Treat.

        If we resume the backingstore right afterwards with
        RenderAndBlit then that'll fill the whole visible area
        with content, making a clearWindow() call unnecessary.
        This call is a remnant from ages ago, and is well suited
        to disappear into nothingness.

        (There is still a clearWindow() call, with rect argument,
        which we continue using. This commit only removes the
        rect-less version.)

        * Api/BackingStore.cpp:
        * Api/BackingStore_p.h:
        (BackingStorePrivate):
        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::zoomAboutPoint):
        (BlackBerry::WebKit::WebPagePrivate::zoomBlock):

2012-07-17  Vivek Galatage  <vivekgalatage@gmail.com>

        Web Inspector: refactor InspectorController::connectFrontend() to accept InspectorFrontendChannel.
        https://bugs.webkit.org/show_bug.cgi?id=91196

        Reviewed by Pavel Feldman.

        Refactoring InspectorClients. InspectorClient::openInspectorFrontend
        now returning the InspectorFrontendChannel.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::WebPagePrivate):
        (BlackBerry::WebKit::WebPagePrivate::init):
        (BlackBerry::WebKit::WebPage::enableWebInspector):
        * Api/WebPage_p.h:
        (WebPagePrivate):
        * WebCoreSupport/InspectorClientBlackBerry.cpp:
        (WebCore::InspectorClientBlackBerry::openInspectorFrontend):
        * WebCoreSupport/InspectorClientBlackBerry.h:
        (InspectorClientBlackBerry):

2012-07-17  Chris Guan  <chris.guan@torchmobile.com.cn>

        [BlackBerry] Enable registerProtocolHandler for Blackberry
        https://bugs.webkit.org/show_bug.cgi?id=90422

        Reviewed by George Staikos.

        Implements APIs were added in Custom Scheme Handler specification
        which is at http://dev.w3.org/html5/spec/Overview.html#custom-handlers.

        Test cases:
        fast/dom/register-protocol-handler.html
        fast/dom/unregister-protocol-handler.html

        * Api/WebPageClient.h:
        * WebCoreSupport/ChromeClientBlackBerry.cpp:
        (WebCore::ChromeClientBlackBerry::isProtocolHandlerRegistered):
        (WebCore::ChromeClientBlackBerry::unregisterProtocolHandler):
        (WebCore::ChromeClientBlackBerry::registerProtocolHandler):
        * WebCoreSupport/ChromeClientBlackBerry.h:
        (ChromeClientBlackBerry):

2012-07-16  Benjamin C Meyer  <bmeyer@rim.com>

        Any webpage can crash webkit via qnx.callExtensionMethod assuming 'this' is the 'qnx' object.
        https://bugs.webkit.org/show_bug.cgi?id=91419

        Run the following in inspector to crash WebKit

        qnx.callExtensionMethod.apply(window, []);

        In the c++ that handles the function it assumes that when callExtensionMethod
        is called that 'this' is the object 'qnx'.  The qnx object has a hidden
        variable that the code casts and uses, but when 'this' is not qnx such as the
        example this will cause a crash.  Any website can insert the above JavaScript
        to cause the crash.

        Reviewed by Yong Li.

        * WebCoreSupport/ClientExtension.cpp:
        (clientExtensionMethod):

2012-07-16  Yong Li  <yoli@rim.com>

        [BlackBerry] Improve about:memory page
        https://bugs.webkit.org/show_bug.cgi?id=87676

        Reviewed by Rob Buis.

        Add a table for process memory usage summary for easy read.

        * WebCoreSupport/AboutData.cpp:
        (WebCore::memoryPage):

2012-07-16  Kihong Kwon  <kihong.kwon@samsung.com>

        Remove setController from BatteryClient
        https://bugs.webkit.org/show_bug.cgi?id=90944

        Reviewed by Adam Barth.

        BatteryClient doesn't need to keep m_controller,
        because BatteryController can be accessed using BatteryController::from().
        Remove m_controller and Add webPagePrivate to BatteryClientBlackBerry.
        And change all m_controller to BatteryController::from.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::init):
        * WebCoreSupport/BatteryClientBlackBerry.cpp:
        (WebCore::BatteryClientBlackBerry::BatteryClientBlackBerry):
        (WebCore::BatteryClientBlackBerry::onLevelChange):
        (WebCore::BatteryClientBlackBerry::onChargingChange):
        (WebCore::BatteryClientBlackBerry::onChargingTimeChange):
        (WebCore::BatteryClientBlackBerry::onDischargingTimeChange):
        * WebCoreSupport/BatteryClientBlackBerry.h:
        (BatteryClientBlackBerry):

2012-07-16  Yongxin Dai  <yodai@rim.com>

        [BlackBerry] Text selection with touch hold does not start on text field in some cases
        https://bugs.webkit.org/show_bug.cgi?id=91267

        Reviewed by Antonio Gomes.

        Input fields host node is by spec non-editable unless the field itself has content editable enabled.
        We enable selection if the shadow tree for the input field is selectable.
        PR # 173450

        Reviewed Internally by Mike Fenton.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::webContext):
        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::webContext):

2012-07-15  Jonathan Dong  <jonathan.dong@torchmobile.com.cn>

        [BlackBerry] Move icon database to application data directory.
        https://bugs.webkit.org/show_bug.cgi?id=91195

        Reviewed by Rob Buis.

        RIM PR: 156852
        Create icon database in application data directory instead of
        database or local storage directory, by doing this we can make
        things easier when clearing database or local storage data files.

        Internally reviewed by Charles Wei <charles.wei@torchmobile.com.cn>

        * WebCoreSupport/IconDatabaseClientBlackBerry.cpp:
        (WebCore::IconDatabaseClientBlackBerry::initIconDatabase):

2012-07-13  Xianzhu Wang  <wangxianzhu@chromium.org>

        Move WebCore/platform/text/Base64 to WTF/wtf/text
        https://bugs.webkit.org/show_bug.cgi?id=91162

        Reviewed by Adam Barth.

        * Api/WebKitTextCodec.cpp:
        (BlackBerry::WebKit::base64DecodePolicyForWTF):
        (BlackBerry::WebKit::base64Decode):
        (BlackBerry::WebKit::base64EncodePolicyForWTF):
        (BlackBerry::WebKit::base64Encode):
        * Api/WebSettings.cpp:
        (BlackBerry::WebKit::WebSettings::setUserStyleSheetString):
        * WebCoreSupport/FrameLoaderClientBlackBerry.cpp:

2012-07-13  George Staikos  <staikos@webkit.org>

        [BlackBerry] Fix crash due to unguarded use of renderer in select
        popup.
        https://bugs.webkit.org/show_bug.cgi?id=91287

        Reviewed by Rob Buis.

        No known testcase for this.  Found in the wild.

        * WebCoreSupport/SelectPopupClient.cpp:
        (WebCore::SelectPopupClient::setValueAndClosePopup):

2012-07-13  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] Add support for attributes to define keyboard and enter key type on the Virtual Keyboard
        https://bugs.webkit.org/show_bug.cgi?id=91248

        Reviewed by Antonio Gomes.

        PR 174733.

        Add data-blackberry-virtual-keyboard-type and
        data-blackberry-virtual-keyboard-enter-key to
        enable configuration of the desired virtual keyboard
        using element attributes.

        Reviewed Internally by Gen Mak.

        * Api/WebPageClient.h:
        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::convertStringToKeyboardType):
        (WebKit):
        (BlackBerry::WebKit::keyboardTypeAttribute):
        (BlackBerry::WebKit::convertStringToKeyboardEnterKeyType):
        (BlackBerry::WebKit::keyboardEnterKeyTypeAttribute):
        (BlackBerry::WebKit::InputHandler::setElementFocused):

2012-07-13  Jacky Jiang  <zhajiang@rim.com>

        [BlackBerry] resetBitmapZoomScale called while zooming preventing pinch zoom
        https://bugs.webkit.org/show_bug.cgi?id=91247

        Reviewed by Antonio Gomes.

        PR: 175432
        On yahoo.com, the web page stopped zooming while trying to pinch as
        WebPageClient::resetBitmapZoomScale(double) was being called by
        WebPagePrivate::zoomToInitialScaleOnLoad() after load finished.
        And also yahoo.com was keeping updating layout, which made it really
        bad that zoomToInitialScaleOnLoad() was called many times when load
        finished and the load type was FrameLoadTypeStandard or FrameLoadTypeSame.
        As we only care about the situation that dispatchDidFirstVisuallyNonEmptyLayout()
        happens after load finished, we can move the code to that method and
        set a flag for WebPage layoutFinished() and zoomToInitialScaleOnLoad()
        instead. In this way, we can ensure that the flag is only enabled when
        dispatchDidFirstVisuallyNonEmptyLayout() is called after load finished
        and get rid of calling zoomToInitialScaleOnLoad() lots of times when
        keeping updating layout in such kind of situation.

        Internally reviewed by Arvid Nilsson

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::WebPagePrivate):
        (BlackBerry::WebKit::WebPagePrivate::setLoadState):
        (BlackBerry::WebKit::WebPagePrivate::layoutFinished):
        * Api/WebPage_p.h:
        (BlackBerry::WebKit::WebPagePrivate::shouldZoomToInitialScaleOnLoad):
        (BlackBerry::WebKit::WebPagePrivate::setShouldZoomToInitialScaleAfterLoadFinished):
        (WebPagePrivate):
        * WebCoreSupport/FrameLoaderClientBlackBerry.cpp:
        (WebCore::FrameLoaderClientBlackBerry::dispatchDidFirstVisuallyNonEmptyLayout):

2012-07-13  Jakob Petsovits  <jpetsovits@rim.com>

        [BlackBerry] Use fillBuffer() instead of a user-defined background image.
        https://bugs.webkit.org/show_bug.cgi?id=91180
        RIM PR 171458

        Reviewed by Rob Buis.
        Internally reviewed by Andrew Lo.

        By using Platform::Graphics::fillBuffer() to fill the
        overscroll area, we save graphics memory for the buffer
        that the background image was occupying.

        Also adapt checkerboard drawing as it is now done using
        fillBuffer() which replaces checkerBuffer().

        In the same go, use the opportunity of the WebSettings
        API change to make it more consistent, renaming the
        OverZoomColor setting to OverScrollColor.

        * Api/BackingStore.cpp:
        (WebKit):
        (BlackBerry::WebKit::BackingStorePrivate::paintDefaultBackground):
        (BlackBerry::WebKit::BackingStorePrivate::blitContents):
        (BlackBerry::WebKit::BackingStorePrivate::fillWindow):
        * Api/BackingStore_p.h:
        (BackingStorePrivate):
        * Api/WebSettings.cpp:
        (WebKit):
        (BlackBerry::WebKit::WebSettings::standardSettings):
        (BlackBerry::WebKit::WebSettings::overScrollColor):
        (BlackBerry::WebKit::WebSettings::setOverScrollColor):
        (BlackBerry::WebKit::WebSettings::isEnableDefaultOverScrollBackground):
        (BlackBerry::WebKit::WebSettings::setEnableDefaultOverScrollBackground):
        * Api/WebSettings.h:

2012-07-13  Joshua Netterfield  <jnetterfield@rim.com>

        [BlackBerry] Update about:* pages
        https://bugs.webkit.org/show_bug.cgi?id=91121

        Reviewed by Yong Li.

        Update the about:config pages, and improve the aesthetics of the about:build, about:version, about:credits, about:memory, about:config, and similar pages.

        No new tests, because there is no new funtionality.

        * WebCoreSupport/AboutData.cpp:
        (WebCore):
        (WebCore::writeFeatures):
        (WebCore::numberToHTMLTr): Converted to template function, added bool specialization to write "true" and "false" instead of "1" and "0"
        (WebCore::configPage):
        (WebCore::memoryPage):
        * WebCoreSupport/AboutTemplate.html.cpp: Template for BlackBerry about:* pages.

2012-07-12  Benjamin C Meyer  <bmeyer@rim.com>

        WebPage::executeJavaScriptFunction crashes when there is an exception
        https://bugs.webkit.org/show_bug.cgi?id=91098
        RIM PR #149294

        When there is an exception currently the code tries to get the string of
        the exception via JSValueToStringCopy to pass back, but this cases a
        crash inside JavaScriptCore, so change it to simply return false and not
        set the return value with the exception string.

        Reviewed by George Staikos.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPage::executeJavaScriptFunction):

2012-07-12  Pawel Chomicki  <pchomicki@rim.com>

        [BlackBerry] WebPage::touchEvent() should use Platform::TouchEvent's toString() for debugging.
        https://bugs.webkit.org/show_bug.cgi?id=91002

        Reviewed by Antonio Gomes.
        Reviewed internally by Genevieve Mak.

        Updated DEBUG_TOUCH_EVENTS section of touchEvent method to utilize
        Platform::TouchEvent's toString method.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPage::touchEvent):

2012-07-12  Jonathan Dong  <jonathan.dong@torchmobile.com.cn>

        [BlackBerry] Cannot use digest proxy auth and NTLM auth at the same time
        https://bugs.webkit.org/show_bug.cgi?id=91054

        Reviewed by George Staikos.

        Implemented interface function syncProxyCredential() derived
        from class PageClientBlackBerry.

        Internally reviewed by Jason Liu <jason.liu@torchmobile.com.cn>

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::syncProxyCredential):
        (WebKit):
        * Api/WebPageClient.h:
        * Api/WebPage_p.h:
        (WebPagePrivate):

2012-07-11  Mike Lattanzio  <mlattanzio@rim.com>

        [BlackBerry] UserViewportArguments are not properly respected.
        https://bugs.webkit.org/show_bug.cgi?id=91005

        Reviewed by Rob Buis.

        PR# 170088.
        Move scale and zooming reset on Committed before applying
        the user viewport to avoid overriding it immediately.

        Internal review by Konrad Piascik, Jacky Jiang.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::setLoadState):

2012-07-11  Crystal Zhang  <haizhang@rim.com>

        [BlackBerry] Implement Date/Time picker
        https://bugs.webkit.org/show_bug.cgi?id=90911

        Reviewed by Rob Buis.

        Implement HTML Date/Time picker, also should delete popup when closing popup.

        * WebCoreSupport/ChromeClientBlackBerry.cpp:
        (WebCore::ChromeClientBlackBerry::closePagePopup):
        * WebCoreSupport/DatePickerClient.cpp: Added.
        (WebCore):
        (WebCore::DatePickerClient::DatePickerClient):
        (WebCore::DatePickerClient::~DatePickerClient):
        (WebCore::DatePickerClient::generateHTML):
        (WebCore::DatePickerClient::closePopup):
        (WebCore::DatePickerClient::contentSize):
        (WebCore::DatePickerClient::htmlSource):
        (WebCore::DatePickerClient::setValueAndClosePopup):
        (WebCore::DatePickerClient::didClosePopup):
        (WebCore::DatePickerClient::writeDocument):
        * WebCoreSupport/DatePickerClient.h: Added.
        (WebKit):
        (WebCore):
        (DatePickerClient):
        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::InputHandler::openDatePopup):

2012-07-10  Adam Barth  <abarth@webkit.org>

        WebCore::Settings for Hixie76 WebSocket protocol doesn't do anything and should be removed
        https://bugs.webkit.org/show_bug.cgi?id=90910

        Reviewed by Eric Seidel.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::init):

2012-07-10  Adam Barth  <abarth@webkit.org>

        LayoutTestController.dumpConfigurationForViewport should move to Internals
        https://bugs.webkit.org/show_bug.cgi?id=45652

        Reviewed by Eric Seidel.

        * WebKitSupport/DumpRenderTreeSupport.cpp:
        * WebKitSupport/DumpRenderTreeSupport.h:
        (DumpRenderTreeSupport):

2012-07-09  Yong Li  <yoli@rim.com>

        [BlackBerry] PagePopupBlackBerry::closePopup() should always clear the pointer in WebPagePrivate
        https://bugs.webkit.org/show_bug.cgi?id=90817

        Reviewed by Rob Buis.

        PR# 174085.
        PagePopupBlackBerry::closePopup() should always clear the pointer in WebPagePrivate to avoid crashes.
        This patch also removes unused variable m_parentPopup and its setter.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::WebPagePrivate): Remove m_parentPopup.
        * Api/WebPage_p.h:
        (WebPagePrivate):
        * WebCoreSupport/ChromeClientBlackBerry.cpp:
        (WebCore::ChromeClientBlackBerry::closePagePopup):
        * WebCoreSupport/PagePopupBlackBerry.cpp:
        (WebCore::PagePopupBlackBerry::init): Remove the setParentPopup() call.
        (WebCore::PagePopupBlackBerry::closePopup): Clear the reference in WebPagePrivate.
        * WebCoreSupport/SelectPopupClient.cpp:
        (WebCore::SelectPopupClient::setValueAndClosePopup): Add an assert for valid m_element.

2012-07-09  Mike Lattanzio  <mlattanzio@rim.com>

        [BlackBerry] meta viewport initial-scale doesn't factor in device pixel ratio
        https://bugs.webkit.org/show_bug.cgi?id=90575

        Reviewed by Rob Buis.

        Refactor meta viewport handling to multiply the developer
        specified scale properties by the devicePixelRatio. This
        required moving the setting of these values until after
        the call to computeViewportAttributes.

        This fixes an isssue where content wider than the meta viewport
        would case a zoom-out-to-fit scenario because we misinterpreted
        the specified initial-scale.

        New test to verify wide content doesn't affect initial-scale:
        ManualTests/blackberry/meta-viewport-initial-scale-wide-content.html

        Internal review from Konrad Piascik, Arvid Nilsson.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::recomputeVirtualViewportFromViewportArguments):
        (BlackBerry::WebKit::WebPagePrivate::dispatchViewportPropertiesDidChange):

2012-07-07  George Staikos  <staikos@webkit.org>

        Detach animation clients properly if we clear the web page pointer.
        https://bugs.webkit.org/show_bug.cgi?id=90730

        Reviewed by Adam Treat.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::destroyCompositor):
        * Api/WebPageCompositor.cpp:
        (BlackBerry::WebKit::WebPageCompositorPrivate::WebPageCompositorPrivate):
        (BlackBerry::WebKit::WebPageCompositorPrivate::~WebPageCompositorPrivate):
        (WebKit):
        (BlackBerry::WebKit::WebPageCompositorPrivate::detach):
        (BlackBerry::WebKit::WebPageCompositorPrivate::setPage):
        * Api/WebPageCompositor_p.h:
        (WebPageCompositorPrivate):

2012-07-06  Max Feil  <mfeil@rim.com>

        [BlackBerry] exitFullScreenForElement() is not working for fullscreen elements in iframes
        https://bugs.webkit.org/show_bug.cgi?id=90327

        Reviewed by Antonio Gomes.

        Fix exit fullscreen problem for elements in iframes. The
        exitFullScreenForElement() call is passed a null element in
        this case, instead of the original element which entered
        fullscreen. If you look in Document.cpp you can see the
        exitFullScreenForElement() call being made on the topDocument
        (which has a null m_fullScreenElement) instead of the iframe's
        document.

        The Chromium and Windows ports get around this problem by
        storing either the fullscreen element or its frame during
        enterFullScreenForElement(), so I will bring the BlackBerry port
        in line with this. See also bug 89817.

        * WebCoreSupport/ChromeClientBlackBerry.cpp:
        (WebCore::ChromeClientBlackBerry::enterFullScreenForElement):
        (WebCore::ChromeClientBlackBerry::exitFullScreenForElement):
        * WebCoreSupport/ChromeClientBlackBerry.h:
        (ChromeClientBlackBerry):

2012-07-06  Benjamin C Meyer  <bmeyer@rim.com>

        Add an API to explicitly call a JavaScript function with args.
        https://bugs.webkit.org/show_bug.cgi?id=90694

        Currently the Blackberry port doesn't expose the JavaScript
        engine to 3rd parties so they rely upon executeJavaScript
        which can be slower than necessary and unsafe as eval is used.
        This new API provides a way to explicitly call a specific
        JavaScript function with a list of args preventing the case
        where an argument comes from a untrusted source and tries to
        escape the arg list to take control of the JavaScript engine.

        In the future if the Blackberry port introduces a formal
        way to interact with the JavaScript engine this function should
        be removed.

        PR 149294

        Reviewed by Unreviewed

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPage::executeJavaScriptFunction):
        (WebKit):
        * Api/WebPage.h:

2012-07-05  Charles Wei  <charles.wei@torchmobile.com.cn>

        [BlackBerry] Fix the build error introduced by enabling CUSTOM_THEME_HANDLER
        https://bugs.webkit.org/show_bug.cgi?id=90588

        Reviewed by Rob Buis.

        Fix the build error introduced by enabling CUSTOM_THEME_HANDLER.
        * WebCoreSupport/ChromeClientBlackBerry.cpp:
        (WebCore::ChromeClientBlackBerry::isProtocolHandlerRegistered):

2012-07-04  Hanna Ma  <Hanma@rim.com>

        [BlackBerry] Implement device metrics for blackberry.
        https://bugs.webkit.org/show_bug.cgi?id=90494
        RIM PR #159034

        Reviewed by Rob Buis.

        Implement calls to the application to change the device metrics for
        the web inspector.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::applySizeOverride):
        (WebKit):
        (BlackBerry::WebKit::WebPagePrivate::setTextZoomFactor):
        * Api/WebPage_p.h:
        (WebPagePrivate):
        * WebCoreSupport/InspectorClientBlackBerry.cpp:
        (WebCore::InspectorClientBlackBerry::InspectorClientBlackBerry):
        (WebCore::InspectorClientBlackBerry::canOverrideDeviceMetrics):
        (WebCore):
        (WebCore::InspectorClientBlackBerry::overrideDeviceMetrics):
        (WebCore::InspectorClientBlackBerry::supportsFrameInstrumentation):
        * WebCoreSupport/InspectorClientBlackBerry.h:
        (InspectorClientBlackBerry):

2012-07-03  Leo Yang  <leo.yang@torchmobile.com.cn>

        [BlackBerry] Checkerboard shown when clicking on error page buttons
        https://bugs.webkit.org/show_bug.cgi?id=90152
        RIM PR #161867

        Reviewed by George Staikos.

        r121514 just made the race occur in lower possibility but can't avoid it.
        This path is using another approach to fix the problem. When we are resetting
        backingstore while committing a page we need to suspend backingstore and
        screen update to make sure no other threads can update backingstore and screen.

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStorePrivate::resetTiles):
        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::setLoadState):

2012-07-03  George Staikos  <staikos@webkit.org>

        [BlackBerry] Enable Custom Scheme Handlers for BlackBerry.
        https://bugs.webkit.org/show_bug.cgi?id=90422

        Reviewed by Rob Buis.

        * WebCoreSupport/ChromeClientBlackBerry.cpp:
        (WebCore):
        (WebCore::ChromeClientBlackBerry::isProtocolHandlerRegistered):
        (WebCore::ChromeClientBlackBerry::unregisterProtocolHandler):
        * WebCoreSupport/ChromeClientBlackBerry.h:
        (ChromeClientBlackBerry):

2012-07-03  George Staikos  <staikos@webkit.org>

        [BlackBerry] Enable RegisterProtocolHandler for BlackBerry.
        https://bugs.webkit.org/show_bug.cgi?id=90422

        Reviewed by Rob Buis.

        * WebCoreSupport/ChromeClientBlackBerry.cpp:
        (WebCore):
        (WebCore::ChromeClientBlackBerry::registerProtocolHandler):
        * WebCoreSupport/ChromeClientBlackBerry.h:
        (ChromeClientBlackBerry):

2012-07-03  Jan Keromnes  <janx@linux.com>

        Web Inspector: WebInspector.TextViewer should be renamed WebInspector.TextEditor
        https://bugs.webkit.org/show_bug.cgi?id=89939

        Reviewed by Vsevolod Vlasov.

        * WebCoreSupport/inspectorBB.html:

2012-07-02  Xiaobo Wang  <xbwang@torchmobile.com.cn>

        [BlackBerry] Use PUBLIC_BUILD to enable/disable DRT
        https://bugs.webkit.org/show_bug.cgi?id=90271

        Reviewed by George Staikos.

        RIM PR #154707

        Currently DRT code will be compiled only if ENABLE_DRT is set, and it's not
        defined by default.
        We should enable DRT by default unless PUBLIC_BUILD is set. In this way we don't
        need to rebuild webkit before running DRT.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::~WebPagePrivate):
        (BlackBerry::WebKit::WebPagePrivate::init):
        (BlackBerry::WebKit::WebPagePrivate::authenticationChallenge):
        (BlackBerry::WebKit::WebPage::runLayoutTests):
        * WebCoreSupport/ChromeClientBlackBerry.cpp:
        (WebCore::ChromeClientBlackBerry::addMessageToConsole):
        (WebCore::ChromeClientBlackBerry::runJavaScriptAlert):
        (WebCore::ChromeClientBlackBerry::runJavaScriptConfirm):
        (WebCore::ChromeClientBlackBerry::runJavaScriptPrompt):
        (WebCore::ChromeClientBlackBerry::createWindow):
        (WebCore::ChromeClientBlackBerry::runBeforeUnloadConfirmPanel):
        (WebCore::ChromeClientBlackBerry::setStatusbarText):
        (WebCore::ChromeClientBlackBerry::exceededDatabaseQuota):
        (WebCore::ChromeClientBlackBerry::keyboardUIMode):

2012-07-02  George Staikos  <staikos@webkit.org>

        [BlackBerry] Implement cancelVibration, and make sure it's canceled on
        destruction.
        https://bugs.webkit.org/show_bug.cgi?id=90406

        Reviewed by Rob Buis.

        * WebCoreSupport/VibrationClientBlackBerry.cpp:
        (WebCore::VibrationClientBlackBerry::cancelVibration):
        (WebCore::VibrationClientBlackBerry::vibrationDestroyed):

2012-07-02  Benjamin Poulain  <bpoulain@apple.com>

        Do not do any logging initialization when logging is disabled
        https://bugs.webkit.org/show_bug.cgi?id=90228

        Reviewed by Simon Fraser.

        * Api/BlackBerryGlobal.cpp:
        (BlackBerry::WebKit::globalInitialize):

2012-07-01  George Staikos  <staikos@webkit.org>

        Clear visited links when clearing history.
        https://bugs.webkit.org/show_bug.cgi?id=90345

        Reviewed by Antonio Gomes.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPage::clearHistory):

2012-06-30  Jason Liu  <jason.liu@torchmobile.com.cn>

        [BlackBerry] WebView/Browser cause blank screen when selecting a dropdown field.
        https://bugs.webkit.org/show_bug.cgi?id=90241

        This issue is caused by single quotes in option's labels.
        We should use the escape character of single quotes in JavaScript's string which 
        starts and ends with single quotes.
        So we replace lablels' single quotes with its escape character during generating the 
        select popUp's HTML.

        Reviewed by George Staikos.

        * WebCoreSupport/SelectPopupClient.cpp:
        (WebCore::SelectPopupClient::generateHTML):

2012-06-30  Jakob Petsovits  <jpetsovits@rim.com>

        [BlackBerry] Allow surface resizing for use cases other than rotation.
        https://bugs.webkit.org/show_bug.cgi?id=90295
        RIM PR 171459

        Reviewed by George Staikos.

        A new API method setHasPendingSurfaceSizeChange() is
        introduced for that effect, and used inside of
        setViewportSize() to let the WebPageClient do the
        resizing. Methods are renamed to reflect that this
        is not exclusively meant for rotation anymore.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::WebPagePrivate):
        (BlackBerry::WebKit::WebPage::setScreenOrientation):
        (WebKit):
        (BlackBerry::WebKit::WebPage::setHasPendingSurfaceSizeChange):
        (BlackBerry::WebKit::WebPagePrivate::resizeSurfaceIfNeeded):
        (BlackBerry::WebKit::WebPagePrivate::setViewportSize):
        * Api/WebPage.h:
        * Api/WebPageClient.h:
        * Api/WebPage_p.h:
        (WebPagePrivate):

2012-06-29  Jacky Jiang  <zhajiang@rim.com>

        [BlackBerry] Page jumps after post-pinch-zoom re-render
        https://bugs.webkit.org/show_bug.cgi?id=90282

        Reviewed by Antonio Gomes.

        PR: 170255
        In r120622, we moved ScrollableArea::setConstrainsScrollingToContentEdge(false|true)
        from WebPage::setScrollPosition() to BackingStorePrivate::setScrollingOrZooming()
        to address an overscroll reset issue.
        However, when we are ending bitmap zooming, UI thread can call
        BackingStorePrivate::setScrollingOrZooming(false) before WebKit thread
        calls WebPage::setScrollPosition(), in which case it will set
        ScrollableArea::m_constrainsScrollingToContentEdge to true earlier.
        To fix this, we can cache ScrollableArea::m_constrainsScrollingToContentEdge
        and always set it to false before we set scroll position in WebKit
        thread to avoid scroll position clamping during scrolling, and restore
        it to what it was after that.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPage::setScrollPosition):

2012-06-29  Jakob Petsovits  <jpetsovits@rim.com>

        Add blitVisibleContents() as public API.
        https://bugs.webkit.org/show_bug.cgi?id=90211

        Reviewed by Adam Treat.

        We keep blitContents() (with src/dst rectangles)
        for compatibility with older Cascades sprints for now,
        but want to switch to always blitting the full viewport
        and this is a good first step.

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStorePrivate::blitVisibleContents):
        (BlackBerry::WebKit::BackingStore::blitVisibleContents):
        (WebKit):
        * Api/BackingStore.h:

2012-06-29  Konrad Piascik  <kpiascik@rim.com>

        Don't hardcode target dpi of 160 (it should be 96 on desktop)
        https://bugs.webkit.org/show_bug.cgi?id=88114

        Reviewed by Adam Barth.

        Added new WebSetting to specify what the devicePixelRatio should be.
        Updated the call to computeViewportAttributes.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::recomputeVirtualViewportFromViewportArguments):
        * Api/WebSettings.cpp:
        (WebKit):
        (BlackBerry::WebKit::WebSettings::standardSettings):
        (BlackBerry::WebKit::WebSettings::devicePixelRatio):
        (BlackBerry::WebKit::WebSettings::setDevicePixelRatio):
        * Api/WebSettings.h:
        * WebKitSupport/DumpRenderTreeSupport.cpp:
        (DumpRenderTreeSupport::dumpConfigurationForViewport):

2012-06-28  Jason Liu  <jason.liu@torchmobile.com.cn>

        [BlackBerry] Selection items show as garbage for non-ascii characters.
        https://bugs.webkit.org/show_bug.cgi?id=89969

        Add charset utf-8 to the select popup's page.

        Reviewed by Antonio Gomes.

        * WebCoreSupport/SelectPopupClient.cpp:
        (WebCore::SelectPopupClient::generateHTML):

2012-06-28  Leo Yang  <leo.yang@torchmobile.com.cn>

        [BlackBerry] Checkerboard shown when clicking on error page buttons
        https://bugs.webkit.org/show_bug.cgi?id=90152
        RIM PR #161867

        Reviewed by George Staikos.

        Reset m_hasBlitJobs when resetting tiles to prevent ui thread from drawing checkerboard unintentionally.

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStorePrivate::resetTiles):

2012-06-27  Andrew Lo  <anlo@rim.com>

        [BlackBerry] Selection overlay can become visible after it has been hidden
        https://bugs.webkit.org/show_bug.cgi?id=90105

        Reviewed by George Staikos.

        When SelectionOverlay::hide is called from UI thread,
        rather than setting the override opacity, dispatch to the
        WebKit thread, which removes the overlay (normal case).

        Internal PR164183.
        Internally Reviewed by: Arvid Nilsson.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::~WebPagePrivate):
        (BlackBerry::WebKit::WebPage::selectionOverlay):
        * Api/WebPage_p.h:
        (WebPagePrivate):
        * Api/WebSelectionOverlay.h:
        * WebKitSupport/SelectionOverlay.cpp:
        (BlackBerry::WebKit::SelectionOverlay::SelectionOverlay):
        (BlackBerry::WebKit::SelectionOverlay::hide):
        * WebKitSupport/SelectionOverlay.h:
        (BlackBerry::WebKit::SelectionOverlay::create):
        (SelectionOverlay):

2012-06-25  Mark Hahnenberg  <mhahnenberg@apple.com>

        JSLock should be per-JSGlobalData
        https://bugs.webkit.org/show_bug.cgi?id=89123

        Reviewed by Geoffrey Garen.

        Changed all sites that used JSLock to instead use the new JSLockHolder
        and pass in the correct JS context that the code is about to interact with that 
        needs protection. Also added a couple JSLocks to places that didn't already 
        have it that needed it.

        * Api/BlackBerryGlobal.cpp:
        (BlackBerry::WebKit::clearMemoryCaches):
        * WebCoreSupport/ClientExtension.cpp:
        * WebCoreSupport/PagePopupBlackBerry.cpp:
        (WebCore::PagePopupBlackBerry::installDomFunction):
        * WebKitSupport/DumpRenderTreeSupport.cpp:
        (DumpRenderTreeSupport::computedStyleIncludingVisitedInfo):

2012-06-27  Jacky Jiang  <zhajiang@rim.com>

        [BlackBerry] Wrong scale after leaving fullscreen <video>
        https://bugs.webkit.org/show_bug.cgi?id=89546

        Reviewed by Antonio Gomes.

        PR: 164948
        When we were entering fullscreen, the current scale A was clamped to a
        greater minimum scale B as we relayouted the contents during the change
        of the viewport size. When leaving fullscreen, we still used that scale
        B as the current scale which was incorrect.
        To fix this, we can save the current scale when entering fullscreen and
        restore it when leaving fullscreen.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::WebPagePrivate):
        (BlackBerry::WebKit::WebPagePrivate::enterFullScreenForElement):
        (BlackBerry::WebKit::WebPagePrivate::exitFullScreenForElement):
        * Api/WebPage_p.h:
        (WebPagePrivate):

2012-06-27  Jacky Jiang  <zhajiang@rim.com>

        [BlackBerry] Scale was incorrect when reloading a simple web page after initial load
        https://bugs.webkit.org/show_bug.cgi?id=88889

        Reviewed by Antonio Gomes.

        PR: 164442
        For FrameLoadTypeStandard load, the layout timer can be fired which can
        call dispatchDidFirstVisuallyNonEmptyLayout() after the load Finished
        state, in which case the web page will have no chance to zoom to
        initial scale. We should give it a chance as well as FrameLoadTypeSame
        load.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::shouldZoomToInitialScaleOnLoad):

2012-06-26  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] Add WebPage interface for Async spell check.
        https://bugs.webkit.org/show_bug.cgi?id=89999

        Reviewed by Rob Buis.

        PR 124517.

        Add interface for IMS async spell checking.

        Reviewed Internally by Nima Ghanavatian.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPage::spellCheckingRequestProcessed):
        (WebKit):
        * Api/WebPage.h:
        * Api/WebPageClient.h:
        * WebKitSupport/InputHandler.cpp:
        (WebKit):
        (BlackBerry::WebKit::InputHandler::spellCheckingRequestProcessed):
        * WebKitSupport/InputHandler.h:
        (InputHandler):

2012-06-26  Jonathan Dong  <jonathan.dong@torchmobile.com.cn>

        [BlackBerry] Limit session storage quota to 5MB by default
        https://bugs.webkit.org/show_bug.cgi?id=89941

        Reviewed by Rob Buis.

        Limit session storage quota to 5MB by default for BlackBerry
        porting.
        Internally reviewed by George Staikos.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::didChangeSettings):
        * Api/WebSettings.cpp:
        (WebKit):
        (BlackBerry::WebKit::WebSettings::standardSettings):
        (BlackBerry::WebKit::WebSettings::sessionStorageQuota):
        (BlackBerry::WebKit::WebSettings::setSessionStorageQuota):
        * Api/WebSettings.h:

2012-06-26  Charles Wei  <charles.wei@torchmobile.com.cn>

        [BlackBerry] Use gesture SwipeDown to exit fullscreen for both video and plugin.
        https://bugs.webkit.org/show_bug.cgi?id=89960

        Reviewed by Antonio Gomes.

        We used to use gesture swipedown to exit fullscreen for plugin, but not fullscreen
        HTML5 video; When a swipe down happens, it applies this event to all the pluginviews
        in a page, even though only the one in fullscreen mode will process this.

        With this patch, the SwipeDown gesture will only apply to the fullscreen elemement,
        which is either a plugin, or an Video element.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPage::notifySwipeEvent):

2012-06-25  Leo Yang  <leo.yang@torchmobile.com.cn>

        [BlackBerry] Fill more data in device motion event
        https://bugs.webkit.org/show_bug.cgi?id=89857

        Reviewed by Antonio Gomes.

        Reviewed internally by Robin Cao.

        Fill acceleration and rotation rate into DeviceMotionData.

        * WebCoreSupport/DeviceMotionClientBlackBerry.cpp:
        (DeviceMotionClientBlackBerry::onMotion):

2012-06-25  Yong Li  <yoli@rim.com>

        [BlackBerry] Add JSC statistics into about:memory
        https://bugs.webkit.org/show_bug.cgi?id=89779

        Reviewed by Rob Buis.

        Add detailed JS memory statistics to about:memory page.

        * WebCoreSupport/AboutData.cpp:
        (WebCore::dumpJSCTypeCountSetToTableHTML):
        (WebCore):
        (WebCore::memoryPage):

2012-06-25  Crystal Zhang  <haizhang@rim.com>

        [BlackBerry] Use AIR controls if client doesn't support HTML control
        https://bugs.webkit.org/show_bug.cgi?id=89777

        Reviewed by Yong Li.

        Currently HTML controls depend on client implementing CreateWindow event, for those clients
        that don't implement CreateWindow event, use old AIR controls so we don't break them.

        PR 163818.

        Internal reviewed by Mike Fenton.

        * Api/WebPageClient.h:
        * WebCoreSupport/ChromeClientBlackBerry.cpp:
        (WebCore::ChromeClientBlackBerry::openPagePopup):
        * WebCoreSupport/PagePopupBlackBerry.cpp:
        (WebCore::PagePopupBlackBerry::sendCreatePopupWebViewRequest):
        * WebCoreSupport/PagePopupBlackBerry.h:
        (PagePopupBlackBerry):
        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::InputHandler::openSelectPopup):

2012-06-25  Rob Buis  <rbuis@rim.com>

        [BlackBerry] Require text editable element to be enabled for VKB
        https://bugs.webkit.org/show_bug.cgi?id=89876

        Reviewed by Yong Li.

        After bug 58837 got in, children of <fieldset> now can inherit the disabled
        state of the fieldset. When trying for instance fast/forms/fieldset/fieldset-disabled.html,
        it can be seen that when they are visually disabled, the input handling can still be triggered. So
        add an extra check to isTextBasedContentEditableElement that the element is enabled.

        Reviewed internally by Mike Fenton.

        * WebKitSupport/DOMSupport.cpp:
        (BlackBerry::WebKit::DOMSupport::isTextBasedContentEditableElement):

2012-06-24  Simon Fraser  <simon.fraser@apple.com>

        Rename isPositioned to isOutOfFlowPositioned for clarity
        https://bugs.webkit.org/show_bug.cgi?id=89836

        Reviewed by Antti Koivisto.
        
        RenderObject and RenderStyle had an isPositioned() method that was
        confusing, because it excluded relative positioning. Rename to 
        isOutOfFlowPositioned(), which makes it clearer that it only applies
        to absolute and fixed positioning.

        Simple rename; no behavior change.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::isPositionedContainer):
        (BlackBerry::WebKit::isNonRenderViewFixedPositionedContainer):
        (BlackBerry::WebKit::isFixedPositionedContainer):

2012-06-23  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r121058.
        http://trac.webkit.org/changeset/121058
        https://bugs.webkit.org/show_bug.cgi?id=89809

        Patch causes plugins tests to crash in GTK debug builds
        (Requested by zdobersek on #webkit).

        * Api/BlackBerryGlobal.cpp:
        (BlackBerry::WebKit::clearMemoryCaches):
        * WebCoreSupport/ClientExtension.cpp:
        * WebCoreSupport/PagePopupBlackBerry.cpp:
        (WebCore::PagePopupBlackBerry::installDomFunction):
        * WebKitSupport/DumpRenderTreeSupport.cpp:
        (DumpRenderTreeSupport::computedStyleIncludingVisitedInfo):

2012-06-20  Mark Hahnenberg  <mhahnenberg@apple.com>

        JSLock should be per-JSGlobalData
        https://bugs.webkit.org/show_bug.cgi?id=89123

        Reviewed by Gavin Barraclough.

        Changed all sites that used JSLock to instead use the new JSLockHolder
        and pass in the correct JS context that the code is about to interact with that 
        needs protection.

        * Api/BlackBerryGlobal.cpp:
        (BlackBerry::WebKit::clearMemoryCaches):
        * WebCoreSupport/ClientExtension.cpp:
        * WebCoreSupport/PagePopupBlackBerry.cpp:
        (WebCore::PagePopupBlackBerry::installDomFunction):
        * WebKitSupport/DumpRenderTreeSupport.cpp:
        (DumpRenderTreeSupport::computedStyleIncludingVisitedInfo):

2012-06-22  Andrew Lo  <anlo@rim.com>

        [BlackBerry] Tap highlight fade animations are added to overlay continuously during pinch zoom.
        https://bugs.webkit.org/show_bug.cgi?id=89772

        Reviewed by Antonio Gomes.

        When pinch zooming, DefaultTapHighlight::hide is continuously
        called from the UI thread. This resulted in fade animations being
        created and added to the override overlay continuously.

        This patch moves the m_visible check so that it applies for both
        threads.

        Internal PR164183

        * WebKitSupport/DefaultTapHighlight.cpp:
        (BlackBerry::WebKit::DefaultTapHighlight::draw):
        (BlackBerry::WebKit::DefaultTapHighlight::hide):
        * WebKitSupport/DefaultTapHighlight.h:
        (DefaultTapHighlight):

2012-06-22  Yong Li  <yoli@rim.com>

        [BlackBerry] Set WebSecurityEnabled flag accordingly.
        https://bugs.webkit.org/show_bug.cgi?id=89602

        Reviewed by Rob Buis.

        Disable web security checks if needed.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::init):
        (BlackBerry::WebKit::WebPagePrivate::didChangeSettings):

2012-06-22  Parth Patel  <parpatel@rim.com>

        [Blackberry] BlackBerry::Platform::Settings::get() rename to BlackBerry::Platform::Settings::instance() to make it consistent with our other singletons
        https://bugs.webkit.org/show_bug.cgi?id=89684

        Reviewed by Yong Li.

        Build Fix-Typo Update setting instance access to use instance() instead of get().

        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::InputHandler::isInputModeEnabled):

2012-06-22  Amy Ousterhout  <aousterh@chromium.org>

        Renamed DeviceOrientation to DeviceOrientationData
        https://bugs.webkit.org/show_bug.cgi?id=88663

        Reviewed by Steve Block.

        Updated files to use the renamed DeviceOrientationData instead of DeviceOrientation.
        This change makes DeviceOrientationData consistent with DeviceMotionData.

        * WebCoreSupport/DeviceOrientationClientBlackBerry.h:
        (DeviceOrientationClientBlackBerry):

2012-06-22  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: InspectorState::updateCookie should not do JSON serialization if unsupported
        https://bugs.webkit.org/show_bug.cgi?id=89743

        Reviewed by Yury Semikhatsky.

        * WebCoreSupport/InspectorClientBlackBerry.cpp:
        (WebCore::InspectorClientBlackBerry::updateInspectorStateCookie):

2012-06-21  Parth Patel  <parpatel@rim.com>

        [Blackberry] BlackBerry::Platform::Settings::get() rename to BlackBerry::Platform::Settings::instance() to make it consistent with our other singletons
        https://bugs.webkit.org/show_bug.cgi?id=89684

        Reviewed by Yong Li.
   
        Update setting instance access to use instance() instead of get().

        * Api/BlackBerryGlobal.cpp:
        (BlackBerry::WebKit::globalInitialize):
        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::init):
        (BlackBerry::WebKit::WebPagePrivate::shouldSendResizeEvent):
        * WebCoreSupport/AboutData.cpp:
        (WebCore::configPage):
        * WebCoreSupport/CacheClientBlackBerry.cpp:
        (WebCore::CacheClientBlackBerry::updateCacheCapacity):
        * WebKitSupport/FatFingers.cpp:
        (BlackBerry::WebKit::FatFingers::getPaddings):
        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::InputHandler::isInputModeEnabled):
        (BlackBerry::WebKit::InputHandler::setInputModeEnabled):
        (BlackBerry::WebKit::InputHandler::ensureFocusTextElementVisible):
        * WebKitSupport/SurfacePool.cpp:
        (BlackBerry::WebKit::SurfacePool::initialize):

2012-06-21  Genevieve Mak  <gmak@rim.com>

        Add a parameter to handletTouchPoint to bypass FatFingers
        on touch up. There are some cases where the user may drag
        their finger off the element and we want to use the actual
        touch point instead of the FatFingers adjusted point.
        https://bugs.webkit.org/show_bug.cgi?id=89677

        Reviewed by Antonio Gomes.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPage::touchPointAsMouseEvent):
        * Api/WebPage.h:
        * WebKitSupport/TouchEventHandler.cpp:
        (BlackBerry::WebKit::TouchEventHandler::handleTouchPoint):
        * WebKitSupport/TouchEventHandler.h:
        (TouchEventHandler):

2012-06-21  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] Input mode should adapt automatically to settings changes
        https://bugs.webkit.org/show_bug.cgi?id=89595

        Reviewed by Antonio Gomes.

        PR 167540.

        Add helper function to check if input is enabled so that
        the override settings can be applied at any time.

        Reviewed Internally by Gen Mak.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::setLoadState):
        (BlackBerry::WebKit::WebPagePrivate::handleMouseEvent):
        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::InputHandler::isInputModeEnabled):
        (BlackBerry::WebKit::InputHandler::setInputModeEnabled):
        (BlackBerry::WebKit::InputHandler::setElementFocused):
        (BlackBerry::WebKit::InputHandler::ensureFocusTextElementVisible):
        (BlackBerry::WebKit::InputHandler::notifyClientOfKeyboardVisibilityChange):
        (BlackBerry::WebKit::InputHandler::handleKeyboardInput):
        (BlackBerry::WebKit::InputHandler::setComposingText):
        * WebKitSupport/InputHandler.h:
        * WebKitSupport/TouchEventHandler.cpp:
        (BlackBerry::WebKit::TouchEventHandler::handleTouchPoint):

2012-06-20  Jacky Jiang  <zhajiang@rim.com>

        Add a != operator to ViewportArguments
        https://bugs.webkit.org/show_bug.cgi?id=87505

        Reviewed by Antonio Gomes.
        Patch by Jacky Jiang  <zhajiang@rim.com>

        Use != operator of ViewportArguments.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::setLoadState):
        (BlackBerry::WebKit::WebPagePrivate::setViewportSize):
        * Api/WebViewportArguments.cpp:
        (BlackBerry::WebKit::WebViewportArguments::operator!=):

2012-06-20  Christopher Hutten-Czapski  <chutten@rim.com>

        [BlackBerry] Add an API to immediately enable cross-site XHR
        https://bugs.webkit.org/show_bug.cgi?id=89594

        Internally Reviewed by Yong Li.
        Reviewed by Rob Buis.

        There is no API to disable it as clients may rely on legacy behaviour
        of not disabling until the next frame load.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::enableCrossSiteXHRRecursively):
        (WebKit):
        (BlackBerry::WebKit::WebPagePrivate::enableCrossSiteXHR):
        (BlackBerry::WebKit::WebPage::enableCrossSiteXHR):
        * Api/WebPage.h:
        * Api/WebPage_p.h:
        (WebPagePrivate):

2012-06-20  Konrad Piascik  <kpiascik@rim.com>

        [BlackBerry] Enable setAcceleratedCompositingForFixedPositionEnabled
        https://bugs.webkit.org/show_bug.cgi?id=89575

        Reviewed by Antonio Gomes.

        Enable the flag so that we get position:fixed elemetns to be rendered
        using accelerated compositing.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::init):

2012-06-20  Julien Chaffraix  <jchaffraix@webkit.org>

        Use IntSize in RenderLayer to represent scroll offsets
        https://bugs.webkit.org/show_bug.cgi?id=89154

        Reviewed by Eric Seidel.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::scrollRenderer):
        Updated to pass an IntSize to scrollToOffset.

2012-06-19  Yong Li  <yoli@rim.com>

        [BlackBerry] Should check the return value of fromUTF8() before executing the script.
        https://bugs.webkit.org/show_bug.cgi?id=89500

        Reviewed by Rob Buis.
        PR# 166623.

        WebPagePrivate::executeJavaScript() should check the return value of fromUTF8()
        before executing the script to avoid potential crash on invalid script source.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::executeJavaScript):

2012-06-19  Jakob Petsovits  <jpetsovits@rim.com>

        [BlackBerry] Missing notifyContentRendered() when resuming rendering
        https://bugs.webkit.org/show_bug.cgi?id=89507
        RIM PR 150049

        Reviewed by Antonio Gomes.

        All the current calls to notifyContentRendered() are
        located in the RenderQueue, but this omits the case
        when we force rendering from resumeBackingStore()
        after rendering had been suspended for a while.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::resumeBackingStore):

2012-06-19  Sergio Villar Senin  <svillar@igalia.com>

        Calling nativeImageForCurrentFrame() causes assertion failure: m_verifier.isSafeToUse()
        https://bugs.webkit.org/show_bug.cgi?id=67582

        Reviewed by David Levin.

        Use synchronousNativeIconForPageURL() to retrieve favicons.

        * WebCoreSupport/FrameLoaderClientBlackBerry.cpp:
        (WebCore::FrameLoaderClientBlackBerry::dispatchDidReceiveIcon):

2012-06-18  Antonio Gomes  <agomes@rim.com>

       [BlackBerry] Overscroll can get reset while interacting with a page, due to style recalculations and scroll position clamping
       https://bugs.webkit.org/show_bug.cgi?id=89371
       PR #166982

       Reviewed by Adam Treat.

       While scrolling, the WebKit thread gets intercalated WebPage::setScrollPosition
       calls dispatched from the UI thread. These calls are wrapped with
       ScrollableArea::setConstrainsScrollingToContentEdge(false|true) calls, which
       can clamp the scroll position (removes overscroll) if set to 'true'.

       The following situation can happen: user is scrolling, and WebKit
       thread is not in the middle of a WebPage::setScrollPosition call
       (so setConstrainsScrollingToContentEdge is 'true'), and a relayout happens.
       In this scenario, the scroll position will get clamped to 0,0, removing any
       possible overscrolling.

       See the stack trace below, paying special attention to frame 16:
       #0  ScrollHandlerUserInterfaceThread::updateScrollPosition
       #1  0x782b4a3e in WebPageClientImpl::scrollChanged
       #2  0x78147484 in BlackBerry::WebKit::WebPagePrivate::notifyTransformedScrollChanged
       #3  0x78171f68 in BlackBerry::WebKit::BackingStoreClient::checkOriginOfCurrentScrollOperation
       #4  0x7816480a in WebCore::ChromeClientBlackBerry::scroll
       #5  0x7a78b290 in WebCore::Chrome::scroll
       #6  0x7a7ac8d0 in WebCore::FrameView::scrollContentsFastPath
       #7  0x7a7eba72 in WebCore::ScrollView::scrollContents
       #8  0x7a7ebb34 in WebCore::ScrollView::scrollTo
       #9  0x7a7a8dae in WebCore::FrameView::scrollTo
       #10 0x7a7e966e in WebCore::ScrollView::setScrollOffset
       #11 0x7a7e77cc in WebCore::ScrollableArea::scrollPositionChanged
       #12 0x7a7e7048 in WebCore::ScrollAnimator::notifyPositionChanged
       #13 0x7a7e700c in WebCore::ScrollAnimator::scrollToOffsetWithoutAnimation
       #14 0x7a7e7588 in WebCore::ScrollableArea::scrollToOffsetWithoutAnimation
       #16 WebCore::ScrollView::updateScrollbars
       #18 WebCore::ScrollView::setContentsSize
       #19 0x7a7accd8 in WebCore::FrameView::setContentsSize
       #20 0x7a7a85f4 in WebCore::FrameView::adjustViewSize
       #22 WebCore::FrameView::layout
       #23 0x7a59d66e in WebCore::Document::updateLayoutIgnorePendingStylesheets
       #24 0x7a5ada92 in WebCore::Element::offsetHeight
       #25 0x7ab226b6 in WebCore::jsElementOffsetHeight
       #27 JSC::JSValue::get
       #28 0x796dd662 in JSC::JITStubThunked_op_get_by_id_generic

       Patch fixes this issue by tying ScrollableArea::setConstrainsScrollingToContentEdge
       to BackingStore::m_isZoomingOrScrolling, when we are sure clamping should not happen.

       * Api/BackingStore.cpp:
       (BlackBerry::WebKit::BackingStorePrivate::setScrollingOrZooming):
       * Api/WebPage.cpp:
       (BlackBerry::WebKit::WebPage::setScrollPosition):

2012-06-15  Eli Fidler  <efidler@rim.com>

        [BlackBerry] Use platform font settings for the standard settings.
        https://bugs.webkit.org/show_bug.cgi?id=89232

        Reviewed by Rob Buis.

        RIM PR 159708

        * Api/WebSettings.cpp:
        (BlackBerry::WebKit::WebSettings::standardSettings):

2012-06-15  Crystal Zhang  <haizhang@rim.com>

        [BlackBerry] Remove touch events handling hook for popup
        https://bugs.webkit.org/show_bug.cgi?id=89245

        Reviewed by Rob Buis.

        In the old patches we create our own WebPage for popup, so we need to hook up our own
        touch handling functions, since we don't use our own WebPage any more, no need to keep
        the touch handling code, because it just does nothing other than passing out the events
        which might cause the touch events being handled twice.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::handleMouseEvent):
        * WebCoreSupport/PagePopupBlackBerry.cpp:
        * WebCoreSupport/PagePopupBlackBerry.h:
        (PagePopupBlackBerry):

2012-06-15  Antonio Gomes  <agomes@rim.com>

        [BlackBerry] Disable WebCore::EventHandler synthesized mouse events during touch scrolling
        https://bugs.webkit.org/show_bug.cgi?id=89227
        PR #146642

        Reviewed by Rob Buis.

        Make use of the Settings::supportsMouseDevice setting in order to
        prevent mouse move event to fire as a response to a scroll action.
        We might still want to dynamically toggle this setting ON, in case for
        example of a mouse wheel driven scroll action, but we can revisit it
        when it becomes a fully supported/primary use case.

        Internally reviewed by Eli Fidler.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::didChangeSettings):
        * Api/WebSettings.cpp:
        (WebKit):
        (BlackBerry::WebKit::WebSettings::isDeviceSupportsMouseEnabled):
        (BlackBerry::WebKit::WebSettings::setDeviceSupportsMouseEnabled):
        * Api/WebSettings.h:

2012-06-15  Jacky Jiang  <zhajiang@rim.com>

        [BlackBerry] Certain web pages (i.e., http://www.cloudtweaks.com/) are allowed to be wider than the screen
        https://bugs.webkit.org/show_bug.cgi?id=89211

        Reviewed by Rob Buis.
        Patch by Jacky Jiang <zhajiang@rim.com>

        PR: 135215
        Make simpler rules for zoom to fit scale:
        - Zoom to fit horizontally first without clamping the contents width.
        - Zoom to fit vertically instead without clamping the contents height
          if the horizontal zoom to fit can cause a grey area below the web
          page. Get rid of the virtual viewport guard as there may be cases
          that zooming can cause a grey area without a virtual viewport.
        - Clamp the scale by the minimum zoom to fit scale 0.25 and apply
          this rule to image documents as well. This minimum scale can be
          changed if there is a better vaule in the future.
        In this way, we can get rid of the issue that many web pages don't fit
        the screen.

        Reviewed internally by Arvid Nilsson.

        * Api/WebPage.cpp:
        (WebKit):
        (BlackBerry::WebKit::WebPagePrivate::zoomToFitScale):

2012-06-15  Yong Li  <yoli@rim.com>

        [BlackBerry] Remove BackingStoreClient::scrollsHorizontally/scrollsVeritically()
        https://bugs.webkit.org/show_bug.cgi?id=89210

        Reviewed by Antonio Gomes.

        Remove BackingStoreClient::scrollsHorizontally()/scrollsVeritically(), because
        calling them is neither nessary nor safe.

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStorePrivate::blitContents):
        (BlackBerry::WebKit::BackingStorePrivate::blitHorizontalScrollbar):
        (BlackBerry::WebKit::BackingStorePrivate::blitVerticalScrollbar):
        * WebKitSupport/BackingStoreClient.cpp:
        * WebKitSupport/BackingStoreClient.h:
        (BackingStoreClient):

2012-06-15  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r120404.
        http://trac.webkit.org/changeset/120404
        https://bugs.webkit.org/show_bug.cgi?id=89193

        This patch breaks [BlackBerry]'s text selection handles moving
        in editable elements. (Requested by Sean1 on #webkit).

        * WebKitSupport/SelectionHandler.cpp:
        (BlackBerry::WebKit::visiblePositionForPointIgnoringClipping):

2012-06-14  Sean Wang  <Xuewen.Wang@torchmobile.com.cn>

        [BlackBerry] Selection - Crash when manipulating selection by dragging handle
        https://bugs.webkit.org/show_bug.cgi?id=89160

        RIMBUG:164970
        Avoid to set position in shadow tree to the new selection's base. It
        crashes when setting a shadow position to a selection' base.

        Reviewed by Antonio Gomes.

        * WebKitSupport/SelectionHandler.cpp:
        (BlackBerry::WebKit::visiblePositionForPointIgnoringClipping):

2012-06-14  Mary Wu  <mary.wu@torchmobile.com.cn>

        [BlackBerry] empty plugin cause browser hang
        https://bugs.webkit.org/show_bug.cgi?id=89091

        Reviewed by Rob Buis.

        Add check before clean pluginView in FrameLoaderBlackBerry in case
        it didn't have any content.
        RIM PR# 165336
        Reviewed internally by George Staikos

        * WebCoreSupport/FrameLoaderClientBlackBerry.cpp:
        (WebCore::FrameLoaderClientBlackBerry::finishedLoading):

2012-06-14  Genevieve Mak  <gmak@rim.com>

        Always convert touch events to mouse events if the
        meta-tag TouchEventMode::PureWithMouseConversion is set.
        Minor style fix.
        https://bugs.webkit.org/show_bug.cgi?id=89115

        Reviewed by Antonio Gomes.

        Reviewed Internally by Antonio Gomes.

        * WebKitSupport/TouchEventHandler.cpp:
        (BlackBerry::WebKit::TouchEventHandler::touchEventCancel):
        (BlackBerry::WebKit::TouchEventHandler::handleTouchPoint):

2012-06-14  Chris Guan  <chris.guan@torchmobile.com.cn>

        [Blackberry] add a new Api named setAllowNotification
        https://bugs.webkit.org/show_bug.cgi?id=88950

        Reviewed by Antonio Gomes.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPage::setAllowNotification):
        (WebKit):
        * Api/WebPage.h:

2012-06-13  Crystal Zhang  <haizhang@rim.com>

        [BlackBerry] Apply New Style and JS for Select Popup
        https://bugs.webkit.org/show_bug.cgi?id=89020

        Reviewed by Rob Buis.

        PR 162854

        Use new styled CSS files for select popup, also remove most JS functions
        to a separate JS file, only pass the parameters to JS, and use new python
        script for data generating, as the old one is too simple and problematic.

        * WebCoreSupport/SelectPopupClient.cpp:
        (WebCore::SelectPopupClient::generateHTML):

2012-06-13  Amy Ousterhout  <aousterh@chromium.org>

        Rename currentDeviceMotion to lastMotion in DeviceMotionClient
        https://bugs.webkit.org/show_bug.cgi?id=88854

        Reviewed by Adam Barth.

        Rename the function currentDeviceMotion to lastMotion in DeviceMotionClient.
        This makes it consistent with the similar function lastOrientation in DeviceOrientationClient.

        * WebCoreSupport/DeviceMotionClientBlackBerry.cpp:
        (DeviceMotionClientBlackBerry::lastMotion):
        (DeviceMotionClientBlackBerry::onMotion):
        * WebCoreSupport/DeviceMotionClientBlackBerry.h:
        (DeviceMotionClientBlackBerry):

2012-06-13  Robin Cao  <robin.cao@torchmobile.com.cn>

        [BlackBerry] Enable MEDIA_STREAM by default
        https://bugs.webkit.org/show_bug.cgi?id=88849

        Reviewed by Antonio Gomes.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::init):
        * WebCoreSupport/UserMediaClientImpl.cpp: Added.
        (WebCore):
        (WebCore::UserMediaClientImpl::UserMediaClientImpl):
        (WebCore::UserMediaClientImpl::~UserMediaClientImpl):
        (WebCore::UserMediaClientImpl::pageDestroyed):
        (WebCore::UserMediaClientImpl::requestUserMedia):
        (WebCore::UserMediaClientImpl::cancelUserMediaRequest):
        * WebCoreSupport/UserMediaClientImpl.h: Added.
        (WebKit):
        (WebCore):
        (UserMediaClientImpl):

2012-06-12  Arvid Nilsson  <anilsson@rim.com>

        [BlackBerry] Crash when rendering web page that's being destroyed
        https://bugs.webkit.org/show_bug.cgi?id=88915

        Reviewed by Rob Buis.

        PR #164943

        This was a null pointer dereference that happened when the compositor
        was asked to render after being disconnected from its web page.

        * Api/WebPageCompositor.cpp:
        (BlackBerry::WebKit::WebPageCompositorPrivate::render):

2012-06-12  Jacky Jiang  <zhajiang@rim.com>

        [BlackBerry] Scale was incorrect when reloading a simple web page after initial load
        https://bugs.webkit.org/show_bug.cgi?id=88889

        Reviewed by Adam Treat.
        Patch by Jacky Jiang <zhajiang@rim.com>

        PR: 164442
        When we were reloading a web page with the load type FrameLoadTypeSame
        after the initial load, the first layout timer was fired after the load
        Finished state, in which case the web page would have no chance to zoom
        to the initial scale during the layout as it was only for load
        Committed state. This patch takes care of it.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::layoutFinished):
        (BlackBerry::WebKit::WebPagePrivate::shouldZoomToInitialScaleOnLoad):
        (WebKit):
        (BlackBerry::WebKit::WebPagePrivate::zoomToInitialScaleOnLoad):
        * Api/WebPage_p.h:
        (WebPagePrivate):
        * WebCoreSupport/FrameLoaderClientBlackBerry.cpp:
        (WebCore::FrameLoaderClientBlackBerry::dispatchDidFirstVisuallyNonEmptyLayout):

2012-06-12  Crystal Zhang  <haizhang@rim.com>

        [BlackBerry] Fix crash in InputHandler
        https://bugs.webkit.org/show_bug.cgi?id=88808

        Reviewed by Antonio Gomes.

        m_page is destroyed before InputHandler, so should move the call to destroy popup to chromeDestroyed().

        * WebCoreSupport/ChromeClientBlackBerry.cpp:
        (WebCore::ChromeClientBlackBerry::chromeDestroyed():
        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::InputHandler::~InputHandler):

2012-06-12  Yong Li  <yoli@rim.com>

        [BlackBerry] Use a safer way to shrink JS memory usage
        https://bugs.webkit.org/show_bug.cgi?id=88811

        Reviewed by Antonio Gomes.

        We should just make a GC request and JSC will check if it is safe to do anything.

        * Api/BlackBerryGlobal.cpp:
        (BlackBerry::WebKit::clearMemoryCaches):

2012-06-11  Jonathan Dong  <jonathan.dong@torchmobile.com.cn>

        [BlackBerry] Autofill feature implementation for BlackBerry porting
        https://bugs.webkit.org/show_bug.cgi?id=85577

        Reviewed by Rob Buis.

        Remove the autofill saving procedure out of dispatchWillSubmitForm, this procedure
        is same as the procedure in dispatchWillSendSubmitEvent.
        Some sites will redirect to other url in its login process, which will cause the
        user get notified to save credentials for this provisional redirecting url if we
        put this saving procedure in dispatchWillSubmitForm. So we should remove it to make
        sure we only save the autofill data before the submit event is fired.

        * WebCoreSupport/FrameLoaderClientBlackBerry.cpp:
        (WebCore::FrameLoaderClientBlackBerry::dispatchWillSubmitForm):

2012-06-11  Antonio Gomes  <agomes@rim.com>

        [BlackBerry] [BlackBerry] browser video player fullscreen mode (portrait) does not play well with rotation
        https://bugs.webkit.org/show_bug.cgi?id=88809

        Reviewed by Rob Buis.

        Adjust the media container dimensions, whenever the FrameView::frameRect
        (aka viewport rect) changes

        Reviewed internally by Jacky Jiang.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::updateViewportSize):
        * WebCoreSupport/ChromeClientBlackBerry.cpp:
        (WebCore::ChromeClientBlackBerry::fullScreenRendererChanged):

2012-06-09  Antonio Gomes  <agomes@rim.com>

        [BlackBerry] browser video player fullscreen mode (portrait) does not play well with viewport metatag - Controls are off screen so cannot exit fullscreen
        https://bugs.webkit.org/show_bug.cgi?id=88719
        PR #164026

        Reviewed by Rob Buis.

        Instead of using WebPage's viewport size, which suffers from
        dealing with transformed coordinates, viewport metatag changes,
        etc, lets use WebCore::FrameView's visibleContentRect::Size::Width,
        which abstract all these variations.

        It fixes an overscale issue we were having when video player entered
        fullscreen, and webpage had viewport metatag set.

        * WebCoreSupport/ChromeClientBlackBerry.cpp:
        (WebCore::ChromeClientBlackBerry::fullScreenRendererChanged):

2012-06-11  Sam Weinig  <sam@webkit.org>

        Remove support for disconnected/excluded from search frames, they are not used by Safari anymore
        https://bugs.webkit.org/show_bug.cgi?id=88723

        Reviewed by Dan Bernstein.

        * WebKitSupport/InPageSearchManager.cpp:
        (BlackBerry::WebKit::InPageSearchManager::scopeStringMatches):

2012-06-10  Antonio Gomes  <agomes@rim.com>

        [BlackBerry] Make media (<video> and <audio>) slide draggable again
        https://bugs.webkit.org/show_bug.cgi?id=88742
        PR #158199

        Reviewed by George Staikos.

        First check if the element is a range type then gets its
        shadow DOM ancestor.

        * WebKitSupport/TouchEventHandler.cpp:
        (BlackBerry::WebKit::shouldConvertTouchToMouse):

2012-06-08  Crystal Zhang  <haizhang@rim.com>

        [BlackBerry] Fix crash on PagePopupChromeClient
        https://bugs.webkit.org/show_bug.cgi?id=88675

        Reviewed by Antonio Gomes.

        PR 163672.

        Actually it's the bug inside InputHandler, should delete the old popup and create a new one,
        because update() is problematic. Also no need to save pointer in InputHandler.

        * WebCoreSupport/ChromeClientBlackBerry.cpp:
        (WebCore::ChromeClientBlackBerry::openPagePopup):
        (WebCore::ChromeClientBlackBerry::closePagePopup):
        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::InputHandler::InputHandler):
        (BlackBerry::WebKit::InputHandler::~InputHandler):
        (BlackBerry::WebKit::InputHandler::openSelectPopup):
        * WebKitSupport/InputHandler.h:
        (WebCore):
        (InputHandler):

2012-06-08  Eli Fidler  <efidler@rim.com>

        [BlackBerry] Default font settings are getting deleted
        https://bugs.webkit.org/show_bug.cgi?id=88670

        Reviewed by Rob Buis.

        RIM PR: 163720

        WebSettings is overriding the default font settings with "", which deletes them.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::didChangeSettings):

2012-06-07  Crystal Zhang  <haizhang@rim.com>

        [BlackBerry] Should Use the WebPage Already Created by Client, No Need to Create New One.
        https://bugs.webkit.org/show_bug.cgi?id=88576

        Reviewed by Rob Buis.

        When PagePopupBlackBerry::init() is called, a WebPage is already created, we can just use 
        this to load popup, no need to create a new one. The old code is based on an old solution 
        which has been abandoned.

        * WebCoreSupport/ChromeClientBlackBerry.cpp:
        (WebCore::ChromeClientBlackBerry::openPagePopup):
        * WebCoreSupport/PagePopupBlackBerry.cpp:
        (WebCore::PagePopupBlackBerry::init):
        (WebCore::setValueAndClosePopupCallback):
        (WebCore::PagePopupBlackBerry::handleMouseEvent):
        (WebCore::PagePopupBlackBerry::closePopup):
        * WebCoreSupport/PagePopupBlackBerry.h:
        (PagePopupBlackBerry):

2012-06-07  Jacky Jiang  <zhajiang@rim.com>

        [BlackBerry] Get rid of unused maximumLayoutSize in WebPage
        https://bugs.webkit.org/show_bug.cgi?id=88574

        Reviewed by Rob Buis.
        Patch by Jacky Jiang <zhajiang@rim.com>

        PR: 164098
        maximumLayoutSize was deprecated when we made use of
        WebCore::computeViewportAttributes for
        WebPagePrivate::recomputeVirtualViewportFromViewportArguments.
        So clean it up.

        * Api/WebPage.cpp:
        (WebKit):

2012-06-07  Arvid Nilsson  <anilsson@rim.com>

        [BlackBerry] User viewport arguments are not respected
        https://bugs.webkit.org/show_bug.cgi?id=88530

        Reviewed by Antonio Gomes.

        RIM PR #163767

        Fixed by applying the user supplied viewport arguments if the page
        specifies default viewport arguments (i.e. the page has no viewport
        meta tag).

        If the user didn't supply any viewport arguments either, the behaviour
        is the same as before the patch, the caller will successfully reset to
        default viewport arguments.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::dispatchViewportPropertiesDidChange):

2012-06-07  Arvid Nilsson  <anilsson@rim.com>

        [BlackBerry] Allow WebPageCompositor to blend a transparent web page
        https://bugs.webkit.org/show_bug.cgi?id=88233

        Reviewed by Rob Buis.

        RIM PR #159998

        Keep track of the web page background color in the compositor so we can
        determine whether the contents of the root layer are transparent.

        Reviewed internally by Jakob Petsovits.

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStorePrivate::compositeContents):
        * Api/BackingStore_p.h:
        (BackingStorePrivate):
        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::setCompositor):
        (BlackBerry::WebKit::WebPagePrivate::setCompositorBackgroundColor):
        (WebKit):
        (BlackBerry::WebKit::WebPagePrivate::createCompositor):
        (BlackBerry::WebKit::WebPagePrivate::didChangeSettings):
        * Api/WebPageCompositor.cpp:
        (BlackBerry::WebKit::WebPageCompositorPrivate::render):
        (BlackBerry::WebKit::WebPageCompositorPrivate::setBackgroundColor):
        (WebKit):
        * Api/WebPageCompositor_p.h:
        (BlackBerry::WebKit::WebPageCompositorPrivate::backgroundColor):
        (WebPageCompositorPrivate):
        * Api/WebPage_p.h:
        (WebPagePrivate):

2012-06-07  Jonathan Dong  <jonathan.dong@torchmobile.com.cn>

        [BlackBerry] Add enable credential autofill and enable form autofill feature control in WebSetting
        https://bugs.webkit.org/show_bug.cgi?id=88513

        Reviewed by Rob Buis.

        RIM PR: #163391
        Implemented credential autofill setting and form autofill setting.

        Internally reviewed by Leo Yang <leo.yang@torchmobile.com.cn>.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPage::autofillTextField):
        (BlackBerry::WebKit::WebPagePrivate::authenticationChallenge):
        (BlackBerry::WebKit::WebPage::clearCredentials):
        (BlackBerry::WebKit::WebPage::clearAutofillData):
        (BlackBerry::WebKit::WebPage::clearNeverRememberSites):
        * Api/WebSettings.cpp:
        (WebKit):
        (BlackBerry::WebKit::WebSettings::standardSettings):
        (BlackBerry::WebKit::WebSettings::isCredentialAutofillEnabled):
        (BlackBerry::WebKit::WebSettings::setCredentialAutofillEnabled):
        (BlackBerry::WebKit::WebSettings::isFormAutofillEnabled):
        (BlackBerry::WebKit::WebSettings::setFormAutofillEnabled):
        * Api/WebSettings.h:
        * WebCoreSupport/EditorClientBlackBerry.cpp:
        (WebCore::EditorClientBlackBerry::textFieldDidEndEditing):
        (WebCore::EditorClientBlackBerry::textDidChangeInTextField):
        * WebCoreSupport/FrameLoaderClientBlackBerry.cpp:
        (WebCore::FrameLoaderClientBlackBerry::dispatchDidFinishLoad):
        (WebCore::FrameLoaderClientBlackBerry::dispatchWillSubmitForm):
        (WebCore::FrameLoaderClientBlackBerry::dispatchWillSendSubmitEvent):

2012-06-06  Antonio Gomes  <agomes@rim.com>

        [BlackBerry] browser video player fullscreen mode (portrait) - Controls are off screen so cannot exit fullscreen
        https://bugs.webkit.org/show_bug.cgi?id=88488
        PR #162991

        Reviewed by George Staikos.

        When we use width:100%/pageScale as the math to calculate the width of the
        FullScreen element, it goes too wide for horizontally scrollable webpages.
        The reason is that 100% is relative to the content size here, and we want 100%
        relative to the viewport size. However, since there is no such a thing in CSS,
        we set an absolute file.

        A known problem with this will be rotating the device when in fullscreen mode
        that we can address when rotating is supported.

        Internally reviewed by Jacky Jiang.

        * WebCoreSupport/ChromeClientBlackBerry.cpp:
        (WebCore::ChromeClientBlackBerry::fullScreenRendererChanged):

2012-06-05  Antonio Gomes  <agomes@rim.com>

       [BlackBerry] Implement a top-down in-region boundary detection in InRegionScrollableArea
       https://bugs.webkit.org/show_bug.cgi?id=88254
       PR #125237

       Reviewed by Rob Buis.

       Patch implements a top-down visibleWindowRect calculation for all scrollable
       elements hit-tested by a given point.

       The reason on why this approach is better is that it calculates the visible
       window rect from the outermost scrollable element towards the inner ones, and
       that allows it to use the visible window rect of the previous scrollable element
       as the clipping rect for the current one.

       Patch also changes the return vector to store ScrollViewBase pointers, so
       we can make use of static_cast properly. As now also stated in the header
       file, the client is responsible for deleting the ScrollViewBase
       elements in the vector.

       Internally reviewed by Jakob Petsovits.

       * Api/WebPage.cpp:
       (BlackBerry::WebKit::pushBackInRegionScrollable):
       (BlackBerry::WebKit::WebPagePrivate::inRegionScrollableAreasForPoint):
       * Api/WebPageClient.h:
       * Api/WebPage_p.h:
       (WebPagePrivate):
       * WebKitSupport/InRegionScrollableArea.cpp:
       (BlackBerry::WebKit::InRegionScrollableArea::InRegionScrollableArea):
       (BlackBerry::WebKit::InRegionScrollableArea::setVisibleWindowRect):
       (WebKit):
       (BlackBerry::WebKit::InRegionScrollableArea::visibleWindowRect):
       * WebKitSupport/InRegionScrollableArea.h:
       (InRegionScrollableArea):

2012-06-06  Charles Wei  <charles.wei@torchmobile.com.cn>

        [BlackBerry] IndexedDB file should be sand-boxed to the application data directory.
        https://bugs.webkit.org/show_bug.cgi?id=88065

        Reviewed by George Staikos.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::didChangeSettings):
        * Api/WebSettings.cpp:
        (WebKit):
        (BlackBerry::WebKit::WebSettings::indexedDataBasePath):
        (BlackBerry::WebKit::WebSettings::setIndexedDataBasePath):
        * Api/WebSettings.h:

2012-06-05  Crystal Zhang  <haizhang@rim.com>

        [BlackBerry]Differentiate options and group options by TypeOption and TypeOptionInGroup
        https://bugs.webkit.org/show_bug.cgi?id=88342

        Reviewed by Rob Buis.

        RIM PR: 163141

        Reviewed internally by Mike Fenton.

        We set all options' type to TypeOption, which can't tell if an option belongs to a group, 
        introduce TypeOptionInGroup to fix it.

        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::InputHandler::openSelectPopup):

2012-06-05  Adam Barth  <abarth@webkit.org>

        Remove support for target-densitydpi in the viewport meta tag
        https://bugs.webkit.org/show_bug.cgi?id=88047

        Reviewed by Kenneth Rohde Christiansen.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::recomputeVirtualViewportFromViewportArguments):
        * Api/WebViewportArguments.cpp:
        (BlackBerry::WebKit::WebViewportArguments::targetDensityDpi):
        (BlackBerry::WebKit::WebViewportArguments::setTargetDensityDpi):
        * Api/WebViewportArguments.h:

2012-06-05  Konrad Piascik  <kpiascik@rim.com>

        [BlackBerry]Web Inspector highlight is slow
        https://bugs.webkit.org/show_bug.cgi?id=88331

        Reviewed by Rob Buis.

        Highlight is slow on large pages because of constant repaint calls.
        Change to use the accelerated layer highlight all the time.

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStorePrivate::renderContents):
        * WebCoreSupport/InspectorClientBlackBerry.cpp:
        (WebCore::InspectorClientBlackBerry::highlight):
        (WebCore::InspectorClientBlackBerry::hideHighlight):
        * WebCoreSupport/InspectorOverlay.cpp:
        (WebCore::InspectorOverlay::clear):
        (WebCore::InspectorOverlay::update):

2012-06-04  Andrew Lo  <anlo@rim.com>

        [BlackBerry] Split AnimationFrameRateController into its own file
        https://bugs.webkit.org/show_bug.cgi?id=88242

        Reviewed by Antonio Gomes.

        Include new header file to reflect re-organization of platform animation
        header files.

        * Api/WebPageCompositor_p.h:

2012-06-02  Antonio Gomes  <agomes@rim.com>

        [BlackBerry] browser video player fullscreen mode (portrait) - out of screen/focus - cannot navigate or use the buttons on the screen (PART III)
        https://bugs.webkit.org/show_bug.cgi?id=88019

        Reviewed by George Staikos.

        Enter 'pure-with-mouse-conversion' mode when going fullscreen, so
        that it prevents user from scrolling the WebPage, pinch zooming,
        touch-and-hold, enter selection mode, etc ...

        Internally reviewed by Gen Mak.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::WebPagePrivate):
        (BlackBerry::WebKit::WebPagePrivate::enterFullScreenForElement):
        (BlackBerry::WebKit::WebPagePrivate::exitFullScreenForElement):
        * Api/WebPage_p.h:
        (WebPagePrivate):

2012-06-02  Antonio Gomes  <agomes@rim.com>

        [BlackBerry] browser video player fullscreen mode (portrait) - out of screen/focus - cannot navigate or use the buttons on the screen (PART II)
        https://bugs.webkit.org/show_bug.cgi?id=88019

        Reviewed by George Staikos.

        When an element goes fullscreen, its wrapper/container obeys all
        BlackBerry specific fixed position customizations: we fixed
        against Y, but not X. Then, in order to have the wrapper element
        properly positioned when entering fullscreen mode, we
        temporarily scroll x to 0.

        The original x scroll position is restored when we leave
        fullscreen.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::WebPagePrivate):
        (BlackBerry::WebKit::WebPagePrivate::enterFullScreenForElement):
        (BlackBerry::WebKit::WebPagePrivate::exitFullScreenForElement):
        * Api/WebPage_p.h:
        (WebPagePrivate):

2012-06-02  Antonio Gomes  <agomes@rim.com>

        [BlackBerry] browser video player fullscreen mode (portrait) - out of screen/focus - cannot navigate or use the buttons on the screen (PART I)
        https://bugs.webkit.org/show_bug.cgi?id=88019
        PR #158266

        Reviewed by George Staikos.

        The way elements go fullscreen with the new FULLSCREEN_API
        is that they get cloned and added to an out-of-DOM wrapper
        element. The wrapper is a normal fixed position element and
        then zoom in/out accordingly to how other layers do: following
        WebPage's scale.

        When going fullscreen, we have to take the current WebPage scale
        into account in order to properly fit the element to the screen,
        regardless the web page scale.

        * WebCoreSupport/ChromeClientBlackBerry.cpp:
        (WebCore):
        (WebCore::ChromeClientBlackBerry::fullScreenRendererChanged):
        * WebCoreSupport/ChromeClientBlackBerry.h:
        (ChromeClientBlackBerry):

2012-06-01  Crystal Zhang  <haizhang@rim.com>

        [BlackBerry] Fix the return value checking in SelectPopupClient
        https://bugs.webkit.org/show_bug.cgi?id=88130

        Reviewed by Rob Buis.

        In SelectPopupClient, return '1' means selected, '0' means not selected, 
        the ASCII value of '0' is 48, not 32, use '0' to be more readable.

        * WebCoreSupport/SelectPopupClient.cpp:
        (WebCore::SelectPopupClient::setValueAndClosePopup):

2012-06-01  Jonathan Dong  <jonathan.dong@torchmobile.com.cn>

        [BlackBerry] Add end editing handling into AutofillManager
        https://bugs.webkit.org/show_bug.cgi?id=88071

        Reviewed by Rob Buis.

        RIM PR: 160857
        Implemented EditorClientBlackBerry::textFieldDidEndEditing
        to notify AutofillManager to send the dismissing autofill
        dialog notification to webpage client.

        No new tests since there is no behavior changes.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::notifyDismissAutofillDialog):
        (WebKit):
        * Api/WebPageClient.h:
        * Api/WebPage_p.h:
        (WebPagePrivate):
        * WebCoreSupport/AutofillManager.cpp:
        (WebCore::AutofillManager::textFieldDidEndEditing):
        (WebCore):
        * WebCoreSupport/AutofillManager.h:
        (AutofillManager):
        * WebCoreSupport/EditorClientBlackBerry.cpp:
        (WebCore::EditorClientBlackBerry::textFieldDidEndEditing):

2012-05-31  Jacky Jiang  <zhajiang@rim.com>

        [BlackBerry] Bridge Apps - Apps do not redraw correctly after orientation change
        https://bugs.webkit.org/show_bug.cgi?id=88033

        Reviewed by Rob Buis.
        Patch by Jacky Jiang <zhajiang@rim.com>

        PR: 142961
        When bridge apps were in carousel mode, the backing store was inactive
        as its memory had been released. When we rotated the device, we would
        call WebPagPrivate:setViewportSize and resume screen and backing store
        to render and blit visible contents. As backing store was inactive and
        the window usage was GLES2Usage, we were neither doing backing store
        rendering nor direct rendering. Therefore, we drew layers directly
        based on the invalid texture contents when blitting contents if
        accelerated compositing was enabled.
        This patch forces compositing mode to let the accelerated compositing
        layer take care of the rendering which can update texture contents
        before drawing when backing store is inactive and is openGL compositing.

        Reviewed internally by George Staikos and Arvid Nilsson.

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStorePrivate::resumeScreenAndBackingStoreUpdates):

2012-05-31  Hajime Morrita  <morrita@chromium.org>

        REGRESSION(r117572): editing/spelling/spellcheck-async-remove-frame.html crashes on Mac
        https://bugs.webkit.org/show_bug.cgi?id=86859

        Reviewed by Ryosuke Niwa.

        * WebCoreSupport/EditorClientBlackBerry.cpp:
        (WebCore::EditorClientBlackBerry::requestCheckingOfString):
        * WebCoreSupport/EditorClientBlackBerry.h:
        (EditorClientBlackBerry):

2012-05-31  Arvid Nilsson  <anilsson@rim.com>

        [BlackBerry] WebGL and 2D canvas output not available to WebPageCompositor
        https://bugs.webkit.org/show_bug.cgi?id=88012

        Reviewed by George Staikos.

        Properly set up resource sharing between WebKit thread EGL contexts and
        the compositing thread EGL context, so the texture ID produced by WebGL
        and 2D canvas makes sense to the compositing context.

        There's no public API to supply an EGLContext yet, so we're lucky that
        the embedder never makes its context un-current. Just grab the current
        context on the compositing thread and use that as the compositing
        context.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::setCompositor):
        * Api/WebPageCompositor.cpp:
        (BlackBerry::WebKit::WebPageCompositor::WebPageCompositor):
        (BlackBerry::WebKit::WebPageCompositor::~WebPageCompositor):
        * Api/WebPage_p.h:
        (WebPagePrivate):

2012-05-31  George Staikos  <staikos@webkit.org>

        [Blackberry] Initialize the select client and delete the pointer
        in the destructor so it doesn't leak.  Fixes test crashes.
        https://bugs.webkit.org/show_bug.cgi?id=87992

        Reviewed by Rob Buis.

        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::InputHandler::InputHandler):
        (BlackBerry::WebKit::InputHandler::~InputHandler):

2012-05-31  Arvid Nilsson  <anilsson@rim.com>

        [BlackBerry] Crash when destroying WebOverlay with active WebOverlayOverride
        https://bugs.webkit.org/show_bug.cgi?id=87968

        Reviewed by Rob Buis.

        The override object is using a compositing thread WebOverlayPrivate
        object with no client because the layer doesn't delegate drawing to the
        WebOverlayPrivate, it's only used to modify the override properties on
        the underlying compositing thread layer.

        Since the m_layerCompositingThreadClient is optional, we have to add
        null checks.

        * Api/WebOverlay.cpp:
        (BlackBerry::WebKit::WebOverlayPrivateCompositingThread::~WebOverlayPrivateCompositingThread):
        (BlackBerry::WebKit::WebOverlayPrivateCompositingThread::setClient):
        (BlackBerry::WebKit::WebOverlayPrivateCompositingThread::setContentsToImage):
        (BlackBerry::WebKit::WebOverlayPrivateCompositingThread::setContentsToColor):
        (BlackBerry::WebKit::WebOverlayPrivateCompositingThread::setDrawsContent):
        (BlackBerry::WebKit::WebOverlayPrivateCompositingThread::invalidate):

2012-05-31  Chris Guan  <chris.guan@torchmobile.com.cn>

        [Blackberry] WebKit's fullscreen mode needs to notify page client.
        https://bugs.webkit.org/show_bug.cgi?id=87337

        Reviewed by Antonio Gomes.

        Move "fullScreenVideoCapable" into webpagePrivate to make code
        clean for "fullScreenForElement/Node" of cromeClientBlackberry,
        All Video checks and code path selections are in webpagePrivate now.
        For some UX and secure reasons, we could not apply fullscreen capacity
        for all elements, So we use client's fullscreenStart/Stop only for
        those video elements and those elements containing video tags.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::webContext):
        (BlackBerry::WebKit::WebPage::notifyFullScreenVideoExited):
        (WebKit):
        (BlackBerry::WebKit::containsVideoTags):
        (BlackBerry::WebKit::WebPagePrivate::enterFullScreenForElement):
        (BlackBerry::WebKit::WebPagePrivate::exitFullScreenForElement):
        * Api/WebPageClient.h:
        * Api/WebPage_p.h:
        (WebCore):
        (WebPagePrivate):
        * WebCoreSupport/ChromeClientBlackBerry.cpp:
        (WebCore::ChromeClientBlackBerry::enterFullScreenForElement):
        (WebCore::ChromeClientBlackBerry::exitFullScreenForElement):

2012-05-31  Arvid Nilsson  <anilsson@rim.com>

        [BlackBerry] Crash when closing web page if selection is active
        https://bugs.webkit.org/show_bug.cgi?id=87962

        Reviewed by Antonio Gomes.

        The embedder may try to remove a layer from the compositor at a stage
        where the compositor has been set to 0.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPage::addCompositingThreadOverlay):
        (BlackBerry::WebKit::WebPage::removeCompositingThreadOverlay):

2012-05-30  Konrad Piascik  <kpiascik@rim.com>

        [BlackBerry] Add an Accelerated Compositing layer for Web Inspector DOM highlight.
        https://bugs.webkit.org/show_bug.cgi?id=81001

        Reviewed by Antonio Gomes.
        
        Implemented InspectorOverlay using WebOverlayAPI.

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStorePrivate::renderContents):
        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::updateDelegatedOverlays):
        (BlackBerry::WebKit::WebPagePrivate::commitRootLayerIfNeeded):
        (BlackBerry::WebKit::WebPagePrivate::setInspectorOverlayClient):
        (WebKit):
        * Api/WebPage_p.h:
        (WebCore):
        (WebPagePrivate):
        * WebCoreSupport/InspectorClientBlackBerry.cpp:
        (WebCore::InspectorClientBlackBerry::highlight):
        (WebCore::InspectorClientBlackBerry::hideHighlight):
        (WebCore::InspectorClientBlackBerry::paintInspectorOverlay):
        (WebCore):
        * WebCoreSupport/InspectorClientBlackBerry.h:
        (InspectorClientBlackBerry):
        * WebCoreSupport/InspectorOverlay.cpp: Added.
        (WebCore):
        (WebCore::InspectorOverlay::create):
        (WebCore::InspectorOverlay::InspectorOverlay):
        (WebCore::InspectorOverlay::notifySyncRequired):
        (WebCore::InspectorOverlay::paintContents):
        (WebCore::InspectorOverlay::showDebugBorders):
        (WebCore::InspectorOverlay::showRepaintCounter):
        (WebCore::InspectorOverlay::contentsVisible):
        (WebCore::InspectorOverlay::~InspectorOverlay):
        (WebCore::InspectorOverlay::clear):
        (WebCore::InspectorOverlay::update):
        (WebCore::InspectorOverlay::paintWebFrame):
        (WebCore::InspectorOverlay::invalidateWebFrame):
        * WebCoreSupport/InspectorOverlay.h: Added.
        (WebKit):
        (WebCore):
        (InspectorOverlay):
        (InspectorOverlayClient):
        (WebCore::InspectorOverlay::setClient):
        (WebCore::InspectorOverlay::notifyAnimationStarted):

2012-05-30  Sean Wang  <Xuewen.Wang@torchmobile.com.cn>

        [BlackBerry] Browser crashed when selecting in textarea
        https://bugs.webkit.org/show_bug.cgi?id=87484

        The function FatFingers::checkForText() uses host node's whole text
        to checkFingerIntersection(). We should not give the text of shadow
        nodes to it.

        Reviewed by Antonio Gomes.

        * WebKitSupport/FatFingers.cpp:
        (BlackBerry::WebKit::FatFingers::getNodesFromRect): Avoid returning
        shadow nodes when the context is Text node.

2012-05-30  Zoltan Horvath  <zoltan@webkit.org>

        [Qt] Set WebCore imagedecoders as default and add fallback to QImageDecoder
        https://bugs.webkit.org/show_bug.cgi?id=80400

        Get rid of QT_IMAGE_DECODER flag.

        Reviewed by Simon Hausmann.

        * WebCoreSupport/AboutDataEnableFeatures.in:

2012-05-29  Max Feil  <mfeil@rim.com>

        [BlackBerry] The Page's deviceScaleFactor() is not being properly maintained
        https://bugs.webkit.org/show_bug.cgi?id=87817

        Reviewed by Antonio Gomes.

        This bug fix in WebKit/blackberry is needed by the changes for
        fullscreen media control sizing in WebCore (bug 87551). The sizing
        of controls depends on the page's deviceScaleFactor(), which was
        not being maintained properly due to errors in logic. Viewport
        changes from non-default to default were being erroneously
        thrown out. Also, when the viewport did change back to default
        the deviceScaleFactor was not being updated.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::recomputeVirtualViewportFromViewportArguments):
        (BlackBerry::WebKit::WebPagePrivate::dispatchViewportPropertiesDidChange):

2012-05-29  Arvid Nilsson  <anilsson@rim.com>

        [BlackBerry] WebOverlay build fixes and bug fixes
        https://bugs.webkit.org/show_bug.cgi?id=87780

        Reviewed by Rob Buis.

        Fix build when accelerated compositing disabled, or debug build.

        Also fix a bug where the selection overlay would not disappear properly
        because of a typo in WebPage::removeOverlay(). Also convert said method
        to early return style.

        Debug build fixes contributed by Ming Xie.

        * Api/WebOverlay.cpp:
        (BlackBerry::WebKit::WebOverlay::addAnimation):
        (BlackBerry::WebKit::WebOverlay::setContentsToImage):
        (WebKit):
        (BlackBerry::WebKit::WebOverlay::setContentsToColor):
        (BlackBerry::WebKit::WebOverlay::setDrawsContent):
        (BlackBerry::WebKit::WebOverlay::invalidate):
        (BlackBerry::WebKit::WebOverlay::setClient):
        (BlackBerry::WebKit::WebOverlay::override):
        (BlackBerry::WebKit::WebOverlay::resetOverrides):
        * Api/WebOverlayOverride.cpp:
        (BlackBerry::WebKit::WebOverlayOverride::WebOverlayOverride):
        * Api/WebOverlay_p.h:
        (BlackBerry::WebKit::WebOverlayPrivate::~WebOverlayPrivate):
        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPage::removeOverlay):
        (BlackBerry::WebKit::WebPage::addCompositingThreadOverlay):
        (BlackBerry::WebKit::WebPage::removeCompositingThreadOverlay):

2012-05-29  Yong Li  <yoli@rim.com>

        [BlackBerry] Add malloc info to about:memory page
        https://bugs.webkit.org/show_bug.cgi?id=87676

        Reviewed by Rob Buis.

        Detailed malloc info can tell us how much memory
        in the heaps is being in use.

        * WebCoreSupport/AboutData.cpp:
        (WebCore::memoryPage):

2012-05-29  Arvid Nilsson  <anilsson@rim.com>

        [BlackBerry] Make DefaultTapHighlight use the new WebOverlay API
        https://bugs.webkit.org/show_bug.cgi?id=87604

        Reviewed by Antonio Gomes.

        Also add a new method to allow the embedder to use the default tap
        highlight instead of replacing it with a custom one just to keep track
        of the "shouldHideAfterScroll" flag.

        PR #160262.

        * Api/WebTapHighlight.h:
        * WebKitSupport/DefaultTapHighlight.cpp:
        (BlackBerry::WebKit::DefaultTapHighlight::DefaultTapHighlight):
        (BlackBerry::WebKit::DefaultTapHighlight::draw):
        (BlackBerry::WebKit::DefaultTapHighlight::hide):
        (BlackBerry::WebKit::DefaultTapHighlight::paintContents):
        * WebKitSupport/DefaultTapHighlight.h:
        (BlackBerry::WebKit::DefaultTapHighlight::shouldHideAfterScroll):
        (DefaultTapHighlight):

2012-05-29  Arvid Nilsson  <anilsson@rim.com>

        [BlackBerry] WebKit-side implementation of SelectionOverlay
        https://bugs.webkit.org/show_bug.cgi?id=87605

        Reviewed by Rob Buis.

        Leverage the new WebOverlay API to move SelectionOverlay to the WebKit
        library, so we always draw selection regardless of which embedder is
        integrating WebKit.

        PR #160263

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::init):
        (BlackBerry::WebKit::WebPage::selectionOverlay):
        (WebKit):
        * Api/WebPage.h:
        (WebKit):
        * Api/WebPage_p.h:
        (WebPagePrivate):
        * Api/WebSelectionOverlay.h: Added.
        (WebKit):
        * WebKitSupport/SelectionHandler.cpp:
        (BlackBerry::WebKit::SelectionHandler::selectionPositionChanged):
        * WebKitSupport/SelectionOverlay.cpp: Added.
        (WebKit):
        (BlackBerry::WebKit::SelectionOverlay::SelectionOverlay):
        (BlackBerry::WebKit::SelectionOverlay::~SelectionOverlay):
        (BlackBerry::WebKit::SelectionOverlay::draw):
        (BlackBerry::WebKit::SelectionOverlay::hide):
        (BlackBerry::WebKit::SelectionOverlay::notifySyncRequired):
        (BlackBerry::WebKit::SelectionOverlay::paintContents):
        * WebKitSupport/SelectionOverlay.h: Added.
        (WebKit):
        (SelectionOverlay):
        (BlackBerry::WebKit::SelectionOverlay::create):
        (BlackBerry::WebKit::SelectionOverlay::notifyAnimationStarted):
        (BlackBerry::WebKit::SelectionOverlay::showDebugBorders):
        (BlackBerry::WebKit::SelectionOverlay::showRepaintCounter):
        (BlackBerry::WebKit::SelectionOverlay::contentsVisible):

2012-05-29  Arvid Nilsson  <anilsson@rim.com>

        [BlackBerry] WebOverlay API
        https://bugs.webkit.org/show_bug.cgi?id=87603

        Reviewed by Rob Buis.

        This new API makes it possible to leverage the BlackBerry accelerated
        compositing implementation to draw, transform and fluidly animate
        overlays in the embedding library or application.

        A WebOverlay has an affinity for the thread where it was created. If
        the current thread is the WebKit thread, use WebPage::addOverlay() to
        add it to the page, and manipulate it only from the WebKit thread, with
        exception of the "override" functionality which can be used from the
        compositing thread. If the current thread is the compositing thread,
        use WebPage::addCompositingThreadOverlay() to add it to the page, and
        only manipulate it on the compositing thread.

        A WebOverlay can be painted using Skia, or its contents can be set to
        an image or a solid color.

        PR #156812

        * Api/WebAnimation.cpp: Added.
        (WebKit):
        (BlackBerry::WebKit::WebAnimation::fadeAnimation):
        (BlackBerry::WebKit::WebAnimation::name):
        (BlackBerry::WebKit::WebAnimation::WebAnimation):
        (BlackBerry::WebKit::WebAnimation::~WebAnimation):
        (BlackBerry::WebKit::WebAnimation::operator=):
        * Api/WebAnimation.h: Added.
        (WebKit):
        * Api/WebAnimation_p.h: Added.
        (WebKit):
        (WebAnimationPrivate):
        (BlackBerry::WebKit::WebAnimationPrivate::WebAnimationPrivate):
        * Api/WebOverlay.cpp: Added.
        (WebKit):
        (BlackBerry::WebKit::WebOverlay::WebOverlay):
        (BlackBerry::WebKit::WebOverlay::~WebOverlay):
        (BlackBerry::WebKit::WebOverlay::position):
        (BlackBerry::WebKit::WebOverlay::setPosition):
        (BlackBerry::WebKit::WebOverlay::anchorPoint):
        (BlackBerry::WebKit::WebOverlay::setAnchorPoint):
        (BlackBerry::WebKit::WebOverlay::size):
        (BlackBerry::WebKit::WebOverlay::setSize):
        (BlackBerry::WebKit::WebOverlay::sizeIsScaleInvariant):
        (BlackBerry::WebKit::WebOverlay::setSizeIsScaleInvariant):
        (BlackBerry::WebKit::WebOverlay::transform):
        (BlackBerry::WebKit::WebOverlay::setTransform):
        (BlackBerry::WebKit::WebOverlay::opacity):
        (BlackBerry::WebKit::WebOverlay::setOpacity):
        (BlackBerry::WebKit::WebOverlay::addAnimation):
        (BlackBerry::WebKit::WebOverlay::removeAnimation):
        (BlackBerry::WebKit::WebOverlay::parent):
        (BlackBerry::WebKit::WebOverlay::addChild):
        (BlackBerry::WebKit::WebOverlay::removeFromParent):
        (BlackBerry::WebKit::WebOverlay::setContentsToImage):
        (BlackBerry::WebKit::WebOverlay::setContentsToColor):
        (BlackBerry::WebKit::WebOverlay::setDrawsContent):
        (BlackBerry::WebKit::WebOverlay::invalidate):
        (BlackBerry::WebKit::WebOverlay::setClient):
        (BlackBerry::WebKit::WebOverlay::override):
        (BlackBerry::WebKit::WebOverlay::resetOverrides):
        (BlackBerry::WebKit::WebOverlayPrivate::page):
        (BlackBerry::WebKit::WebOverlayPrivate::override):
        (BlackBerry::WebKit::WebOverlayPrivate::drawContents):
        (BlackBerry::WebKit::WebOverlayPrivate::scheduleCompositingRun):
        (BlackBerry::WebKit::WebOverlayPrivateWebKitThread::WebOverlayPrivateWebKitThread):
        (BlackBerry::WebKit::WebOverlayPrivateWebKitThread::override):
        (BlackBerry::WebKit::WebOverlayPrivateWebKitThread::position):
        (BlackBerry::WebKit::WebOverlayPrivateWebKitThread::setPosition):
        (BlackBerry::WebKit::WebOverlayPrivateWebKitThread::anchorPoint):
        (BlackBerry::WebKit::WebOverlayPrivateWebKitThread::setAnchorPoint):
        (BlackBerry::WebKit::WebOverlayPrivateWebKitThread::size):
        (BlackBerry::WebKit::WebOverlayPrivateWebKitThread::setSize):
        (BlackBerry::WebKit::WebOverlayPrivateWebKitThread::sizeIsScaleInvariant):
        (BlackBerry::WebKit::WebOverlayPrivateWebKitThread::setSizeIsScaleInvariant):
        (BlackBerry::WebKit::WebOverlayPrivateWebKitThread::transform):
        (BlackBerry::WebKit::WebOverlayPrivateWebKitThread::setTransform):
        (BlackBerry::WebKit::WebOverlayPrivateWebKitThread::opacity):
        (BlackBerry::WebKit::WebOverlayPrivateWebKitThread::setOpacity):
        (BlackBerry::WebKit::WebOverlayPrivateWebKitThread::addAnimation):
        (BlackBerry::WebKit::WebOverlayPrivateWebKitThread::removeAnimation):
        (BlackBerry::WebKit::WebOverlayPrivateWebKitThread::addChild):
        (BlackBerry::WebKit::WebOverlayPrivateWebKitThread::removeFromParent):
        (BlackBerry::WebKit::WebOverlayPrivateWebKitThread::setContentsToImage):
        (BlackBerry::WebKit::WebOverlayPrivateWebKitThread::setContentsToColor):
        (BlackBerry::WebKit::WebOverlayPrivateWebKitThread::setDrawsContent):
        (BlackBerry::WebKit::WebOverlayPrivateWebKitThread::clear):
        (BlackBerry::WebKit::WebOverlayPrivateWebKitThread::invalidate):
        (BlackBerry::WebKit::WebOverlayPrivateWebKitThread::resetOverrides):
        (BlackBerry::WebKit::WebOverlayPrivateWebKitThread::notifySyncRequired):
        (BlackBerry::WebKit::WebOverlayPrivateWebKitThread::paintContents):
        (BlackBerry::WebKit::WebOverlayLayerCompositingThreadClient::WebOverlayLayerCompositingThreadClient):
        (BlackBerry::WebKit::WebOverlayLayerCompositingThreadClient::~WebOverlayLayerCompositingThreadClient):
        (BlackBerry::WebKit::WebOverlayLayerCompositingThreadClient::setDrawsContent):
        (BlackBerry::WebKit::WebOverlayLayerCompositingThreadClient::invalidate):
        (BlackBerry::WebKit::WebOverlayLayerCompositingThreadClient::setContents):
        (BlackBerry::WebKit::WebOverlayLayerCompositingThreadClient::setContentsToColor):
        (BlackBerry::WebKit::WebOverlayLayerCompositingThreadClient::layerCompositingThreadDestroyed):
        (BlackBerry::WebKit::WebOverlayLayerCompositingThreadClient::layerVisibilityChanged):
        (BlackBerry::WebKit::WebOverlayLayerCompositingThreadClient::uploadTexturesIfNeeded):
        (BlackBerry::WebKit::WebOverlayLayerCompositingThreadClient::drawTextures):
        (BlackBerry::WebKit::WebOverlayLayerCompositingThreadClient::deleteTextures):
        (BlackBerry::WebKit::WebOverlayPrivateCompositingThread::WebOverlayPrivateCompositingThread):
        (BlackBerry::WebKit::WebOverlayPrivateCompositingThread::~WebOverlayPrivateCompositingThread):
        (BlackBerry::WebKit::WebOverlayPrivateCompositingThread::setClient):
        (BlackBerry::WebKit::WebOverlayPrivateCompositingThread::override):
        (BlackBerry::WebKit::WebOverlayPrivateCompositingThread::position):
        (BlackBerry::WebKit::WebOverlayPrivateCompositingThread::setPosition):
        (BlackBerry::WebKit::WebOverlayPrivateCompositingThread::anchorPoint):
        (BlackBerry::WebKit::WebOverlayPrivateCompositingThread::setAnchorPoint):
        (BlackBerry::WebKit::WebOverlayPrivateCompositingThread::size):
        (BlackBerry::WebKit::WebOverlayPrivateCompositingThread::setSize):
        (BlackBerry::WebKit::WebOverlayPrivateCompositingThread::sizeIsScaleInvariant):
        (BlackBerry::WebKit::WebOverlayPrivateCompositingThread::setSizeIsScaleInvariant):
        (BlackBerry::WebKit::WebOverlayPrivateCompositingThread::transform):
        (BlackBerry::WebKit::WebOverlayPrivateCompositingThread::setTransform):
        (BlackBerry::WebKit::WebOverlayPrivateCompositingThread::opacity):
        (BlackBerry::WebKit::WebOverlayPrivateCompositingThread::setOpacity):
        (BlackBerry::WebKit::WebOverlayPrivateCompositingThread::addAnimation):
        (BlackBerry::WebKit::WebOverlayPrivateCompositingThread::removeAnimation):
        (BlackBerry::WebKit::WebOverlayPrivateCompositingThread::addChild):
        (BlackBerry::WebKit::WebOverlayPrivateCompositingThread::removeFromParent):
        (BlackBerry::WebKit::WebOverlayPrivateCompositingThread::setContentsToImage):
        (BlackBerry::WebKit::WebOverlayPrivateCompositingThread::setContentsToColor):
        (BlackBerry::WebKit::WebOverlayPrivateCompositingThread::setDrawsContent):
        (BlackBerry::WebKit::WebOverlayPrivateCompositingThread::clear):
        (BlackBerry::WebKit::WebOverlayPrivateCompositingThread::invalidate):
        (BlackBerry::WebKit::WebOverlayPrivateCompositingThread::resetOverrides):
        * Api/WebOverlay.h: Added.
        (WebCore):
        (WebKit):
        * Api/WebOverlayClient.h: Added.
        (WebKit):
        * Api/WebOverlayOverride.cpp: Added.
        (WebKit):
        (BlackBerry::WebKit::WebOverlayOverride::WebOverlayOverride):
        (BlackBerry::WebKit::WebOverlayOverride::~WebOverlayOverride):
        (BlackBerry::WebKit::WebOverlayOverride::setPosition):
        (BlackBerry::WebKit::WebOverlayOverride::setAnchorPoint):
        (BlackBerry::WebKit::WebOverlayOverride::setSize):
        (BlackBerry::WebKit::WebOverlayOverride::setTransform):
        (BlackBerry::WebKit::WebOverlayOverride::setOpacity):
        (BlackBerry::WebKit::WebOverlayOverride::addAnimation):
        (BlackBerry::WebKit::WebOverlayOverride::removeAnimation):
        * Api/WebOverlayOverride.h: Added.
        (WebKit):
        * Api/WebOverlay_p.h: Added.
        (WTF):
        (WebCore):
        (WebKit):
        (WebOverlayPrivate):
        (BlackBerry::WebKit::WebOverlayPrivate::WebOverlayPrivate):
        (BlackBerry::WebKit::WebOverlayPrivate::~WebOverlayPrivate):
        (BlackBerry::WebKit::WebOverlayPrivate::setPage):
        (BlackBerry::WebKit::WebOverlayPrivate::setClient):
        (BlackBerry::WebKit::WebOverlayPrivate::layerCompositingThread):
        (BlackBerry::WebKit::WebOverlayPrivate::graphicsLayer):
        (WebOverlayPrivateWebKitThread):
        (BlackBerry::WebKit::WebOverlayPrivateWebKitThread::graphicsLayer):
        (BlackBerry::WebKit::WebOverlayPrivateWebKitThread::notifyAnimationStarted):
        (BlackBerry::WebKit::WebOverlayPrivateWebKitThread::showDebugBorders):
        (BlackBerry::WebKit::WebOverlayPrivateWebKitThread::showRepaintCounter):
        (BlackBerry::WebKit::WebOverlayPrivateWebKitThread::contentsVisible):
        (WebOverlayLayerCompositingThreadClient):
        (BlackBerry::WebKit::WebOverlayLayerCompositingThreadClient::setLayer):
        (BlackBerry::WebKit::WebOverlayLayerCompositingThreadClient::setClient):
        (BlackBerry::WebKit::WebOverlayLayerCompositingThreadClient::drawsContent):
        (BlackBerry::WebKit::WebOverlayLayerCompositingThreadClient::contents):
        (WebOverlayPrivateCompositingThread):
        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPage::addOverlay):
        (WebKit):
        (BlackBerry::WebKit::WebPage::removeOverlay):
        (BlackBerry::WebKit::WebPage::addCompositingThreadOverlay):
        (BlackBerry::WebKit::WebPage::removeCompositingThreadOverlay):
        * Api/WebPage.h:
        (WebKit):
        * Api/WebPageCompositor.cpp:
        (BlackBerry::WebKit::WebPageCompositorPrivate::prepareFrame):
        (BlackBerry::WebKit::WebPageCompositorPrivate::render):
        (WebKit):
        (BlackBerry::WebKit::WebPageCompositorPrivate::compositeLayers):
        (BlackBerry::WebKit::WebPageCompositorPrivate::drawLayers):
        (BlackBerry::WebKit::WebPageCompositorPrivate::addOverlay):
        (BlackBerry::WebKit::WebPageCompositorPrivate::removeOverlay):
        * Api/WebPageCompositor_p.h:
        (BlackBerry::WebKit::WebPageCompositorPrivate::compositingThreadOverlayLayer):
        (WebPageCompositorPrivate):

2012-05-28  Jonathan Dong  <jonathan.dong@torchmobile.com.cn>

        [BlackBerry] http authenticate dialog popup only once no matter authentication pass or fail
        https://bugs.webkit.org/show_bug.cgi?id=80135

        Reviewed by Rob Buis.

        RIM PR: 145660
        Fixed a regression introduced by r111810, which used the wrong
        credential object.

        Added the interface function didReceivedAuthenticaitonChallenge()
        in interface class DumpRenderTreeClient;
        Called m_dumpRenderTree->didReceiveAuthenticationChallenge() in
        WebPagePrivate::authenticationChallenge() when DRT is enabled.

        Test: reuse existing test cases:
        http/tests/loading/basic-credentials-sent-automatically.html
        http/tests/loading/basic-auth-resend-wrong-credentials.html

        Resubmit the patch reverted by r115104 after the digest infinite loop
        issue for BlackBerry porting get identified and fixed.

        Internally reviewed by Joe Mason <jmason@rim.com>

        * Api/DumpRenderTreeClient.h:
        (WebCore):
        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::authenticationChallenge):
        * Api/WebPageClient.h:
        * Api/WebPage_p.h:
        (WebPagePrivate):

2012-05-28  Arvid Nilsson  <anilsson@rim.com>

        [BlackBerry] Always create a compositor
        https://bugs.webkit.org/show_bug.cgi?id=87598

        Reviewed by Rob Buis.

        There will likely be compositing layers either due to web content or
        due to overlays.

        Defer initialization of OpenGL objects (i.e., delay creation of the
        LayerRenderer object) until we actually need to draw and there are such
        layers, to avoid initializing OpenGL in the unlikely case that there
        are no compositing layers or overlay layers.

        PR #156811

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::init):
        (BlackBerry::WebKit::WebPagePrivate::createCompositor):
        * Api/WebPageCompositor.cpp:
        (BlackBerry::WebKit::WebPageCompositorPrivate::setContext):
        (BlackBerry::WebKit::WebPageCompositorPrivate::prepareFrame):
        (BlackBerry::WebKit::WebPageCompositorPrivate::render):
        (BlackBerry::WebKit::WebPageCompositorPrivate::drawLayers):
        * Api/WebPageCompositor_p.h:
        (WebPageCompositorPrivate):

2012-05-28  Arvid Nilsson  <anilsson@rim.com>

        [BlackBerry] Dangling pointer in WebPagePrivate::setCompositor() message
        https://bugs.webkit.org/show_bug.cgi?id=87590

        Reviewed by Rob Buis.

        A crash would be seen in GuardedPointerBase::getWithGuardLocked when
        attempting to unpickle and execute serialized call to setCompositor.

        The problem was that the message had been created with a dangling
        pointer as the target. The web page failed to inform its compositor
        that it was being destroyed due to an early return in
        WebPagePrivate::destroyCompositor.

        The root cause was that a method called "destroyCompositor" was being
        called in two situations, when navigating to a new page as well as when
        actually deleting the web page. And in one case, we really only wanted
        to free up some memory by clearing textures, while in the other case we
        really did want to destroy the compositor.

        Fixed by calling a method to release textures when that's what we want
        to do, and calling a method to destroy the compositor when that's what
        we want to do, and making that latter method unconditional.

        Reviewed internally by Jeff Rogers.

        PR #156765

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::setLoadState):
        (BlackBerry::WebKit::WebPagePrivate::destroyCompositor):

2012-05-28  Arvid Nilsson  <anilsson@rim.com>

        [BlackBerry] Add a default tap highlight
        https://bugs.webkit.org/show_bug.cgi?id=87569

        Reviewed by Rob Buis.

        We used to require the embedder to implement tap highlight drawing.
        Now, a default tap highlight, implemented using the recently added
        accelerated compositing overlay layer support, can be used instead.

        The tap highlight appears instantly but fades out when hidden.

        The default tap highlight can be overridden using the new
        WebPage::setTapHighlight() method.

        Reviewed internally by Mike Lattanzio and Mike Fenton.

        PR #154329

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::init):
        (BlackBerry::WebKit::WebPage::tapHighlight):
        (WebKit):
        (BlackBerry::WebKit::WebPage::setTapHighlight):
        * Api/WebPage.h:
        (WebKit):
        * Api/WebPageClient.h:
        * Api/WebPage_p.h:
        (WebCore):
        (WebPagePrivate):
        * Api/WebTapHighlight.h: Added.
        (WebKit):
        * WebKitSupport/DefaultTapHighlight.cpp: Added.
        (WebKit):
        (BlackBerry::WebKit::fadeAnimationName):
        (BlackBerry::WebKit::DefaultTapHighlight::DefaultTapHighlight):
        (BlackBerry::WebKit::DefaultTapHighlight::~DefaultTapHighlight):
        (BlackBerry::WebKit::DefaultTapHighlight::draw):
        (BlackBerry::WebKit::DefaultTapHighlight::hide):
        (BlackBerry::WebKit::DefaultTapHighlight::notifySyncRequired):
        (BlackBerry::WebKit::DefaultTapHighlight::paintContents):
        * WebKitSupport/DefaultTapHighlight.h: Added.
        (WebKit):
        (DefaultTapHighlight):
        (BlackBerry::WebKit::DefaultTapHighlight::create):
        (BlackBerry::WebKit::DefaultTapHighlight::notifyAnimationStarted):
        (BlackBerry::WebKit::DefaultTapHighlight::showDebugBorders):
        (BlackBerry::WebKit::DefaultTapHighlight::showRepaintCounter):
        (BlackBerry::WebKit::DefaultTapHighlight::contentsVisible):
        * WebKitSupport/TouchEventHandler.cpp:
        (BlackBerry::WebKit::TouchEventHandler::drawTapHighlight):

2012-05-28  Arvid Nilsson  <anilsson@rim.com>

        [BlackBerry] Add an overlay layer
        https://bugs.webkit.org/show_bug.cgi?id=87567

        Reviewed by Antonio Gomes.

        The overlay layer allows us to have compositing layers even though the
        web page is not currently using accelerated compositing.

        These layers can be used to implement tap highlight, inspector overlay
        and more.

        Reviewed internally by Filip Spacek.

        PR #154335

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::scheduleRootLayerCommit):
        (BlackBerry::WebKit::WebPagePrivate::overlayLayer):
        (WebKit):
        (BlackBerry::WebKit::WebPagePrivate::commitRootLayer):
        (BlackBerry::WebKit::WebPagePrivate::commitRootLayerIfNeeded):
        * Api/WebPageCompositor.cpp:
        (BlackBerry::WebKit::WebPageCompositorPrivate::setOverlayLayer):
        (WebKit):
        (BlackBerry::WebKit::WebPageCompositorPrivate::prepareFrame):
        (BlackBerry::WebKit::WebPageCompositorPrivate::render):
        (BlackBerry::WebKit::WebPageCompositorPrivate::drawLayers):
        * Api/WebPageCompositor_p.h:
        (BlackBerry::WebKit::WebPageCompositorPrivate::overlayLayer):
        (WebPageCompositorPrivate):
        * Api/WebPage_p.h:
        (WebPagePrivate):

2012-05-28  Arvid Nilsson  <anilsson@rim.com>

        [BlackBerry] Update WebPageCompositor::render() API
        https://bugs.webkit.org/show_bug.cgi?id=87565

        Reviewed by Rob Buis.

        The new API allows the embedder to specify the root transform and many
        OpenGL related parameters to be used when rendering the web page.

        To honor the transform, we have to implement a way to composite the
        BackingStore output using a generic transform. This method,
        BackingStorePrivate::compositeContents(), uses a strategy that differs
        from blitContents(), because that one is optimized for software
        blitting, while this one is optimized for GPU rendering. Specifically,
        instead of drawing the checkerboard first, and the rendered subregions
        of the tile afterward, we draw the whole tile in one call, and then
        draw checkered regions on top, if any.

        Removed the blit generation condvar from the new code paths for drawing
        BackingStore output using a transform, since the condvar is ineffective
        in preventing flicker when we're not in charge of swapping the window.
        Instead, another synchronization solution will be implemented in the
        future.

        Reviewed internally by Filip Spacek.
        Some parts reviewed internally by Jacky Jiang and others by
        Mike Lattanzio.

        PR #151887, #154334

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStorePrivate::render):
        (BlackBerry::WebKit::BackingStorePrivate::blitContents):
        (WebKit):
        (BlackBerry::WebKit::BackingStorePrivate::compositeContents):
        * Api/BackingStore_p.h:
        (WebCore):
        (BackingStorePrivate):
        * Api/WebPageCompositor.cpp:
        (BlackBerry::WebKit::WebPageCompositorPrivate::setContext):
        (BlackBerry::WebKit::WebPageCompositorPrivate::setRootLayer):
        (BlackBerry::WebKit::WebPageCompositorPrivate::prepareFrame):
        (BlackBerry::WebKit::WebPageCompositorPrivate::render):
        (BlackBerry::WebKit::WebPageCompositorPrivate::drawLayers):
        (BlackBerry::WebKit::WebPageCompositor::prepareFrame):
        (BlackBerry::WebKit::WebPageCompositor::render):
        * Api/WebPageCompositor.h:
        * Api/WebPageCompositorClient.h:
        * Api/WebPageCompositor_p.h:
        (WebPageCompositorPrivate):
        * WebCoreSupport/ChromeClientBlackBerry.cpp:

2012-05-28  Arvid Nilsson  <anilsson@rim.com>

        [BlackBerry] Plumb through the return value of makeCurrent to caller
        https://bugs.webkit.org/show_bug.cgi?id=87564

        Reviewed by Rob Buis.

        This way the caller can take appropriate action if makeCurrent fails,
        for example because we're running out of memory.

        Reviewed internally by George Staikos.

        PR #149721

        * WebKitSupport/GLES2Context.cpp:
        (BlackBerry::WebKit::GLES2Context::makeCurrent):

2012-05-27  Arvid Nilsson  <anilsson@rim.com>

        [BlackBerry] Crash when deleting WebPageCompositor
        https://bugs.webkit.org/show_bug.cgi?id=87589

        Reviewed by Rob Buis.

        The WebPageCompositorPrivate is reference counted, so it may outlive
        either the WebPage or the WebPageCompositor, depending on who releases
        its reference first.

        Fixed by disconnecting the objects properly, regardless of who goes
        away first.

        Reviewed internally by Mike Lattanzio.

        PR #156444

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::setCompositor):
        (BlackBerry::WebKit::WebPagePrivate::destroyCompositor):
        * Api/WebPageCompositor.cpp:
        (BlackBerry::WebKit::WebPageCompositor::~WebPageCompositor):
        (BlackBerry::WebKit::WebPageCompositor::client):
        * Api/WebPageCompositor_p.h:
        (BlackBerry::WebKit::WebPageCompositorPrivate::setPage):

2012-05-27  Arvid Nilsson  <anilsson@rim.com>

        2012-04-18  Arvid Nilsson  <anilsson@rim.com>

        [BlackBerry] BackingStore accesses tiles even though it's not active
        https://bugs.webkit.org/show_bug.cgi?id=87563

        Reviewed by Antonio Gomes.

        There are many scenarios that can call render and cause tile access,
        and they used to be rerouted to the direct rendering code when the
        backing store was not active. This was thanks to an implicit check for
        isActive() by virtue of calling shouldDirectRenderingToWindow() from
        render().

        If we're using OpenGL for compositing the backing store contents
        however, direct rendering is always disabled and we jump right into the
        tile based rendering code.

        Fixed by adding an explicit check for isActive() in render(), now that
        the implicit check in shouldDirectRenderingToWindow() is conditional on
        having raster usage.

        Since PR136381/bug83131, when OpenGL compositing is used, and the
        backing store is not active, it is not in charge of drawing the root
        layer. Instead, we switch off the paintingGoesToWindow flag on the root
        RenderLayer so no invalidates will reach the ChromeClient or the
        BackingStore any more. Instead, invalidations will cause the root
        accelerated compositing layer to be repainted. Any BackingStore render
        calls while in this state are pointless, and can safely do an early
        return.

        Reviewed internally by Jakob Petsovits.

        PR #150403

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStorePrivate::render):

2012-05-27  Arvid Nilsson  <anilsson@rim.com>

        2012-04-12  Arvid Nilsson  <anilsson@rim.com>

        [BlackBerry] Web page fails to render after clicking link with target=_blank
        https://bugs.webkit.org/show_bug.cgi?id=87562

        Reviewed by Antonio Gomes.

        Clicking such a link opens a new tab. The compositor was briefly in
        charge of drawing the root layer while the backing store was inactive
        and the user was looking at the other tab. The problem was that the
        compositor believed it was still painting the root layer even after the
        backing store became active again. The flag was not properly cleared
        when turning off compositing.

        Fixed by returning false from drawsRootLayer() if we don't have a root
        layer.

        Reviewed internally by Filip Spacek.

        PR #149342

        * Api/WebPageCompositor.cpp:
        (BlackBerry::WebKit::WebPageCompositorPrivate::drawsRootLayer):

2012-05-24  Jacky Jiang  <zhajiang@rim.com>

        [BlackBerry] History navigation caused google.com scale not kept
        https://bugs.webkit.org/show_bug.cgi?id=87438

        Reviewed by Antonio Gomes.
        Patch by Jacky Jiang <zhajiang@rim.com>

        PR: 159923
        For back/forward history navigation, we were trying to keep the values
        set by dispatchViewportDataDidChange. However, when we went back from
        the previous page, if the current page didn't contain the meta viewport
        tag, then those values set by previous page would never be reset.
        Although the current page could get correct saved scale when restoring
        view state, the scale would still be clamped by zoomToFitScale which
        was based on the virtual viewport of the previous page which could make
        the scale incorrect.
        Since we know the viewport arguments of the current document before
        setLoadState on back/forward history navigation, we can reset these
        previous values if the document doesn't have viewport arguments during
        setLoadState.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::setLoadState):

2012-05-25  Mary Wu  <mary.wu@torchmobile.com.cn>

        [BlackBerry] Pass http headers to loader in download request
        https://bugs.webkit.org/show_bug.cgi?id=87449

        Reviewed by Rob Buis.

        PR# 149283

        This is to support byte-range download and we could pass http headers like
        "Range" in download request to loader.

        Reviewed internally by Lyon Chen.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPage::download):

2012-05-24  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] InputHandler can hold a ref on an object when document is cleared.
        https://bugs.webkit.org/show_bug.cgi?id=87412

        Reviewed by Rob Buis.

        PR 145234.

        When the document data is cleared, notify the InputHandler
        of the associated frame being unloaded.

        Reviewed Internally by Nima Ghanavatian.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::clearDocumentData):

2012-05-24  Crystal Zhang  <haizhang@rim.com>

        [BlackBerry] Implement select popup and remove old hook to air popup
        https://bugs.webkit.org/show_bug.cgi?id=87419

        Reviewed by Rob Buis.

        Introduce new html select popup client, remove the old hook to air popup.

        * Api/WebPageClient.h:
        * WebCoreSupport/SelectPopupClient.cpp: Added.
        (WebCore):
        (WebCore::SelectPopupClient::SelectPopupClient):
        (WebCore::SelectPopupClient::~SelectPopupClient):
        (WebCore::SelectPopupClient::update):
        (WebCore::SelectPopupClient::generateHTML):
        (WebCore::SelectPopupClient::closePopup):
        (WebCore::SelectPopupClient::contentSize):
        (WebCore::SelectPopupClient::htmlSource):
        (WebCore::SelectPopupClient::setValueAndClosePopup):
        (WebCore::SelectPopupClient::didClosePopup):
        (WebCore::SelectPopupClient::writeDocument):
        * WebCoreSupport/SelectPopupClient.h: Added.
        (WebKit):
        (WebCore):
        (SelectPopupClient):
        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::InputHandler::openSelectPopup):
        * WebKitSupport/InputHandler.h:
        (WebCore):
        (InputHandler):
        * WebKitSupport/WebPopupType.h: Added.
        (BlackBerry):
        (WebKit):

2012-05-24  Antonio Gomes  <agomes@rim.com>

        Possible missing layout in Iris browser after hiding VKB
        https://bugs.webkit.org/show_bug.cgi?id=87408
        PR #153056 / MKS_3674963

        Reviewed by Adam Treat.

        Also informally reviewed by Mike Fenton.

        If we are not rotating and we've started a viewport resize with
        the Render tree in dirty state (i.e. it needs layout), lets
        reset the needsLayout flag for now but set our own 'needsLayout'.

        Reason: calls like ScrollView::setFixedLayoutSize can trigger a layout
        if the render tree needs it. We want to avoid it till the viewport resize
        is actually done (i.e. ScrollView::setViewportSize gets called
        further down the method) so we do not get render artifacts.

        Since our WebPage::setViewportSize calls rely on async Virtual
        Keyboard responses, we were getting it called with the render
        tree sometimes in a dirty state, sometimes not. It was flaky!
        Patch ensures a clear render tree state, and sets it as dirty
        afterwards as needed, so layout happens at the proper time.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::setViewportSize):

2012-05-24  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] Padding adjustment for determining the relative distance for a point was backwards.
        https://bugs.webkit.org/show_bug.cgi?id=87404

        Reviewed by Rob Buis.

        Fix padding calculation for handle adjustment.

        Reviewed Internally by Mike Lattanzio.

        * WebKitSupport/SelectionHandler.cpp:
        (BlackBerry::WebKit::directionOfPointRelativeToRect):

2012-05-24  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] Remove unused API function touchEventCancelAndClearFocusedNode.
        https://bugs.webkit.org/show_bug.cgi?id=87379

        Reviewed by Antonio Gomes.

        Remove unused API, touchEventCancelAndClearFocusedNode.

        Reviewed Internally by Gen Mak.

        * Api/WebPage.cpp:
        * Api/WebPage.h:
        * WebKitSupport/TouchEventHandler.cpp:
        * WebKitSupport/TouchEventHandler.h:
        (TouchEventHandler):

2012-05-23  Genevieve Mak  <gmak@rim.com>

        Remove minimum and maximum scroll position as they are no
        longer required due to changes in ScrollViewBase.
        https://bugs.webkit.org/show_bug.cgi?id=87298

        Reviewed by Antonio Gomes.

        * WebKitSupport/InRegionScrollableArea.cpp:
        (BlackBerry::WebKit::InRegionScrollableArea::InRegionScrollableArea):
        * WebKitSupport/InRegionScrollableArea.h:
        (InRegionScrollableArea):

2012-05-22  Chris Guan  <chris.guan@torchmobile.com.cn>

        [Blackberry]Pages contain video or audio tags should be in pageCache
        https://bugs.webkit.org/show_bug.cgi?id=87116

        Reviewed by George Staikos.
        
        There is not any reason to disable pageCache for video/audio 
        tags probably. By my testing, Back and Forward are working for 
        those pages contain video and audio tags.

        * WebCoreSupport/FrameLoaderClientBlackBerry.cpp:
        (WebCore::FrameLoaderClientBlackBerry::canCachePage):

2012-05-22  Konrad Piascik  <kpaiscik@rim.com>

        [BlackBerry] Remove unused/unimplemented methods from InspectorClientBlackberry
        https://bugs.webkit.org/show_bug.cgi?id=87125

        Reviewed by Rob Buis.

        Removed unimplemented methods that are no longer part of InspectorClient and added
        a new stub for InspectorStateClient::updateInspectorStateCookie

        * WebCoreSupport/InspectorClientBlackBerry.cpp:
        (WebCore::InspectorClientBlackBerry::updateInspectorStateCookie):
        (WebCore):
        * WebCoreSupport/InspectorClientBlackBerry.h:
        (InspectorClientBlackBerry):

2012-05-18  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] Validation of Last Fat Finger result is needed for selection.
        https://bugs.webkit.org/show_bug.cgi?id=86888

        Reviewed by Antonio Gomes.

        PR 128393.

        Cached FatFingersResults must be validatible against
        the desired request to ensure the result is both for
        the same point and of the same type.

        * WebKitSupport/FatFingers.h:
        (WebKit):
        (FatFingersResult):
        (BlackBerry::WebKit::FatFingersResult::FatFingersResult):
        (BlackBerry::WebKit::FatFingersResult::reset):
        (BlackBerry::WebKit::FatFingersResult::resultMatches):
        (BlackBerry::WebKit::FatFingersResult::originPosition):
        (BlackBerry::WebKit::FatFingersResult::adjustedPosition):
        (BlackBerry::WebKit::FatFingersResult::positionWasAdjusted):
        (BlackBerry::WebKit::FatFingersResult::isTextInput):
        (BlackBerry::WebKit::FatFingersResult::isValid):
        (BlackBerry::WebKit::FatFingersResult::node):
        (BlackBerry::WebKit::FatFingersResult::nodeAsElementIfApplicable):
        * WebKitSupport/SelectionHandler.cpp:
        (BlackBerry::WebKit::SelectionHandler::selectAtPoint):

2012-05-18  MORITA Hajime  <morrita@google.com>

        https://bugs.webkit.org/show_bug.cgi?id=85515
        Stale frame in WebCore::SpellChecker::didCheckSucceeded

        Reviewed by Ryosuke Niwa.

        * WebCoreSupport/EditorClientBlackBerry.h:
        (WebCore::EditorClientBlackBerry::frameWillDetachPage):

2012-05-17  Jacky Jiang  <zhajiang@rim.com>

        [BlackBerry] www.thestar.com/iphone Viewport Weirdness
        https://bugs.webkit.org/show_bug.cgi?id=86756

        Reviewed by George Staikos.

        PR 156710
        On high DPI devices, the virtual viewport size of this page was smaller
        than screen size. During the refreshing of the page, we reset the scale
        when the state was Committed, then layouted and rendered contents based
        on the virtual viewport size and default scale 1, which caused a small
        size thumbnail before we restored the previous view state.
        Fixed it by keeping the previous scale, user scalable and
        m_userViewportArguments during the Committed state of refreshing.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::setLoadState):

2012-05-17  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] Cleanup headers in SelectionHandler.cpp
        https://bugs.webkit.org/show_bug.cgi?id=86760

        Reviewed by Antonio Gomes.

        Clean up includes in SelectionHandler.cpp.

        * WebKitSupport/SelectionHandler.cpp:

2012-05-17  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] expandSelectionToGranularity should only use VisibleSelection and not range.
        https://bugs.webkit.org/show_bug.cgi?id=86759

        Reviewed by Antonio Gomes.

        expandSelectionToGranularity unnecesarily converted the
        selection to range and back. Using the selection
        directly is preferred.

        * WebKitSupport/SelectionHandler.cpp:
        (BlackBerry::WebKit::expandSelectionToGranularity):

2012-05-17  Hironori Bono  <hbono@chromium.org>

        [Refactoring] Move platform-specific code in Editor::respondToChangedSelection to the WebKit layer
        https://bugs.webkit.org/show_bug.cgi?id=86591

        Reviewed by Ryosuke Niwa.

        This change adds a TextCheckerClient::shouldEraseMarkersAfterChangeSelection
        function to remove platform-specific code from Editor::respondToChangedSelection
        function.

        No new tests, no change in behavior.

        * WebCoreSupport/EditorClientBlackBerry.cpp:
        (WebCore::EditorClientBlackBerry::shouldEraseMarkersAfterChangeSelection):
        (WebCore):
        * WebCoreSupport/EditorClientBlackBerry.h:
        (EditorClientBlackBerry):

2012-05-17  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] Build fix, SelectionHandler extra debug logs
        https://bugs.webkit.org/show_bug.cgi?id=86743

        Reviewed by Antonio Gomes.

        Add include for BlackBerryPlatformLog to SelectionHandler.cpp


        * WebKitSupport/SelectionHandler.cpp:

2012-05-16  Yongxin Dai  <yodai@rim.com>

        [BlackBerry] The FCC shows up on an empty input field
        https://bugs.webkit.org/show_bug.cgi?id=86657

        Reviewed by Antonio Gomes.

        Turn off the caret by sending a caret changed notification with empty caret.
        PR #120620

        Reviewed Internally by Mike Fenton.

        * WebKitSupport/SelectionHandler.cpp:
        (BlackBerry::WebKit::SelectionHandler::caretPositionChanged):

2012-05-16  Eli Fidler  <efidler@rim.com>

        [BlackBerry] Don't reset the default font families in WebSettings
        https://bugs.webkit.org/show_bug.cgi?id=86660

        Reviewed by Rob Buis.

        PR 152467
        The default families are also set definitively in WebCore/page/blackberry/SettingsBlackBerry.cpp

        * Api/WebSettings.cpp:
        (BlackBerry::WebKit::WebSettings::standardSettings):

2012-05-16  Genevieve Mak  <gmak@rim.com>

        Add missing include that was causing build errors.
        https://bugs.webkit.org/show_bug.cgi?id=86502

        Reviewed by Rob Buis.
        Reviewed Internally by Liam Quinn.

        * WebKitSupport/InputHandler.cpp:

2012-05-15  Chris Guan  <chris.guan@torchmobile.com.cn>

        [BlackBerry] Enhance an API of BackingStore::drawContents
        https://bugs.webkit.org/show_bug.cgi?id=86447

        Reviewed by George Staikos.

        Enhance the current APIs by adding parameters of id and destination
        contentSize, because chrome browser may want different contents from
        the same webview at different times.

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStorePrivate::renderContents):
        (BlackBerry::WebKit::BackingStore::drawContents):
        * Api/BackingStore.h:
        * Api/BackingStore_p.h:
        (BackingStorePrivate):

2012-05-15  Max Feil  <mfeil@rim.com>

        [BlackBerry] Enable the Fullscreen API
        https://bugs.webkit.org/show_bug.cgi?id=86129

        Reviewed by Antonio Gomes.

        This patch enables the new document-based Fullscreen API.
        The ENABLE(FULLSCREEN_API) is already enabled in the
        BlackBerry WebKit build. My patch turns fullscreen on
        in the page settings by default and implements the missing
        ChromeClientBlackBerry::{supports,enter,exit}FullScreenForElement()
        member functions. I am also plumbing through the existing
        "fullScreenVideoCapable" that QNXStageWebView has always been
        sending to allow the presence of a native fullscreen video player
        to be checked.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::didChangeSettings):
        * Api/WebSettings.cpp:
        (WebKit):
        (BlackBerry::WebKit::WebSettings::standardSettings):
        (BlackBerry::WebKit::WebSettings::fullScreenVideoCapable):
        (BlackBerry::WebKit::WebSettings::setFullScreenVideoCapable):
        * Api/WebSettings.h:
        * WebCoreSupport/ChromeClientBlackBerry.cpp:
        (WebCore):
        (WebCore::ChromeClientBlackBerry::supportsFullScreenForElement):
        (WebCore::ChromeClientBlackBerry::enterFullScreenForElement):
        (WebCore::ChromeClientBlackBerry::exitFullScreenForElement):
        * WebCoreSupport/ChromeClientBlackBerry.h:
        (ChromeClientBlackBerry):

2012-05-15  Hanna Ma  <Hanma@rim.com>

        [BlackBerry] adding a functionality for web inspector to inspect current selected element
        https://bugs.webkit.org/show_bug.cgi?id=86394

        Reviewed by Rob Buis.

        Add a way to trigger the remote web inspector on selected element.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPage::inspectCurrentContextElement):
        (WebKit):
        * Api/WebPage.h:

2012-05-14  Jacky Jiang  <zhajiang@rim.com>

        [BlackBerry] ASSERT failure in FrameView::paintContents when refleshing www.thestar.com/iphone
        https://bugs.webkit.org/show_bug.cgi?id=86391

        Reviewed by Adam Treat.

        PR 156992
        Request layout first if needed before painting contents.

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStorePrivate::renderContents):

2012-05-10  Mike Fenton  <mifenton@rim.com>

        Caret node boundary should be adjusted to account for the visible region.
        https://bugs.webkit.org/show_bug.cgi?id=86116

        Reviewed by Antonio Gomes.

        PR 138988.

        Update the node bounding box to be clipped and adjusted
        for the visible region of the frame.

        Reviewed Internally by Gen Mak.

        * WebKitSupport/SelectionHandler.cpp:
        (BlackBerry::WebKit::SelectionHandler::caretPositionChanged):

2012-05-10  Antonio Gomes  <agomes@rim.com>

        [BlackBerry] Assertions and assumptions in BackingStoreClient around m_frame and m_frame->view() are invalid
        https://bugs.webkit.org/show_bug.cgi?id=86096

        Reviewed by Rob Buis.

        A Frame's FrameView has always to be checked since it is
        a volatile object, and gets created and destroyed all the time.

        We have been facing a particular issue, where during our automated
        interaction tests, the main frame object was being pinch zoomed in
        the middle of it creation, and WebKit thread was blocked by a mutex.
        In practice, it is a case that would not be possible in a real
        world scenario, but shows that the ASSERTs are bogus regardless.

        * WebKitSupport/BackingStoreClient.cpp:
        (BlackBerry::WebKit::BackingStoreClient::scrollPosition):
        (BlackBerry::WebKit::BackingStoreClient::setScrollPosition):
        (BlackBerry::WebKit::BackingStoreClient::maximumScrollPosition):
        (BlackBerry::WebKit::BackingStoreClient::viewportSize):
        (BlackBerry::WebKit::BackingStoreClient::transformedViewportSize):
        (BlackBerry::WebKit::BackingStoreClient::visibleContentsRect):
        (BlackBerry::WebKit::BackingStoreClient::contentsSize):

2012-05-09  Jonathan Dong  <jonathan.dong@torchmobile.com.cn>

        [BlackBerry] Autofill feature implementation for BlackBerry porting
        https://bugs.webkit.org/show_bug.cgi?id=85577

        Reviewed by Rob Buis.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPage::autofillTextField): Added this interface
        function to auto fill the inputting text field when user selects
        a autofill candidate value from autofill context dialog.
        (WebKit):
        (BlackBerry::WebKit::WebPagePrivate::WebPagePrivate):
        (BlackBerry::WebKit::WebPagePrivate::notifyPopupAutofillDialog): Added
        this interface function to notify WebPageClient to pop up the autofill
        context dialog with the suggested input items.
        (BlackBerry::WebKit::WebPage::clearAutofillData):
        * Api/WebPage.h:
        * Api/WebPageClient.h:
        * Api/WebPage_p.h:
        (WebCore):
        (WebPagePrivate):
        * WebCoreSupport/AutofillManager.cpp:
        (WebCore::AutofillManager::didChangeInTextField):
        * WebCoreSupport/EditorClientBlackBerry.cpp:
        (WebCore::EditorClientBlackBerry::textDidChangeInTextField): Implemented
        this function to listen to the notification of text field change, and
        notify AutofillManager to handle the autofill.
        * WebCoreSupport/FrameLoaderClientBlackBerry.cpp:
        (WebCore::FrameLoaderClientBlackBerry::dispatchWillSubmitForm):
        (WebCore::FrameLoaderClientBlackBerry::dispatchWillSendSubmitEvent):
        Save the name and value pair of every autofillable input text field when
        user submitting a form.

2012-05-09  Crystal Zhang  <haizhang@rim.com>

        [BlackBerry] Enable PAGE_POPUP in make file, and implement required methods
        https://bugs.webkit.org/show_bug.cgi?id=85907

        Reviewed by Rob Buis.

        Internal reviewed by Yong Li.

        Enable PAGE_POPUP so we can use WebCore::PagePopup and WebCore::PagePopupClient interface.
        Implement virtual methods in WebCore::ChromeClientBlackBerry that required for the 
        implementation and add methods in WebKit::WebPage that needed for PagePopupClient.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::WebPagePrivate):
        (BlackBerry::WebKit::WebPagePrivate::handleMouseEvent):
        (BlackBerry::WebKit::WebPage::initPopupWebView):
        (WebKit):
        (BlackBerry::WebKit::WebPage::popupOpened):
        (BlackBerry::WebKit::WebPage::popupClosed):
        (BlackBerry::WebKit::WebPage::hasOpenedPopup):
        (BlackBerry::WebKit::WebPage::popup):
        (BlackBerry::WebKit::WebPagePrivate::setParentPopup):
        * Api/WebPage.h:
        (WebCore):
        * Api/WebPage_p.h:
        (WebCore):
        (WebPagePrivate):
        * WebCoreSupport/ChromeClientBlackBerry.cpp:
        (WebCore::ChromeClientBlackBerry::hasOpenedPopup):
        (WebCore::ChromeClientBlackBerry::openPagePopup):
        (WebCore):
        (WebCore::ChromeClientBlackBerry::closePagePopup):
        * WebCoreSupport/ChromeClientBlackBerry.h:
        (WebCore):
        (ChromeClientBlackBerry):

2012-05-08  Jason Liu  <jason.liu@torchmobile.com.cn>

        [BlackBerry] Auth credentials set in private mode are reused in public mode.
        https://bugs.webkit.org/show_bug.cgi?id=84697

        Reviewed by Rob Buis.

        Add setPrivateMode function for CredentialStorage.

        We have to change Private Browsing to test, so have to write a manual test case.
        Test: ManualTests/blackberry/http-auth-private-mode-changed.html

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::didChangeSettings):

2012-05-08  Crystal Zhang  <haizhang@rim.com>
    
            [BlackBerry] Implement a popup client for HTML controls
            https://bugs.webkit.org/show_bug.cgi?id=85670
    
            Reviewed by Rob Buis.
    
            Implement a popup client for HTML controls, which would be used to load
            different popups according to popup type.
    
            * WebCoreSupport/PagePopupBlackBerry.cpp: Added.
            (WebCore):
            (PagePopupChromeClient):
            (WebCore::PagePopupChromeClient::PagePopupChromeClient):
            (WebCore::PagePopupChromeClient::closeWindowSoon):
            (WebCore::PagePopupChromeClient::webPage):
            (WebCore::PagePopupBlackBerry::PagePopupBlackBerry):
            (WebCore::PagePopupBlackBerry::~PagePopupBlackBerry):
            (WebCore::PagePopupBlackBerry::sendCreatePopupWebViewRequest):
            (WebCore::PagePopupBlackBerry::init):
            (WebCore::setValueAndClosePopupCallback):
            (WebCore::popUpExtensionInitialize):
            (WebCore::popUpExtensionFinalize):
            (WebCore::PagePopupBlackBerry::installDomFunction):
            (WebCore::PagePopupBlackBerry::handleMouseEvent):
            (WebCore::PagePopupBlackBerry::closePopup):
            (WebCore::PagePopupBlackBerry::closeWebPage):
            * WebCoreSupport/PagePopupBlackBerry.h: Added.
            (WebKit):
            (WebCore):
            (PagePopupBlackBerry):

2012-05-08  Andrew Lo  <anlo@rim.com>

        [BlackBerry] Over-scroll image should be tiled
        https://bugs.webkit.org/show_bug.cgi?id=85860

        Reviewed by Rob Buis.

        Implement tiling for over-scroll image if image dimension don't match
        the surface dimensions.

        * Api/BackingStore.cpp:
        (WebKit):
        (BlackBerry::WebKit::BackingStorePrivate::ensureOverScrollImage):
        (BlackBerry::WebKit::BackingStorePrivate::paintDefaultBackground):
        * Api/BackingStore_p.h:
        (BackingStorePrivate):

2012-05-08  Chris Guan  <chris.guan@torchmobile.com.cn>

        [Blackberry] remove m_isRequestedByPlugin in ResourceRequest
        https://bugs.webkit.org/show_bug.cgi?id=84559

        Reviewed by Antonio Gomes.

        * WebCoreSupport/FrameLoaderClientBlackBerry.cpp:
        (WebCore::FrameLoaderClientBlackBerry::dispatchDecidePolicyForNewWindowAction):

2012-05-08  Jonathan Dong  <jonathan.dong@torchmobile.com.cn>

        [BlackBerry] AutofillManager implementation upstream
        https://bugs.webkit.org/show_bug.cgi?id=85576

        Reviewed by Rob Buis.

        RIM PR: 136405
        Implemented class AutofillManager to handle the form autofill
        interactions.
        It listens to text changed notification from text input, searches
        autofill database for the suggested autofill candidate value,
        and notifies WebPageClient to pop up a context dialog for user;
        it also responds to user's choice by autofilling the text input.

        * WebCoreSupport/AutofillManager.cpp: Added.
        (WebCore):
        (WebCore::AutofillManager::create):
        (WebCore::AutofillManager::didChangeInTextField):
        (WebCore::AutofillManager::autofillTextField):
        (WebCore::AutofillManager::saveTextFields):
        (WebCore::AutofillManager::clear):
        * WebCoreSupport/AutofillManager.h: Added.
        (WTF):
        (WebKit):
        (WebCore):
        (AutofillManager):
        (WebCore::AutofillManager::m_element):

2012-05-07  Andrew Lo  <anlo@rim.com>

        [BlackBerry] Delete previous buffer when new over-scroll image path is set
        https://bugs.webkit.org/show_bug.cgi?id=85812

        Reviewed by Rob Buis.

        When a new over-scroll image path is set, delete old buffer before creating
        a new one.

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStorePrivate::ensureOverScrollImage):

2012-05-07  Andrew Lo  <anlo@rim.com>

        [BlackBerry] Over-scroll image path property should be relative to local application directory
        https://bugs.webkit.org/show_bug.cgi?id=85814

        Reviewed by Rob Buis.

        Over-scroll image path web setting should be relative to the local directory.

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStorePrivate::ensureOverScrollImage):

2012-05-07  Crystal Zhang  <haizhang@rim.com>

        [BlackBerry] Add methods need by client side
        https://bugs.webkit.org/show_bug.cgi?id=85661

        Reviewed by Antonio Gomes.

        Add methods needed by client side when create and close HTML popup dialogs.
        PR 154360

        * Api/WebPageClient.h:

2012-05-06  Mary Wu  <mary.wu@torchmobile.com.cn>

        [BlackBerry] Support html5 download attribute.
        https://bugs.webkit.org/show_bug.cgi?id=85044

        Reviewed by Antonio Gomes.

        If a link has download attribute, we should pass that value and be able to
        save file with the name according to HTML5:
        http://updates.html5rocks.com/2011/08/Downloading-resources-in-HTML5-a-download

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::load):
        (BlackBerry::WebKit::WebPage::download):
        * Api/WebPage_p.h:
        (WebPagePrivate):
        * WebCoreSupport/FrameLoaderClientBlackBerry.cpp:
        (WebCore::FrameLoaderClientBlackBerry::startDownload):

2012-05-06  Jonathan Dong  <jonathan.dong@torchmobile.com.cn>

        [BlackBerry] Autofill backing store implementation upstream
        https://bugs.webkit.org/show_bug.cgi?id=85575

        Reviewed by Rob Buis.

        Replaced calling static function CredentialBackingStore::instance()
        with calling the helper function credentialBackingStore().

        * WebCoreSupport/CredentialManager.cpp:
        (WebCore::CredentialManager::autofillAuthenticationChallenge):
        (WebCore::CredentialManager::autofillPasswordForms):
        (WebCore::CredentialManager::saveCredentialIfConfirmed):
        (WebCore::CredentialManager::clearCredentials):
        (WebCore::CredentialManager::clearNeverRememberSites):

2012-05-06  Jonathan Dong  <jonathan.dong@torchmobile.com.cn>

        [BlackBerry] Enable credential persistance and auto fill
        https://bugs.webkit.org/show_bug.cgi?id=85572

        Reviewed by Rob Buis.

        Set autofilled status of credential input fields when credential
        information is auto filled by CredentialManager.
        By doing this the input element will get painted with yellow background
        which can notify user this input field is auto filled by the browser.

        No behavior changes, so no new test.

        * WebCoreSupport/CredentialTransformData.cpp:
        (WebCore::CredentialTransformData::setCredential):

2012-05-04  Andrew Lo  <anlo@rim.com>

        [Blackberry] Implement over-scroll background image
        https://bugs.webkit.org/show_bug.cgi?id=85538

        Reviewed by Rob Buis.

        Use over-scroll image when set instead of the solid colour.
        Internal PR146652

        * Api/BackingStore.cpp:
        (WebKit):
        (BlackBerry::WebKit::BackingStorePrivate::ensureOverScrollImage):
        (BlackBerry::WebKit::BackingStorePrivate::paintDefaultBackground):
        * Api/BackingStore_p.h:
        (BackingStorePrivate):
        * Api/WebSettings.cpp:
        (WebKit):
        (BlackBerry::WebKit::WebSettings::standardSettings):
        (BlackBerry::WebKit::WebSettings::overScrollImagePath):
        (BlackBerry::WebKit::WebSettings::setOverScrollImagePath):
        * Api/WebSettings.h:

2012-05-04  Rob Buis  <rbuis@rim.com>

        [BlackBerry] Rendering bmp file as text file when Content-Type:image/x-ms-bmp from apache web server.
        https://bugs.webkit.org/show_bug.cgi?id=85036

        Reviewed by Antonio Gomes.

        Move getNormalizedMIMEType into WebCore::MIMETypeRegistry.

        * Api/WebSettings.cpp:
        (WebKit):
        (BlackBerry::WebKit::WebSettings::isSupportedObjectMIMEType):
        * Api/WebSettings.h:
        * WebCoreSupport/FrameLoaderClientBlackBerry.cpp:
        (WebCore::FrameLoaderClientBlackBerry::createPlugin):
        (WebCore::FrameLoaderClientBlackBerry::canShowMIMEType):
        (WebCore::FrameLoaderClientBlackBerry::objectContentType):

2012-05-04  Nate Chapin  <japhet@chromium.org>

        Don't require FrameLoaderClient to manufacture a commitData() call for empty documents.
        https://bugs.webkit.org/show_bug.cgi?id=85533

        Reviewed by Alexey Proskuryakov.

        * WebCoreSupport/FrameLoaderClientBlackBerry.cpp:
        (WebCore::FrameLoaderClientBlackBerry::finishedLoading):

2012-05-04  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r116085, r116091, and r116095.
        http://trac.webkit.org/changeset/116085
        http://trac.webkit.org/changeset/116091
        http://trac.webkit.org/changeset/116095
        https://bugs.webkit.org/show_bug.cgi?id=85628

        We are not ready with dependencies on all platform yet (mac) +
        problems with debug builds. (Requested by Zoltan on #webkit).

        * WebCoreSupport/AboutDataEnableFeatures.in:

2012-05-04  Zoltan Horvath  <zoltan@webkit.org>

        [Qt] Set WebCore imagedecoders as default and add fallback to QImageDecoder
        https://bugs.webkit.org/show_bug.cgi?id=80400

        Get rid off QT_IMAGE_DECODER flag.

        Reviewed by Simon Hausmann.

        * WebCoreSupport/AboutDataEnableFeatures.in:

2012-05-03  Fady Samuel  <fsamuel@chromium.org>

        Removing line in computeViewportAttributes that enforces a minimum scale factor to never allow zooming out more than viewport
        https://bugs.webkit.org/show_bug.cgi?id=70609

        Reviewed by Kenneth Rohde Christiansen.

        * WebKitSupport/DumpRenderTreeSupport.cpp:
        (DumpRenderTreeSupport::dumpConfigurationForViewport):

2012-05-03  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] Add special attribute for alternate selection touch handling.
        https://bugs.webkit.org/show_bug.cgi?id=85284

        Reviewed by Rob Buis.

        Rename the custom attribute and make it a data- attribute.

        * WebKitSupport/SelectionHandler.cpp:
        (BlackBerry::WebKit::SelectionHandler::inputNodeOverridesTouch):

2012-04-18  Jon Honeycutt  <jhoneycutt@apple.com>

        FrameLoaderClient::dispatchWillSendSubmitEvent() should be given more
        information about the form being submitted
        https://bugs.webkit.org/show_bug.cgi?id=84297

        Reviewed by Andy Estes.

        * WebCoreSupport/FrameLoaderClientBlackBerry.cpp:
        (WebCore::FrameLoaderClientBlackBerry::dispatchWillSendSubmitEvent):
        Updated to use the FormState.

        * WebCoreSupport/FrameLoaderClientBlackBerry.h:
        (FrameLoaderClientBlackBerry):
        Updated method declaration.

2012-05-02  Jacky Jiang  <zhajiang@rim.com>

        [BlackBerry] Double tap zooming does nothing on small size table
        https://bugs.webkit.org/show_bug.cgi?id=85383

        Reviewed by George Staikos.

        PR: 153232
        When we search the best node for block zoom, if the initial node's new
        scale exceeds the maximum block zoom scale, we will try to walk through
        it's ancestors and pick the acceptable one. But the reality is that the
        acceptable ancestor's size can be too close to the size of the actual
        contents, we will do nothing for it. As we will still select the
        minimum of the new scale and the maximum block zoom scale as block zoom
        scale, we can ignore such kind of node and use the initial node instead.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::adjustedBlockZoomNodeForZoomLimits):

2012-05-01  Mike Fenton  <mifenton@rim.com>

        Add special attribute for alternate selection touch handling.
        https://bugs.webkit.org/show_bug.cgi?id=85284

        Reviewed by Antonio Gomes.

        PR 152975.

        Add attribute -bb-selection-touchoverride to override
        touch handling on selection overlay.

        Reviewed Internally by Gen Mak.

        * Api/WebPageClient.h:
        * WebKitSupport/SelectionHandler.cpp:
        (BlackBerry::WebKit::SelectionHandler::inputNodeOverridesTouch):
        (WebKit):
        (BlackBerry::WebKit::SelectionHandler::selectionPositionChanged):
        * WebKitSupport/SelectionHandler.h:
        (SelectionHandler):

2012-04-30  Benjamin Poulain  <benjamin@webkit.org>

        Add String::startsWith() and endsWith() for string literals
        https://bugs.webkit.org/show_bug.cgi?id=85154

        Reviewed by Darin Adler.

        * WebKitSupport/DOMSupport.cpp:
        (BlackBerry::WebKit::DOMSupport::elementPatternMatches):

2012-04-27  Jacky Jiang  <zhajiang@rim.com>

        [BlackBerry] Double tap zooming does nothing on table element on bustedtees.com
        https://bugs.webkit.org/show_bug.cgi?id=85104

        Reviewed by George Staikos.

        PR: 147006
        This was caused by the incorrect fix master_33/SHA:612caec4.
        Calculations like this "originalArea / pageArea" would always return 0
        so that the incorrect node and blockRect were used by block zoom. This
        patch takes care of it.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::blockZoomRectForNode):
        (BlackBerry::WebKit::WebPage::blockZoom):

2012-04-27  Nima Ghanavatian  <nghanavatian@rim.com>

        [BlackBerry] Improve log output in InputHandler.cpp
        https://bugs.webkit.org/show_bug.cgi?id=85007

        Reviewed by Antonio Gomes.

        PR 138292
        Improving logging in InputHandler.
        In setText we had an early return which wasn't being captured.
        Also, cleaning up the output to make it more clear and descriptive.

        Internally reviewed by Mike Fenton.

        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::InputHandler::learnText):
        (BlackBerry::WebKit::InputHandler::enableInputMode):
        (BlackBerry::WebKit::InputHandler::setText):

2012-04-27  Chris Guan  <chris.guan@torchmobile.com.cn>

        [Blackberry] remove redundant returns
        https://bugs.webkit.org/show_bug.cgi?id=85033

        Reviewed by Antonio Gomes.

        Remove two redundant returns which were added by accident.

        No new test cases, because no behaviour has changed.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPage::setSelection):
        (BlackBerry::WebKit::WebPage::setCaretPosition):

2012-04-27  Andy Chen  <andchen@rim.com>

        [BlackBerry] Find-in-page fails to deactivate the old active match when moving backwards
        https://bugs.webkit.org/show_bug.cgi?id=84892

        Reviewed by Antonio Gomes.

        Find in page fails to deactivate the old active match when moving backwards
        because searchStartingPoint was incorrectly initialized.
        Create a real range object instead of referencing other range object.
        PR 152009

        Internally reviewed by Yongxin Dai.

        * WebKitSupport/InPageSearchManager.cpp:
        (BlackBerry::WebKit::InPageSearchManager::findNextString):

2012-04-26  Yong Li  <yoli@rim.com>

        [BlackBerry] A quick fix to the previous patch r115245.
        https://bugs.webkit.org/show_bug.cgi?id=84862

        Reviewed by Antonio Gomes.

        Fix an obvious bug in previous patch: DeferredTaskLoadManualScript
        was using a wrong flag.

        * Api/WebPage.cpp:
        * Api/WebPage_p.h:
        (WebPagePrivate):

2012-04-25  Chris Guan  <chris.guan@torchmobile.com.cn>

        [Blackberry] add a new function in BackingStore
        https://bugs.webkit.org/show_bug.cgi?id=84818

        Reviewed by Antonio Gomes.

        Adding two functions in BackingStorePrivate and
        BackingStore, which could render out webpage contents
        into BlackBerry::Platform::Graphics::Drawable.

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStorePrivate::renderContents):
        (WebKit):
        (BlackBerry::WebKit::BackingStore::drawContents):
        * Api/BackingStore.h:
        * Api/BackingStore_p.h:
        (BackingStorePrivate):

2012-04-25  Charles Wei  <charles.wei@torchmobile.com.cn>

        [BlackBerry] Input Range element expects mouse events
        https://bugs.webkit.org/show_bug.cgi?id=84571

        Reviewed by Antonio Gomes.

        This just cleans up the code a bit to make it less code and more readable.
        * WebKitSupport/TouchEventHandler.cpp:
        (BlackBerry::WebKit::shouldConvertTouchToMouse):
        (BlackBerry::WebKit::TouchEventHandler::handleTouchPoint):
        (BlackBerry::WebKit::TouchEventHandler::spellCheck):

2012-04-25  Yong Li  <yoli@rim.com>

        [BlackBerry] Possible JS re-entrancy caused by UI events.
        https://bugs.webkit.org/show_bug.cgi?id=84862

        Reviewed by Antonio Gomes.

        1. block UI events when running in nested event loop
        2. defer some tasks we still want to perform when it is safe to do,
           with cached data.
        3. deferred task can be cancelled by clearing the flag. duplicate tasks
           is not a problem because they share same flag and data.
        4. move deferred manual script from FrameLoaderClientBlackBerry to WebPagePrivate
           and make it a deferred task

        * Api/WebPage.cpp:
        (WebKit):
        (BlackBerry::WebKit::WebPagePrivate::WebPagePrivate):
        (BlackBerry::WebKit::WebPagePrivate::load):
        (BlackBerry::WebKit::WebPagePrivate::stopCurrentLoad):
        (BlackBerry::WebKit::WebPagePrivate::willDeferLoading):
        (BlackBerry::WebKit::WebPagePrivate::didResumeLoading):
        (BlackBerry::WebKit::WebPagePrivate::deferredTasksTimerFired):
        (BlackBerry::WebKit::WebPage::assignFocus):
        (BlackBerry::WebKit::WebPagePrivate::setPageVisibilityState):
        (BlackBerry::WebKit::WebPage::setInputSelection):
        (BlackBerry::WebKit::WebPage::popupListClosed):
        (BlackBerry::WebKit::WebPage::setDateTimeInput):
        (BlackBerry::WebKit::WebPage::setColorInput):
        (BlackBerry::WebKit::WebPage::mouseEvent):
        (BlackBerry::WebKit::WebPage::touchEvent):
        (BlackBerry::WebKit::WebPage::touchPointAsMouseEvent):
        (BlackBerry::WebKit::WebPage::touchEventCancel):
        (BlackBerry::WebKit::WebPage::touchEventCancelAndClearFocusedNode):
        (BlackBerry::WebKit::WebPage::keyEvent):
        (BlackBerry::WebKit::WebPage::deleteTextRelativeToCursor):
        (BlackBerry::WebKit::WebPage::setComposingText):
        (BlackBerry::WebKit::WebPage::commitText):
        (BlackBerry::WebKit::WebPage::selectionCancelled):
        (BlackBerry::WebKit::WebPage::cutSelectedText):
        (BlackBerry::WebKit::WebPage::insertText):
        (BlackBerry::WebKit::WebPage::clearCurrentInputField):
        (BlackBerry::WebKit::WebPage::cut):
        (BlackBerry::WebKit::WebPage::paste):
        (BlackBerry::WebKit::WebPage::setSelection):
        (BlackBerry::WebKit::WebPage::setCaretPosition):
        (BlackBerry::WebKit::WebPage::selectAtPoint):
        (BlackBerry::WebKit::WebPage::setFocused):
        * Api/WebPage.h:
        * Api/WebPage_p.h:
        (WebCore):
        (WebPagePrivate):
        (DeferredTaskBase):
        (BlackBerry::WebKit::WebPagePrivate::DeferredTaskBase::perform):
        (BlackBerry::WebKit::WebPagePrivate::DeferredTaskBase::DeferredTaskBase):
        * WebCoreSupport/FrameLoaderClientBlackBerry.cpp:
        (WebCore::FrameLoaderClientBlackBerry::FrameLoaderClientBlackBerry):
        (WebCore::FrameLoaderClientBlackBerry::~FrameLoaderClientBlackBerry):
        (WebCore::FrameLoaderClientBlackBerry::willDeferLoading):
        (WebCore::FrameLoaderClientBlackBerry::didResumeLoading):
        * WebCoreSupport/FrameLoaderClientBlackBerry.h:
        (FrameLoaderClientBlackBerry):
        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::InputHandler::setPopupListIndexes):
        * WebKitSupport/InputHandler.h:
        (InputHandler):

2012-04-24  Nima Ghanavatian  <nghanavatian@rim.com>

        [BlackBerry] Perform spellcheck before handling TouchRelease event
        https://bugs.webkit.org/show_bug.cgi?id=84744

        After rebasing to master_35, it appears as though some code had been moved around.
        Here, we were handling the TouchReleased event before calling spellcheck.  This
        meant that when we finally got the call to spellcheck, the fatFinger result had been
        reset and the spelling markers had been removed.

        In addition, based on https://bugs.webkit.org/show_bug.cgi?id=66330
        I am also updating the BlackBerry specific documentMarkerContainingPoint to use
        LayoutPoint instead of IntPoint.

        Internally reviewed by Mike Fenton.

        Reviewed by Antonio Gomes.

        * WebKitSupport/TouchEventHandler.cpp:
        (BlackBerry::WebKit::TouchEventHandler::handleTouchPoint):
        (BlackBerry::WebKit::TouchEventHandler::spellCheck):
        * dom/DocumentMarkerController.cpp:
        (WebCore::DocumentMarkerController::markerContainingPoint):
        * dom/DocumentMarkerController.h:

2012-04-24  Mike Lattanzio  <mlattanzio@rim.com>

        [BlackBerry] setUserViewportArguments not always respected.
        https://bugs.webkit.org/show_bug.cgi?id=84738

        Reviewed by Antonio Gomes.

        Remove the unnecessary logic in
        WebPagePrivate::recomputeVirtualViewportFromViewportArguments().
        Instead it is much simpler to just set the m_viewportArguments to
        m_userViewportArguments on LoadCommitted. If there is a viewport
        tag in the content, m_viewportArguments will be replaced with it
        as usual during normal page load.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::setLoadState):
        (BlackBerry::WebKit::WebPagePrivate::recomputeVirtualViewportFromViewportArguments):

2012-04-24  Joe Mason  <jmason@rim.com>

        [BlackBerry] Revert broken changes to authentication dialog
        https://bugs.webkit.org/show_bug.cgi?id=80135

        Reviewed by Antonio Gomes.

        The previous patches from this bug caused an infinite loop when using digest auth;
        apparently they were only tested with basic.

        * Api/DumpRenderTreeClient.h:
        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::authenticationChallenge):
        * Api/WebPageClient.h:
        * Api/WebPage_p.h:
        (WebPagePrivate):

2012-04-24  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] Add additional details including the bounds of the box for caretPositionChanged.
        https://bugs.webkit.org/show_bug.cgi?id=84728

        Reviewed by Antonio Gomes.

        PR 138988.

        Update caretPositionChanged to include the limit of the input field
        for single line inputs.

        Reviewed Internally by Gen Mak.

        * Api/WebPageClient.h:
        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::InputHandler::boundingBoxForInputField):
        (WebKit):
        * WebKitSupport/InputHandler.h:
        (InputHandler):
        * WebKitSupport/SelectionHandler.cpp:
        (BlackBerry::WebKit::SelectionHandler::clippingRectForVisibleContent):
        (BlackBerry::WebKit::SelectionHandler::caretPositionChanged):

2012-04-24  Charles Wei  <charles.wei@torchmobile.com.cn>

        [BlackBerry] Input Range element expects mouse events
        https://bugs.webkit.org/show_bug.cgi?id=84571

        Reviewed by Antonio Gomes.

        Input element with Range type expects mouse events to
        drag the handle. Note that Input Range could appear
        in both the web page directly, or in some shadow tree,
        like the MediaControlTimeline and MediaControlVolume.
        * WebKitSupport/TouchEventHandler.cpp:
        (BlackBerry::WebKit::isRangeControlElement):
        (WebKit):
        (BlackBerry::WebKit::elementExpectsMouseEvents):
        (BlackBerry::WebKit::shouldConvertTouchToMouse):

2012-04-23  Charles Wei  <charles.wei@torchmobile.com.cn>

        [BlackBerry] Build failure when DEBUG_FAT_FINGER is enabled
        https://bugs.webkit.org/show_bug.cgi?id=84563

        Reviewed by Antonio Gomes.

        Fat Finger log code uses obsolete IntRect::toString() for logging,
        which was first implemented interally and removed later.

        * WebKitSupport/FatFingers.cpp:
        (BlackBerry::WebKit::FatFingers::findIntersectingRegions):

2012-04-21  Benjamin C Meyer  <bmeyer@rim.com>

        Don't hard code the plugins that blackberry supports.
        https://bugs.webkit.org/show_bug.cgi?id=84535

        Use the existing PluginDatabase to query for the plugins we can handle.

        The original implemention of FrameLoaderClientBlackBerry::createPlugin
        was a partial copy from another port.  In the Qt port there is some
        workarounds for flash which is why this exists there.  Sadly the bits
        that were copied made it so only flash worked, but as flash was the only
        plugin on the system this issue was not noticed until QNX tried to get
        jnext working.  Tracing it down to this bit of code rather then
        correcting it they hardcoded the jnext into the same block as flash was.

        The blackberry port isn't specifically suppose to only allow jnext and
        flash, but was an accident due to the way this code was developed.

        Reviewed by Adam Treat.

        * WebCoreSupport/FrameLoaderClientBlackBerry.cpp:
        (WebCore::FrameLoaderClientBlackBerry::createPlugin):

2012-04-20  Brady Eidson  <beidson@apple.com>

        https://bugs.webkit.org/show_bug.cgi?id=84512
        Repurpose ActiveDOMObject::WillShowDialog to WillDeferLoading

        Reviewed by Eric Carlson.

        PageGroupLoadDeferrer's don't take a ReasonForSuspension argument anymore;
        They just use WillDeferLoading by default.

        * Api/WebPageGroupLoadDeferrer.cpp:
        (BlackBerry::WebKit::WebPageGroupLoadDeferrer::WebPageGroupLoadDeferrer):

        * WebCoreSupport/ChromeClientBlackBerry.cpp:
        (WebCore::ChromeClientBlackBerry::createWindow):
        (WebCore::ChromeClientBlackBerry::runOpenPanel):

2012-04-20  Brady Eidson  <beidson@apple.com>

        https://bugs.webkit.org/show_bug.cgi?id=84490
        PageGroupLoadDeferrer needs to take a ReasonForSuspension argument

        Reviewed by Anders Carlsson.

        * Api/WebPageGroupLoadDeferrer.cpp:
        (BlackBerry::WebKit::WebPageGroupLoadDeferrer::WebPageGroupLoadDeferrer): Pass along ActiveDOMObject::WillShowDialog,
          which used to be the default

        * WebCoreSupport/ChromeClientBlackBerry.cpp:
        (WebCore::ChromeClientBlackBerry::createWindow): Pass along ActiveDOMObject::WillShowDialog, which used to be the default.
        (WebCore::ChromeClientBlackBerry::runOpenPanel): Ditto.

2012-04-20  Mike Lattanzio  <mlattanzio@rim.com>

        [BlackBerry] Expose WebViewportArguments to WebPageClient
        https://bugs.webkit.org/show_bug.cgi?id=84471

        Reviewed by Antonio Gomes.

        Implement the ability for the WebPageClient to specify a fallback
        virtual viewport to be used whenever a meta viewport tag is not
        present in the HTML. This can drastically impact apparent layout.
        This patch is designed to provide a classic "Column View" style of
        layout without breaking the web by simply exposing meta viewport
        arguments to WebPageClients.

        Note: As a side effect of this change. the WebPagePrivate::
        recomputeVirtualViewportFromViewportArguments method no longer
        modifies the targetDensityDpi property of the m_viewportArguments.
        However this does not affect the class because that property itself
        means nothing to us. Only the computeViewportArguments method from
        WebCore uses it, and the currentViewportArguments object we pass
        into that method has the adjusted targetDensityDpi value as before.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPage::setUserViewportArguments):
        (WebKit):
        (BlackBerry::WebKit::WebPage::resetUserViewportArguments):
        (BlackBerry::WebKit::WebPagePrivate::recomputeVirtualViewportFromViewportArguments):
        * Api/WebPage.h:
        (WebKit):
        * Api/WebPage_p.h:
        (WebPagePrivate):
        * Api/WebViewportArguments.cpp: Added.
        (WebKit):
        (BlackBerry::WebKit:::d):
        (BlackBerry::WebKit::WebViewportArguments::~WebViewportArguments):
        (BlackBerry::WebKit::WebViewportArguments::initialScale):
        (BlackBerry::WebKit::WebViewportArguments::setInitialScale):
        (BlackBerry::WebKit::WebViewportArguments::minimumScale):
        (BlackBerry::WebKit::WebViewportArguments::setMinimumScale):
        (BlackBerry::WebKit::WebViewportArguments::maximumScale):
        (BlackBerry::WebKit::WebViewportArguments::setMaximumScale):
        (BlackBerry::WebKit::WebViewportArguments::width):
        (BlackBerry::WebKit::WebViewportArguments::setWidth):
        (BlackBerry::WebKit::WebViewportArguments::height):
        (BlackBerry::WebKit::WebViewportArguments::setHeight):
        (BlackBerry::WebKit::WebViewportArguments::targetDensityDpi):
        (BlackBerry::WebKit::WebViewportArguments::setTargetDensityDpi):
        (BlackBerry::WebKit::WebViewportArguments::userScalable):
        (BlackBerry::WebKit::WebViewportArguments::setUserScalable):
        (BlackBerry::WebKit::WebViewportArguments::operator==):
        (BlackBerry::WebKit::WebViewportArguments::operator!=):
        * Api/WebViewportArguments.h: Added.
        (WebCore):
        (WebKit):

2012-04-19  Arvid Nilsson  <anilsson@rim.com>

        [BlackBerry] Always use the AnimationFrameRateController for accelerated animations
        https://bugs.webkit.org/show_bug.cgi?id=84323

        Reviewed by Antonio Gomes.

        PR 150750
        Regardless of whether there's a WebPageCompositorClient, we want the
        AnimationFrameRateController to manage animation frames.
        Reviewed internally by Andrew Lo.

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStorePrivate::blitContents):
        * Api/WebPageCompositor.cpp:
        (BlackBerry::WebKit::WebPageCompositorPrivate::WebPageCompositorPrivate):
        (BlackBerry::WebKit::WebPageCompositorPrivate::drawLayers):
        * Api/WebPageCompositor_p.h:
        (WebPageCompositorPrivate):

2012-04-18  Max Feil  <mfeil@rim.com>

        [BlackBerry] Tab awareness for HTML5 concurrent audio
        https://bugs.webkit.org/show_bug.cgi?id=82930
        Support for concurrent HTML5 audio improvements being made in
        the platform library, which need to be aware of tabs and tab
        visibility. PR96004.

        Reviewed by George Staikos.

        * Api/WebPageClient.h:
        * Api/WebPage_p.h:
        (BlackBerry::WebKit::WebPagePrivate::isVisible):

2012-04-17  Jacky Jiang  <zhajiang@rim.com>

        [BlackBerry] Viewport metatag doesn't disable double-tap zoom
        https://bugs.webkit.org/show_bug.cgi?id=84199

        Reviewed by George Staikos.

        PR: 148279
        When we set "user-scalable=no" in viewport meta-tag and change any
        other WebSettings, the WebPage can turn to be scalable.
        This is a regression of the change master_32/SHA:fa0f8ee9. In that
        change, we used setUserScalable(webSettings->isUserScalable())
        in WebPagePrivate::didChangeSettings which was incorrect for non-DRT
        case, as webSettings->isUserScalable() would always return true by
        default.
        Create a new API WebPage::setUserScalable which will be used in
        DumpRenderTree.cpp.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPage::setUserScalable):
        (WebKit):
        (BlackBerry::WebKit::WebPagePrivate::didChangeSettings):
        * Api/WebPage.h:

2012-04-17  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] Pattern matching should be applied to numbers
        https://bugs.webkit.org/show_bug.cgi?id=84152

        Reviewed by Antonio Gomes.

        PR 148906.

        Add pattern matching for number based on [0-9] to trigger
        input help matching number fields.

        * WebKitSupport/DOMSupport.cpp:
        (BlackBerry::WebKit::DOMSupport::elementPatternIndicatesNumber):
        (DOMSupport):
        (BlackBerry::WebKit::DOMSupport::elementPatternIndicatesHexadecimal):
        (BlackBerry::WebKit::DOMSupport::elementPatternMatches):
        * WebKitSupport/DOMSupport.h:
        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::convertInputType):

2012-04-17  George Staikos  <staikos@webkit.org>

        Export the initialization function so it can be called earlier.
        https://bugs.webkit.org/show_bug.cgi?id=84134

        Reviewed by Nikolas Zimmermann.

        * Api/BlackBerryGlobal.h: export globalInitialize()
        (WebKit):

2012-04-16  Antonio Gomes  <agomes@rim.com>

        Screen shift down when VKB shows by clicking in a input box MKS_3601371
        https://bugs.webkit.org/show_bug.cgi?id=84057

        Reviewed by Rob Buis.

        After switching from ScrollView::canOverscroll to ScrollView::constrainsScrollingToContentEdge
        we had a less restricted code path allowing/disallowing overscrolling. That caused
        some webpages like google.com to get on overscroll when adjusting the scroll
        position to ensure the focused input field is visible.

        Patch restricts the way we allow overscrolling to the bottom, where the virtual
        keyboard pops up from, clamping it to 0, 0 if it tries to
        overscroll upwards, and to maximum scroll position if it overscrolls
        downwards.

        PR #149846
        Internally reviewed by Mike Fenton.

        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::InputHandler::ensureFocusTextElementVisible):

2012-04-16  Yongxin Dai  <yodai@rim.com>

        [BlackBerry] Increase padding for text element
        https://bugs.webkit.org/show_bug.cgi?id=83903

        Reviewed by Antonio Gomes.
        
        PR 125888
        
        Increase the padding value for focused text element to make selection handle
        at least partially visible when the user is dragging at edge of viewport
        in in-region scoll mode.
 
        Reviewed internally by Mike Fenton.

        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::InputHandler::ensureFocusTextElementVisible):

2012-04-16  Jonathan Dong  <jonathan.dong@torchmobile.com.cn>

        [BlackBerry] Add ability for DRT to handle HTTP authentication challenges.
        https://bugs.webkit.org/show_bug.cgi?id=84031

        Reviewed by Rob Buis.

        Added the interface function didReceivedAuthenticaitonChallenge()
        in interface class DumpRenderTreeClient;
        Called m_dumpRenderTree->didReceiveAuthenticationChallenge() in
        WebPagePrivate::authenticationChallenge() when DRT is enabled.

        Test: reuse existing test cases:
        http/tests/loading/basic-credentials-sent-automatically.html
        http/tests/loading/basic-auth-resend-wrong-credentials.html

        * Api/DumpRenderTreeClient.h:
        (WebCore):
        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::authenticationChallenge):

2012-04-16  Arvid Nilsson  <anilsson@rim.com>

        [BlackBerry] Accelerated compositing layers fail to render in direct rendering mode
        https://bugs.webkit.org/show_bug.cgi?id=83933

        Reviewed by Adam Treat.

        RIM PR: 149609
        This was because I accidentally dropped an exclamation mark when
        upstreaming the patch for PR 136381 (bug #83131). Fixed by adding back
        the exclamation mark.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::rootLayerCommitTimerFired):

2012-04-12  Konrad Piascik  <kpiascik@rim.com>

        [BlackBerry] Web Inspector messages incorrectly converted
        https://bugs.webkit.org/show_bug.cgi?id=83796

        Reviewed by Rob Buis.

        The JSON sent over from the remote Web Inspector front-end was being
        mis interpreted as ISO-8859-1.  This caused all non ascii characters to
        become garbled when using the String constructor, so we use fromtUTF8 instead.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPage::dispatchInspectorMessage):

2012-04-12  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] Speed up processing of Selection region generation.
        https://bugs.webkit.org/show_bug.cgi?id=82766

        Reviewed by Rob Buis.

        PR 136593.

        Re-speed up text selection.  The previous patch had a merge
        error causing text selection not to function.  The fix
        implemented removed the optimization.  This fixes the error
        in the original patch and removes the temporary fix.

        Make style updated as suggested by Antonio Gomes.

        Reviewed Internally by Gen Mak.

        * WebKitSupport/SelectionHandler.cpp:
        (BlackBerry::WebKit::SelectionHandler::regionForTextQuads):
        (BlackBerry::WebKit::regionRectListContainsPoint):

2012-04-12  Mike Fenton  <mifenton@rim.com>

        Pattern matching for hexadecimal should include * as an allowable count.
        https://bugs.webkit.org/show_bug.cgi?id=83779

        Reviewed by Rob Buis.

        Update pattern matching check to allow wildcard for number
        of characters allowed.

        PR 148907.

        Reviewed Internally by Gen Mak.

        * WebKitSupport/DOMSupport.cpp:
        (BlackBerry::WebKit::DOMSupport::elementPatternIndicatesHexadecimal):

2012-04-11  Joe Mason  <jmason@rim.com>

        [BlackBerry] Update to the thread-safe GuardedPointer API
        https://bugs.webkit.org/show_bug.cgi?id=83603

        Reviewed by Rob Buis.

        RIM PR: 134984
        Make the destructors of all objects inheriting GuardedPointerBase protected or
        private, and delete them using BlackBerry::Platform::deleteGuardedObject.
        Access all GuardedPointers through GuardedPointerLocker.

        No new tests, refactor.

        Reviewed internally by Yong Li and George Staikos.

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStore::~BackingStore):
        * Api/BackingStore_p.h:
        (BackingStorePrivate):
        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPage::~WebPage):
        (BlackBerry::WebKit::WebPage::destroy):
        * Api/WebPage.h:
        * Api/WebPage_p.h:
        (WebPagePrivate):

2012-04-10  Arvid Nilsson  <anilsson@rim.com>

        [BlackBerry] Crash when tearing down web page rendered using WebPageCompositor
        https://bugs.webkit.org/show_bug.cgi?id=83567

        Reviewed by Antonio Gomes.

        Fixed by checking if there's a layer renderer before calling into it.

        * Api/WebPageCompositor.cpp:
        (BlackBerry::WebKit::WebPageCompositorPrivate::releaseLayerResources):

2012-04-09  Eli Fidler  <efidler@rim.com>

        [BlackBerry] Update about:config page
        https://bugs.webkit.org/show_bug.cgi?id=83515

        Reviewed by Rob Buis.

        * WebCoreSupport/AboutData.cpp:
        (WebCore::configPage):
        * WebCoreSupport/AboutDataEnableFeatures.in:
        * WebCoreSupport/AboutDataHaveFeatures.in:
        * WebCoreSupport/AboutDataUseFeatures.in:

2012-04-07  Rob Buis  <rbuis@rim.com>

        [BlackBerry] Add Battery Status API support
        https://bugs.webkit.org/show_bug.cgi?id=82615

        Reviewed by George Staikos.

        Add client implementation for Battery API.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::init):  initialize BatteryClient.
        * WebCoreSupport/BatteryClientBlackBerry.cpp: Added.
        (WebCore):
        (WebCore::BatteryClientBlackBerry::BatteryClientBlackBerry):
        (WebCore::BatteryClientBlackBerry::setController):
        (WebCore::BatteryClientBlackBerry::startUpdating):
        (WebCore::BatteryClientBlackBerry::stopUpdating):
        (WebCore::BatteryClientBlackBerry::batteryControllerDestroyed):
        (WebCore::BatteryClientBlackBerry::onLevelChange):
        (WebCore::BatteryClientBlackBerry::onChargingChange):
        (WebCore::BatteryClientBlackBerry::onChargingTimeChange):
        (WebCore::BatteryClientBlackBerry::onDischargingTimeChange):
        * WebCoreSupport/BatteryClientBlackBerry.h: Added.
        (WebCore):
        (BatteryClientBlackBerry):
        (WebCore::BatteryClientBlackBerry::~BatteryClientBlackBerry):

2012-04-06  Benjamin Poulain  <bpoulain@apple.com>

        Get rid of the useless flag PREEMPT_GEOLOCATION_PERMISSION
        https://bugs.webkit.org/show_bug.cgi?id=83325

        Reviewed by Ryosuke Niwa.

        * WebCoreSupport/AboutDataUseFeatures.in:

2012-04-06  Sean Wang  <Xuewen.Wang@torchmobile.com.cn>

        [BlackBerry] Text selection - Can't select texts
        https://bugs.webkit.org/show_bug.cgi?id=83355

        Fix the problem of not sending out the result of the function 
        SelectionHandler::regionForTextQuads(). This regression issue
        is introduced by the git commit f9446b7d671d48a833ab0acf12b1e20637e0a910.

        Reviewed by George Staikos.

        * WebKitSupport/SelectionHandler.cpp:
        (BlackBerry::WebKit::SelectionHandler::regionForTextQuads):
            Add code to return the function result.

2012-04-05  Jason Liu  <jason.liu@torchmobile.com.cn>

        [BlackBerry] Empty Referrer should not be set into ResourceRequest when loading a main resource.
        https://bugs.webkit.org/show_bug.cgi?id=83252

        Reviewed by George Staikos.

        Test: http/tests/misc/resources/referrer-main-resource.php

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::load):

2012-04-05  George Staikos  <staikos@webkit.org>

        Add a vibration client for BlackBerry and enable it.
        https://bugs.webkit.org/show_bug.cgi?id=83340

        Reviewed by Rob Buis.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::init): enable the client
        * WebCoreSupport/VibrationClientBlackBerry.cpp: Added.
        (WebCore):
        (WebCore::VibrationClientBlackBerry::VibrationClientBlackBerry):
        (WebCore::VibrationClientBlackBerry::vibrate):
        (WebCore::VibrationClientBlackBerry::cancelVibration):
        (WebCore::VibrationClientBlackBerry::vibrationDestroyed):
        * WebCoreSupport/VibrationClientBlackBerry.h: Added.
        (WebCore):
        (VibrationClientBlackBerry):
        (WebCore::VibrationClientBlackBerry::~VibrationClientBlackBerry):

2012-04-05  Arvid Nilsson  <anilsson@rim.com>

        [BlackBerry] Force compositing mode when backing store is not active
        https://bugs.webkit.org/show_bug.cgi?id=83131

        Reviewed by George Staikos.

        RIM PR: 136381
        Normally, the BlackBerry WebKit port resorts to direct rendering when
        the backing store is not active. However, direct rendering is broken
        with the OpenGL code path. This prevented multiple web pages from being
        displayed at once with the new WebPageCompositor API.

        Fixed by using accelerated compositing layer to render the root layer
        instead of backing store. This will give us a tiled layer backing the
        root layer, which for some use cases is even better than direct
        rendering.

        Reviewed internally by Filip Spacek.

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStorePrivate::shouldDirectRenderingToWindow):
        (BlackBerry::WebKit::BackingStorePrivate::blitContents):
        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::setLoadState):
        (BlackBerry::WebKit::WebPage::setVisible):
        (BlackBerry::WebKit::WebPagePrivate::suspendBackingStore):
        (BlackBerry::WebKit::WebPagePrivate::resumeBackingStore):
        (BlackBerry::WebKit::WebPagePrivate::compositorDrawsRootLayer):
        (WebKit):
        (BlackBerry::WebKit::WebPagePrivate::setCompositorDrawsRootLayer):
        (BlackBerry::WebKit::WebPagePrivate::drawLayersOnCommit):
        (BlackBerry::WebKit::WebPagePrivate::scheduleRootLayerCommit):
        (BlackBerry::WebKit::WebPagePrivate::commitRootLayer):
        (BlackBerry::WebKit::WebPagePrivate::commitRootLayerIfNeeded):
        (BlackBerry::WebKit::WebPagePrivate::rootLayerCommitTimerFired):
        (BlackBerry::WebKit::WebPagePrivate::setRootLayerCompositingThread):
        (BlackBerry::WebKit::WebPagePrivate::createCompositor):
        (BlackBerry::WebKit::WebPagePrivate::suspendRootLayerCommit):
        (BlackBerry::WebKit::WebPagePrivate::setNeedsOneShotDrawingSynchronization):
        * Api/WebPageCompositor.cpp:
        (BlackBerry::WebKit::WebPageCompositorPrivate::WebPageCompositorPrivate):
        (BlackBerry::WebKit::WebPageCompositorPrivate::drawsRootLayer):
        (WebKit):
        (BlackBerry::WebKit::WebPageCompositorPrivate::drawLayers):
        * Api/WebPageCompositor_p.h:
        (BlackBerry::WebKit::WebPageCompositorPrivate::rootLayer):
        (WebPageCompositorPrivate):
        (BlackBerry::WebKit::WebPageCompositorPrivate::setDrawsRootLayer):
        * Api/WebPage_p.h:
        (WebPagePrivate):

2012-04-05  Jonathan Dong  <jonathan.dong@torchmobile.com.cn>

        [BlackBerry] Clear local storage won't take effect until browser exit and relaunch
        https://bugs.webkit.org/show_bug.cgi?id=83253

        Reviewed by Rob Buis.

        RIM PR: #146871
        Cleared the local storage namespace of a WebPage's PageGroup
        when WebPage::clearLocalStorage() get called.
        Also deleted unused global function clearLocalStorage().

        * Api/BlackBerryGlobal.cpp:
        * Api/BlackBerryGlobal.h:
        (WebKit):
        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPage::clearLocalStorage):

2012-04-04  Rob Buis  <rbuis@rim.com>

        [BlackBerry] Make the switch statement in WebPage::notifyAppActivationStateChange() stronger
        https://bugs.webkit.org/show_bug.cgi?id=83085

        Reviewed by Antonio Gomes.

        PR 121109

        This way when we add something to the enum and forget to add to the switch we'll get a compile error.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPage::notifyAppActivationStateChange):

2012-04-03  Mike Lattanzio  <mlattanzio@rim.com>

        [BlackBerry] Expose CaseSensitive, Wrap, and HighlightAllMatches in WebPage::findNextString()
        https://bugs.webkit.org/show_bug.cgi?id=82643

        Enhance BlackBerry::WebKit::WebPage::findNextString()

        This patch adds support for toggling case sensitivity,
        search wrapping, and whether or not to highlight all matches
        in addition to the next found match.

        I refactored and renamed the new setActiveMatchAndMarker() method
        to move the active match from one range to another. This was
        required because in the case of a non wrapped search we do not
        want to adjust the m_activeMatch if another match is not found.

        Internal Review by Andy Chen.

        Reviewed by Rob Buis.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPage::findNextString):
        * Api/WebPage.h:
        * WebKitSupport/InPageSearchManager.cpp:
        (BlackBerry::WebKit::InPageSearchManager::InPageSearchManager):
        (BlackBerry::WebKit::InPageSearchManager::findNextString):
        (BlackBerry::WebKit::InPageSearchManager::findAndMarkText):
        (BlackBerry::WebKit::InPageSearchManager::setActiveMatchAndMarker):
        (BlackBerry::WebKit::InPageSearchManager::scopeStringMatches):
        * WebKitSupport/InPageSearchManager.h:
        (InPageSearchManager):

2012-04-02  Jacky Jiang  <zhajiang@rim.com>

        [BlackBerry] Adapt WebPagePrivate::webContext to the API change of r109570
        https://bugs.webkit.org/show_bug.cgi?id=82945

        Reviewed by Rob Buis.

        RIM PR: 147163
        Adapt WebPagePrivate::webContext to the API change of the security
        cherry-pick of r109570 and r112023.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::webContext):

2012-04-02  Lianghui Chen  <liachen@rim.com>

        [BlackBerry] Set ResourceRequest TargetType in WebPagePrivate::load()
        https://bugs.webkit.org/show_bug.cgi?id=80519

        Set the right TargetType for main loads if they are not already set in
        dispatchWillSendRequest().

        Also adjust NetworkRequest TargetType for decidePolicyForExternalLoad()
        and dispatchDecidePolicyForNavigationAction() as they are called before
        dispatchWillSendRequest() is called. Patch to change ResourceRequest
        TargetType earlier has been rejected as in WebKit bug
        https://bugs.webkit.org/show_bug.cgi?id=80713

        Reviewed by Rob Buis.

        * WebCoreSupport/FrameLoaderClientBlackBerry.cpp:
        (WebCore::FrameLoaderClientBlackBerry::dispatchDecidePolicyForNavigationAction):
        (WebCore::FrameLoaderClientBlackBerry::dispatchWillSendRequest):
        (WebCore::FrameLoaderClientBlackBerry::decidePolicyForExternalLoad):

2012-04-01  Arvid Nilsson  <anilsson@rim.com>

        [BlackBerry] Simplify the code that gets accelerated compositing output onto the screen
        https://bugs.webkit.org/show_bug.cgi?id=82845

        Reviewed by Rob Buis.

        RIM PR: 136381
        The code accounted for a now obsolete setup where we used one OpenGL
        window for accelerated compositing and one native window for backing
        store output, and let the windowing system composite those two. In that
        setup an optimization to try and only update the window that had
        changed was viable.

        Nowadays, we either use an offscreen surface for accelerated
        compositing output, which we blend onto the window containing the
        backing store output, or render both backing store and accelerated
        compositing output directly to one OpenGL window. We always have to
        blit the backingstore contents and draw the accelerated compositing
        output every frame with these code paths, so don't try to be clever
        about it.

        Even when we use an OpenGL window, the compositing surface can be non-
        null, so don't try to glFinish() and swap the compositing surface when
        the GLES2Context is tied to a window.

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStorePrivate::blitVisibleContents):
        (BlackBerry::WebKit::BackingStorePrivate::blitContents):
        (WebKit):
        * Api/BackingStore_p.h:
        (BackingStorePrivate):
        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::drawLayersOnCommit):
        * WebKitSupport/GLES2Context.cpp:
        (BlackBerry::WebKit::GLES2Context::swapBuffers):

2012-03-31  Jonathan Dong  <jonathan.dong@torchmobile.com.cn>

        [BlackBerry] http authenticate dialog popup only once no matter authentication pass or fail
        https://bugs.webkit.org/show_bug.cgi?id=80135

        Reviewed by Rob Buis.

        RIM PR: 145660
        Fixed a regression introduced by r111810, which used the wrong
        credential object.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::authenticationChallenge):

2012-03-30  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] Speed up processing of Selection region generation.
        https://bugs.webkit.org/show_bug.cgi?id=82766

        Reviewed by Rob Buis.

        PR 136593.

        Refactor generation of Selection IntRectRegion to avoid
        the need for IntRectRegion's helper functions which were
        not available when using it as a container without
        unioning the rects.

        This greatly speeds up rendering by maintaining the distinct
        rects as the union operation was length with large numbers of
        rects.

        Reviewed Internally by Gen Mak, Mike Lattanzio and Tyler Abbott.

        * WebKitSupport/DOMSupport.cpp:
        (BlackBerry::WebKit::DOMSupport::visibleTextQuads):
        (DOMSupport):
        * WebKitSupport/DOMSupport.h:
        * WebKitSupport/SelectionHandler.cpp:
        (BlackBerry::WebKit::SelectionHandler::clippingRectForVisibleContent):
        (BlackBerry::WebKit::SelectionHandler::regionForTextQuads):
        (BlackBerry::WebKit::SelectionHandler::setSelection):
        (WebKit):
        (BlackBerry::WebKit::regionRectListContainsPoint):
        (BlackBerry::WebKit::SelectionHandler::selectionPositionChanged):
        (BlackBerry::WebKit::SelectionHandler::caretPositionChanged):
        * WebKitSupport/SelectionHandler.h:
        (WebCore):
        (SelectionHandler):

2012-03-30  Mark Pilgrim  <pilgrim@chromium.org>

        GEOLOCATION should be implemented as Page Supplement
        https://bugs.webkit.org/show_bug.cgi?id=82228

        Reviewed by Adam Barth.

        Geolocation is now a Supplement in Page so the interface
        has changed for setting up the page's geolocation client
        initially and accessing the controller later.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::WebPagePrivate):
        (BlackBerry::WebKit::WebPagePrivate::init):
        * WebCoreSupport/GeolocationControllerClientBlackBerry.cpp:
        (GeolocationControllerClientBlackBerry::onLocationUpdate):
        (GeolocationControllerClientBlackBerry::onLocationError):
        * WebKitSupport/DumpRenderTreeSupport.cpp:
        (DumpRenderTreeSupport::numberOfPendingGeolocationPermissionRequests):
        (DumpRenderTreeSupport::resetGeolocationMock):
        (DumpRenderTreeSupport::setMockGeolocationError):
        (DumpRenderTreeSupport::setMockGeolocationPermission):
        (DumpRenderTreeSupport::setMockGeolocationPosition):

2012-03-30  Keishi Hattori  <keishi@webkit.org>

        Change ENABLE_INPUT_COLOR to ENABLE_INPUT_TYPE_COLOR and enable it for chromium
        https://bugs.webkit.org/show_bug.cgi?id=80972

        Reviewed by Kent Tamura.

        * WebCoreSupport/AboutDataEnableFeatures.in:
        * WebCoreSupport/ChromeClientBlackBerry.h:
        (ChromeClientBlackBerry):
        * WebKitSupport/DOMSupport.cpp:
        (BlackBerry::WebKit::DOMSupport::isColorInputField):
        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::convertInputType):

2012-03-29  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r111259.
        http://trac.webkit.org/changeset/111259
        https://bugs.webkit.org/show_bug.cgi?id=82650

        Caused selection regression in calculations due to
        misconstructed IntRectRegion. (Requested by mfenton on
        #webkit).

        * WebKitSupport/SelectionHandler.cpp:
        (BlackBerry::WebKit::SelectionHandler::getConsolidatedRegionOfTextQuadsForSelection):

2012-03-29  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r112553.
        http://trac.webkit.org/changeset/112553
        https://bugs.webkit.org/show_bug.cgi?id=82638

        It made all tests crash on Qt WK2 (Requested by Ossy_away on
        #webkit).

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::WebPagePrivate):
        (BlackBerry::WebKit::WebPagePrivate::init):
        * WebCoreSupport/GeolocationControllerClientBlackBerry.cpp:
        (GeolocationControllerClientBlackBerry::onLocationUpdate):
        (GeolocationControllerClientBlackBerry::onLocationError):
        * WebKitSupport/DumpRenderTreeSupport.cpp:
        (DumpRenderTreeSupport::numberOfPendingGeolocationPermissionRequests):
        (DumpRenderTreeSupport::resetGeolocationMock):
        (DumpRenderTreeSupport::setMockGeolocationError):
        (DumpRenderTreeSupport::setMockGeolocationPermission):
        (DumpRenderTreeSupport::setMockGeolocationPosition):

2012-03-29  Mark Pilgrim  <pilgrim@chromium.org>

        GEOLOCATION should be implemented as Page Supplement
        https://bugs.webkit.org/show_bug.cgi?id=82228

        Reviewed by Adam Barth.

        Geolocation is now a Supplement in Page so the interface
        has changed for setting up the page's geolocation client
        initially and accessing the controller later.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::WebPagePrivate):
        (BlackBerry::WebKit::WebPagePrivate::init):
        * WebCoreSupport/GeolocationControllerClientBlackBerry.cpp:
        (GeolocationControllerClientBlackBerry::onLocationUpdate):
        (GeolocationControllerClientBlackBerry::onLocationError):
        * WebKitSupport/DumpRenderTreeSupport.cpp:
        (DumpRenderTreeSupport::numberOfPendingGeolocationPermissionRequests):
        (DumpRenderTreeSupport::resetGeolocationMock):
        (DumpRenderTreeSupport::setMockGeolocationError):
        (DumpRenderTreeSupport::setMockGeolocationPermission):
        (DumpRenderTreeSupport::setMockGeolocationPosition):

2012-03-28  Nate Chapin  <japhet@chromium.org>

        Remove dispatchDidLoadMainResource callback, since no
        port implements it.
        https://bugs.webkit.org/show_bug.cgi?id=82539

        Reviewed by Alexey Proskuryakov.

        * WebCoreSupport/FrameLoaderClientBlackBerry.h:
        (FrameLoaderClientBlackBerry):

2012-03-28  Leo Yang  <leo.yang@torchmobile.com.cn>

        [BlackBerry] Use WebCore::PlatformMouseEvent::globalPosition() instead of WebCore::PlatformMouseEvent::globalPos() in WebPage.cpp
        https://bugs.webkit.org/show_bug.cgi?id=82420

        Reviewed by Rob Buis.

        In PlatformMouseEvent.h the blackberry porting added globalPos() (but not upstreamed yet)
        for PlatformMouseEvent, but this method is same as globalPosition() that is available for
        every porting. We should use globalPosition().

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::updateCursor):

2012-03-27  Sean Wang  <Xuewen.Wang@torchmobile.com.cn>

        [BlackBerry] Text selection - selection gets broken in test.com/individuals.htm
        https://bugs.webkit.org/show_bug.cgi?id=82292

        Change to check and avoid text selection across frames.

        Internal reviewed by Mike Fenton

        Reviewed by Rob Buis.

        * WebKitSupport/SelectionHandler.cpp:
        (BlackBerry::WebKit::visiblePositionForPointIgnoringClipping):
            support selection across frames, so check if the *framePoint* is in
            the *frame*.
        (BlackBerry::WebKit::SelectionHandler::setSelection):
            function returns a null VisablePosition, it stands for a invalid position
            or a position in the different frames, therefor we don't execute setting
            handle's position.

2012-03-27  Andrew Lo  <anlo@rim.com>

        [BlackBerry] Switch WebPageCompositor to use AnimationFrameRateController instead of timer
        https://bugs.webkit.org/show_bug.cgi?id=82350

        Switch timer in WebPageCompositor to use AnimationFrameRateController.

        Reviewed by Rob Buis.

        * Api/WebPageCompositor.cpp:
        (BlackBerry::WebKit::WebPageCompositorPrivate::WebPageCompositorPrivate):
        (BlackBerry::WebKit::WebPageCompositorPrivate::~WebPageCompositorPrivate):
        (BlackBerry::WebKit::WebPageCompositorPrivate::drawLayers):
        (BlackBerry::WebKit::WebPageCompositorPrivate::animationFrameChanged):
        * Api/WebPageCompositor_p.h:
        (WebPageCompositorPrivate):

2012-03-27  Chris Guan  <chris.guan@torchmobile.com.cn>

        A page containing multiparts with "multipart/x-mixed-replace" should not be cached.
        https://bugs.webkit.org/show_bug.cgi?id=82291

        Reviewed by Rob Buis.

        If we have a multiPart reponse with multipart/x-mixed-replace, 
        the current page should not be cached. I use isMultipartPayload() 
        API which was supposed to be set in NetworkJob to decide to 
        cache page or not.

        * WebCoreSupport/FrameLoaderClientBlackBerry.cpp:
        (WebCore::FrameLoaderClientBlackBerry::canCachePage):

2012-03-25  Arvid Nilsson  <anilsson@rim.com>

        [BlackBerry] Accelerated compositing layers fail to render when using WebPageCompositor
        https://bugs.webkit.org/show_bug.cgi?id=82104
        RIM PR: 145963

        Reviewed by Rob Buis.

        The root layer may be set before we have a layer renderer, because the
        latter is not created until we get an OpenGL context from the embedder.

        Fixed by setting the root layer on the layer renderer when it's created
        instead of assuming a certain order of events.

        * Api/WebPageCompositor.cpp:
        (BlackBerry::WebKit::WebPageCompositorPrivate::setContext):
        (BlackBerry::WebKit::WebPageCompositorPrivate::setRootLayer):

2012-03-23  Arvid Nilsson  <anilsson@rim.com>

        [BlackBerry] Add WebPageCompositor class to BlackBerry WebKit API
        https://bugs.webkit.org/show_bug.cgi?id=81121
        RIM PR: 136687

        Reviewed by Rob Buis.

        The idea is for the API client to use a WebPageCompositor object to
        render the WebPage when there's no screen window available.

        The WebPageCompositorPrivate becomes reference counted in order to be
        kept alive either because it's used for accelerated compositing layers
        or used for the WebPageCompositor API. It can still work standalone.

        Clean up some code - no need to keep track of a separate boolean
        WebPagePrivate::m_isAcceleratedCompositingActive when the state of
        m_compositor can tell you.

        Also remove duplicated code from WebPagePrivate - go directly to the
        compositor object instead, if you need to draw the AC layers.

        Reviewed internally by Robin Cao and the hasBlitJobs/blitOnIdle change
        by Filip Spacek.

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStore::hasBlitJobs):
        (BlackBerry::WebKit::BackingStore::blitOnIdle):
        (BlackBerry::WebKit::BackingStorePrivate::blitContents):
        (BlackBerry::WebKit::BackingStorePrivate::drawSubLayers):
        (BlackBerry::WebKit::BackingStorePrivate::drawAndBlendLayersForDirectRendering):
        (BlackBerry::WebKit::BackingStorePrivate::surfaceSize):
        (BlackBerry::WebKit::BackingStorePrivate::buffer):
        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::WebPagePrivate):
        (BlackBerry::WebKit::WebPagePrivate::drawLayersOnCommit):
        (BlackBerry::WebKit::WebPagePrivate::setCompositor):
        (BlackBerry::WebKit::WebPagePrivate::setRootLayerCompositingThread):
        (BlackBerry::WebKit::WebPagePrivate::createCompositor):
        (BlackBerry::WebKit::WebPagePrivate::destroyCompositor):
        * Api/WebPage.h:
        * Api/WebPageCompositor.cpp:
        (BlackBerry::WebKit::WebPageCompositorPrivate::WebPageCompositorPrivate):
        (BlackBerry::WebKit::WebPageCompositorPrivate::setContext):
        (BlackBerry::WebKit::WebPageCompositorPrivate::hardwareCompositing):
        (BlackBerry::WebKit::WebPageCompositorPrivate::setRootLayer):
        (BlackBerry::WebKit::WebPageCompositorPrivate::render):
        (BlackBerry::WebKit::WebPageCompositorPrivate::drawLayers):
        (BlackBerry::WebKit::WebPageCompositorPrivate::animationTimerFired):
        (BlackBerry::WebKit::WebPageCompositorPrivate::compositorDestroyed):
        (BlackBerry::WebKit::WebPageCompositor::WebPageCompositor):
        (BlackBerry::WebKit::WebPageCompositor::~WebPageCompositor):
        (BlackBerry::WebKit::WebPageCompositor::client):
        (BlackBerry::WebKit::WebPageCompositor::prepareFrame):
        (BlackBerry::WebKit::WebPageCompositor::render):
        (BlackBerry::WebKit::WebPageCompositor::cleanup):
        (BlackBerry::WebKit::WebPageCompositor::contextLost):
        * Api/WebPageCompositor.h: Added.
        * Api/WebPageCompositorClient.h: Added.
        * Api/WebPageCompositor_p.h:
        (BlackBerry::WebKit::WebPageCompositorPrivate::create):
        (BlackBerry::WebKit::WebPageCompositorPrivate::context):
        (BlackBerry::WebKit::WebPageCompositorPrivate::animationFrameTimestamp):
        (BlackBerry::WebKit::WebPageCompositorPrivate::page):
        (BlackBerry::WebKit::WebPageCompositorPrivate::client):
        * Api/WebPage_p.h:
        (BlackBerry::WebKit::WebPagePrivate::client):
        (BlackBerry::WebKit::WebPagePrivate::isAcceleratedCompositingActive):
        (BlackBerry::WebKit::WebPagePrivate::compositor):

2012-03-22  Charles Wei  <charles.wei@torchmobile.com.cn>

        [BlackBerry] Need to store the meta info of a page in the ViewState of the history
        https://bugs.webkit.org/show_bug.cgi?id=82000

        Reviewed by Rob Buis.

        Internally reviewed by George Staikos.

        * WebCoreSupport/FrameLoaderClientBlackBerry.cpp:
        (WebCore::FrameLoaderClientBlackBerry::saveViewStateToItem):
        (WebCore::FrameLoaderClientBlackBerry::restoreViewState):

2012-03-22  Jonathan Dong  <jonathan.dong@torchmobile.com.cn>

        [BlackBerry] add interface clearCredentials() and clearNeverRememberSites()
        https://bugs.webkit.org/show_bug.cgi?id=81887

        Reviewed by Rob Buis.

        Added two interface functions clearCredentials() and
        clearNeverRememberSites() into class WebPage, which
        should be used by UI to clear the stored credential
        information and never remember sites.
        Also implemented the corresponding functions in class
        CredentialManager to call CredentialBackingStore
        to perform the actual clear table work.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPage::clearCredentials):
        (WebKit):
        (BlackBerry::WebKit::WebPage::clearNeverRememberSites):
        * Api/WebPage.h:
        * WebCoreSupport/CredentialManager.cpp:
        (WebCore::CredentialManager::clearCredentials):
        (WebCore):
        (WebCore::CredentialManager::clearNeverRememberSites):
        * WebCoreSupport/CredentialManager.h:
        (CredentialManager):

2012-03-22  Jonathan Dong  <jonathan.dong@torchmobile.com.cn>

        [BlackBerry] http authenticate dialog popup only once no matter authentication pass or fail
        https://bugs.webkit.org/show_bug.cgi?id=80135

        Reviewed by Rob Buis.

        Modified the interface function authenticationChallenge() in
        class WebPagePrivate by returning a bool to indicate if user
        pressed Ok button or not, and moved the Credential from return
        value to the reference parameter.
        Also updated the corresponding interface functions in class
        WebPageClient.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::authenticationChallenge):
        * Api/WebPageClient.h:
        * Api/WebPage_p.h:
        (WebPagePrivate):

2012-03-22  Mike Lattanzio  <mlattanzio@rim.com>

        [BlackBerry] DeviceDPI Scaling is broken on mobile.
        https://bugs.webkit.org/show_bug.cgi?id=81966

        Fix our viewport argument handling to only override the
        targetDensityDpi on tablet devices. Allow WebCore to use
        dpi scaling for smaller screen mobile devices.

        Reviewed by Rob Buis.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::recomputeVirtualViewportFromViewportArguments):

2012-03-22  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] Add pattern matching for hexadecimal type input fields
        https://bugs.webkit.org/show_bug.cgi?id=81944

        Reviewed by Rob Buis.

        PR 98504.

        Add mapping of patterns matching hexadecimal input
        to a specialized type and provide input styling based
        on that format.

        Reviewed Internally by Gen Mak.

        * WebKitSupport/DOMSupport.cpp:
        (BlackBerry::WebKit::DOMSupport::elementPatternIndicatesHexadecimal):
        (DOMSupport):
        * WebKitSupport/DOMSupport.h:
        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::convertInputType):
        (BlackBerry::WebKit::inputStyle):

2012-03-22  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] DOMSupport isPositionInNode should have early returns for null nodes
        https://bugs.webkit.org/show_bug.cgi?id=81929

        Reviewed by Rob Buis.

        Make suggested style clean up and move int offset = 0 directly
        above is actual usage.

        * WebKitSupport/DOMSupport.cpp:
        (BlackBerry::WebKit::DOMSupport::isPositionInNode):

2012-03-22  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] DOMSupport isPositionInNode should have early returns for null nodes
        https://bugs.webkit.org/show_bug.cgi?id=81929

        Reviewed by Rob Buis.

        Add early returns in isPositionInNode when either
        node or the position node is null.

        * WebKitSupport/DOMSupport.cpp:
        (BlackBerry::WebKit::DOMSupport::isPositionInNode):

2012-03-21  Jonathan Dong  <jonathan.dong@torchmobile.com.cn>

        [BlackBerry] Credential save and autofill implemetation
        https://bugs.webkit.org/show_bug.cgi?id=80401

        Reviewed by Rob Buis.

        This patch is intended to implement the credential persist
        and autofill feature for BlackBerry porting.

        Moved interface authenticationChallenge() from class
        FrameLoaderClientBlackBerry to WebPagePrivate (derived from
        PageClientBlackBerry as changes made in its parent interface class);
        Implemented notifyShouldSaveCredential() in WebPagePrivate
        and WebPageClient as well.
        Added credentialManager() to retrive CredentialManager instance
        as a global singleton; removed its m_frameLoaderClient which is
        replaced with a passed in PageClientBlackBerry pointer, and modified
        the interface function accordingly.

        For the http authentication, autofill the input dialog in
        function authenticationChallenge() and save the credential
        information in the same function;
        For the in-form authentication, autofill the username and
        password input fields in function dispatchDidFinishLoad(),
        and save the credential information in function
        dispatchWillSubmitForm() or dispatchWillSendSubmitEvent().

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::authenticationChallenge):
        (WebKit):
        (BlackBerry::WebKit::WebPagePrivate::notifyShouldSaveCredential):
        * Api/WebPageClient.h:
        * Api/WebPage_p.h:
        (WebPagePrivate):
        * WebCoreSupport/CredentialManager.cpp:
        (WebCore::credentialManager):
        (WebCore::CredentialManager::saveCredentialIfConfirmed):
        * WebCoreSupport/CredentialManager.h:
        (CredentialManager):
        (WebCore::CredentialManager::CredentialManager):
        (WebCore):
        * WebCoreSupport/FrameLoaderClientBlackBerry.cpp:
        (WebCore::FrameLoaderClientBlackBerry::dispatchDidFinishLoad):
        (WebCore::FrameLoaderClientBlackBerry::dispatchWillSubmitForm):
        (WebCore::FrameLoaderClientBlackBerry::dispatchWillSendSubmitEvent):
        (WebCore):
        * WebCoreSupport/FrameLoaderClientBlackBerry.h:
        (FrameLoaderClientBlackBerry):

2012-03-20  Jacky Jiang  <zhajiang@rim.com>

        [BlackBerry] Dijit crash WebCore::CookieManager::getRawCookies
        https://bugs.webkit.org/show_bug.cgi?id=81686

        Reviewed by Rob Buis.

        When deciding the policy for navigation action, if the url of the
        request is null, ignore it to avoid the ASSERT failure in
        MainResourceLoader::willSendRequest.

        * WebCoreSupport/FrameLoaderClientBlackBerry.cpp:
        (WebCore::FrameLoaderClientBlackBerry::dispatchDecidePolicyForNavigationAction):

2012-03-20  Konrad Piascik  <kpiascik@rim.com>

        [BlackBerry] BlackBerry can clear cookies and cache from the Web Inspector
        https://bugs.webkit.org/show_bug.cgi?id=81670

        Reviewed by Rob Buis.

        * WebCoreSupport/InspectorClientBlackBerry.h:
        (WebCore::InspectorClientBlackBerry::canClearBrowserCache):
        (WebCore::InspectorClientBlackBerry::canClearBrowserCookies):

2012-03-20  Nima Ghanavatian  <nghanavatian@rim.com>

        [BlackBerry] Removing doubly defined methods in BackingStore.cpp
        https://bugs.webkit.org/show_bug.cgi?id=81664

        Reviewed by Rob Buis.

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStorePrivate::drawAndBlendLayersForDirectRendering):

2012-03-20  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] Crash when dragging the FCC caret over an invalid node.
        https://bugs.webkit.org/show_bug.cgi?id=81654

        Reviewed by Rob Buis.

        PR 144505.

        The position did not have a valid container node and was causing
        a crash.  Validate the node pointer before using it.

        * WebKitSupport/DOMSupport.cpp:
        (BlackBerry::WebKit::DOMSupport::DOMContainerNodeForPosition):

2012-03-20  Jason Liu  <jason.liu@torchmobile.com.cn>

        [BlackBerry]Cookies shouldn't be set into each of webcore's request and platform's request. And this makes a regression.
        https://bugs.webkit.org/show_bug.cgi?id=80800

        Reviewed by George Staikos.

        * WebCoreSupport/FrameLoaderClientBlackBerry.cpp:
        (WebCore::FrameLoaderClientBlackBerry::dispatchDecidePolicyForNavigationAction):
        (WebCore::FrameLoaderClientBlackBerry::dispatchWillSendRequest):
        (WebCore::FrameLoaderClientBlackBerry::decidePolicyForExternalLoad):

2012-03-19  Adam Barth  <abarth@webkit.org>

        Remove support for "magic" iframe
        https://bugs.webkit.org/show_bug.cgi?id=81590

        Reviewed by Eric Seidel.

        Remove FrameLoaderClient methods that no longer exist.

        * WebCoreSupport/FrameLoaderClientBlackBerry.cpp:
        (WebCore):
        * WebCoreSupport/FrameLoaderClientBlackBerry.h:
        (FrameLoaderClientBlackBerry):
        (WebCore::FrameLoaderClientBlackBerry::didDetectXSS):

2012-03-19  Tyler Abbott  <tabbott@rim.com>

        [BlackBerry] speed up text selection for large selections
        https://bugs.webkit.org/show_bug.cgi?id=81536

        When selecting large disjoint areas of text the cost
        of calculating the IntRectRegion union becomes very
        expensive. Simply placing all of the text quads into
        the IntRectRegion is faster despite the larger memory
        footprint and the additional calculations at render
        time.

        Reviewed by Rob Buis.

        * WebKitSupport/SelectionHandler.cpp:
        (BlackBerry::WebKit::SelectionHandler::getConsolidatedRegionOfTextQuadsForSelection):

2012-03-19  Mike Lattanzio  <mlattanzio@rim.com>

        [BlackBerry] Use BlackBerry::Platform::DeviceInfo to generate UserAgent
        https://bugs.webkit.org/show_bug.cgi?id=81269

        Generate the UserAgent lazily, using it as the default for the
        WebSettings object. BlackBerry::Platform::DeviceInfo is used
        to ensure the information is accurate to the specific device.

        Remove the !isEmpty() assert when fetching the UA from the
        WebSettings object, as it will now always be properly initialized.

        Add a static initializer block to ensure defaultUserAgent() is
        thread-safe from that moment onward.

        Reviewed by Rob Buis.

        * Api/WebPage.cpp:
        (WebKit):
        (BlackBerry::WebKit::WebPagePrivate::init):
        (BlackBerry::WebKit::WebPagePrivate::defaultUserAgent):
        * Api/WebPage_p.h:
        (WebPagePrivate):
        * Api/WebSettings.cpp:
        (BlackBerry::WebKit::WebSettings::setUserAgentString):
        * Api/WebSettings.h:

2012-03-19  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] Input fields with id of e-mail and url should be styled as such.
        https://bugs.webkit.org/show_bug.cgi?id=81364

        Reviewed by Rob Buis.

        Be less aggressive on matching url, and update as suggested by Rob.

        * WebKitSupport/DOMSupport.cpp:
        (BlackBerry::WebKit::DOMSupport::matchesReservedStringUrl):
        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::inputStyle):

2012-03-19  Arvid Nilsson  <anilsson@rim.com>

        [BlackBerry] Remove obsolete optimization in WebPageCompositorPrivate
        https://bugs.webkit.org/show_bug.cgi?id=81115

        Reviewed by Benjamin Poulain.

        The compositor tried to avoid rendering the same stuff twice, using a
        mechanism that didn't work properly and has been redundant since we
        introduced deferred blits. Remove this code.

        Reviewed internally by Robin Cao.

        * Api/WebPageCompositor.cpp:
        (BlackBerry::WebKit::WebPageCompositorPrivate::WebPageCompositorPrivate):
        (BlackBerry::WebKit::WebPageCompositorPrivate::commit):
        (BlackBerry::WebKit::WebPageCompositorPrivate::drawLayers):
        * Api/WebPageCompositor_p.h:

2012-03-17  Charles Wei  <charles.wei@torchmobile.com.cn>

        [BlackBerry] Enable Web Timing for performance profiling and improvement.
        https://bugs.webkit.org/show_bug.cgi?id=81085

        Reviewed by Rob Buis.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::init):

2012-03-16  Arvid Nilsson  <anilsson@rim.com>

        [BlackBerry] Rename the existing WebPageCompositor class to WebPageCompositorPrivate
        https://bugs.webkit.org/show_bug.cgi?id=81108
        RIM PR: 136687

        Reviewed by Rob Buis.

        This is done in anticipation of a new WebPageCompositor class in the
        public API. The existing internal class will serve to d-pointerize the
        new public API. In addition, it is and will be possible to create only
        the private class, for cases where existing code paths require
        OpenGL compositing (i.e. due to accelerated compositing layers being
        added to the page).

        Reviewed internally by Robin Cao.

        * Api/BackingStore.h:
        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::setIsAcceleratedCompositingActive):
        * Api/WebPageCompositor.cpp: Renamed from Source/WebKit/blackberry/WebKitSupport/WebPageCompositor.cpp.
        (BlackBerry::WebKit::WebPageCompositorPrivate::WebPageCompositorPrivate):
        (BlackBerry::WebKit::WebPageCompositorPrivate::~WebPageCompositorPrivate):
        (BlackBerry::WebKit::WebPageCompositorPrivate::hardwareCompositing):
        (BlackBerry::WebKit::WebPageCompositorPrivate::setRootLayer):
        (BlackBerry::WebKit::WebPageCompositorPrivate::setBackingStoreUsesOpenGL):
        (BlackBerry::WebKit::WebPageCompositorPrivate::commit):
        (BlackBerry::WebKit::WebPageCompositorPrivate::drawLayers):
        (BlackBerry::WebKit::WebPageCompositorPrivate::releaseLayerResources):
        (BlackBerry::WebKit::WebPageCompositorPrivate::animationTimerFired):
        * Api/WebPageCompositor_p.h: Renamed from Source/WebKit/blackberry/WebKitSupport/WebPageCompositor.h.
        (BlackBerry::WebKit::WebPageCompositorPrivate::layoutRectForCompositing):
        (BlackBerry::WebKit::WebPageCompositorPrivate::setLayoutRectForCompositing):
        (BlackBerry::WebKit::WebPageCompositorPrivate::contentsSizeForCompositing):
        (BlackBerry::WebKit::WebPageCompositorPrivate::setContentsSizeForCompositing):
        (BlackBerry::WebKit::WebPageCompositorPrivate::lastCompositingResults):
        (BlackBerry::WebKit::WebPageCompositorPrivate::setLastCompositingResults):
        * Api/WebPage_p.h:
        * CMakeListsBlackBerry.txt:

2012-03-16  Nima Ghanavatian  <nghanavatian@rim.com>

        [BlackBerry] Syncing up left over bits in WebKitSupport from our local branch to upstream
        https://bugs.webkit.org/show_bug.cgi?id=81118

        Reviewed by Rob Buis.

        This is a consolidation of various changes that are in our local dev branch
        but do not appear in our upstreamed port.

        * WebKitSupport/DumpRenderTreeSupport.cpp:
        (DumpRenderTreeSupport::computedStyleIncludingVisitedInfo):
        * WebKitSupport/FatFingers.cpp:
        (BlackBerry::WebKit::FatFingers::isElementClickable):
        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::InputHandler::spannableTextInRange):
        * WebKitSupport/SurfacePool.cpp:
        (BlackBerry::WebKit::SurfacePool::createBuffers):
        (BlackBerry::WebKit::SurfacePool::releaseBuffers):
        * WebKitSupport/TouchEventHandler.cpp:
        (BlackBerry::WebKit::TouchEventHandler::handleTouchPoint):
        (BlackBerry::WebKit::TouchEventHandler::handleFatFingerPressed):
        * WebKitSupport/WebPageCompositor.cpp:
        (BlackBerry::WebKit::WebPageCompositor::WebPageCompositor):
        * WebKitSupport/WebPageCompositor.h:
        (WebPageCompositor):

2012-03-16  Nima Ghanavatian  <nghanavatian@rim.com>

        [BlackBerry] Syncing up left over bits in WebCoreSupport from our local branch to upstream
        https://bugs.webkit.org/show_bug.cgi?id=81120

        Reviewed by Rob Buis.

        This is a consolidation of various changes that are in our local dev branch
        but do not appear in our upstreamed port.

        * WebCoreSupport/AboutDataEnableFeatures.in:
        * WebCoreSupport/AboutDataHaveFeatures.in:
        * WebCoreSupport/AboutDataUseFeatures.in:
        * WebCoreSupport/ChromeClientBlackBerry.cpp:
        (WebCore::ChromeClientBlackBerry::hasOpenedPopup):
        (WebCore):
        (WebCore::ChromeClientBlackBerry::screenToRootView):
        (WebCore::ChromeClientBlackBerry::rootViewToScreen):
        (WebCore::ChromeClientBlackBerry::invalidateRootView):
        (WebCore::ChromeClientBlackBerry::invalidateContentsAndRootView):
        (WebCore::ChromeClientBlackBerry::invalidateContentsForSlowScroll):
        (WebCore::ChromeClientBlackBerry::scrollableAreasDidChange):
        (WebCore::ChromeClientBlackBerry::createColorChooser):
        * WebCoreSupport/ChromeClientBlackBerry.h:
        (ChromeClientBlackBerry):
        (WebCore::ChromeClientBlackBerry::numTouchEventHandlersChanged):
        * WebCoreSupport/EditorClientBlackBerry.cpp:
        (WebCore::EditorClientBlackBerry::registerUndoStep):
        (WebCore::EditorClientBlackBerry::registerRedoStep):
        (WebCore::EditorClientBlackBerry::undo):
        (WebCore::EditorClientBlackBerry::redo):
        * WebCoreSupport/EditorClientBlackBerry.h:
        (EditorClientBlackBerry):
        * WebCoreSupport/GeolocationControllerClientBlackBerry.cpp:
        (GeolocationControllerClientBlackBerry::requestPermission):
        (GeolocationControllerClientBlackBerry::cancelPermissionRequest):
        * WebCoreSupport/GeolocationControllerClientBlackBerry.h:
        * WebCoreSupport/InspectorClientBlackBerry.cpp:
        (WebCore::InspectorClientBlackBerry::closeInspectorFrontend):
        (WebCore):
        (WebCore::InspectorClientBlackBerry::bringFrontendToFront):
        * WebCoreSupport/InspectorClientBlackBerry.h:
        (InspectorClientBlackBerry):
        * WebCoreSupport/NotificationPresenterImpl.cpp:
        (WebCore::NotificationPresenterImpl::show):

2012-03-16  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] Input fields with id of e-mail and url should be styled as such.
        https://bugs.webkit.org/show_bug.cgi?id=81364

        Reviewed by Rob Buis.

        Treat fields that have name/id's that match url or
        email as url or email fields providing the appropriate
        keyboard.

        PR 137259.

        Reviewed Internally by Gen Mak and Nima Ghanavatian.

        * WebKitSupport/DOMSupport.cpp:
        (BlackBerry::WebKit::DOMSupport::matchesReservedStringEmail):
        (DOMSupport):
        (BlackBerry::WebKit::DOMSupport::matchesReservedStringUrl):
        (BlackBerry::WebKit::DOMSupport::elementIdOrNameIndicatesEmail):
        (BlackBerry::WebKit::DOMSupport::elementIdOrNameIndicatesUrl):
        (BlackBerry::WebKit::DOMSupport::matchesReservedStringPreventingAutocomplete):
        * WebKitSupport/DOMSupport.h:
        (WebCore):
        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::convertInputType):
        (BlackBerry::WebKit::inputStyle):

2012-03-16  Nima Ghanavatian  <nghanavatian@rim.com>

        [BlackBerry] Syncing up left over bits in Api from our local branch to upstream
        https://bugs.webkit.org/show_bug.cgi?id=81105

        Reviewed by Rob Buis.

        This patches fixes up a previous sync done in this directory and adds some new bits
        as well.  This is accurate as of ddea1528b37b29925638fe1183318b3c3994f1f8 in our
        local repo.

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStorePrivate::drawAndBlendLayersForDirectRendering):
        (WebKit):
        (BlackBerry::WebKit::BackingStorePrivate::drawLayersOnCommitIfNeeded):
        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::webContext):
        (BlackBerry::WebKit::WebPage::webContext):
        (BlackBerry::WebKit::WebPagePrivate::handleMouseEvent):
        * Api/WebPage.h:
        * Api/WebPage_p.h:
        (WebPagePrivate):

2012-03-16  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] Input processing mode should be cancelled when processing hot keys
        https://bugs.webkit.org/show_bug.cgi?id=81348

        Reviewed by Rob Buis.

        Don't suppress IMF notifications if we are handling
        the event as a hotkey.

        Reviewed Internally by Nima Ghanavatian.

        * WebCoreSupport/EditorClientBlackBerry.cpp:
        (WebCore::EditorClientBlackBerry::handleKeyboardEvent):

2012-03-16  Robin Cao  <robin.cao@torchmobile.com.cn>

        [BlackBerry] Can not open certain links from bridge applications
        https://bugs.webkit.org/show_bug.cgi?id=81197

        Reviewed by Rob Buis.

        Currently, the engine asks the client to handle some type of requests externally.
        But WebPageClient::handleStringPattern is not yet implemented and exposed to
        the client. Before that, we still need to give the client a chance to decide
        how to handle requests such as 'mailto:'.

        To address this problem, r108763 introduced a change that ask the client to
        decide how to handle the navigation in dispatchDecidePolicyForNewWindowAction().
        This is not intuitive and will bring troubles, because this navigation will
        happen in the new page. So the new page client is to decide how to handle
        the navigation, not the old one.

        This patch reverts r108763 and skips calling WebPageClient::handleStringPattern
        since it's not implemented.

        This way the new window action will continue, and the logic in
        dispatchDecidePolicyForNavigationAction() will handle the navigation correctly.

        * WebCoreSupport/FrameLoaderClientBlackBerry.cpp:
        (WebCore::FrameLoaderClientBlackBerry::dispatchDecidePolicyForNewWindowAction):
        (WebCore::FrameLoaderClientBlackBerry::decidePolicyForExternalLoad):

2012-03-16  Leo Yang  <leo.yang@torchmobile.com.cn>

        [BlackBerry] Crash when going back from an xhtml document containing <img>
        https://bugs.webkit.org/show_bug.cgi?id=81297

        Reviewed by Rob Buis.

        This is manually reverting the offending internal commit which checked-in before upstreaming.

        * WebCoreSupport/FrameLoaderClientBlackBerry.cpp:
        (WebCore::FrameLoaderClientBlackBerry::canCachePage):

2012-03-16  Genevieve Mak  <gmak@rim.com>

        [BlackBerry] viewportRect has changed to viewportSize
        https://bugs.webkit.org/show_bug.cgi?id=81262

        Reviewed by Antonio Gomes.

        Set size instead of rect in constructor.
        * WebKitSupport/InRegionScrollableArea.cpp:
        (BlackBerry::WebKit::InRegionScrollableArea::InRegionScrollableArea):

2012-03-16  Andrew Lo  <anlo@rim.com>

        [BlackBerry] Enable PAGE_VISIBILITY_API
        https://bugs.webkit.org/show_bug.cgi?id=81257

        Set Page visibility state for BlackBerry port.

        Reviewed by Rob Buis.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::WebPagePrivate):
        (WebKit):
        (BlackBerry::WebKit::WebPagePrivate::setPageVisibilityState):
        (BlackBerry::WebKit::WebPagePrivate::setVisible):
        (BlackBerry::WebKit::WebPage::setVisible):
        (BlackBerry::WebKit::WebPagePrivate::notifyAppActivationStateChange):
        (BlackBerry::WebKit::WebPage::notifyAppActivationStateChange):
        * Api/WebPage_p.h:
        (WebPagePrivate):

2012-03-14  Arvid Nilsson  <anilsson@rim.com>

        [BlackBerry] Make sure WebPage and BackingStore don't crash without a Window
        https://bugs.webkit.org/show_bug.cgi?id=81099

        Reviewed by Rob Buis.

        Also rename the "compositing/blitting to main window" variables to
        instead refer to OpenGL compositing. The code paths it triggers are
        related to the BackingStore using OpenGL compositing, and can be useful
        even when there's no window.

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStorePrivate::isOpenGLCompositing):
        (BlackBerry::WebKit::BackingStorePrivate::render):
        (BlackBerry::WebKit::BackingStorePrivate::copyPreviousContentsToBackSurfaceOfWindow):
        (BlackBerry::WebKit::BackingStorePrivate::paintDefaultBackground):
        (BlackBerry::WebKit::BackingStorePrivate::blitContents):
        (BlackBerry::WebKit::BackingStorePrivate::blitTileRect):
        (BlackBerry::WebKit::BackingStorePrivate::blendCompositingSurface):
        (BlackBerry::WebKit::BackingStorePrivate::renderContents):
        (BlackBerry::WebKit::BackingStorePrivate::blitToWindow):
        (BlackBerry::WebKit::BackingStorePrivate::checkerWindow):
        (BlackBerry::WebKit::BackingStorePrivate::invalidateWindow):
        (BlackBerry::WebKit::BackingStorePrivate::clearWindow):
        (BlackBerry::WebKit::BackingStorePrivate::drawSubLayers):
        (BlackBerry::WebKit::BackingStorePrivate::surfaceSize):
        (BlackBerry::WebKit::BackingStorePrivate::buffer):
        * Api/BackingStore_p.h:
        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::didPluginEnterFullScreen):
        (BlackBerry::WebKit::WebPagePrivate::didPluginExitFullScreen):
        (BlackBerry::WebKit::WebPagePrivate::drawLayersOnCommit):
        (BlackBerry::WebKit::WebPagePrivate::drawSubLayers):
        (BlackBerry::WebKit::WebPagePrivate::rootLayerCommitTimerFired):
        * WebCoreSupport/ChromeClientBlackBerry.cpp:
        (WebCore::ChromeClientBlackBerry::windowRect):
        (WebCore::ChromeClientBlackBerry::screenToWindow):
        (WebCore::ChromeClientBlackBerry::windowToScreen):
        * WebKitSupport/GLES2Context.cpp:
        (BlackBerry::WebKit::GLES2Context::GLES2Context):
        * WebKitSupport/TouchEventHandler.h:
        * WebKitSupport/WebPageCompositor.cpp:
        (BlackBerry::WebKit::WebPageCompositor::WebPageCompositor):
        (BlackBerry::WebKit::WebPageCompositor::setBackingStoreUsesOpenGL):
        (BlackBerry::WebKit::WebPageCompositor::drawLayers):
        * WebKitSupport/WebPageCompositor.h:

2012-03-13  Jon Lee  <jonlee@apple.com>

        Separate NOTIFICATIONS and LEGACY_NOTIFICATIONS
        https://bugs.webkit.org/show_bug.cgi?id=80922
        <rdar://problem/11035082>

        Reviewed by Jian Li.

        You can include either NOTIFICATIONS or LEGACY_NOTIFICATIONS and have a complete API.
        LEGACY_NOTIFICATIONS should cover all of the previous functionality, and NOTIFICATIONS will cover the
        new API. Therefore, APIs that are common between the two will have:
        #if ENABLE(NOTIFICATIONS) || ENABLE(LEGACY_NOTIFICATIONS)

        This patch initially sets both to be exactly the same. As other bugs with patches begin to migrate to
        the new API, the defines will begin to split. This allows ports to decide which set of APIs to include.

        Update everything to be #if ENABLE(NOTIFICATIONS) || ENABLE(LEGACY_NOTIFICATIONS)
        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::init):
        * WebCoreSupport/NotificationPresenterImpl.cpp:
        * WebCoreSupport/NotificationPresenterImpl.h:

2012-03-14  Nima Ghanavatian  <nghanavatian@rim.com>

        [BlackBerry] Syncing up left over bits in Api from our local branch to upstream
        https://bugs.webkit.org/show_bug.cgi?id=81105

        Reviewed by Rob Buis.

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStorePrivate::renderContents):
        (BlackBerry::WebKit::BackingStorePrivate::isActive):
        (BlackBerry::WebKit::BackingStore::createBackingStoreMemory):
        (WebKit):
        (BlackBerry::WebKit::BackingStore::releaseBackingStoreMemory):
        * Api/BackingStore.h:
        * Api/WebPage.cpp:
        (BlackBerry::WebKit::toWebCoreMouseEventType):
        (BlackBerry::WebKit::WebPagePrivate::init):
        (BlackBerry::WebKit::WebPagePrivate::setLoadState):
        (BlackBerry::WebKit::WebPagePrivate::activeNodeContext):
        (BlackBerry::WebKit::WebPage::activeNodeContext):
        (BlackBerry::WebKit::WebPagePrivate::updateCursor):
        (BlackBerry::WebKit::WebPagePrivate::contextNode):
        (BlackBerry::WebKit::WebPagePrivate::handleMouseEvent):
        * Api/WebPage.h:
        * Api/WebPage_p.h:
        (WebPagePrivate):

2012-03-14  Andrew Lo  <anlo@rim.com>

        [BlackBerry] Implement REQUEST_ANIMATION_FRAME_DISPLAY_MONITOR using AnimationFrameRateController
        https://bugs.webkit.org/show_bug.cgi?id=81000

        Set the platform display ID, needed for DisplayRefreshMonitor.

        Reviewed by Antonio Gomes.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::init):

2012-03-14  Leo Yang  <leo.yang@torchmobile.com.cn>

        [BlackBerry] Upstream the BlackBerry change to platform/Cursor.h
        https://bugs.webkit.org/show_bug.cgi?id=81086

        Reviewed by Rob Buis.

        There was an alias named PlatformCursorHandle for PlatformCursor
        in the internal version of Cursor.h. But it's not necessary so it's
        not included in the upstreaming version of Cursor.h. As a result,
        use PlatformCursor directly.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::setCursor):
        * Api/WebPage_p.h:
        (WebPagePrivate):

2012-03-13  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] Input focus state should unfocus the frame selection instead of the field.
        https://bugs.webkit.org/show_bug.cgi?id=81023

        Reviewed by Antonio Gomes.

        PR 137400.

        Prevent cursor drawing by unfocusing the frame selection
        when input mode is not ready.

        Greatly simplify the decision to focus input fields by removing
        all ties to the page load state and base it on input.  Input mode
        is disabled when a page load begins and enabled on any user input.

        The field is focused and ready for input immediately, only the
        frame selection (or cursor) is unfocused.

        Reviewed Internally by Gen Mak, Antonio Gomes and Nima Ghanavatian.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::setLoadState):
        (BlackBerry::WebKit::WebPagePrivate::handleMouseEvent):
        * Api/WebPageClient.h:
        * WebCoreSupport/EditorClientBlackBerry.cpp:
        (WebCore::EditorClientBlackBerry::shouldBeginEditing):
        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::InputHandler::InputHandler):
        (BlackBerry::WebKit::InputHandler::setElementUnfocused):
        (BlackBerry::WebKit::InputHandler::enableInputMode):
        (BlackBerry::WebKit::InputHandler::setElementFocused):
        (BlackBerry::WebKit::InputHandler::ensureFocusTextElementVisible):
        (BlackBerry::WebKit::InputHandler::notifyClientOfKeyboardVisibilityChange):
        (BlackBerry::WebKit::InputHandler::handleKeyboardInput):
        (BlackBerry::WebKit::InputHandler::setComposingText):
        * WebKitSupport/InputHandler.h:
        (InputHandler):
        * WebKitSupport/TouchEventHandler.cpp:
        (BlackBerry::WebKit::TouchEventHandler::handleTouchPoint):

2012-03-13  Adam Barth  <abarth@webkit.org> && Benjamin Poulain  <bpoulain@apple.com>

        Always enable ENABLE(CLIENT_BASED_GEOLOCATION)
        https://bugs.webkit.org/show_bug.cgi?id=78853

        Reviewed by Adam Barth.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::init):
        * WebCoreSupport/AboutDataEnableFeatures.in:
        * WebCoreSupport/ChromeClientBlackBerry.cpp:
        * WebCoreSupport/ChromeClientBlackBerry.h:
        (ChromeClientBlackBerry):
        * WebKitSupport/DumpRenderTreeSupport.cpp:
        (toGeolocationClientMock):
        (DumpRenderTreeSupport::numberOfPendingGeolocationPermissionRequests):
        (DumpRenderTreeSupport::resetGeolocationMock):
        (DumpRenderTreeSupport::setMockGeolocationError):
        (DumpRenderTreeSupport::setMockGeolocationPermission):
        (DumpRenderTreeSupport::setMockGeolocationPosition):

2012-03-13  Mike Lattanzio  <mlattanzio@rim.com>

        Remove ActiveNodeContext in favour of BlackBerry::Platform::WebContext
        https://bugs.webkit.org/show_bug.cgi?id=80984

        Remove ActiveNodeContext, and switch the implementation to
        provide a BlackBerry::Platform::WebContext. The new object
        adds an explicit IsImage flag, as well as IsAudio and IsVideo
        for the HTML5 elements.

        Note that for many videos both IsVideo and IsAudio will be true,
        as videos typically have audio streams as well.

        Reviewed by George Staikos.

        * Api/ActiveNodeContext.h: Removed.
        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::webContext):
        (BlackBerry::WebKit::WebPage::webContext):
        * Api/WebPage.h:
        * Api/WebPage_p.h:

2012-03-12  Andy Chen  <andchen@rim.com>

        [Blackberry] Make the process of marking all matches interruptible and asynchronous for find-in-page
        https://bugs.webkit.org/show_bug.cgi?id=80831

        Reviewed by Antonio Gomes.

        * WebKitSupport/InPageSearchManager.cpp:
        (BlackBerry::WebKit::InPageSearchManager::DeferredScopeStringMatches::DeferredScopeStringMatches):
        (BlackBerry::WebKit::InPageSearchManager::DeferredScopeStringMatches::doTimeout):
        (BlackBerry::WebKit::InPageSearchManager::InPageSearchManager):
        (BlackBerry::WebKit::InPageSearchManager::~InPageSearchManager):
        (BlackBerry::WebKit::InPageSearchManager::findNextString):
        (BlackBerry::WebKit::InPageSearchManager::shouldSearchForText):
        (BlackBerry::WebKit::InPageSearchManager::findAndMarkText):
        (BlackBerry::WebKit::InPageSearchManager::clearTextMatches):
        (BlackBerry::WebKit::InPageSearchManager::frameUnloaded):
        (BlackBerry::WebKit::InPageSearchManager::scopeStringMatches):
        (BlackBerry::WebKit::InPageSearchManager::scopeStringMatchesSoon):
        (BlackBerry::WebKit::InPageSearchManager::callScopeStringMatches):
        (BlackBerry::WebKit::InPageSearchManager::cancelPendingScopingEffort):
        * WebKitSupport/InPageSearchManager.h:

2012-03-09  Jon Lee  <jonlee@apple.com>

        Rename NotificationPresenter to NotificationClient
        https://bugs.webkit.org/show_bug.cgi?id=80488
        <rdar://problem/10965558>

        Reviewed by Kentaro Hara.

        Refactor to use renamed WebCore::NotificationClient.
        * WebCoreSupport/NotificationPresenterImpl.cpp:
        (WebCore::NotificationPresenterImpl::instance):
        (WebCore::NotificationPresenterImpl::show):
        (WebCore::NotificationPresenterImpl::checkPermission):
        * WebCoreSupport/NotificationPresenterImpl.h:
        (NotificationPresenterImpl):

2012-03-09  Charles Wei  <charles.wei@torchmobile.com.cn>

        [BlackBerry] Web Notification not working after rebase
        https://bugs.webkit.org/show_bug.cgi?id=80690

        Reviewed by George Staikos.

        1. NotificationPresenterImpl should be in namespace WebCore
        2. Need to connect NotificationPresenterImpl to webcore the new way:
           WebCore::provideNotification(Page*, NotificationPresenter*)
        3. Remove the old way of connecting the Notification:
           ChromeClientBlackBerry::notificationPresenter()

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::init):
        * WebCoreSupport/ChromeClientBlackBerry.cpp:
        (WebCore):
        * WebCoreSupport/ChromeClientBlackBerry.h:
        (ChromeClientBlackBerry):
        * WebCoreSupport/NotificationPresenterImpl.cpp:
        * WebCoreSupport/NotificationPresenterImpl.h:

2012-03-08  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] Always use the current focused node when processing focus changes
        https://bugs.webkit.org/show_bug.cgi?id=80594

        Reviewed by Antonio Gomes.

        Guard against toRange or fromRange being null when called
        as part of a clear event.

        * WebCoreSupport/EditorClientBlackBerry.cpp:
        (WebCore::EditorClientBlackBerry::shouldChangeSelectedRange):

2012-03-08  Yong Li  <yoli@rim.com>

        [BlackBerry] Block file-to-file access by default
        https://bugs.webkit.org/show_bug.cgi?id=80605

        Reviewed by Rob Buis.

        Turn off allowFileAccessFromFileURLs() by default.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::init):

2012-03-08  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] Always use the current focused node when processing focus changes
        https://bugs.webkit.org/show_bug.cgi?id=80594

        Reviewed by Antonio Gomes.

        Update InputHandler focused node handling to strictly use
        the currently focused node.  This prevents a handling loop
        when JS is modifying the focus and we get a late notification
        of a past change from ChromeClientBlackBerry with the previously
        unfocused node.

        * WebCoreSupport/ChromeClientBlackBerry.cpp:
        (WebCore::ChromeClientBlackBerry::focusedNodeChanged):
        * WebCoreSupport/EditorClientBlackBerry.cpp:
        (WebCore::EditorClientBlackBerry::shouldChangeSelectedRange):
        (WebCore::EditorClientBlackBerry::setInputMethodState):
        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::InputHandler::focusedNodeChanged):
        * WebKitSupport/InputHandler.h:

2012-03-07  Jacky Jiang  <zhajiang@rim.com>

        [BlackBerry] WebKit rendering problem when show/hide VKB
        https://bugs.webkit.org/show_bug.cgi?id=80448
        RIM PR: 141727

        Reviewed by Antonio Gomes.

        When setting viewport size, layout happens inside
        WebPagePrivate::setDefaultLayoutSize(), in this way, the layout is
        outside of the code path of "needsLayout" so that the contents are
        not rendered into the backing store. This is a regression of r108718,
        switch back to do the layout inside the public API
        WebPage::setDefaultLayoutSize().

        We haven't upstreamed the manual tests directory yet, therefore,
        the new manual test case will be upstreamed later.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::setDefaultLayoutSize):
        (BlackBerry::WebKit::WebPage::setDefaultLayoutSize):

2012-03-06  Lianghui Chen  <liachen@rim.com>

        [BlackBerry] Set correct ResourceRequest target type.
        https://bugs.webkit.org/show_bug.cgi?id=80430

        Reviewed by Rob Buis.

        Removed unused code in dispatchWillSendRequest(). These codes are too
        late as the target type has already been referred to when calling
        ResourceRequest::initializePlatformRequest().

        * WebCoreSupport/FrameLoaderClientBlackBerry.cpp:
        (WebCore::FrameLoaderClientBlackBerry::dispatchWillSendRequest):

2012-03-06  Lianghui Chen  <liachen@rim.com>

        [BlackBerry] Remove unused and unneeded WebPageClient::downloadRequested(NetworkRequest&)
        https://bugs.webkit.org/show_bug.cgi?id=80438

        Reviewed by Antonio Gomes.

        * Api/WebPageClient.h:

2012-03-06  Jakob Petsovits  <jpetsovits@rim.com>

        [BlackBerry] Don't suspend accel comp when backgrounding a page.
        https://bugs.webkit.org/show_bug.cgi?id=80369
        RIM PR: 137609

        Reviewed by Adam Treat.

        Just because the page is in the background doesn't mean
        it's invisible, doesn't mean it won't have to be redrawn
        at some point - on rotation, for instance.

        We still suspend accelerated compositing on setVisible(false).

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPage::notifyPageBackground):
        (BlackBerry::WebKit::WebPage::notifyPageForeground):

2012-03-06  Jonathan Dong  <jonathan.dong@torchmobile.com.cn>

        [BlackBerry] function rename issue after MediaPlayerPrivateBlackBerry.[cpp\h] upstream
        https://bugs.webkit.org/show_bug.cgi?id=80377

        Reviewed by Rob Buis.

        As some of the function names changed in class MediaPlayerPrivate
        with the upstream of MediaPlayerPrivateBlackBerry.[cpp|h], we
        should update WebKit/blackberry/Api/WebPage.cpp which uses these
        functions accordingly.
        Renamed functions in class MediaPlayerPrivate:
        windowGet() -> getWindow()
        windowPositionGet() -> getWindowPosition()
        mmrContextNameGet() -> mmrContextName()

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::enterFullscreenForNode):

2012-03-05  Eli Fidler  <efidler@rim.com>

        The minimum font size WebSetting should actually change the LOGICAL font size in WebCore.
        https://bugs.webkit.org/show_bug.cgi?id=80312
        RIM PR: 139874

        Reviewed by George Staikos.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::didChangeSettings):

2012-03-05  Jakob Petsovits  <jpetsovits@rim.com>

        Make accelerated compositing work again with direct rendering.
        https://bugs.webkit.org/show_bug.cgi?id=80181
        RIM PR: 139110

        Reviewed by Antonio Gomes.
        Internally reviewed by Arvid Nilsson.

        The significant amount of refactoring and optimization work
        that has gone into accelerated compositing missed out on
        some of the code paths that are being used in direct rendering.

        Animations were relying on blitVisibleContents() only (which
        is a no-op in direct rendering mode). There were early returns
        which are suitable to determine whether screen contents need
        to be updated at all; however, when we're already forcing a
        re-render then those checks would cause the composition surface
        not to appear at all, or avoid drawing new animation frames.

        We went through dispatchMessage(), potentially causing
        mismatches between rendered (but not yet posted) back content
        and layers composited on top of it. As we're rendering onto
        the sole target surface (the window) directly and posting
        from the same thread, we have to wait for compositing on the
        UI thread to finish before posting the window.

        In turn, this patch combines both drawSubLayers() and
        blendCompositingSurface() calls into one method, reducing
        the number of messages to the UI thread within
        renderDirectToWindow() to one.

        blendCompositingMessage() in renderDirectToScreen() was called
        with contents coordinates rather than viewport coordinates.
        That caused some of the composited content to be cut off when
        the scroll position wasn't (0, 0).

        We called copyPreviousContentsToBackSurfaceOfWindow() twice for
        one frame, in both renderDirectToWindow() and invalidateWindow().
        Only one of those (the latter one) is necessary.

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStorePrivate::BackingStorePrivate):
        (BlackBerry::WebKit::BackingStorePrivate::renderDirectToWindow):
        (BlackBerry::WebKit::BackingStorePrivate::drawSubLayers):
        (WebKit):
        (BlackBerry::WebKit::BackingStorePrivate::drawAndBlendLayersForDirectRendering):
        * Api/BackingStore.h:
        (WebKit):
        * Api/BackingStore_p.h:
        (BackingStorePrivate):
        (BlackBerry::WebKit::BackingStorePrivate::isDirectRenderingAnimationMessageScheduled):
        (BlackBerry::WebKit::BackingStorePrivate::setDirectRenderingAnimationMessageScheduled):
        * Api/WebPage_p.h:
        (BlackBerry::WebKit::WebPagePrivate::isAcceleratedCompositingActive):
        (WebPagePrivate):
        * WebKitSupport/WebPageCompositor.cpp:
        (BlackBerry::WebKit::WebPageCompositor::WebPageCompositor):
        (BlackBerry::WebKit::WebPageCompositor::~WebPageCompositor):
        (BlackBerry::WebKit::WebPageCompositor::drawLayers):
        (BlackBerry::WebKit::WebPageCompositor::animationTimerFired):
        * WebKitSupport/WebPageCompositor.h:
        (WebPageCompositor):

2012-03-05  George Staikos  <gstaikos@rim.com>

        [BlackBerry] DOMSupport visibleSelectionForRangeInputElement incorrectly dereferences a null range.
        https://bugs.webkit.org/show_bug.cgi?id=80274

        Reviewed by Antonio Gomes.

        A null range can be returned so we should not blindly deref it.
        Reviewed Internally by Mike Fenton.

        * WebKitSupport/DOMSupport.cpp:
        (BlackBerry::WebKit::DOMSupport::visibleSelectionForRangeInputElement):

2012-03-04  Jonathan Dong  <jonathan.dong@torchmobile.com.cn>

        [BlackBerry] upstream CredentialManager and CredentialTransformData implementation
        https://bugs.webkit.org/show_bug.cgi?id=80107

        Reviewed by Antonio Gomes.

        Initial upstream of CredentialManager.[h|cpp] and
        CredentialTransformData.[h|cpp].
        No new test.

        * WebCoreSupport/CredentialManager.cpp: Added.
        (WebCore):
        (WebCore::CredentialManager::CredentialManager):
        (WebCore::CredentialManager::autofillAuthenticationChallenge):
        (WebCore::CredentialManager::autofillPasswordForms):
        (WebCore::CredentialManager::saveCredentialIfConfirmed):
        * WebCoreSupport/CredentialManager.h: Added.
        (WebKit):
        (WebCore):
        (CredentialManager):
        * WebCoreSupport/CredentialTransformData.cpp: Added.
        (WebCore::CredentialTransformData::CredentialTransformData):
        (WebCore):
        (WebCore::CredentialTransformData::url):
        (WebCore::CredentialTransformData::credential):
        (WebCore::CredentialTransformData::setCredential):
        (WebCore::CredentialTransformData::findPasswordFormFields):
        * WebCoreSupport/CredentialTransformData.h: Added.
        (WebCore):
        (CredentialTransformData):
        (WebCore::CredentialTransformData::isValid):
        (WebCore::CredentialTransformData::protectionSpace):

2012-03-04  Antonio Gomes  <agomes@rim.com>

        [BlackBerry] Fixed positioned element not correctly positioned after orientation change, when viewport metatag is used
        https://bugs.webkit.org/show_bug.cgi?id=80228
        PR #138865

        Reviewed by George Staikos.

        Viewport size changes in two main scenarios:
        - orientation changes;
        - virtual keyboard pop up/hide.

        When we are setting a new viewport size, we need to
        update the FixedReportedSize of the mainframe. This size
        is used to return innerWidth|Heigth as well as to calculate
        the fixed position elements height relative to the RenderView [1].

        [1] RenderBox::containingBlockLogicalHeightForPositioned.

        When we are rotating, we need to delay setting the new FixedReportedSize
        till we layout and are able to figure out the new contents size. At this
        time we call setFixedReportedSize, but we do not reposition the fixed elemts
        afterwards.

        Patch adds a call to FrameView::repaintFixedElementsAfterScrolling, after
        setting the new size.

        Source/WebKit/blackberry:
        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::setViewportSize):

2012-03-02  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] Expose WebInspector state to client and clean up WebSettings
        https://bugs.webkit.org/show_bug.cgi?id=80177

        Reviewed by Antonio Gomes.

        Expose the Web Inspector state to WebPage client's and
        re-order initialization of WebSettings to be alphabetical
        matching their definitions.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPage::isWebInspectorEnabled):
        * Api/WebPage.h:
        * Api/WebSettings.cpp:
        (BlackBerry::WebKit::WebSettings::standardSettings):

2012-03-02  Arvid Nilsson  <anilsson@rim.com>

        Accelerated compositing: Checkerboard never goes away
        https://bugs.webkit.org/show_bug.cgi?id=79020
        RIM PR #134164

        Reviewed by Adam Treat.

        Checkerboard appears in accelerated compositing layers when there's no
        texture for (part of) a layer. The layer renderer queues up some render
        jobs and schedules a commit to make the WebKit thread process those
        jobs. Render jobs performed during commit cause texture upload jobs to
        be scheduled on the UI thread. Texture uploads are performed when next
        drawing the layers.

        Unfortunately, sometimes commit operation happens without a subsequent
        call draw the layers.

        In order to implement one-shot drawing sync, I added a call to
        commitRootLayerIfNeeded() in BackingStore::renderContents(), and
        I was lucky that most of the time, renderContents() is followed by
        blit(Visible)Contents() which in turn draws the layers.
        However, render is not always followed by a blit, for example when
        rendering offscreen tiles in BackingStore::renderOnIdle(), and in
        direct rendering mode.

        Fixed by making sure that every call to commitRootLayerIfNeeded() that
        returns true is followed by a call to drawLayersOnCommit(), unless a
        blit was requested already.

        Also tweak the logic for one-shot drawing sync to make the code in
        drawLayersOnCommit() reusable outside of rootLayerCommitTimerFired().

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStorePrivate::BackingStorePrivate):
        (BlackBerry::WebKit::BackingStorePrivate::renderOnTimer):
        (BlackBerry::WebKit::BackingStorePrivate::renderOnIdle):
        (BlackBerry::WebKit::BackingStorePrivate::willFireTimer):
        (BlackBerry::WebKit::BackingStorePrivate::renderDirectToWindow):
        (BlackBerry::WebKit::BackingStorePrivate::render):
        (BlackBerry::WebKit::BackingStorePrivate::blitVisibleContents):
        (BlackBerry::WebKit::BackingStorePrivate::blitContents):
        (BlackBerry::WebKit::BackingStorePrivate::renderContents):
        (WebKit):
        (BlackBerry::WebKit::BackingStorePrivate::drawLayersOnCommitIfNeeded):
        * Api/BackingStore_p.h:
        (BackingStorePrivate):
        (BlackBerry::WebKit::BackingStorePrivate::willDrawLayersOnCommit):

2012-03-02  Adam Treat  <atreat@rim.com>

        https://bugs.webkit.org/show_bug.cgi?id=80161
        PR: 141157

        BlackBerryPlatformScreen.h API has been updated.  Reflect those
        changes in our usage.

        Reviewed by Antonio Gomes.
        Internally reviewed by Jakob Petsovits.

        * Api/BackingStore.cpp:
        (BlackBerry::WebKit::BackingStorePrivate::tileWidth):
        (BlackBerry::WebKit::BackingStorePrivate::tileHeight):
        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::init):
        (BlackBerry::WebKit::WebPagePrivate::transformedViewportSize):
        (BlackBerry::WebKit::WebPagePrivate::fixedLayoutSize):
        (BlackBerry::WebKit::WebPagePrivate::recomputeVirtualViewportFromViewportArguments):
        (BlackBerry::WebKit::WebPagePrivate::setDefaultLayoutSize):
        (BlackBerry::WebKit::WebPagePrivate::defaultMaxLayoutSize):
        * WebCoreSupport/FrameLoaderClientBlackBerry.cpp:
        (WebCore::FrameLoaderClientBlackBerry::restoreViewState):
        * WebKitSupport/SurfacePool.cpp:
        (BlackBerry::WebKit::createCompositingSurface):

2012-03-02  Konrad Piascik  <kpiascik@rim.com>

        [BlackBerry] Set the devicePixelRatio from the results of computeViewportAttributes
        https://bugs.webkit.org/show_bug.cgi?id=80160

        Reviewed by Antonio Gomes.

        Tested by going to layout test fast/viewport/viewport-95.html and viewport-93.html
        Previously when executing window.devicePixelRatio these two pages returned 1 now
        they report the devicePixelRatio returned by computeViewportAttributes.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::recomputeVirtualViewportFromViewportArguments):

2012-03-02  Jacky Jiang  <zhajiang@rim.com>

        Fix a warning in InputHandler::learnText()
        https://bugs.webkit.org/show_bug.cgi?id=80049

        Reviewed by Antonio Gomes.

        Fix a warning of the comparison "textInField.length() <=
        MaxLearnTextDataSize" in InputHandler::learnText().

        Rubber-stamped internally by Mike Fenton.

        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::InputHandler::learnText):

2012-03-01  Andy Chen  <andchen@rim.com>

        [BlackBerry] Implement features for find-in-page
        https://bugs.webkit.org/show_bug.cgi?id=79820

        Reviewed by Antonio Gomes.

        - Make it be able to search text around the whole page instead of single frame.
        - Make it be able to start new search from active selection and last active match.

        No new tests as this patch doesn't change behavior.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::frameUnloaded):
        * Api/WebPage_p.h:
        * WebCoreSupport/FrameLoaderClientBlackBerry.cpp:
        (WebCore::FrameLoaderClientBlackBerry::dispatchWillClose):
        (WebCore::FrameLoaderClientBlackBerry::detachedFromParent2):
        * WebKitSupport/DOMSupport.cpp:
        (BlackBerry::WebKit::DOMSupport::incrementFrame):
        * WebKitSupport/DOMSupport.h:
        * WebKitSupport/InPageSearchManager.cpp:
        (BlackBerry::WebKit::InPageSearchManager::findNextString):
        (BlackBerry::WebKit::InPageSearchManager::shouldSearchForText):
        (BlackBerry::WebKit::InPageSearchManager::findAndMarkText):
        (BlackBerry::WebKit::InPageSearchManager::setMarkerActive):
        (BlackBerry::WebKit::InPageSearchManager::frameUnloaded):
        * WebKitSupport/InPageSearchManager.h:
        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::InputHandler::frameUnloaded):
        * WebKitSupport/InputHandler.h:

2012-03-01  Charles Wei  <charles.wei@torchmobile.com.cn>

        [BlackBerry] Web Notification crashes the browser.
        https://bugs.webkit.org/show_bug.cgi?id=79897

        Reviewed by Antonio Gomes.

        The reason of the crash is that it still uses the iterator
        after been removed from the container, which invalidates the
        iterator. 
        We should stop processing after we have found the element
        and removed from the container through the iterator.

        This patch only fixes the crash issue, but not any notification
        functionality issue, which is tracked seperatly.

        Test case: http://sandbox.gtaero.net/chrome/notifications.php

        * WebCoreSupport/NotificationPresenterImpl.cpp:
        (WebKit::NotificationPresenterImpl::onPermission):
        (WebKit::NotificationPresenterImpl::notificationClicked):

2012-03-01  Mike Fenton  <mifenton@rim.com>

        Autocomplete attribute should apply to textarea's.
        https://bugs.webkit.org/show_bug.cgi?id=79929

        Reviewed by Antonio Gomes.

        Add local static Qualified name for autocorrect attribute.

        * WebKitSupport/DOMSupport.cpp:
        (BlackBerry::WebKit::DOMSupport::elementSupportsAutocorrect):

2012-02-29  Mike Fenton  <mifenton@rim.com>

        Autocomplete attribute should apply to textarea's.
        https://bugs.webkit.org/show_bug.cgi?id=79929

        Reviewed by Antonio Gomes.

        Allow the autocomplete attribute to bubble back to the form setting.

        Expand support to include checking autocorrect, autocomplete and
        name/id matching to text areas.

        Reviewed internally by Nima Ghanavatian and Gen Mak.

        * WebKitSupport/DOMSupport.cpp:
        (BlackBerry::WebKit::DOMSupport::elementSupportsAutocorrect):
        (BlackBerry::WebKit::DOMSupport::elementSupportsAutocomplete):
        (BlackBerry::WebKit::DOMSupport::elementAttributeState):
        * WebKitSupport/DOMSupport.h:
        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::inputStyle):

2012-02-29  Max Feil  <mfeil@rim.com>

        [BlackBerry] Add support for FLAC audio and OGG/Vorbis audio
        https://bugs.webkit.org/show_bug.cgi?id=79519

        Reviewed by Antonio Gomes.

        * Api/WebSettings.cpp:
        (BlackBerry::WebKit::mimeTypeAssociationMap):

2012-02-28  Konrad Piascik  <kpiascik@rim.com>

        [BlackBerry] Change the API to use std::string
        https://bugs.webkit.org/show_bug.cgi?id=79818

        Reviewed by Antonio Gomes.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPage::dispatchInspectorMessage):
        * Api/WebPage.h:

2012-02-28  Jacky Jiang  <zhajiang@rim.com>

        [BlackBerry] x86 build fix after cleaning up WebPage.cpp
        https://bugs.webkit.org/show_bug.cgi?id=79814

        Reviewed by Antonio Gomes.

        x86 build fix, keep WebPage::destroyWebPageCompositor() method where it
        was which was outside of USE(ACCELERATED_COMPOSITING).

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPage::destroyWebPageCompositor):
        (WebKit):

2012-02-28  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] Remove unused focusedNodeChange notifications from the Chrome client.
        https://bugs.webkit.org/show_bug.cgi?id=79794

        Reviewed by Rob Buis.

        Remove unused notification for focusedNodeChanged.

        Internally reviewed by Gen Mak.

        * Api/WebPageClient.h:
        * WebCoreSupport/ChromeClientBlackBerry.cpp:
        (WebCore::ChromeClientBlackBerry::focusedNodeChanged):

2012-02-27  Jacky Jiang  <zhajiang@rim.com>

        [BlackBerry] Upstream BlackBerry API web page related files
        https://bugs.webkit.org/show_bug.cgi?id=74380

        Reviewed by Antonio Gomes.

        Clean up WebPage.{h, cpp} and WebPage_p.h.
        - Remove WebPage::mainFrame() as it is bad to expose WebCore::Frame in
          the public API, adapt to the change by adding a new method
          WebPagePrivate::core(Const WebPage*) and expose it to
          DumpRenderTreeSupport.
        - Rename WebPage::spellCheckingEnabled to
          WebPage::setSpellCheckingEnabled.
        - Remove unused WebPage::focusNodeRect().
        - Remove extra blank lines.
        - Put WebPage methods and their associated WebPagePrivate methods
          together.

        No new tests as this patch doesn't change behavior.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPage::WebPage):
        (WebKit):
        (BlackBerry::WebKit::WebPage::~WebPage):
        (BlackBerry::WebKit::WebPagePrivate::core):
        (BlackBerry::WebKit::WebPage::load):
        (BlackBerry::WebKit::WebPage::loadExtended):
        (BlackBerry::WebKit::WebPage::loadFile):
        (BlackBerry::WebKit::WebPage::download):
        (BlackBerry::WebKit::WebPage::loadString):
        (BlackBerry::WebKit::WebPage::executeJavaScript):
        (BlackBerry::WebKit::WebPage::executeJavaScriptInIsolatedWorld):
        (BlackBerry::WebKit::WebPage::stopLoading):
        (BlackBerry::WebKit::WebPage::prepareToDestroy):
        (BlackBerry::WebKit::WebPage::setScrollPosition):
        (BlackBerry::WebKit::WebPage::scrollBy):
        (BlackBerry::WebKit::WebPage::notifyInRegionScrollStatusChanged):
        (BlackBerry::WebKit::WebPage::zoomToFitScale):
        (BlackBerry::WebKit::WebPage::initialScale):
        (BlackBerry::WebKit::WebPage::maximumScale):
        (BlackBerry::WebKit::WebPage::scrollPosition):
        (BlackBerry::WebKit::WebPage::viewportSize):
        (BlackBerry::WebKit::WebPage::activeNodeContext):
        (BlackBerry::WebKit::WebPage::assignFocus):
        (BlackBerry::WebKit::WebPage::blockZoomAnimationFinished):
        (BlackBerry::WebKit::WebPage::onInputLocaleChanged):
        (BlackBerry::WebKit::WebPage::setScreenOrientation):
        (BlackBerry::WebKit::WebPage::applyPendingOrientationIfNeeded):
        (BlackBerry::WebKit::WebPage::setViewportSize):
        (BlackBerry::WebKit::WebPage::setDefaultLayoutSize):
        (BlackBerry::WebKit::WebPage::setScrollOriginPoint):
        (BlackBerry::WebKit::WebPage::textEncoding):
        (BlackBerry::WebKit::WebPage::forcedTextEncoding):
        (BlackBerry::WebKit::WebPage::setForcedTextEncoding):
        (BlackBerry::WebKit::WebPage::setSpellCheckingEnabled):
        (BlackBerry::WebKit::parentLayer):
        (BlackBerry::WebKit::WebPagePrivate::inRegionScrollableAreasForPoint):
        (BlackBerry::WebKit::WebPage::destroyWebPageCompositor):
        * Api/WebPage.h:
        (WebCore):
        (WebKit):
        * Api/WebPage_p.h:
        (WebCore):
        (WebKit):
        * WebKitSupport/DumpRenderTreeSupport.cpp:
        (DumpRenderTreeSupport::corePage):
        (DumpRenderTreeSupport::numberOfPendingGeolocationPermissionRequests):
        (DumpRenderTreeSupport::resetGeolocationMock):
        (DumpRenderTreeSupport::setMockGeolocationError):
        (DumpRenderTreeSupport::setMockGeolocationPermission):
        (DumpRenderTreeSupport::setMockGeolocationPosition):
        (DumpRenderTreeSupport::scalePageBy):
        * WebKitSupport/DumpRenderTreeSupport.h:
        (WebCore):
        (DumpRenderTreeSupport):

2012-02-27  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] Selection handling should be entirely directional
        https://bugs.webkit.org/show_bug.cgi?id=79692

        Reviewed by Antonio Gomes.

        Make all VisibleSelections directional.

        * WebKitSupport/SelectionHandler.cpp:
        (BlackBerry::WebKit::SelectionHandler::updateOrHandleInputSelection):
        (BlackBerry::WebKit::SelectionHandler::setSelection):

2012-02-27  Ed Baker  <edbaker@rim.com>

        [BlackBerry] Dragging a selection handle outside of the content bounding box does not update the selection range correctly
        https://bugs.webkit.org/show_bug.cgi?id=78608

        Ensure that when selection handles leave the content bounding box that
        the handle not being dragged remains fixed. Do not apply padding to a
        direction that would cause the selection to shrink when performing the
        handle direction detection.

        Reviewed by Antonio Gomes.

        * WebKitSupport/DOMSupport.cpp:
        (BlackBerry::WebKit::DOMSupport::convertPointToFrame):
        * WebKitSupport/DOMSupport.h:
        * WebKitSupport/SelectionHandler.cpp:
        (BlackBerry::WebKit::clamp):
        (BlackBerry::WebKit::directionalVisiblePositionAtExtentOfBox):
        (BlackBerry::WebKit::SelectionHandler::extendSelectionToFieldBoundary):
        (BlackBerry::WebKit::SelectionHandler::setSelection):
        (BlackBerry::WebKit::SelectionHandler::clipPointToVisibleContainer):
        * WebKitSupport/SelectionHandler.h:

2012-02-27  Leo Yang  <leo.yang@torchmobile.com.cn>

        [BlackBerry] Upstream accelerated compositing helper class
        https://bugs.webkit.org/show_bug.cgi?id=78448

        Reviewed by Antonio Gomes.

        Initial upstream, no new tests.

        * WebKitSupport/FrameLayers.cpp: Added.
        * WebKitSupport/FrameLayers.h: Added.

2012-02-26  Hajime Morrita  <morrita@chromium.org>

        Move ChromeClient::showContextMenu() to ContextMenuClient
        https://bugs.webkit.org/show_bug.cgi?id=79427

        Reviewed by Adam Barth.

        * WebCoreSupport/ChromeClientBlackBerry.h:
        (ChromeClientBlackBerry):

2012-02-24  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] Eliminate excessive BlackBerry::Platform use in InputHandler
        https://bugs.webkit.org/show_bug.cgi?id=79393

        Reviewed by Antonio Gomes.

        Cleanup usage of BlackBerry::Platform in InputHandler.

        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::convertStringToWchar):
        (BlackBerry::WebKit::convertStringToWcharVector):
        (BlackBerry::WebKit::convertSpannableStringToString):
        (BlackBerry::WebKit::InputHandler::learnText):
        (BlackBerry::WebKit::InputHandler::setElementUnfocused):
        (BlackBerry::WebKit::InputHandler::shouldAcceptInputFocus):
        (BlackBerry::WebKit::InputHandler::setElementFocused):
        (BlackBerry::WebKit::InputHandler::nodeTextChanged):
        (BlackBerry::WebKit::InputHandler::ensureFocusTextElementVisible):
        (BlackBerry::WebKit::InputHandler::frameUnloaded):
        (BlackBerry::WebKit::InputHandler::selectionChanged):
        (BlackBerry::WebKit::InputHandler::setSelection):
        (BlackBerry::WebKit::InputHandler::handleKeyboardInput):
        (BlackBerry::WebKit::InputHandler::deleteTextRelativeToCursor):
        (BlackBerry::WebKit::InputHandler::deleteText):
        (BlackBerry::WebKit::InputHandler::spannableTextInRange):
        (BlackBerry::WebKit::InputHandler::setComposingRegion):
        (BlackBerry::WebKit::InputHandler::finishComposition):
        (BlackBerry::WebKit::InputHandler::setText):
        (BlackBerry::WebKit::InputHandler::setTextAttributes):
        (BlackBerry::WebKit::InputHandler::setRelativeCursorPosition):
        (BlackBerry::WebKit::InputHandler::setSpannableTextAndRelativeCursor):
        (BlackBerry::WebKit::InputHandler::setComposingText):
        (BlackBerry::WebKit::InputHandler::commitText):

2012-02-24  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] Eliminate excessive BlackBerry::Platform use in SelectionHandler.
        https://bugs.webkit.org/show_bug.cgi?id=79391

        Reviewed by Antonio Gomes.

        Clean up usage of BlackBerry::Platform in SelectionHandler and
        explicitly define what namespace to use for ambiguous objects like
        IntRect and IntPoint.

        * WebKitSupport/SelectionHandler.cpp:
        (BlackBerry::WebKit::SelectionHandler::cancelSelection):
        (BlackBerry::WebKit::SelectionHandler::getConsolidatedRegionOfTextQuadsForSelection):
        (BlackBerry::WebKit::visiblePositionForPointIgnoringClipping):
        (BlackBerry::WebKit::directionOfPointRelativeToRect):
        (BlackBerry::WebKit::SelectionHandler::shouldUpdateSelectionOrCaretForPoint):
        (BlackBerry::WebKit::SelectionHandler::setCaretPosition):
        (BlackBerry::WebKit::directionalVisiblePositionAtExtentOfBox):
        (BlackBerry::WebKit::pointIsOutsideOfBoundingBoxInDirection):
        (BlackBerry::WebKit::SelectionHandler::extendSelectionToFieldBoundary):
        (BlackBerry::WebKit::SelectionHandler::updateOrHandleInputSelection):
        (BlackBerry::WebKit::SelectionHandler::clipPointToFocusNode):
        (BlackBerry::WebKit::SelectionHandler::setSelection):
        (BlackBerry::WebKit::SelectionHandler::selectAtPoint):
        (BlackBerry::WebKit::SelectionHandler::selectObject):
        (BlackBerry::WebKit::comparePointsToReferencePoint):
        (BlackBerry::WebKit::minXMinYCorner):
        (BlackBerry::WebKit::maxXMinYCorner):
        (BlackBerry::WebKit::minXMaxYCorner):
        (BlackBerry::WebKit::maxXMaxYCorner):
        (BlackBerry::WebKit::caretLocationForRect):
        (BlackBerry::WebKit::caretComparisonPointForRect):
        (BlackBerry::WebKit::adjustCaretRects):
        (BlackBerry::WebKit::SelectionHandler::clipRegionToVisibleContainer):
        (BlackBerry::WebKit::referencePoint):
        (BlackBerry::WebKit::SelectionHandler::selectionPositionChanged):
        (BlackBerry::WebKit::SelectionHandler::caretPositionChanged):
        (BlackBerry::WebKit::SelectionHandler::selectionContains):

2012-02-24  Shinya Kawanaka  <shinyak@chromium.org>

        SpellCheckRequest needs to know the context where the spellcheck happened.
        https://bugs.webkit.org/show_bug.cgi?id=79320

        Reviewed by Hajime Morita.

        * WebCoreSupport/EditorClientBlackBerry.cpp:
        (WebCore::EditorClientBlackBerry::requestCheckingOfString):
        * WebCoreSupport/EditorClientBlackBerry.h:
        (EditorClientBlackBerry):

2012-02-24  Charles Wei  <charles.wei@torchmobile.com.cn>

        [BlackBerry] Anchor mailto: with target set won't launch Messaging application when clicked
        https://bugs.webkit.org/show_bug.cgi?id=79318

        Need to give the client a chance to decide how to handle the new window request.

        Reviewed by Rob Buis.

        * WebCoreSupport/FrameLoaderClientBlackBerry.cpp:
        (WebCore::FrameLoaderClientBlackBerry::dispatchDecidePolicyForNewWindowAction):

2012-02-23  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] Selection handler has compile failure with logs enabled.
        https://bugs.webkit.org/show_bug.cgi?id=79392

        Reviewed by Antonio Gomes.

        Build Fix.  Update log to avoid usage of toString which was removed.

        * WebKitSupport/SelectionHandler.cpp:
        (BlackBerry::WebKit::SelectionHandler::selectionPositionChanged):

2012-02-19  Antonio Gomes  <agomes@rim.com>

        Fat fingers - Add a clearer way to distinguish the node we want (shadow or non-shadow)
        https://bugs.webkit.org/show_bug.cgi?id=79256
        PR #127814 / MKS_2587410

        Reviewed by Rob Buis.

        Patch adds a cleaner way for call sites of FatFingersResult to
        query for the appropriated target node: shadow or non-shadow DOM nodes.

        It also renames FatFingersResults::validNode to ::node, assuming
        that "invalid" nodes are not applicable in any context.

        * Api/WebPage.cpp:
        (BlackBerry::WebKit::WebPagePrivate::clearDocumentData):
        (BlackBerry::WebKit::WebPagePrivate::contextNode):
        (BlackBerry::WebKit::WebPagePrivate::handleMouseEvent):
        * WebKitSupport/FatFingers.h:
        (FatFingersResult):
        (BlackBerry::WebKit::FatFingersResult::node):
        (BlackBerry::WebKit::FatFingersResult::nodeAsElementIfApplicable):
        * WebKitSupport/SelectionHandler.cpp:
        (BlackBerry::WebKit::SelectionHandler::selectAtPoint):
        * WebKitSupport/TouchEventHandler.cpp:
        (BlackBerry::WebKit::TouchEventHandler::touchHoldEvent):
        (BlackBerry::WebKit::TouchEventHandler::handleTouchPoint):

2012-02-23  Jacky Jiang  <zhajiang@rim.com>

        [BlackBerry] Upstream BlackBerry API web page related files
        https://bugs.webkit.org/show_bug.cgi?id=74380

        Reviewed by Antonio Gomes.

        Initial upstream, no new tests.

        * Api/WebPage.cpp: Added.
        * Api/WebPage.h: Added.
        * Api/WebPage_p.h: Added.

2012-02-23  Leo Yang  <leo.yang@torchmobile.com.cn>

        [BlackBerry] Remove unused ChromeClientBlackBerry::platformCompositingWindow(), platformWindow() and WebPageClient::compositingWindow()
        https://bugs.webkit.org/show_bug.cgi?id=78681

        Reviewed by Antonio Gomes.

        * Api/WebPageClient.h:
        * WebCoreSupport/ChromeClientBlackBerry.cpp:
        (WebCore):
        * WebCoreSupport/ChromeClientBlackBerry.h:
        (ChromeClientBlackBerry):

2012-02-23  Leo Yang  <leo.yang@torchmobile.com.cn>

        [BlackBerry] Upstream GLES2Context.{h, cpp}
        https://bugs.webkit.org/show_bug.cgi?id=79196

        Reviewed by Rob Buis.

        Initial upstream, no new tests.

        * WebKitSupport/GLES2Context.cpp: Added.
        * WebKitSupport/GLES2Context.h: Added.

2012-02-23  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] InputHandler requires cleanup of Navigation Mode handling.
        https://bugs.webkit.org/show_bug.cgi?id=79366

        Reviewed by Rob Buis.

        Cleanup InputHandler navigation based code.

        1) Remove the concept of NavigationMode and replace it
           with simple showKeyboard calls.

        2) Remove navigation move events and replace with standard
           key events.

        3) Standardize function/variable names and remove obsolete
           functions.

        * Api/WebPageClient.h:
        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::InputHandler::InputHandler):
        (BlackBerry::WebKit::InputHandler::nodeFocused):
        (BlackBerry::WebKit::InputHandler::setElementUnfocused):
        (BlackBerry::WebKit::InputHandler::setElementFocused):
        (BlackBerry::WebKit::InputHandler::ensureFocusTextElementVisible):
        (BlackBerry::WebKit::InputHandler::setDelayKeyboardVisibilityChange):
        (BlackBerry::WebKit::InputHandler::processPendingKeyboardVisibilityChange):
        (BlackBerry::WebKit::InputHandler::notifyClientOfKeyboardVisibilityChange):
        * WebKitSupport/InputHandler.h:
        (InputHandler):
        * WebKitSupport/SelectionHandler.cpp:
        (BlackBerry::WebKit::SelectionHandler::setCaretPosition):
        (BlackBerry::WebKit::SelectionHandler::updateOrHandleInputSelection):
        * WebKitSupport/TouchEventHandler.cpp:
        (BlackBerry::WebKit::TouchEventHandler::touchEventCancel):
        (BlackBerry::WebKit::TouchEventHandler::handleTouchPoint):

2012-02-21  Ryosuke Niwa  <rniwa@webkit.org>

        Remove the remaining uses of CSSStyleDeclaration in Editor
        https://bugs.webkit.org/show_bug.cgi?id=78939

        Reviewed by Enrica Casucci.

        * WebCoreSupport/EditorClientBlackBerry.cpp:
        (WebCore::EditorClientBlackBerry::shouldApplyStyle):
        * WebCoreSupport/EditorClientBlackBerry.h:
        (EditorClientBlackBerry):

2012-02-22  Mike Fenton  <mifenton@rim.com>

        [BlackBerry] InputHandler has signed vs unsigned comparison.
        https://bugs.webkit.org/show_bug.cgi?id=79261

        Fix warning by casting the unsigned int to an int.

        Reviewed by Rob Buis.

        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::InputHandler::rectForCaret):

2012-02-22  Ryosuke Niwa  <rniwa@webkit.org>

        Remove the remaining uses of CSSStyleDeclaration in Editor
        https://bugs.webkit.org/show_bug.cgi?id=78939

        Reviewed by Enrica Casucci.

        * WebCoreSupport/EditorClientBlackBerry.cpp:
        (WebCore::EditorClientBlackBerry::shouldApplyStyle):
        * WebCoreSupport/EditorClientBlackBerry.h:
        (EditorClientBlackBerry):

2012-02-18  Antonio Gomes  <agomes@rim.com>

        Fat fingers - cache the first rect-based hit test so we do not need to do it again
        https://bugs.webkit.org/show_bug.cgi?id=79115

        Reviewed by Adam Treat.

        Our FatFingers implementation runs currently in two phases:
        the first checks for the elements intrinsically clickable;
        the second checks for elements made clickable by the page
        (for example, a div with a onclick event listener attached to it).
        For each phase, we perform a rect hittest, which is not needed since
        the result of each is the same.

        Patch introduces a caching mechanism so we avoid on rect hittest:
        when the first phase runs, it caches each nodeset per document in
        a hashmap. This second phase works with the cached results.

        No behavioral change, but performance is better since we
        avoid one (possibly expensive) rect hittest.

        I measured the performance gain on https://www.kvd.se/, and we
        save up to 0.04 seconds, by caching and re-using the results.

        * WebKitSupport/FatFingers.cpp:
        (BlackBerry::WebKit::dumpHitTestResult):
        (BlackBerry::WebKit::FatFingers::findBestPoint):
        (BlackBerry::WebKit::FatFingers::findIntersectingRegions):
        (BlackBerry::WebKit::FatFingers::cachingStrategy):
        (WebKit):
        (BlackBerry::WebKit::FatFingers::getNodesFromRect):
        * WebKitSupport/FatFingers.h:

2012-02-20  Antonio Gomes  <agomes@rim.com>

        All default video/audio control elements should be rect-hit testable (Part II)
        PR #139518 / MKS_3005538

        Reviewed by George Staikos.

        Add HTMLInputElement::isMediaControlElement as a criteria
        to consider a element as clickable.

        Note that is should be only used while in the "ClickableByDefault"
        phase of FatFingers.

        * WebKitSupport/FatFingers.cpp:
        (BlackBerry::WebKit::FatFingers::isElementClickable):

2012-02-16  Antonio Gomes  <agomes@rim.com>

        [BlackBerry] Implemented a way to defer client navigation change client notifications
        https://bugs.webkit.org/show_bug.cgi?id=78848

        Reviewed by Rob Buis.

        Currently we postpone touch_down till touch_up if user touches
        the screen and an input field has the WebKit focus. This is done
        so we can scroll the page without hidding the vkb needlessly.

        However, it breaks the conversion of touch to mouse events
        if an input field has the focus in the following scenario:
        an <input type=text> is focused and an user grab and-drag
        a <input type=range> knob/slide. It does not work until the
        user unfocuses the currently focused edit field.

        Patch introduces a way to unfocus a currently focused input field,
        without requesting the client to show or hide the virtual keyboard
        right way. Instead it gets a delayed notification of the vkb mode requested
        at either touch_released/mouse_up or touch_cancel time.

        For now, due to content side issues with major web sites,
        only delay navigation mode notification changes if we are not dealing with
        input modes.

        * WebKitSupport/InputHandler.cpp:
        (BlackBerry::WebKit::InputHandler::InputHandler):
        (BlackBerry::WebKit::InputHandler::nodeFocused):
        (BlackBerry::WebKit::InputHandler::setElementFocused):
        (BlackBerry::WebKit::InputHandler::setNavigationMode):
        (WebKit):
        (BlackBerry::WebKit::InputHandler::setDelayClientNotificationOfNavigationModeChange):
        (BlackBerry::WebKit::InputHandler::processPendingClientNavigationModeChangeNotification):
        (BlackBerry::WebKit::InputHandler::notifyClientOfNavigationModeChange):
        (BlackBerry::WebKit::InputHandler::willOpenPopupForNode):
        (BlackBerry::WebKit::InputHandler::setPopupListIndexes):
        (BlackBerry::WebKit::InputHandler::spannableTextInRange):
        (BlackBerry::WebKit::InputHandler::removeComposedText):
        (BlackBerry::WebKit::InputHandler::firstSpanInString):
        (BlackBerry::WebKit::InputHandler::setText):
        (BlackBerry::WebKit::InputHandler::setRelativeCursorPosition):
        * WebKitSupport/InputHandler.h:
        (InputHandler):

2012-02-16  Antonio Gomes  <agomes@rim.com>

        Crash @WebPagePrivate::enqueueRenderingOfClippedContentOfScrollableNodeAfterInRegionScrolling MKS_2986818
        https://bugs.webkit.org/show_bug.cgi?id=78845

        Reviewed by Rob Buis.

        We were trying to operate on a cached Node when its page/frame/document
        were gone to PageCache already. To avoid such problems, lets clean up
        any document data we have cached when the Frame goes into the cache.

        * WebCoreSupport/FrameLoaderClientBlackBerry.cpp:
        (WebCore::FrameLoaderClientBlackBerry::didSaveToPageCache):
        (WebCore):
        * WebCoreSupport/FrameLoaderClientBlackBerry.h:
        (FrameLoaderClientBlackBerry):

2012-02-16  Antonio Gomes  <agomes@rim.com>

        [BlackBerry] Upstream touch handling related classes
        https://bugs.webkit.org/show_bug.cgi?id=78509

        Reviewed by Adam Treat and Rob Buis.

        FatFingers is the class responsible to the whole touch
        accuracy of the BlackBerry port. Initial upstream.

        * WebKitSupport/FatFingers.cpp: Added.
        (WebKit):
        (BlackBerry::WebKit::FatFingers::fingerRectForPoint):
        (BlackBerry::WebKit::hasMousePressListener):
        (BlackBerry::WebKit::FatFingers::isElementClickable):
        (BlackBerry::WebKit::isFieldWithText):
        (BlackBerry::WebKit::distanceBetweenPoints):
        (BlackBerry::WebKit::compareDistanceBetweenPoints):
        (BlackBerry::WebKit::isValidFrameOwner):
        (BlackBerry::WebKit::FatFingers::FatFingers):
        (BlackBerry::WebKit::FatFingers::~FatFingers):
        (BlackBerry::WebKit::FatFingers::findBestPoint):
        (BlackBerry::WebKit::FatFingers::checkFingerIntersection):
        (BlackBerry::WebKit::FatFingers::findIntersectingRegions):
        (BlackBerry::WebKit::FatFingers::checkForClickableElement):
        (BlackBerry::WebKit::FatFingers::checkForText):
        (BlackBerry::WebKit::FatFingers::getPaddings):
        (BlackBerry::WebKit::FatFingers::nodesFromRect):
        (BlackBerry::WebKit::FatFingers::getRelevantInfoFromPoint):
        (BlackBerry::WebKit::FatFingers::setSuccessfulFatFingersResult):
        * WebKitSupport/FatFingers.h: Added.
        (WebCore):
        (WebKit):
        (FatFingersResult):
        (BlackBerry::WebKit::FatFingersResult::FatFingersResult):
        (BlackBerry::WebKit::FatFingersResult::reset):
        (BlackBerry::WebKit::FatFingersResult::originPosition):
        (BlackBerry::WebKit::FatFingersResult::adjustedPosition):
        (BlackBerry::WebKit::FatFingersResult::positionWasAdjusted):
        (BlackBerry::WebKit::FatFingersResult::isTextInput):
        (BlackBerry::WebKit::FatFingersResult::isValid):
        (BlackBerry::WebKit::FatFingersResult::validNode):
        (BlackBerry::WebKit::FatFingersResult::nodeAsElementIfApplicable):
        (FatFingers):

2012-02-16  Antonio Gomes  <agomes@rim.com>

        [BlackBerry] Upstream touch handling related classes
        https://bugs.webkit.org/show_bug.cgi?id=78509

        Reviewed by Adam Treat.

        Initial upstream of the Blackberry specific single touch event
        handler class.

        * blackberry/WebKitSupport/TouchEventHandler.cpp: Added.
        (WebKit):
        (BlackBerry::WebKit::hasMouseMoveListener):
        (BlackBerry::WebKit::hasTouchListener):
        (BlackBerry::WebKit::elementExpectsMouseEvents):
        (BlackBerry::WebKit::shouldConvertTouchToMouse):
        (BlackBerry::WebKit::TouchEventHandler::TouchEventHandler):
        (BlackBerry::WebKit::TouchEventHandler::~TouchEventHandler):
        (BlackBerry::WebKit::TouchEventHandler::shouldSuppressMouseDownOnTouchDown):
        [BlackBerry] Upstream touch handling related classes
        https://bugs.webkit.org/show_bug.cgi?id=78509

        Reviewed by Rob Buis.

        InRegionScrollableArea specializes the BlackBerry specific ScrollViewBase,
        working as a read-only wrapper object for a scrollable areas in the page.
        It is used in our client side to control in-region scrolling (scrollable boxes,
        inner frames, etc).

        Initial upstream.

        * WebKitSupport/InRegionScrollableArea.cpp: Added.
        (WebKit):
        (BlackBerry::WebKit::InRegionScrollableArea::InRegionScrollableArea):
        (BlackBerry::WebKit::InRegionScrollableArea::calculateMinimumScrollPosition):
        (BlackBerry::WebKit::InRegionScrollableArea::calculateMaximumScrollPosition):
        (BlackBerry::WebKit::InRegionScrollableArea::layer):
        (BlackBerry):
        * WebKitSupport/InRegionScrollableArea.h: Added.
        (WebCore):
        (WebKit):
        (InRegionScrollableArea):

2012-02-16  Antonio Gomes  <agomes@rim.com>

        (BlackBerry::WebKit::TouchEventHandler::touchEventCancel):
        (BlackBerry::WebKit::TouchEventHandler::touchHoldEvent):
        (BlackBerry::WebKit::TouchEventHandler::handleTouchPoint):
        (BlackBerry::WebKit::TouchEventHandler::spellCheck):
        (BlackBerry::WebKit::TouchEventHandler::handleFatFingerPressed):
        (BlackBerry::WebKit::elementForTapHighlight):
        (BlackBerry::WebKit::TouchEventHandler::drawTapHighlight):
        * blackberry/WebKitSupport/TouchEventHandler.h: Added.
        (WebCore):
        (WebKit):
        (TouchEventHandler):
        (BlackBerry::WebKit::TouchEventHandler::lastFatFingersResult):
        (BlackBerry::WebKit::TouchEventHandler::resetLastFatFingersResult):

