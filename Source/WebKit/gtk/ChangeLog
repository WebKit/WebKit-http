2012-12-15  Anders Carlsson  <andersca@apple.com>

        Rename FrameLoaderClient::download to convertMainResourceLoadToDownload
        https://bugs.webkit.org/show_bug.cgi?id=105122

        Reviewed by Andreas Kling.

        Update for WebCore changes.

        * WebCoreSupport/FrameLoaderClientGtk.cpp:
        (WebKit::FrameLoaderClient::convertMainResourceLoadToDownload):
        * WebCoreSupport/FrameLoaderClientGtk.h:
        (FrameLoaderClient):

2012-12-15  Mark Lam  <mark.lam@apple.com>

        Re-landing patch for "Introducing the DatabaseStrategy and database servers".
        https://bugs.webkit.org/show_bug.cgi?id=104934.

        Not reviewed.

        Merged from r137767. Previously reviewed by Sam Weinig.

        * WebCoreSupport/PlatformStrategiesGtk.cpp:
        (PlatformStrategiesGtk::createDatabaseStrategy):
        * WebCoreSupport/PlatformStrategiesGtk.h:
        (PlatformStrategiesGtk):

2012-12-14  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r137767.
        http://trac.webkit.org/changeset/137767
        https://bugs.webkit.org/show_bug.cgi?id=105062

        Broke Mac builds. (Requested by mlam on #webkit).

        * WebCoreSupport/PlatformStrategiesGtk.cpp:
        * WebCoreSupport/PlatformStrategiesGtk.h:
        (PlatformStrategiesGtk):

2012-12-14  Mark Lam  <mark.lam@apple.com>

        Introducing the DatabaseStrategy and database servers.
        https://bugs.webkit.org/show_bug.cgi?id=104934.

        Reviewed by Sam Weinig.

        The database server is currently a placeholder that does nothing.

        * WebCoreSupport/PlatformStrategiesGtk.cpp:
        (PlatformStrategiesGtk::createDatabaseStrategy):
        * WebCoreSupport/PlatformStrategiesGtk.h:
        (PlatformStrategiesGtk):

2012-12-14  Alberto Garcia  <agarcia@igalia.com>

        [GTK] When in private mode WebKitGTK+ should not save HTTP authentication credentials to the persistent storage
        https://bugs.webkit.org/show_bug.cgi?id=104910

        Reviewed by Martin Robinson.

        * WebCoreSupport/FrameLoaderClientGtk.cpp:
        (WebKit::FrameLoaderClient::dispatchDidReceiveAuthenticationChallenge):
        When creating the GtkAuthenticationDialog, set the credential
        storage mode using the private browsing setting from the current
        page.

        * webkit/webkitsoupauthdialog.cpp:
        (sessionAuthenticate):
        Create the GtkAuthenticationDialog with no persistent storage
        allowed, as we are not handling the credential persistence here.

2012-12-12  Mark Lam  <mark.lam@apple.com>

        Encapsulate externally used webdatabase APIs in DatabaseManager.
        https://bugs.webkit.org/show_bug.cgi?id=104741.

        Reviewed by Sam Weinig.

        Use DatabaseManager instead of accessing DatabaseTracker, AbstractDatabase,
        and DatabaseContext directly. This is to prepare for upcoming webkit2
        refactoring.

        * WebCoreSupport/ChromeClientGtk.cpp:
        (WebKit::ChromeClient::exceededDatabaseQuota):
        * webkit/webkitfavicondatabase.cpp:
        * webkit/webkiticondatabase.cpp:
        * webkit/webkitsecurityorigin.cpp:
        (webkit_security_origin_get_web_database_usage):
        (webkit_security_origin_get_web_database_quota):
        (webkit_security_origin_set_web_database_quota):
        (webkit_security_origin_get_all_web_databases):
        * webkit/webkitwebdatabase.cpp:
        (webkit_web_database_get_display_name):
        (webkit_web_database_get_expected_size):
        (webkit_web_database_get_size):
        (webkit_web_database_get_filename):
        (webkit_web_database_remove):
        (webkit_remove_all_web_databases):
        (webkit_get_web_database_directory_path):
        (webkit_set_web_database_directory_path):
        * webkit/webkitwebview.cpp:
        (webkit_web_view_update_settings):
        (webkit_web_view_settings_notify):

2012-12-12  Martin Robinson  <mrobinson@igalia.com>

        [GTK] Add authentication support to DRT and fix exposed issues in the libsoup backend
        https://bugs.webkit.org/show_bug.cgi?id=104285

        Reviewed by Gustavo Noronha Silva.

        Add support to DumpRenderTree for running authentication tests. Since the DRT
        expects an authentication callback, we add one to DRTSupport to avoid #ifdefs
        in platform-independent code for GTK+.

        * WebCoreSupport/DumpRenderTreeSupportGtk.cpp:
        (DumpRenderTreeSupportGtk::setAuthenticationCallback): Added.
        * WebCoreSupport/DumpRenderTreeSupportGtk.h:
        (DumpRenderTreeSupportGtk): Add a method to set the authentication callback.
        * WebCoreSupport/FrameLoaderClientGtk.cpp:
        (WebKit::FrameLoaderClient::dispatchDidReceiveAuthenticationChallenge): When
        in DRT mode we need to call the authentication callback instead of popping
        up the dialog or ignoring the request.

2012-12-12  Alexey Proskuryakov  <ap@apple.com>

        Make LOG() work in WebProcess and NetworkProcess
        https://bugs.webkit.org/show_bug.cgi?id=104718

        Reviewed by Tim Horton.

        * webkit/webkitglobals.cpp: Include InitializeLogging.h

2012-12-12  Joone Hur  <joone.hur@intel.com>

        [GTK][AC] The non-composited content is not painted
        https://bugs.webkit.org/show_bug.cgi?id=104819

        Reviewed by Gustavo Noronha Silva.

        When Accelerated Compositing is enabled, only GraphicsLayers are painted.
        This patch allows to paint the non-composited content on the viewport with 
        GraphicsLayers. Most of the codes are the same as AcceleratedCompositingContextGL.cpp

        * WebCoreSupport/AcceleratedCompositingContext.h: Add m_nonCompositedContentLayer.
        * WebCoreSupport/AcceleratedCompositingContextClutter.cpp:
        (WebKit::AcceleratedCompositingContext::AcceleratedCompositingContext):
        (WebKit::AcceleratedCompositingContext::initialize):
        (WebKit):
        (WebKit::AcceleratedCompositingContext::~AcceleratedCompositingContext):
        (WebKit::AcceleratedCompositingContext::renderLayersToWindow):
        (WebKit::AcceleratedCompositingContext::setRootCompositingLayer):
        (WebKit::AcceleratedCompositingContext::setNonCompositedContentsNeedDisplay):
        (WebKit::AcceleratedCompositingContext::resizeRootLayer):
        (WebKit::AcceleratedCompositingContext::scrollNonCompositedContents): Make the non-composited 
        content scroll.
        (WebKit::AcceleratedCompositingContext::layerFlushTimerFiredCallback):
        (WebKit::AcceleratedCompositingContext::flushPendingLayerChanges):
        (WebKit::AcceleratedCompositingContext::flushAndRenderLayers):
        (WebKit::AcceleratedCompositingContext::notifyAnimationStarted):
        (WebKit::AcceleratedCompositingContext::paintContents): Paint the non-composited content.

2012-12-12  Joone Hur  <joone.hur@intel.com>

        [GTK][AC] GraphicsLayers are not shown on the viewport
        https://bugs.webkit.org/show_bug.cgi?id=104670

        Reviewed by Gustavo Noronha Silva.

        GraphicsLayers are not shown on the viewport because the container(GtkClutterEmbed) 
        is not resized and shown, so this patch allows it to fit to the viewport.

        * WebCoreSupport/AcceleratedCompositingContext.h:
        * WebCoreSupport/AcceleratedCompositingContextClutter.cpp:
        (WebKit::AcceleratedCompositingContext::renderLayersToWindow):
        (WebKit::AcceleratedCompositingContext::setRootCompositingLayer):
        (WebKit::AcceleratedCompositingContext::resizeRootLayer):
        (WebKit::AcceleratedCompositingContext::layerFlushTimerFiredCallback):
        (WebKit::AcceleratedCompositingContext::scheduleLayerFlush):

2012-12-11  Carlos Garcia Campos  <cgarcia@igalia.com>

        [GTK] Install GObject DOM bindings headers in its own directory
        https://bugs.webkit.org/show_bug.cgi?id=104663

        Reviewed by Gustavo Noronha Silva.

        * GNUmakefile.am: Add webkitdom.h.
        * webkit/webkitdom.h: Compatibility header just including the new
        one.
        * webkit/webkitwebframe.cpp: Update includes.
        * webkit/webkitwebframe.h: Ditto.
        * webkit/webkitwebinspector.cpp: Ditto.
        * webkit/webkitwebinspector.h: Ditto.
        * webkit/webkitwebview.cpp: Ditto.
        * webkit/webkitwebview.h: Ditto.

2012-12-11  Mike West  <mkwst@chromium.org>

        Web Inspector: ConsoleTypes should not expose MessageType - it should be private to inspector.
        https://bugs.webkit.org/show_bug.cgi?id=66371

        Reviewed by Pavel Feldman.

        Drops WebCore::MessageType from the addMessageToConsole method.

        * WebCoreSupport/ChromeClientGtk.cpp:
        (WebKit::ChromeClient::addMessageToConsole):
        * WebCoreSupport/ChromeClientGtk.h:
        (ChromeClient):

2012-12-11  Martin Robinson  <mrobinson@igalia.com>

        [GTK] Implement some missing FrameLoaderClient message in DRT
        https://bugs.webkit.org/show_bug.cgi?id=104444

        Reviewed by Gustavo Noronha Silva.

        When in DumpRenderTree mode allow the DRT to install a FrameLoaderEvent callback
        for events that we do not expose in the API. This will allow us to share more
        results with WebKit2.

        * WebCoreSupport/DumpRenderTreeSupportGtk.cpp:
        (DumpRenderTreeSupportGtk::setFrameLoadEventCallback): Added.
        * WebCoreSupport/DumpRenderTreeSupportGtk.h:
        * WebCoreSupport/FrameLoaderClientGtk.cpp: Use the new callback to deliver
        events to DRT.

2012-12-11  Martin Robinson  <mrobinson@igalia.com>

        [Coverity] [GTK] Remove some redundant null checks in DumpRenderTree
        https://bugs.webkit.org/show_bug.cgi?id=104570

        Reviewed by Daniel Bates.

        * WebCoreSupport/DumpRenderTreeSupportGtk.cpp:
        (DumpRenderTreeSupportGtk::elementDoesAutoCompleteForElementWithId): Remove a redundant null check.

2012-12-10  Carlos Garcia Campos  <cgarcia@igalia.com>

        [GTK] Build GObject DOM bindings as a separate library
        https://bugs.webkit.org/show_bug.cgi?id=104527

        Reviewed by Xan Lopez.

        * GNUmakefile.am: Link to libWebCoreDOM.la.

2012-12-10  Martin Robinson  <mrobinson@igalia.com>

        [GTK] Bring Harfbuzz-ng support to Gtk
        https://bugs.webkit.org/show_bug.cgi?id=92098

        Reviewed by Gustavo Noronha Silva.

        Add HarfBuzz dependency.

        * GNUmakefile.am: Add FreeType/HarfBuzz CFLAGS to the library.

2012-12-05  Arnaud Renevier  <a.renevier@sisa.samsung.com>

        [Gtk] navigator.plugins contains too many plugin entries. First one are garbages
        https://bugs.webkit.org/show_bug.cgi?id=102438

        Reviewed by Xan Lopez.

        In getPluginInfo, outPlugins is resized to plugins.size and then,
        plugins are appended to it. So at the end, outPlugins will be twice
        too large, and first half will contain null objects. As outPlugins
        size is 0 when calling getPluginInfo, we don't need to resize it.

        * WebCoreSupport/PlatformStrategiesGtk.cpp:
        (PlatformStrategiesGtk::getPluginInfo):

2012-12-04  Carlos Garcia Campos  <cgarcia@igalia.com>

        [GTK] Avoid unnecessary heap allocations during drag and drop operations
        https://bugs.webkit.org/show_bug.cgi?id=87938

        Reviewed by Martin Robinson.

        * webkit/webkitwebview.cpp:
        (webkit_web_view_drag_motion): Create DragData for the given
        DataObjectGtk in the stack.
        (webkit_web_view_drag_data_received): Ditto.
        (webkit_web_view_drag_drop): Ditto.

2012-12-02  Mike West  <mkwst@chromium.org>

        [gtk] Enable the CSP_NEXT runtime flag.
        https://bugs.webkit.org/show_bug.cgi?id=103810

        Reviewed by Adam Barth.

        This patch adds methods to DumpRenderTreeSupport in order to ensure that
        CSP 1.1 features are enabled when running DRT tests in the GTK port.

        * WebCoreSupport/DumpRenderTreeSupportGtk.cpp:
        (DumpRenderTreeSupportGtk::setExperimentalContentSecurityPolicyFeaturesEnabled):
        * WebCoreSupport/DumpRenderTreeSupportGtk.h:
        (DumpRenderTreeSupportGtk):

2012-11-30  Mihai Maerean  <mmaerean@adobe.com>

        [CSSRegions] when WebKit uses V8, there should be a single variable to store if the CSS Regions feature is enabled
        https://bugs.webkit.org/show_bug.cgi?id=101192

        Reviewed by Hajime Morita.

        Removed the CSS Regions flag in Settings and switched to using the new flag I have added in RuntimeEnabledFeatures.

        Tests: No new tests because there is no functional change.

        * WebCoreSupport/DumpRenderTreeSupportGtk.cpp:
        (DumpRenderTreeSupportGtk::setCSSRegionsEnabled):

2012-11-29  Alexey Proskuryakov  <ap@apple.com>

        [WK2] Forward cookie jar calls to NetworkProcess
        https://bugs.webkit.org/show_bug.cgi?id=103457

        Reviewed by Darin Adler.

        * WebCoreSupport/PlatformStrategiesGtk.cpp:
        (PlatformStrategiesGtk::cookiesForDOM):
        (PlatformStrategiesGtk::setCookiesFromDOM):
        (PlatformStrategiesGtk::cookiesEnabled):
        (PlatformStrategiesGtk::cookieRequestHeaderFieldValue):
        (PlatformStrategiesGtk::getRawCookies):
        (PlatformStrategiesGtk::deleteCookie):
        (PlatformStrategiesGtk::getHostnamesWithCookies):
        (PlatformStrategiesGtk::deleteCookiesForHostname):
        (PlatformStrategiesGtk::deleteAllCookies):

2012-11-27  James Simonsen  <simonjam@chromium.org>

        Consolidate FrameLoader::load() into one function taking a FrameLoadRequest
        https://bugs.webkit.org/show_bug.cgi?id=102151

        Reviewed by Adam Barth.

        * webkit/webkitwebframe.cpp:
        (webkit_web_frame_load_uri):
        (webkit_web_frame_load_data):
        (webkit_web_frame_load_request):

2012-11-27  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r135786.
        http://trac.webkit.org/changeset/135786
        https://bugs.webkit.org/show_bug.cgi?id=103379

        It made 3 plugin tests timeout on several platforms (Requested
        by Ossy on #webkit).

        * webkit/webkitwebframe.cpp:
        (webkit_web_frame_load_uri):
        (webkit_web_frame_load_data):
        (webkit_web_frame_load_request):

2012-11-26  James Simonsen  <simonjam@chromium.org>

        Consolidate FrameLoader::load() into one function taking a FrameLoadRequest
        https://bugs.webkit.org/show_bug.cgi?id=102151

        Reviewed by Adam Barth.

        * webkit/webkitwebframe.cpp:
        (webkit_web_frame_load_uri):
        (webkit_web_frame_load_data):
        (webkit_web_frame_load_request):

2012-11-25  Kaustubh Atrawalkar  <kaustubh@motorola.com>

        Remove deprecated load-done signal
        https://bugs.webkit.org/show_bug.cgi?id=72712

        Reviewed by Brent Fulgham.

        Remove deprecated load-done signal and migrate to load-status.

        * WebCoreSupport/FrameLoaderClientGtk.cpp:
        (WebKit):
        (WebKit::FrameLoaderClient::dispatchDidFinishLoad):
        * webkit/webkitwebframe.cpp:
        (webkit_web_frame_class_init):

2012-09-26  Gustavo Noronha Silva  <gns@gnome.org>

        [GTK] Split SVG from WebCore to work-around make limitation
        https://bugs.webkit.org/show_bug.cgi?id=97735

        Reviewed by Carlos Garcia Campos.

        Add a new libtool convenience library, libWebCoreSVG.la, to work-around
        make limitation when linking libWebCore.

        * GNUmakefile.am: link libWebCoreSVG.la into libwebkitgtk.

2012-11-21  Allan Sandfeld Jensen  <allan.jensen@digia.com>

        Disambiguate innerNodeFramePoint and mainFramePoint
        https://bugs.webkit.org/show_bug.cgi?id=98139

        Reviewed by Julien Chaffraix.

        Switched to using point in innerNodeFrame. While the use here seems wrong it has been
        left functionally unchanged to be fixed by a later patch.

        * webkit/webkithittestresult.cpp:
        (WebKit::kit):

2012-11-20  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r135295.
        http://trac.webkit.org/changeset/135295
        https://bugs.webkit.org/show_bug.cgi?id=102834

        This patch causes assertion to some layout tests on chromium
        (Requested by jianli on #webkit).

        * webkit/webkitwebframe.cpp:
        (webkit_web_frame_load_uri):
        (webkit_web_frame_load_data):
        (webkit_web_frame_load_request):

2012-11-20  James Simonsen  <simonjam@chromium.org>

        Consolidate FrameLoader::load() into one function taking a FrameLoadRequest
        https://bugs.webkit.org/show_bug.cgi?id=102151

        Reviewed by Adam Barth.

        * webkit/webkitwebframe.cpp:
        (webkit_web_frame_load_uri):
        (webkit_web_frame_load_data):
        (webkit_web_frame_load_request):

2012-11-20  Carlos Garcia Campos  <cgarcia@igalia.com>

        Unreviewed. Update NEWS and configure.ac for 1.11.2 release

        * NEWS: Added release notes for 1.11.2.

2012-11-16  Martin Robinson  <mrobinson@igalia.com>

        [GTK] Move CredentialBackingStore usage from GtkAuthenticationDialog to ResourceHandleSoup
        https://bugs.webkit.org/show_bug.cgi?id=101840

        Reviewed by Gustavo Noronha Silva.

        Enable the CredentialStore by default for the WebKit1 GTK+ port. Before this value
        didn't have an bearing on whether or not the persistent credential storage was used.
        Now is does.

        * WebCoreSupport/FrameLoaderClientGtk.cpp:
        (WebKit::FrameLoaderClient::shouldUseCredentialStorage): Enable credential storage by default.

2012-11-15  Gustavo Noronha Silva  <gns@gnome.org>

        [GTK] Split WebCore/platform into a separate library
        https://bugs.webkit.org/show_bug.cgi?id=94435

        Reviewed by Martin Robinson.

        More people have been reporting problems when linking WebCore because
        the command line limit is being exceeded. Splitting WebCore a bit more
        is in order.

        * GNUmakefile.am: link libWebCorePlatform into libwebkitgtk

2012-11-15  Zan Dobersek  <zandobersek@gmail.com>

        Unreviewed build fix attempt after r134765.

        * webkit/webkitviewportattributes.cpp:
        (webkitViewportAttributesRecompute):

2012-11-12  Josh Rickmar  <jrick@devio.us>

        Add WebCore::Setting to block displaying and/or running insecure content on secure pages
        https://bugs.webkit.org/show_bug.cgi?id=58378

        Reviewed by Martin Robinson.

        * webkit/webkitwebsettings.cpp:
        (webkit_web_settings_class_init):
        (webkit_web_settings_set_property):
        (webkit_web_settings_get_property):
        (webkit_web_settings_copy):
        * webkit/webkitwebview.cpp:
        (webkit_web_view_update_settings):
        (webkit_web_view_settings_notify):

2012-11-05  Simon Fraser  <simon.fraser@apple.com>

        Fix layer borders to cleaning appear and disappear on switching
        https://bugs.webkit.org/show_bug.cgi?id=101136

        Reviewed by Sam Weinig.

        Remove the GraphicsLayerClient methods showDebugBorders() and
        showRepaintCounter().

        * WebCoreSupport/AcceleratedCompositingContext.h:
        (AcceleratedCompositingContext):
        * WebCoreSupport/AcceleratedCompositingContextCairo.cpp:
        * WebCoreSupport/AcceleratedCompositingContextClutter.cpp:
        * WebCoreSupport/AcceleratedCompositingContextGL.cpp:

2012-10-25  Martin Robinson  <mrobinson@igalia.com>

        [GTK] Move soup authentication from GtkAuthenticationDialog to WebCore
        https://bugs.webkit.org/show_bug.cgi?id=99914

        Reviewed by Carlos Garcia Campos.

        The calls which actually authenticate a soup message are gone from the GtkAuthenticationDialog. Since the
        GtkAuthenticationDialog exposed by the WebKitSoupAuthentication class in the GTK+ API work without a
        ResourceHandle (they are more general), we add a WebKitSoupAuthDialogAuthenticationClient added to avoid
        breaking API. This is unused by either Epiphany or internally in WebKitGTK+.

        * WebCoreSupport/FrameLoaderClientGtk.cpp:
        (WebKit::FrameLoaderClient::dispatchDidReceiveAuthenticationChallenge): The authentication dialog
        now just takes the AuthenticationChallenge instead of the libsoup objects.
        * webkit/webkitsoupauthdialog.cpp:
        (WebKitSoupAuthDialogAuthenticationClient): Added this helper.
        (sessionAuthenticate): Use the new WebKitSoupAuthDialogAuthenticationClient.

2012-11-02  Martin Robinson  <mrobinson@igalia.com>

        [GTK] Remove dependency on SoupPasswordManager
        https://bugs.webkit.org/show_bug.cgi?id=100775

        Reviewed by Carlos Garcia Campos.

        Add a libsecret dependency to the build. This is necessary so that we can remove
        a dependency on SoupPasswordManager.

        * GNUmakefile.am: Use libsecret libs during WebKit1 library compilation.

2012-10-24  Brady Eidson  <beidson@apple.com>

        Add a strategy for loader customization.
        https://bugs.webkit.org/show_bug.cgi?id=100278

        Reviewed by Alexey Proskuryakov.

        * WebCoreSupport/PlatformStrategiesGtk.cpp:
        (PlatformStrategiesGtk::createLoaderStrategy):
        * WebCoreSupport/PlatformStrategiesGtk.h:
        (PlatformStrategiesGtk):

2012-10-23  Alexey Proskuryakov  <ap@apple.com>

        Add a strategy for shared workers
        https://bugs.webkit.org/show_bug.cgi?id=100165

        Reviewed by Brady Eidson.

        * WebCoreSupport/PlatformStrategiesGtk.cpp:
        (PlatformStrategiesGtk::createPasteboardStrategy):
        (PlatformStrategiesGtk::createSharedWorkerStrategy):
        (PlatformStrategiesGtk::createVisitedLinkStrategy):
        * WebCoreSupport/PlatformStrategiesGtk.h:

2012-10-24  Priit Laes  <plaes@plaes.org>

        [GTK] Typos in user-visible strings: "coordintate"
        https://bugs.webkit.org/show_bug.cgi?id=100252

        Reviewed by Martin Robinson.

        s/coordintate/coordinate

        * webkit/webkithittestresult.cpp:
        (webkit_hit_test_result_class_init):

2012-10-23  Martin Robinson  <mrobinson@igalia.com>

        [GTK][Soup] Implement the default authentication dialog via WebCoreSupport
        https://bugs.webkit.org/show_bug.cgi?id=99351

        Reviewed by Carlos Garcia Campos.

        Instead of using a custom SoupSessionFeature to show the authentication dialog,
        show it using the corresponding WebCore message.

        * WebCoreSupport/FrameLoaderClientGtk.cpp:
        (WebKit::FrameLoaderClient::dispatchDidReceiveAuthenticationChallenge):
        Show the dialog when we need to authenticate. Also, so not show the dialog
        if we are in DRT mode.
        * webkit/webkitglobals.cpp:
        (webkitInit): No longer install our SoupFeature.

2012-10-23  Carlos Garcia Campos  <cgarcia@igalia.com>

        Unreviewed. Update NEWS and configure.ac for 1.11.1 release

        * NEWS: Added release notes for 1.11.1.

2012-10-23  Andras Becsi  <andras.becsi@digia.com>

        Remove devicePixelRatio from ViewportAttributes
        https://bugs.webkit.org/show_bug.cgi?id=99845

        Reviewed by Adam Barth.

        * webkit/webkitviewportattributes.cpp:
        (webkitViewportAttributesRecompute):
        Pass the device pixel ratio as a function argument.

2012-10-22  Jocelyn Turcotte  <jocelyn.turcotte@digia.com>

        [Qt] Fix "ASSERTION FAILED: !document->inPageCache()" when loading a page
        https://bugs.webkit.org/show_bug.cgi?id=98514

        Reviewed by Kenneth Rohde Christiansen.

        * WebCoreSupport/FrameLoaderClientGtk.cpp:
        (WebKit::FrameLoaderClient::transitionToCommittedForNewPage):

2012-10-10  Brady Eidson  <beidson@apple.com>

        Switch ResourceLoader::resourceData() from SharedBuffer to ResourceBuffer
        https://bugs.webkit.org/show_bug.cgi?id=98976

        Reviewed by Anders Carlsson.

        * webkit/webkitwebdatasource.cpp:
        (webkit_web_data_source_get_data):

2012-10-10  Jon Lee  <jonlee@apple.com>

        [WK2] Activate plugins when user clicks on snapshot
        https://bugs.webkit.org/show_bug.cgi?id=98328
        <rdar://problem/12426681>

        Reviewed by Brady Eidson.

        * WebCoreSupport/FrameLoaderClientGtk.h:
        (WebKit::FrameLoaderClient::recreatePlugin): Stub implementation of recreatePlugin().

2012-10-10  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r130853.
        http://trac.webkit.org/changeset/130853
        https://bugs.webkit.org/show_bug.cgi?id=98873

        The rollout was incorrect (Requested by zdobersek on #webkit).

        * webkit/webkitwebview.cpp:
        (resizeWebViewFromAllocation):
        (webkit_web_view_size_allocate):
        (webkitWebViewMap):

2012-10-09  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r130838.
        http://trac.webkit.org/changeset/130838
        https://bugs.webkit.org/show_bug.cgi?id=98860

        The patch is causing X errors (=> crashes) on GTK 64-bit
        Release builder (Requested by zdobersek on #webkit).

        * webkit/webkitwebview.cpp:
        (resizeWebViewFromAllocation):
        (webkit_web_view_size_allocate):
        (webkitWebViewMap):

2012-10-09  Daniel Drake  <dsd@laptop.org>

        [GTK] Plugins don't display
        https://bugs.webkit.org/show_bug.cgi?id=98789

        Reviewed by Martin Robinson.

        Fix a recent regression where plugin content was not being displayed.
        Bringing webkit_web_view_size_allocate in line with the WebKit2
        equivalent solves the issue.

        * webkit/webkitwebview.cpp:
        (resizeWebViewFromAllocation): pass allocation request to children
        even when the allocation size does not change.
        (webkit_web_view_size_allocate): don't bail too early if the
        allocation size does not change.

2012-10-07  Caio Marcelo de Oliveira Filho  <caio.oliveira@openbossa.org>

        Rename first/second to key/value in HashMap iterators
        https://bugs.webkit.org/show_bug.cgi?id=82784

        Reviewed by Eric Seidel.

        * WebCoreSupport/PlatformStrategiesGtk.cpp:
        (PlatformStrategiesGtk::getPluginInfo):
        * webkit/webkitfavicondatabase.cpp:
        (webkitFaviconDatabaseImportFinished):
        * webkit/webkitwebplugin.cpp:
        (webkit_web_plugin_get_mimetypes):

2012-10-04  Simon Fraser  <simon.fraser@apple.com>

        Final part of "sync" to "flush" renaming
        https://bugs.webkit.org/show_bug.cgi?id=98430

        Reviewed by Tim Horton.

        Change method names on GraphicsLayer and GraphicsLayerClient that
        refer to "sync" to use the term "flush" instead, to be consistent
        with the rest of the code.

        * WebCoreSupport/AcceleratedCompositingContext.h:
        (AcceleratedCompositingContext):
        * WebCoreSupport/AcceleratedCompositingContextCairo.cpp:
        (WebKit::AcceleratedCompositingContext::attachRootGraphicsLayer):
        (WebKit::AcceleratedCompositingContext::resizeRootLayer):
        (WebKit::AcceleratedCompositingContext::syncLayersNow):
        (WebKit::AcceleratedCompositingContext::notifyFlushRequired):
        * WebCoreSupport/AcceleratedCompositingContextClutter.cpp:
        (WebKit::AcceleratedCompositingContext::flushPendingLayerChanges):
        (WebKit::AcceleratedCompositingContext::notifyFlushRequired):
        * WebCoreSupport/AcceleratedCompositingContextGL.cpp:
        (WebKit::AcceleratedCompositingContext::flushPendingLayerChanges):
        (WebKit::AcceleratedCompositingContext::notifyFlushRequired):

2012-10-04  Simon Fraser  <simon.fraser@apple.com>

        Standardize on "flush" terminology for compositing layer flushing/syncing
        https://bugs.webkit.org/show_bug.cgi?id=98321

        Reviewed by Simon Fraser.

        Rename compositing-related methods that refer to "syncing" to instead
        refer to "flushing".

        * WebCoreSupport/ChromeClientGtk.cpp:
        (WebKit::ChromeClient::scheduleCompositingLayerFlush):
        * WebCoreSupport/ChromeClientGtk.h:
        (ChromeClient):

2012-10-02  Anders Carlsson  <andersca@apple.com>

        Change most GraphicsLayer::create calls to use the version that takes a GraphicsLayerFactory
        https://bugs.webkit.org/show_bug.cgi?id=98217

        Reviewed by Andreas Kling.

        * WebCoreSupport/AcceleratedCompositingContextGL.cpp:
        (WebKit::AcceleratedCompositingContext::initialize):

2012-10-02  Carlos Garcia Campos  <cgarcia@igalia.com>

        [GTK] Add API to get the web view that initiated a custom URI request to WebKit2 GTK+
        https://bugs.webkit.org/show_bug.cgi?id=97895

        Reviewed by Martin Robinson.

        * WebCoreSupport/FrameNetworkingContextGtk.cpp:
        (WebKit::FrameNetworkingContextGtk::initiatingPageID): Stub
        implementation.
        * WebCoreSupport/FrameNetworkingContextGtk.h:
        (FrameNetworkingContextGtk): Added.

2012-10-02  Adrian Perez de Castro  <aperez@igalia.com>

        [GTK] Value not returned warning with geolocation disabled
        https://bugs.webkit.org/show_bug.cgi?id=98148

        Reviewed by Xan Lopez.

        With geolocation disabled in the build, return a sensible value from
        DumpRenderTreeSupportGtk::numberOfPendingGeolocationPermissionRequests.
        This also avoids a compiler warning.

        * WebCoreSupport/DumpRenderTreeSupportGtk.cpp:
        (DumpRenderTreeSupportGtk::numberOfPendingGeolocationPermissionRequests):

2012-10-01  Brady Eidson  <beidson@apple.com>

        Remove the Safari 2 -> Safari 3 icon database import code.
        https://bugs.webkit.org/show_bug.cgi?id=98113

        Reviewed by Maciej Stachowiak.

        Nuke the performImport() IconDatabaseClient method.

        * webkit/webkitfavicondatabase.cpp:
        (IconDatabaseClientGtk):

2012-10-01  Arnaud Renevier  <a.renevier@sisa.samsung.com>

        [Gtk] crash when accelerated composition is turned off
        https://bugs.webkit.org/show_bug.cgi?id=98099

        Reviewed by Martin Robinson.

        frame->view()->updateLayoutAndStyleIfNeededRecursive() may reset root
        compositing layer in flushAndRenderLayers. So, we check if compositing
        is enabled afterwards, and return if it is not.

        This bug is handled by LayoutTests/compositing/toggle-compositing.html

        * WebCoreSupport/AcceleratedCompositingContextGL.cpp:
        (WebKit::AcceleratedCompositingContext::flushAndRenderLayers):

2012-10-01  Claudio Saavedra  <csaavedra@igalia.com>

        [GTK] Save original uri for downloaded files
        https://bugs.webkit.org/show_bug.cgi?id=95188

        Reviewed by Carlos Garcia Campos.

        gvfs stores metadata locally, and this information can later be
        used by file management applications. Based on a patch by
        Alexander Larsson <alexl@redhat.com>.

        * webkit/webkitdownload.cpp:
        (webkit_download_open_stream_for_uri): Save the download-uri as
        file metadata.

2012-10-01  Claudio Saavedra  <csaavedra@igalia.com>

        [GTK] WebKitDownload: use more of GOwnPtr/GRefPtr
        https://bugs.webkit.org/show_bug.cgi?id=98009

        Reviewed by Carlos Garcia Campos.

        Use more GOwnPtr/GRefPtr in WebKitDownload

        * webkit/webkitdownload.cpp:
        (webkit_download_open_stream_for_uri): Use GRefPtr
        for a GFile and GOwnPtr for GError.
        (webkit_download_set_destination_uri): Ditto.
        (webkit_download_received_data): Use GOwnPtr for GError.

2012-09-28  Mikhail Pozdnyakov  <mikhail.pozdnyakov@intel.com>

        Code inside FrameLoaderClient::canShowMIMEType() implementations can be shared among different WK ports
        https://bugs.webkit.org/show_bug.cgi?id=97547

        Reviewed by Adam Barth.

        Newly added WebCore::MIMETypeRegistry::canShowMIMEType() function is used
        inside WebKit::FrameLoaderClient::canShowMIMEType().

        * WebCoreSupport/FrameLoaderClientGtk.cpp:
        (WebKit::FrameLoaderClient::canShowMIMEType):

2012-09-28  Huang Dongsung  <luxtella@company100.net>

        [GTK] Enable CSS Shaders layout LayoutTests on GTK+
        https://bugs.webkit.org/show_bug.cgi?id=97821

        Reviewed by Martin Robinson.

        * WebCoreSupport/DumpRenderTreeSupportGtk.cpp:
        (DumpRenderTreeSupportGtk::setCSSCustomFilterEnabled): Pass through to Settings object.
        * WebCoreSupport/DumpRenderTreeSupportGtk.h:
        (DumpRenderTreeSupportGtk):

2012-09-27  Allan Sandfeld Jensen  <allan.jensen@digia.com>

        Unify event handling of middle mouse button.
        https://bugs.webkit.org/show_bug.cgi?id=97690

        Reviewed by Tony Chang.

        Remove port specific handling of middle mouse button press.

        * WebCoreSupport/EditorClientGtk.cpp:
        (WebKit::EditorClient::supportsGlobalSelection):
        * WebCoreSupport/EditorClientGtk.h:
        (EditorClient):
        * webkit/webkitwebview.cpp:
        (webkit_web_view_button_press_event):

2012-09-26  Gustavo Noronha Silva  <gns@gnome.org>

        Unreviewed build fix after 129707.

        * webkit/webkitwebview.cpp:
        (webkit_web_view_forward_context_menu_event):

2012-09-26  Martin Robinson  <mrobinson@igalia.com>

        [GTK] Use XDamage to simplify RedirectedXCompositeWindow
        https://bugs.webkit.org/show_bug.cgi?id=97267

        Reviewed by Alejandro G. Castro.

        Use XDamage to queue redraws of the widget when redirecting accelerated compositing
        to an offscreen window. This allows removing a finicky timer-based approach, improves
        performance, and allows simplifying things greatly.

        * GNUmakefile.am: Add the XDamage CFLAGS and LIBS.
        * WebCoreSupport/AcceleratedCompositingContext.h:
        (AcceleratedCompositingContext): Change the signature of compositeLayersToContext
        to accept an enum that explains the composite purpose.
        * WebCoreSupport/AcceleratedCompositingContextGL.cpp:
        (WebKit::redirectedWindowDamagedCallback): Added.
        (WebKit::AcceleratedCompositingContext::initialize): Handle the situation where
        the RedirectedXCompositeWindow returns a null pointer.
        (WebKit::AcceleratedCompositingContext::enabled): Ditto.
        (WebKit::AcceleratedCompositingContext::renderLayersToWindow): Remove the code handling
        the usable size of the RedirectedXCompositeWindow. The usable size is now always equal
        to the size.
        (WebKit::AcceleratedCompositingContext::compositeLayersToContext): When drawing for a
        resize, first clear the entire context. Remove the double swap-buffer, as it's no
        longer necessary.
        (WebKit::AcceleratedCompositingContext::setRootCompositingLayer): Handle the case that
        the redirected window is null.
        (WebKit::AcceleratedCompositingContext::resizeRootLayer): Instead of doing another
        immediate layer flush, just recomposite the current layer state and schedule a new
        flush. This should make resizing faster.
        (WebKit::AcceleratedCompositingContext::flushAndRenderLayers): We no longer need to
        queue a redraw, unless we want to force one.

2012-09-26  Zan Dobersek  <zandobersek@gmail.com>

        [GTK] Enable some of the unstable CSS features
        https://bugs.webkit.org/show_bug.cgi?id=97572

        Reviewed by Martin Robinson.

        Add a helper DumpRenderTreeSupportGtk method for enabling
        the <style scoped> support in WebCore. This is used in DumpRenderTree.

        * WebCoreSupport/DumpRenderTreeSupportGtk.cpp:
        (DumpRenderTreeSupportGtk::setShadowDOMEnabled): Add missing
        ENABLE(SHADOW_DOM) compilation guards.
        (DumpRenderTreeSupportGtk::setStyleScopedEnabled):
        * WebCoreSupport/DumpRenderTreeSupportGtk.h:
        (DumpRenderTreeSupportGtk): Remove the 'enabled' parameter name from both
        setShadowDOMEnabled and setStyleScopedEnabled method declarations as it adds
        no information and is causing style warnings.

2012-09-25  Beth Dakin  <bdakin@apple.com>

        https://bugs.webkit.org/show_bug.cgi?id=95397
        Need to merge didFirstVisuallyNonEmptyLayout and 
        didNewFirstVisuallyNonEmptyLayout
        -and corresponding-
        <rdar://problem/10791680>

        Reviewed by Sam Weinig.

        Remove dispatchDidFirstLayout, 
        dispatchDidFirstVisuallyNonEmptyLayout, and 
        dispatchDidNewFirstVisuallyNonEmptyLayout. Their functionality 
        is now replaced by dispatchDidLayout(LayoutMilestoneOptions)
        * WebCoreSupport/FrameLoaderClientGtk.cpp:
        (WebKit::FrameLoaderClient::dispatchDidLayout):
        * WebCoreSupport/FrameLoaderClientGtk.h:
        (FrameLoaderClient):

        It is now necessary to opt into getting any of the 
        "layout milestone" notifications.
        * webkit/webkitwebview.cpp:
        (webkit_web_view_init):

2012-09-25  Paweł Forysiuk  <tuxator@o2.pl>

        [GTK] Webkit 1.8.2 fails to build with MinGW with spellchecking enabled
        https://bugs.webkit.org/show_bug.cgi?id=93255

        Reviewed by Martin Robinson.

        Build dies because of invalid cast. Additionaly word "interface" is in use with MinGW compiler.

        * WebCoreSupport/TextCheckerClientGtk.cpp:
        (WebKit::TextCheckerClientGtk::checkSpellingOfString): Use String to avoid unneded casting
        * webkit/webkitspellcheckerenchant.cpp:
        (webkit_spell_checker_enchant_spell_checker_interface_init): rename interface -> checkerInterface

2012-09-24  Benjamin Poulain  <bpoulain@apple.com>

        Fix Geolocation error reporting in the test support
        https://bugs.webkit.org/show_bug.cgi?id=97386

        Reviewed by Sam Weinig.

        * WebCoreSupport/DumpRenderTreeSupportGtk.cpp:
        (DumpRenderTreeSupportGtk::setMockGeolocationPositionUnavailableError):
        * WebCoreSupport/DumpRenderTreeSupportGtk.h:
        (DumpRenderTreeSupportGtk):

2012-09-24  Zan Dobersek  <zandobersek@gmail.com>

        [Gtk] Unskip the Shadow DOM layout tests
        https://bugs.webkit.org/show_bug.cgi?id=90776

        Reviewed by Ryosuke Niwa.

        Add a method for enabling the Shadow DOM through RuntimeEnabledFeatures.
        The method is called from DumpRenderTree when resetting state.

        * WebCoreSupport/DumpRenderTreeSupportGtk.cpp:
        (DumpRenderTreeSupportGtk::setShadowDOMEnabled):
        * WebCoreSupport/DumpRenderTreeSupportGtk.h:
        (DumpRenderTreeSupportGtk):

2012-09-24  Joone Hur  <joone.hur@intel.com>

        [GTK] Implement GraphicsLayer using Clutter
        https://bugs.webkit.org/show_bug.cgi?id=73767

        Reviewed by Martin Robinson.

        This patch is needed for enabling Accelerated Compositing(Clutter backend)
        with the patches submitted in bug 92045 and 91940.

        * WebCoreSupport/AcceleratedCompositingContextClutter.cpp:
        (WebKit::AcceleratedCompositingContext::scrollNonCompositedContents): Added to fix bulid break.
        (WebKit):

2012-09-19  Danilo Cesar Lemes de Paula  <danilo.cesar@collabora.co.uk>

        [gtk] add enable-media-stream to websettings
        https://bugs.webkit.org/show_bug.cgi?id=94361

        Reviewed by Martin Robinson.

        Applications should be allowed to enable/disable MediaStream on webkitwebsettings.

        * webkit/webkitwebsettings.cpp:
        (webkit_web_settings_class_init):
        (webkit_web_settings_set_property):
        (webkit_web_settings_get_property):
        * webkit/webkitwebsettingsprivate.h:
        * webkit/webkitwebview.cpp:
        (webkit_web_view_update_settings):

2012-09-14  Zan Dobersek  <zandobersek@gmail.com>

        [GTK] Clear application cache between tests in DumpRenderTree
        https://bugs.webkit.org/show_bug.cgi?id=96543

        Reviewed by Philippe Normand.

        Add a method to the DumpRenderTreeSupportGtk class that upon calling
        clears the application cache and vacuums the database file.

        * WebCoreSupport/DumpRenderTreeSupportGtk.cpp:
        (DumpRenderTreeSupportGtk::clearApplicationCache):
        * WebCoreSupport/DumpRenderTreeSupportGtk.h:
        (DumpRenderTreeSupportGtk):

2012-09-13  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r128453.
        http://trac.webkit.org/changeset/128453
        https://bugs.webkit.org/show_bug.cgi?id=96681

        Having tests use the same appcache directory leads to timeouts
        (Requested by zdobersek on #webkit).

        * WebCoreSupport/DumpRenderTreeSupportGtk.cpp:
        (DumpRenderTreeSupportGtk::clearMemoryCache):
        * WebCoreSupport/DumpRenderTreeSupportGtk.h:
        (DumpRenderTreeSupportGtk):

2012-09-13  Zan Dobersek  <zandobersek@gmail.com>

        [GTK] Clear application cache between tests in DumpRenderTree
        https://bugs.webkit.org/show_bug.cgi?id=96543

        Reviewed by Philippe Normand.

        Add a method to the DumpRenderTreeSupportGtk class that upon calling
        clears the application cache and vacuums the database file.

        * WebCoreSupport/DumpRenderTreeSupportGtk.cpp:
        (DumpRenderTreeSupportGtk::clearApplicationCache):
        * WebCoreSupport/DumpRenderTreeSupportGtk.h:
        (DumpRenderTreeSupportGtk):

2012-09-12  Siraj Razick  <siraj.razick@collabora.co.uk>

        [GTK] Update AcceleratedCompositingContextClutter to match AcceleratedCompositingContext.h API update
        https://bugs.webkit.org/show_bug.cgi?id=96165

        Reviewed by Martin Robinson.

        Due to the refactoring done in bug #90085 AcceleratedCompositingContext API changed, as a result
        AcceleratedCompositingContextClutter doesn't compile anymore. This patch is to update the
        AcceleratedCompositingContextClutter implementations to match the API update, and Make webkit
        AC backend compile again.

        * WebCoreSupport/AcceleratedCompositingContextClutter.cpp:
        (WebKit::AcceleratedCompositingContext::AcceleratedCompositingContext):
        (WebKit::AcceleratedCompositingContext::~AcceleratedCompositingContext):
        (WebKit::AcceleratedCompositingContext::setRootCompositingLayer):
        (WebKit::AcceleratedCompositingContext::setNonCompositedContentsNeedDisplay):
        (WebKit::flushAndRenderLayersCallback):
        (WebKit::AcceleratedCompositingContext::scheduleLayerFlush):
        (WebKit::AcceleratedCompositingContext::flushPendingLayerChanges):
        (WebKit::AcceleratedCompositingContext::flushAndRenderLayers):

2012-09-11  Arnaud Renevier  <a.renevier@sisa.samsung.com>

        [Gtk] allow building with css-shaders
        https://bugs.webkit.org/show_bug.cgi?id=95603

        Reviewed by Martin Robinson.

        Add enable-css-shaders property to WebKit WebSettings, and connects it
        to WebCore settings setCSSCustomFilterEnabled.

        * webkit/webkitwebsettings.cpp:
        (webkit_web_settings_class_init):
        (webkit_web_settings_set_property):
        (webkit_web_settings_get_property):
        * webkit/webkitwebsettingsprivate.h:
        * webkit/webkitwebview.cpp:
        (webkit_web_view_update_settings):
        (webkit_web_view_settings_notify):

2012-09-09  Emil A Eklund  <eae@chromium.org>

        Rename Node::getRect/getPixelSnappedRect and remove ContainerNode::getRect
        https://bugs.webkit.org/show_bug.cgi?id=81413

        Reviewed by David Hyatt.

        Update ChromeClientGtk and webkitwebview to call pixelSnappedBoundingBox.

        * WebCoreSupport/ChromeClientGtk.cpp:
        (WebKit::ChromeClient::mouseDidMoveOverElement):
        * webkit/webkitwebview.cpp:
        (getLocationForKeyboardGeneratedContextMenu):
        (webkit_web_view_query_tooltip):

2012-09-07  Martin Robinson  <mrobinson@igalia.com>

        [GTK] Move user agent helpers to WebCore
        https://bugs.webkit.org/show_bug.cgi?id=95745

        Reviewed by Carlos Garcia Campos.

        Move the code for determining the user agent to WebCore and have WebKit1
        use the new shared code.

        * webkit/webkitwebsettings.cpp: Use the WebCore code to determine the user
        agent in WebKit1.

2012-09-05  Sam Weinig  <sam@webkit.org>

        Part 2 of removing PlatformString.h, remove PlatformString.h
        https://bugs.webkit.org/show_bug.cgi?id=95931

        Reviewed by Adam Barth.

        Remove PlatformString.h

        * WebCoreSupport/ChromeClientGtk.cpp:
        * WebCoreSupport/DumpRenderTreeSupportGtk.cpp:
        * WebCoreSupport/InspectorClientGtk.cpp:
        * gdom/ConvertToGCharPrivate.h:
        * webkit/webkitsecurityorigin.cpp:
        * webkit/webkitwebdatasource.cpp:
        * webkit/webkitwebhistoryitem.cpp:
        * webkit/webkitwebresource.cpp:

2012-09-06  Carlos Garcia Campos  <cgarcia@igalia.com>

        [GTK] Add API to get/set the security policy of a given URI scheme
        https://bugs.webkit.org/show_bug.cgi?id=95549

        Reviewed by Martin Robinson.

        Add WebKitSecurityPolicy enum with flags that represent the
        security policy of a URI scheme. Add methods to get and set the
        security policy flags for a given URI scheme.

        * docs/webkitgtk-sections.txt: Add new symbols.
        * tests/testglobals.c:
        (test_globals_security_policy):
        (main):
        * webkit/webkitglobals.cpp:
        (webkit_set_security_policy_for_uri_scheme):
        (webkit_get_security_policy_for_uri_scheme):
        * webkit/webkitglobals.h:

2012-09-05  Kaustubh Atrawalkar  <kaustubh@motorola.com>

        [DRT] LTC:: Move printing related APIs from LayoutTestController to Internals
        https://bugs.webkit.org/show_bug.cgi?id=92735

        Reviewed by Hajime Morita.

        Move numberOfPages, pageProperty & pageSizeAndMarginsInPixels in Internals and remove duplicated code from DumprenderTree & WebkitTestRunner.

        * WebCoreSupport/DumpRenderTreeSupportGtk.cpp:
        * WebCoreSupport/DumpRenderTreeSupportGtk.h:
        (DumpRenderTreeSupportGtk):

2012-09-04  Joanmarie Diggs  <jdiggs@igalia.com>

        [GTK] Crash in AccessibilityObject::accessibilityPlatformIncludesObject()
        https://bugs.webkit.org/show_bug.cgi?id=95740

        Reviewed by Martin Robinson.

        Updated unit test.

        * tests/testatk.c:
        (testWebkitAtkComboBox): Added checks that the menu popup in a combo box
        has 0 links and, more importantly, that checking doesn't result in a crash.

2012-09-01  Joanmarie Diggs  <jdiggs@igalia.com>

        [Gtk] Incorrect/unexpected characters in the text of certain accessibles
        https://bugs.webkit.org/show_bug.cgi?id=95180

        Reviewed by Chris Fleizach.

        Corrected a unit test in which the expected accessible text was wrong as
        a result of this bug. In particular, the AtkText inserted into an empty
        text field is expected to be the same text atk_text_get_text() returns.
        That was not happening -- and presumably not noticed as a result of the
        hard to read textual representation of the multibyte password field
        bullets.

        * tests/testatk.c:
        (testWebkitAtkTextChangedNotifications): Corrected the test and added a
        comment so that one knows what the multibyte character is.

2012-08-31  José Dapena Paz  <jdapena@igalia.com>

        [GTK] Assert on ChromeClientGtk::scroll with delta (0, -1).
        https://bugs.webkit.org/show_bug.cgi?id=95590

        Change the assert to avoid hitting when the delta does not have any
        value > 0.

        Reviewed by Martin Robinson.

        * WebCoreSupport/ChromeClientGtk.cpp:
        (WebKit::ChromeClient::scroll):

2012-08-30  Benjamin Poulain  <bpoulain@apple.com>

        Replace JSC::UString by WTF::String
        https://bugs.webkit.org/show_bug.cgi?id=95271

        Reviewed by Geoffrey Garen.

        Replace UString by String.

        * gdom/ConvertToGCharPrivate.h:
        (copyAsGchar):

2012-08-30  Gyuyoung Kim  <gyuyoung.kim@samsung.com>

        Use ASCIILiteral for DEFINE_STATIC_LOCAL string
        https://bugs.webkit.org/show_bug.cgi?id=95420

        Reviewed by Benjamin Poulain.

        As recommended by http://trac.webkit.org/wiki/EfficientStrings,
        WebKit needs to use ASCIILiteral for the string of DEFINE_STATIC_LOCAL.

        * webkit/webkitwebsettings.cpp:
        (webkitPlatform):
        (webkitOSVersion):

2012-08-29  José Dapena Paz  <jdapena@igalia.com>

        [Gtk] Process Gtk 3.4 smooth scroll events properly.
        https://bugs.webkit.org/show_bug.cgi?id=88070

        Gtk 3.3.18 added smooth scroll events, adding a new scroll direction that
        provides detailed delta information.

        Added GDK_SMOOTH_SCROLL_MASK to the events listened, and added
        code to process properly the new direction GDK_SCROLL_SMOOTH and
        its deltas.

        Reviewed by Martin Robinson.

        * webkit/webkitwebview.cpp:
        (webkit_web_view_realize):

2012-08-28  Martin Robinson  <mrobinson@igalia.com>

        [GTK] Enable the edge distance anti-aliasing for accelerated compositing layers
        https://bugs.webkit.org/show_bug.cgi?id=95272

        Reviewed by No'am Rosenthal.

        Turn on edge-distance anti-aliasing for GTK+ WebKit1. This
        improves the quality of layer rendering.

        * WebCoreSupport/AcceleratedCompositingContextGL.cpp:
        (WebKit::AcceleratedCompositingContext::initialize):

2012-08-28  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r126914.
        http://trac.webkit.org/changeset/126914
        https://bugs.webkit.org/show_bug.cgi?id=95239

        it breaks everything and fixes nothing (Requested by pizlo on
        #webkit).

        * WebCoreSupport/PlatformStrategiesGtk.cpp:
        (PlatformStrategiesGtk::getPluginInfo):
        * webkit/webkitfavicondatabase.cpp:
        (webkitFaviconDatabaseImportFinished):
        * webkit/webkitwebplugin.cpp:
        (webkit_web_plugin_get_mimetypes):

2012-08-28  Caio Marcelo de Oliveira Filho  <caio.oliveira@openbossa.org>

        Rename first/second to key/value in HashMap iterators
        https://bugs.webkit.org/show_bug.cgi?id=82784

        Reviewed by Eric Seidel.

        * WebCoreSupport/PlatformStrategiesGtk.cpp:
        (PlatformStrategiesGtk::getPluginInfo):
        * webkit/webkitfavicondatabase.cpp:
        (webkitFaviconDatabaseImportFinished):
        * webkit/webkitwebplugin.cpp:
        (webkit_web_plugin_get_mimetypes):

2012-08-27  Zan Dobersek  <zandobersek@gmail.com>

        [GTK] Memory cache should be cleared in between test runs
        https://bugs.webkit.org/show_bug.cgi?id=95105

        Reviewed by Martin Robinson.

        Add a DumpRenderTreeSupportGtk helper method that clears the
        memory cache when called.

        * WebCoreSupport/DumpRenderTreeSupportGtk.cpp:
        (DumpRenderTreeSupportGtk::clearMemoryCache):
        * WebCoreSupport/DumpRenderTreeSupportGtk.h:
        (DumpRenderTreeSupportGtk):

2012-08-27  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r126836.
        http://trac.webkit.org/changeset/126836
        https://bugs.webkit.org/show_bug.cgi?id=95163

        Broke all Apple ports, EFL, and Qt. (Requested by tkent on
        #webkit).

        * WebCoreSupport/PlatformStrategiesGtk.cpp:
        (PlatformStrategiesGtk::getPluginInfo):
        * webkit/webkitfavicondatabase.cpp:
        (webkitFaviconDatabaseImportFinished):
        * webkit/webkitwebplugin.cpp:
        (webkit_web_plugin_get_mimetypes):

2012-08-27  Caio Marcelo de Oliveira Filho  <caio.oliveira@openbossa.org>

        Rename first/second to key/value in HashMap iterators
        https://bugs.webkit.org/show_bug.cgi?id=82784

        Reviewed by Eric Seidel.

        * WebCoreSupport/PlatformStrategiesGtk.cpp:
        (PlatformStrategiesGtk::getPluginInfo):
        * webkit/webkitfavicondatabase.cpp:
        (webkitFaviconDatabaseImportFinished):
        * webkit/webkitwebplugin.cpp:
        (webkit_web_plugin_get_mimetypes):

2012-08-27  Mikhail Pozdnyakov  <mikhail.pozdnyakov@intel.com>

        Rename RegisterProtocolHandler API to NavigatorContentUtils
        https://bugs.webkit.org/show_bug.cgi?id=94920

        Reviewed by Adam Barth.

        Renaming whatever RegisterProtocolHandler-prefixed to NavigatorContentUtils-prefixed.
        RegisterProtocolHandlerClientGtk is renamed to NavigatorContentUtilsClientGtk.

        * GNUmakefile.am:
        * WebCoreSupport/NavigatorContentUtilsClientGtk.cpp: Renamed from Source/WebKit/gtk/WebCoreSupport/RegisterProtocolHandlerClientGtk.cpp.
        (WebKit):
        (WebKit::NavigatorContentUtilsClient::create):
        (WebKit::NavigatorContentUtilsClient::NavigatorContentUtilsClient):
        (WebKit::NavigatorContentUtilsClient::registerProtocolHandler):
        * WebCoreSupport/NavigatorContentUtilsClientGtk.h: Renamed from Source/WebKit/gtk/WebCoreSupport/RegisterProtocolHandlerClientGtk.h.
        (WebKit):
        (NavigatorContentUtilsClient):
        (WebKit::NavigatorContentUtilsClient::~NavigatorContentUtilsClient):
        * webkit/webkitwebview.cpp:
        (webkit_web_view_init):
        * webkit/webkitwebviewprivate.h:

2012-08-23  Carlos Garcia Campos  <cgarcia@igalia.com>

        REGRESSION(r126306): it broke the plugin process
        https://bugs.webkit.org/show_bug.cgi?id=94797

        Reviewed by Xan Lopez.

        * GNUmakefile.am:

2012-08-22  Carlos Garcia Campos  <cgarcia@igalia.com>

        [GTK] Crash when finalizing WebKitWebView
        https://bugs.webkit.org/show_bug.cgi?id=94699

        Reviewed by Martin Robinson.

        Create the offscreen window the first time accelerated compositing
        is enabled, so that if it's never enabled the window won't be
        created.

        * WebCoreSupport/AcceleratedCompositingContextGL.cpp:
        (WebKit::AcceleratedCompositingContext::AcceleratedCompositingContext):
        (WebKit::AcceleratedCompositingContext::initialize):
        (WebKit::AcceleratedCompositingContext::setRootCompositingLayer):

2012-08-22  Gustavo Noronha Silva  <gns@gnome.org>

        [GTK] Split WebCore/platform into a separate library
        https://bugs.webkit.org/show_bug.cgi?id=94435

        Reviewed by Martin Robinson.

        More people have been reporting problems when linking WebCore because
        the command line limit is being exceeded. Splitting WebCore a bit more
        is in order.

        * GNUmakefile.am: link libWebCorePlatform into libwebkitgtk

2012-08-22  Carlos Garcia Campos  <cgarcia@igalia.com>

        [GTK] Preferred languages and spellchecker APIs are not consistent in WebKit2
        https://bugs.webkit.org/show_bug.cgi?id=94683

        Reviewed by Alejandro G. Castro.

        * webkit/webkitspellcheckerenchant.cpp:
        (updateSpellCheckingLanguages): Split the languages string to pass a
        Vector to updateSpellCheckingLanguages().

2012-08-21  Joanmarie Diggs  <jdiggs@igalia.com>
        [Gtk] No accessible caret-moved events found in certain content
        https://bugs.webkit.org/show_bug.cgi?id=72811

        Reviewed by Chris Fleizach.

        Part of the bug is due to objects which should claim to implement AtkText
        failed to do so as a result of containing a mixture of inline and block
        spans.

        An updated unit test was provided.

        * tests/testatk.c:
        (testWebkitAtkCaretOffsets): Added instances of objects containing a
        mixture of inline and block spans and tested that they implement AtkText
        and contain the right textual contents.

2012-08-21  Kihong Kwon  <kihong.kwon@samsung.com>

        [EFL][GTK][BlackBerry] Fix build error in the DeviceOrientationClient
        https://bugs.webkit.org/show_bug.cgi?id=94586

        Reviewed by Kentaro Hara.

        Fix build error in the DeviceOrientationClientGtk.cpp.
        It is occured because DeviceOrientation is changed to DeviceOrientationData in the WebCore.

        * WebCoreSupport/DeviceOrientationClientGtk.cpp:
        (WebKit::DeviceOrientationClientGtk::lastOrientation):

2012-08-21  Martin Robinson  <mrobinson@igalia.com>

        [GTK] Using a native window for the WebView breaks GtkOverlay
        https://bugs.webkit.org/show_bug.cgi?id=90085

        Reviewed by Alejandro G. Castro.

        Rewrite AcceleratedCompositingContext for TextureMapperGL to be more similar to
        the WebKit2 LayerTreeHost and switch from rendering directly to the widget window
        to a window redirected to a pixmap via XComposite. The AcceleratedCompositingContext
        now handles painting the non-composited content itself and no longer relies on the
        ChromeClient backing store.

        This fixes issues with using GtkOverlay WebKitWebView as well as making it possible
        to run pixel tests with accelerated compositing turned on.

        * WebCoreSupport/AcceleratedCompositingContext.h:
        (AcceleratedCompositingContext):
        * WebCoreSupport/AcceleratedCompositingContextGL.cpp:
        Rename some methods to make them more similar to LayerTreeHost. Now we wait to render
        the OpenGL context to the window until the widget's draw signal. Escape out of all
        methods early if accelerated compositing is disabled.
        * WebCoreSupport/ChromeClientGtk.cpp: Always check if accelerated compositing is on
        before calling into AcceleratedCompositingContext methods. When AC is on, never paint
        the backing store, deferring immediately to the AcceleratedCompositingContext. When
        AC is turned on the backing store now shrinks to a small size to save memory.
        * webkit/webkitwebview.cpp:
        (resizeWebViewFromAllocation): ChromeClient is now responsible for talking to the
        AcceleratedCompositingContext directly.
        (webkit_web_view_size_allocate): Exit early if the allocation is not a resize. This
        makes some deeper logic a bit simpler and avoids accidentally doing too much work for
        widget movement.
        (webkit_web_view_realize): We no longer need a native window.

2012-08-15  Joanmarie Diggs  <jdiggs@igalia.com>

        [Gtk] atk_text_set_caret_offset() fails for table cells
        https://bugs.webkit.org/show_bug.cgi?id=83501

        Reviewed by Chris Fleizach.

        Update unit test to include setting the caret in a table cell via the AtkText interface.

        * tests/testatk.c:
        (testWebkitAtkCaretOffsets): Add setting the caret inside the text of a table cell.

2012-08-15  Joanmarie Diggs  <jdiggs@igalia.com>

        [Gtk] atk_text_get_text_at_offset() fails to provide the correct line for paragraphs in list items whose text wraps
        https://bugs.webkit.org/show_bug.cgi?id=83435

        Reviewed by Chris Fleizach.

        Updated unit test to include a paragraph in a list item when testing atk_text_get_text_at_offset().

        * tests/testatk.c:
        (testWebkitAtkGetTextAtOffsetWithSpecialCharacters):

2012-08-14  Adam Barth  <abarth@webkit.org>

        Delete Frame::domWindow() and Frame::existingDOMWindow()
        https://bugs.webkit.org/show_bug.cgi?id=93990

        Reviewed by Eric Seidel.

        * WebCoreSupport/DumpRenderTreeSupportGtk.cpp:
        (DumpRenderTreeSupportGtk::getPendingUnloadEventCount):

2012-08-13  Tom Sepez  <tsepez@chromium.org>

        [chromium] release FrameLoaderClientImpl::m_pluginWidget refptr upon Plugin Document detach.
        https://bugs.webkit.org/show_bug.cgi?id=93283

        Reviewed by Eric Seidel.

        Change the client redirectDataToPlugin method(s) to expect the possibility of
        a NULL argument, keeping existing behaviour otherwise.

        * WebCoreSupport/FrameLoaderClientGtk.cpp:
        (WebKit::FrameLoaderClient::redirectDataToPlugin):

2012-08-13  Martin Robinson  <mrobinson@igalia.com>

        [GTK] Default signal handler for WebKitWebView::should-show-delete-interface-for-element overrides default result
        https://bugs.webkit.org/show_bug.cgi?id=93600

        Reviewed by Xan Lopez.

        Instead of using the default editing signal handler for ::should-show-delete-interface-for-element,
        do not use a default signal handler. This means that the result of the signal defaults to FALSE,
        which is the expected value to ensure that the delete interface is not shown.

        * webkit/webkitwebview.cpp:
        (webkit_web_view_class_init): Do not install a default signal handler.

2012-08-13  Mario Sanchez Prada  <msanchez@igalia.com>

        [GTK] Implementation of atk_editable_text_insert_text ignores 'length' parameter
        https://bugs.webkit.org/show_bug.cgi?id=93804

        Reviewed by Carlos Garcia Campos.

        Update unit tests to also check inserting a partial string.

        * tests/testatk.c:
        (testWebkitAtkTextChangedNotifications): Update test.

2012-08-10  Alice Cheng  <alice_cheng@apple.com>

        Part 1 of: Extend -webkit-user-select with a new value "all"
        <rdar://problem/10161404>
        https://bugs.webkit.org/show_bug.cgi?id=93562

        Reviewed by Dan Bernstein.

        Modify the enum to resolve ambiguous reference

        * webkit/webkitwebview.cpp:
        (webkit_web_view_class_init): Modify the ambiguous enum
        (webkit_web_view_select_all): Modify the ambiguous enum

2012-08-10  Mario Sanchez Prada  <msanchez@igalia.com>

        [GTK] Broken implementation of AtkText and AtkEditableText for password fields
        https://bugs.webkit.org/show_bug.cgi?id=93621

        Reviewed by Chris Fleizach.

        Update unit test to ensure that password input fields behave
        as expected when inserting and removing characters in them.

        * tests/testatk.c:
        (testWebkitAtkTextChangedNotifications): Updated unit test to
        cover the special case of password input fields.

2012-08-09  Carlos Garcia Campos  <cgarcia@igalia.com>

        Handle SSL errors for SOUP
        https://bugs.webkit.org/show_bug.cgi?id=90267

        Reviewed by Martin Robinson.

        Ignore SSL errors by default for compatibility.

        * webkit/webkitglobals.cpp:
        (webkitInit):

2012-08-07  Carlos Garcia Campos  <cgarcia@igalia.com>

        Unreviewed. Fix GTK+ build with GTK2 after r120918.

        * tests/testwebview.c:

2012-08-06  Carlos Garcia Campos  <cgarcia@igalia.com>

        Unreviewed. Update NEWS and configure.ac for 1.9.6 release

        * NEWS: Added release notes for 1.9.6.

2012-08-06  Mikhail Pozdnyakov  <mikhail.pozdnyakov@intel.com>

        [EFL] [GTK] Register Protocol Handler Client is never deleted
        https://bugs.webkit.org/show_bug.cgi?id=92745

        Reviewed by Gustavo Noronha Silva.

        Added usage of OwnPtr to manage register protocol handler client pointer.

        * WebCoreSupport/RegisterProtocolHandlerClientGtk.cpp:
        (WebKit::RegisterProtocolHandlerClient::create): Factory function returning smart pointer.
        (WebKit):
        * WebCoreSupport/RegisterProtocolHandlerClientGtk.h:
        (RegisterProtocolHandlerClient):
        * webkit/webkitwebview.cpp:
        (webkit_web_view_init):
        * webkit/webkitwebviewprivate.h:

2012-08-03  Mario Sanchez Prada  <msanchez@igalia.com>

        [GTK] Add a new and reusable enchant-based spellchecker in WebCore
        https://bugs.webkit.org/show_bug.cgi?id=90269

        Reviewed by Martin Robinson.

        Remove enchant specific code from WebKitSpellCheckerEnchant and
        implement it relying in the new TextCheckerEnchant class in WebCore.

        * webkit/webkitspellcheckerenchant.cpp:
        (_WebKitSpellCheckerEnchantPrivate):
        (webkit_spell_checker_enchant_finalize):
        (webkit_spell_checker_enchant_class_init):
        (webkit_spell_checker_enchant_init):
        (checkSpellingOfString):
        (getGuessesForWord):
        (updateSpellCheckingLanguages):
        (learnWord):
        (ignoreWord):

2012-08-02  Claudio Saavedra  <csaavedra@igalia.com>

        [GTK] Add WebKitNetworkResponse::suggested-filename property
        https://bugs.webkit.org/show_bug.cgi?id=92878

        Reviewed by Carlos Garcia Campos.

        Webcore has API the suggested filename for a response, add
        a property and getter for it in WebKitNetworkResponse.

        * docs/webkitgtk-sections.txt: Add the symbols
        * webkit/webkitnetworkresponse.cpp:
        (_WebKitNetworkResponsePrivate): Add suggested_filename.
        (webkit_network_response_finalize): Free it on finalize
        (webkit_network_response_get_property): Add the getter call.
        (webkit_network_response_class_init): Install the property.
        (webkit_network_response_get_suggested_filename): New getter.
        * webkit/webkitnetworkresponse.h: Add the declaration to header
        file.

2012-07-31  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r124207.
        http://trac.webkit.org/changeset/124207
        https://bugs.webkit.org/show_bug.cgi?id=92773

        Patch causes crashes on the 64-bit debug builder (and other
        builders likely) (Requested by zdobersek on #webkit).

        * webkit/webkitspellcheckerenchant.cpp:
        (_WebKitSpellCheckerEnchantPrivate):
        (createEnchantBrokerIfNeeded):
        (freeSpellCheckingLanguage):
        (webkit_spell_checker_enchant_finalize):
        (webkit_spell_checker_enchant_class_init):
        (webkit_spell_checker_enchant_init):
        (wordEndIsAContractionApostrophe):
        (checkSpellingOfString):
        (getGuessesForWord):
        (getAvailableDictionariesCallback):
        (updateSpellCheckingLanguages):
        (learnWord):
        (ignoreWord):

2012-07-31  Mario Sanchez Prada  <msanchez@igalia.com>

        [GTK] Add a new and reusable enchant-based spellchecker in WebCore
        https://bugs.webkit.org/show_bug.cgi?id=90269

        Reviewed by Martin Robinson.

        Remove enchant specific code from WebKitSpellCheckerEnchant and
        implement it relying in the new TextCheckerEnchant class in WebCore.

        * webkit/webkitspellcheckerenchant.cpp:
        (_WebKitSpellCheckerEnchantPrivate):
        (webkit_spell_checker_enchant_finalize):
        (webkit_spell_checker_enchant_class_init):
        (webkit_spell_checker_enchant_init):
        (checkSpellingOfString):
        (getGuessesForWord):
        (updateSpellCheckingLanguages):
        (learnWord):
        (ignoreWord):

2012-07-30  Martin Robinson  <mrobinson@igalia.com>

        [GTK] New lines automatically and repeatedly added to list items in Etherpad
        https://bugs.webkit.org/show_bug.cgi?id=89971

        Reviewed by Ryosuke Niwa.

        Disable the deletion UI by default. This UI, which was enabled as a side-effect
        of the addition of the private editing API, seems to expose a bug in Etherpad
        which causes the continuous insertion of bullet points.

        * WebCoreSupport/EditorClientGtk.cpp:
        (WebKit::EditorClient::shouldShowDeleteInterface): Disable the deletion UI by default.

2012-07-30  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r123966 and r123967.
        http://trac.webkit.org/changeset/123966
        http://trac.webkit.org/changeset/123967
        https://bugs.webkit.org/show_bug.cgi?id=92656

        This patch is causing assertion failures on the debug bot
        (also rolling out a dependent patch) (Requested by mrobinson
        on #webkit).

        * webkit/webkitspellcheckerenchant.cpp:
        (_WebKitSpellCheckerEnchantPrivate):
        (createEnchantBrokerIfNeeded):
        (freeSpellCheckingLanguage):
        (webkit_spell_checker_enchant_finalize):
        (webkit_spell_checker_enchant_class_init):
        (webkit_spell_checker_enchant_init):
        (wordEndIsAContractionApostrophe):
        (checkSpellingOfString):
        (getGuessesForWord):
        (getAvailableDictionariesCallback):
        (updateSpellCheckingLanguages):
        (learnWord):
        (ignoreWord):

2012-07-30  Claudio Saavedra  <csaavedra@igalia.com>

        [Gtk] Add WK1 API for snapshot retrieval
        https://bugs.webkit.org/show_bug.cgi?id=92261

        Reviewed by Martin Robinson.

        Add API to WebKitWebView to retrieve a snapshot of its
        visible contents as a cairo_surface_t.

        * docs/webkitgtk-sections.txt: Add new symbols.
        * webkit/webkitwebview.cpp:
        (webkit_web_view_get_snapshot): New
        method to paint a webview snapshot.
        * webkit/webkitwebview.h: Ditto.

2012-07-28  Mario Sanchez Prada  <msanchez@igalia.com>

        [GTK] Add a new and reusable enchant-based spellchecker in WebCore
        https://bugs.webkit.org/show_bug.cgi?id=90269

        Reviewed by Martin Robinson.

        Remove enchant specific code from WebKitSpellCheckerEnchant and
        implement it relying in the new TextCheckerEnchant class in WebCore.

        * webkit/webkitspellcheckerenchant.cpp:
        (_WebKitSpellCheckerEnchantPrivate):
        (webkit_spell_checker_enchant_finalize):
        (webkit_spell_checker_enchant_class_init):
        (webkit_spell_checker_enchant_init):
        (checkSpellingOfString):
        (getGuessesForWord):
        (updateSpellCheckingLanguages):
        (learnWord):
        (ignoreWord):

2012-07-26  Kaustubh Atrawalkar  <kaustubh@motorola.com>

        [DRT] LTC:: pageNumberForElementById() could be moved to Internals
        https://bugs.webkit.org/show_bug.cgi?id=92091

        Reviewed by Adam Barth.

        Move the pageNumberForElementById from LayoutTestCotroller to Internals and
        remove the old platform specific implementations as it exclusively tests WebCore functionality.

        * WebCoreSupport/DumpRenderTreeSupportGtk.cpp:
        * WebCoreSupport/DumpRenderTreeSupportGtk.h:
        (DumpRenderTreeSupportGtk):

2012-07-24  Kaustubh Atrawalkar  <kaustubh@motorola.com>

        [DRT] LTC:: pageNumberForElementById() could be moved to Internals
        https://bugs.webkit.org/show_bug.cgi?id=92091

        Reviewed by Adam Barth.

        Move the pageNumberForElementById from LayoutTestCotroller to Internals and
        remove the old platform specific implementations as it exclusively tests WebCore functionality.

        * WebCoreSupport/DumpRenderTreeSupportGtk.cpp:
        * WebCoreSupport/DumpRenderTreeSupportGtk.h:
        (DumpRenderTreeSupportGtk):

2012-07-23  Pierre Rossi  <pierre.rossi@gmail.com>

        Unify numTouchEventHandlersChanged and needTouchEvents in the chrome client
        https://bugs.webkit.org/show_bug.cgi?id=91006

        Reviewed by Ryosuke Niwa.

        Remove numTouchEventHandlersChanged stub.

        * WebCoreSupport/ChromeClientGtk.h:

2012-07-17  Vivek Galatage  <vivekgalatage@gmail.com>

        Web Inspector: refactor InspectorController::connectFrontend() to accept InspectorFrontendChannel.
        https://bugs.webkit.org/show_bug.cgi?id=91196

        Reviewed by Pavel Feldman.

        Refactoring InspectorClients. InspectorClient::openInspectorFrontend
        now returning the InspectorFrontendChannel.

        * WebCoreSupport/InspectorClientGtk.cpp:
        (WebKit::InspectorClient::openInspectorFrontend):
        * WebCoreSupport/InspectorClientGtk.h:
        (InspectorClient):

2012-07-16  Gyuyoung Kim  <gyuyoung.kim@samsung.com>

        Add RegisterProtocolHandlerClient to the Modules/protocolhandler
        https://bugs.webkit.org/show_bug.cgi?id=90940

        Reviewed by Hajime Morita.

        As a step to let protocol handler be moved to the modules, RegisterProtocolHandlerClient needs
        to be added to the Modules/protocolhandler. Because ChromeClient has some virtual functions for
        protocol handlers, virtual functions should be moved to RegisterProtocolHandlerClient.

        In order to support this, RegisterProtocolHandlerClientGtk class is added and webview registers
        RegisterProtocolHandlerClientGtk. In addition, existing concrete functions in ChromeClientGtk are moved
        to RegisterProtocolHandlerClientGtk.

        * GNUmakefile.am:
        * WebCoreSupport/ChromeClientGtk.cpp:
        * WebCoreSupport/ChromeClientGtk.h:
        (ChromeClient):
        * WebCoreSupport/RegisterProtocolHandlerClientGtk.cpp: Added.
        (WebKit):
        (WebKit::RegisterProtocolHandlerClient::RegisterProtocolHandlerClient):
        (WebKit::RegisterProtocolHandlerClient::registerProtocolHandler):
        * WebCoreSupport/RegisterProtocolHandlerClientGtk.h: Added.
        (WebKit):
        (RegisterProtocolHandlerClient):
        (WebKit::RegisterProtocolHandlerClient::~RegisterProtocolHandlerClient):
        * webkit/webkitwebview.cpp:
        (webkit_web_view_init):

2012-07-16  Carlos Garcia Campos  <cgarcia@igalia.com>

        Unreviewed. Update NEWS and configure.ac for 1.9.5 release

        * NEWS: Added release notes for 1.9.5.

2012-07-10  Adam Barth  <abarth@webkit.org>

        WebCore::Settings for Hixie76 WebSocket protocol doesn't do anything and should be removed
        https://bugs.webkit.org/show_bug.cgi?id=90910

        Reviewed by Eric Seidel.

        * WebCoreSupport/DumpRenderTreeSupportGtk.cpp:
        * WebCoreSupport/DumpRenderTreeSupportGtk.h:
        (DumpRenderTreeSupportGtk):
        * webkit/webkitwebview.cpp:
        (webkit_web_view_update_settings):

2012-07-10  Sudarsana Nagineni  <sudarsana.nagineni@linux.intel.com>

        [GTK] Fix memory leaks by adopting allocation of GdkPixbuf
        https://bugs.webkit.org/show_bug.cgi?id=90790

        Reviewed by Carlos Garcia Campos.

        Fixed a memory leak in WebKitFaviconDatabase by adopting an
        allocation of GdkPixbuf.

        * webkit/webkitfavicondatabase.cpp:
        (getIconPixbufSynchronously):

2012-07-10  Adam Barth  <abarth@webkit.org>

        LayoutTestController.dumpConfigurationForViewport should move to Internals
        https://bugs.webkit.org/show_bug.cgi?id=45652

        Reviewed by Eric Seidel.

        * WebCoreSupport/DumpRenderTreeSupportGtk.cpp:
        * WebCoreSupport/DumpRenderTreeSupportGtk.h:
        (DumpRenderTreeSupportGtk):

2012-07-09  Adam Klein  <adamk@chromium.org>

        Rename WebCore::WebKitMutationObserver to WebCore::MutationObserver
        https://bugs.webkit.org/show_bug.cgi?id=90810

        Reviewed by Ojan Vafai.

        * WebCoreSupport/DumpRenderTreeSupportGtk.cpp:
        (DumpRenderTreeSupportGtk::deliverAllMutationsIfNecessary):

2012-07-09  Zan Dobersek  <zandobersek@gmail.com>

        [Gtk] Implement dumpFrameScrollPosition in DumpRenderTree
        https://bugs.webkit.org/show_bug.cgi?id=89356

        Reviewed by Martin Robinson.

        Add a new method for returning the WebKitDOMDocument that is loaded
        in a given frame, webkit_web_frame_get_dom_document.

        * docs/webkitgtk-sections.txt:
        * webkit/webkitwebframe.cpp:
        (webkit_web_frame_get_dom_document):
        * webkit/webkitwebframe.h:
        * webkit/webkitwebview.cpp: State explicitly that the document being returned
        when calling webkit_web_view_get_dom_document is loaded in the main frame.
        Also call the webkit_web_frame_get_dom_document on WebKitWebView's main frame
        to get the document.

2012-07-09  Zan Dobersek  <zandobersek@gmail.com>

        [Gtk] Unskip the CSS Regions layout tests
        https://bugs.webkit.org/show_bug.cgi?id=90771

        Reviewed by Martin Robinson.

        Add a method to DumpRenderTreeSupportGtk for enabling or disabling
        CSS Regions from DumpRenderTree.

        * WebCoreSupport/DumpRenderTreeSupportGtk.cpp:
        (DumpRenderTreeSupportGtk::setCSSRegionsEnabled):
        * WebCoreSupport/DumpRenderTreeSupportGtk.h:
        (DumpRenderTreeSupportGtk):

2012-07-09  Sudarsana Nagineni  <sudarsana.nagineni@linux.intel.com>

        [GTK] Memory leak in webkitwebnavigationaction.cpp
        https://bugs.webkit.org/show_bug.cgi?id=90787

        Reviewed by Martin Robinson.

        Fixed a memory leak in WebKitWebNavigationAction.

        * webkit/webkitwebnavigationaction.cpp:
        (webkit_web_navigation_action_finalize): Free the g_strdup()'d string.

2012-07-07  Zan Dobersek  <zandobersek@gmail.com>

        REGRESSION (r122035): fullscreen/exit-full-screen-iframe.html failing on GTK Linux 64-bit Release
        https://bugs.webkit.org/show_bug.cgi?id=90719

        Reviewed by Martin Robinson.

        Follow the approach of the BlackBerry port outlined in r122035, using in exitFullScreenForElement
        the fullscreen element to which the reference was saved when enterFullScreenForElement was called.

        * WebCoreSupport/ChromeClientGtk.cpp:
        (WebKit::ChromeClient::exitFullScreenForElement):

2012-07-02  Benjamin Poulain  <bpoulain@apple.com>

        Do not do any logging initialization when logging is disabled
        https://bugs.webkit.org/show_bug.cgi?id=90228

        Reviewed by Simon Fraser.

        * webkit/webkitglobals.cpp:
        (webkitInit):

2012-06-29  Tony Chang  <tony@chromium.org>

        [GTK] Enable CSS grid layout LayoutTests on GTK+
        https://bugs.webkit.org/show_bug.cgi?id=90226

        Reviewed by Martin Robinson.

        * WebCoreSupport/DumpRenderTreeSupportGtk.cpp:
        (DumpRenderTreeSupportGtk::setCSSGridLayoutEnabled): Pass through to Settings object.
        * WebCoreSupport/DumpRenderTreeSupportGtk.h:
        (DumpRenderTreeSupportGtk):

2012-06-29  Konrad Piascik  <kpiascik@rim.com>

        Don't hardcode target dpi of 160 (it should be 96 on desktop)
        https://bugs.webkit.org/show_bug.cgi?id=88114

        Reviewed by Adam Barth.

        Updated the call to computeViewportAttributes.

        * WebCoreSupport/DumpRenderTreeSupportGtk.cpp:
        (DumpRenderTreeSupportGtk::dumpConfigurationForViewport):
        * webkit/webkitviewportattributes.cpp:
        (webkitViewportAttributesRecompute):

2012-06-25  Mark Hahnenberg  <mhahnenberg@apple.com>

        JSLock should be per-JSGlobalData
        https://bugs.webkit.org/show_bug.cgi?id=89123

        Reviewed by Geoffrey Garen.

        Changed all sites that used JSLock to instead use the new JSLockHolder
        and pass in the correct JS context that the code is about to interact with that 
        needs protection. Also added a couple JSLocks to places that didn't already 
        have it that needed it.

        * WebCoreSupport/DumpRenderTreeSupportGtk.cpp:
        (DumpRenderTreeSupportGtk::gcCountJavascriptObjects):

2012-06-27  Martin Robinson  <mrobinson@igalia.com>

        [gtk] Spell checker doesn't recognize contractions (apostrophes)
        https://bugs.webkit.org/show_bug.cgi?id=86118

        Reviewed by Gustavo Noronha Silva.

        Work-around a bug in Pango by trying to detect apostrophes
        that create contractions. This work-around is similar to one
        found in gtkspell.

        * webkit/webkitspellcheckerenchant.cpp:
        (wordEndIsAContractionApostrophe): Added this helper which tries to detect
        situations where a word end is both an apostrophe and followed by a alphabetic
        character.
        (checkSpellingOfString): When searching for the end of a word, skip over
        apostrophes that appear to be part of contractions.

2012-06-27  Zan Dobersek  <zandobersek@gmail.com>

        [Gtk] Add support for the Gamepad API
        https://bugs.webkit.org/show_bug.cgi?id=87503

        Reviewed by Carlos Garcia Campos.

        Add the Gamepad feature dependencies libraries to the LIBADD
        list for the libwebkitgtk library.

        * GNUmakefile.am:

2012-06-25  Carlos Garcia Campos  <cgarcia@igalia.com>

        Unreviewed. Update NEWS and configure.ac for 1.9.4 release

        * NEWS: Added release notes for 1.9.4.

2012-06-23  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r121058.
        http://trac.webkit.org/changeset/121058
        https://bugs.webkit.org/show_bug.cgi?id=89809

        Patch causes plugins tests to crash in GTK debug builds
        (Requested by zdobersek on #webkit).

        * WebCoreSupport/DumpRenderTreeSupportGtk.cpp:
        (DumpRenderTreeSupportGtk::gcCountJavascriptObjects):

2012-06-20  Mark Hahnenberg  <mhahnenberg@apple.com>

        JSLock should be per-JSGlobalData
        https://bugs.webkit.org/show_bug.cgi?id=89123

        Reviewed by Gavin Barraclough.

        Changed all sites that used JSLock to instead use the new JSLockHolder
        and pass in the correct JS context that the code is about to interact with that 
        needs protection.

        * WebCoreSupport/DumpRenderTreeSupportGtk.cpp:
        (DumpRenderTreeSupportGtk::gcCountJavascriptObjects):

2012-06-22  Amy Ousterhout  <aousterh@chromium.org>

        Renamed DeviceOrientation to DeviceOrientationData
        https://bugs.webkit.org/show_bug.cgi?id=88663

        Reviewed by Steve Block.

        Updated files to use the renamed DeviceOrientationData instead of DeviceOrientation.
        This change makes DeviceOrientationData consistent with DeviceMotionData.
        
        * WebCoreSupport/DeviceOrientationClientGtk.h:
        (DeviceOrientationClientGtk):

2012-06-21  Daniel Drake  <dsd@laptop.org>

        [GTK] Backport run-file-chooser to WebKit1
        https://bugs.webkit.org/show_bug.cgi?id=87283

        Reviewed by Gustavo Noronha Silva.

        This is a relatively straightforward backport of Mario Sanchez
        Prada's WebKit2 run-file-chooser signal work, intended for use by
        OLPC and others who are not quite ready to move to WebKit2.

        Add a new public class to the API, WebKitFileChooserRequest, to be
        emitted along with a new WebKitWebView::run-file-chooser signal to
        let client applications to provide their own file chooser dialog
        when the use interacts with HTML Input elements of type 'file'.

        * GNUmakefile.am: Added new source files and headers.
        * webkit/webkitfilechooserrequest.cpp: Added.
        (_WebKitFileChooserRequestPrivate):
        (webkit_file_chooser_request_init):
        (webkit_file_chooser_request_finalize):
        (webkit_file_chooser_request_get_property):
        (webkit_file_chooser_request_class_init):
        (webkit_file_chooser_request_create):
        (webkit_file_chooser_request_get_mime_types):
        (webkit_file_chooser_request_get_mime_types_filter):
        (webkit_file_chooser_request_get_select_multiple):
        (webkit_file_chooser_request_select_files):
        (webkit_file_chooser_request_get_selected_files):
        * webkit/webkitfilechooserrequest.h: Added.
        (_WebKitFileChooserRequest):
        (_WebKitFileChooserRequestClass):
        * webkit/webkitfilechooserrequestprivate.h: Added, 
        containing the prototype of webkit_file_chooser_request_create.

        Provide private API to make a file chooser request from the
        WebView, and provide a default handler for it.

        * webkit/webkitwebview.cpp:
        (fileChooserDialogResponseCallback): Handler for the 'response'
        signal for the GtkFileChooserDialog used in the default
        handler. It will call to webkit_file_chooser_request_select_files
        or webkit_file_chooser_request_cancel as needed.
        (webkitWebViewRealRunFileChooser): Default handler for the new
        'run-file-chooser' signal. It will create a GtkFileChooserDialog,
        connect to the 'response' signal and show it.
        (webkit_web_view_class_init): Connect the 'run-file-chooser'
        signal to the default handler, webkitWebViewRunFileChooser.
        (webkit_web_view_new):
        (webkitWebViewRunFileChooserRequest):
        * webkit/webkitwebview.h:
        (_WebKitWebViewClass): Added prototype for the handler of the new
        'run-file-chooser' signal.
        * webkit/webkitwebviewprivate.h: Added prototype for
        private new function webkitWebViewRunFileChooserRequest.

        Update runOpenPanel to use the new API, including a default handler
        with similar behaviour to before.

        * WebCoreSupport/ChromeClientGtk.cpp:
        (WebKit::ChromeClient::runOpenPanel): Now creates an instance of
        WebKitFileChooserRequest and asks the WebView to emit the
        new 'run-file-chooser' signal with it.

        Added the new public header to the main header.

        * webkit/webkit.h: Added webkitfilechooserrequest.h

        New unit tests for the new WebKitFileChooserRequest API.

        * tests/testwebview.c: Various WebKitFileChooserRequest tests,
        including MIME type filtering and selection handling.

        Updated documentation related files with the new API.

        * docs/webkitgtk-docs.sgml: Added new section.
        * docs/webkitgtk-sections.txt: Added new API.
        * docs/webkitgtk.types: Added get_type function.

2012-06-19  Chang Wan Hong  <jourmoon@company100.net>

        Refine syncLayersTimeoutCallback for Accelerated Compositing.
        https://bugs.webkit.org/show_bug.cgi?id=89538

        Reviewed by Martin Robinson.

        syncLayersTimeout reschedules the timer so that it can render each frame
        every 1/60 seconds on animation. However, because it takes to time to execute
        renderLayersToWindow, the timer is delayed. To fix this, we must reschedule
        the timer before calling renderLayersToWindow.

        * WebCoreSupport/AcceleratedCompositingContextGL.cpp:
        (WebKit::AcceleratedCompositingContext::syncLayersTimeout):

2012-06-19  Sergio Villar Senin  <svillar@igalia.com>

        Calling nativeImageForCurrentFrame() causes assertion failure: m_verifier.isSafeToUse()
        https://bugs.webkit.org/show_bug.cgi?id=67582

        Reviewed by David Levin.

        Use synchronousNativeIconForPageURL() to retrieve favicons.

        * webkit/webkitfavicondatabase.cpp:
        (getIconPixbufSynchronously):

2012-06-18  Mario Sanchez Prada  <msanchez@igalia.com>

        [GTK] Get rid of DumpRenderTreeSupportGtk::{in|de}crementAccessibilityValue
        https://bugs.webkit.org/show_bug.cgi?id=89226

        Reviewed by Martin Robinson.

        Remove unnecesary functions incrementAccessibilityValue() and
        decrementAccessibilityValue() from DumpRenderTreeSupportGtk.

        * WebCoreSupport/DumpRenderTreeSupportGtk.cpp:
        * WebCoreSupport/DumpRenderTreeSupportGtk.h:
        (DumpRenderTreeSupportGtk):

2012-06-14  Alejandro G. Castro  <alex@igalia.com>

        [GTK] Add TextureMapper ImageBuffer support as a fallback from the hardware accelerated path
        https://bugs.webkit.org/show_bug.cgi?id=73634

        Add the new graphics layer client that uses cairo to render the
        composition. The cairo transformations do not support perspective
        so in perspective cases we have just a representation not the real
        perspective transformation.

        This patch adds a new implementation of already tested cases.

        Reviewed by Martin Robinson.

        * GNUmakefile.am:
        * WebCoreSupport/AcceleratedCompositingContext.h:
        (AcceleratedCompositingContext):
        * WebCoreSupport/AcceleratedCompositingContextCairo.cpp: Added.
        * WebCoreSupport/ChromeClientGtk.cpp:
        (WebKit::ChromeClient::invalidateWidgetRect): We need to
        invalidate the widget in this case because we do not directly
        render to a texture but to the widget surface.
        (WebKit::ChromeClient::paint): We can not render here, we have to
        invalidate and wait for the widget rendering.
        * webkit/webkitwebview.cpp:
        (webkit_web_view_draw): In this case the renderLayersToWindow
        requires the graphics context used to render in the window.
        (webkit_web_view_realize): Small cleanup of the priv variable
        definition.

2012-06-14  Zan Dobersek  <zandobersek@gmail.com>

        [Gtk] Add support in DumpRenderTree for tracking repaints
        https://bugs.webkit.org/show_bug.cgi?id=87658

        Reviewed by Martin Robinson.

        Add methods to the DumpRenderTreeSupport class for controlling the
        status of repaint tracking along with retreiving and resetting the
        tracked repaints.

        * WebCoreSupport/DumpRenderTreeSupportGtk.cpp:
        (DumpRenderTreeSupportGtk::setTracksRepaints):
        (DumpRenderTreeSupportGtk::isTrackingRepaints):
        (DumpRenderTreeSupportGtk::trackedRepaintRects):
        (DumpRenderTreeSupportGtk::resetTrackedRepaints):
        * WebCoreSupport/DumpRenderTreeSupportGtk.h:
        (DumpRenderTreeSupportGtk):

2012-06-13  Amy Ousterhout  <aousterh@chromium.org>

        Rename currentDeviceMotion to lastMotion in DeviceMotionClient
        https://bugs.webkit.org/show_bug.cgi?id=88854

        Reviewed by Adam Barth.

        Rename the function currentDeviceMotion to lastMotion in DeviceMotionClient.
        This makes it consistent with the similar function lastOrientation in DeviceOrientationClient.

        * WebCoreSupport/DeviceMotionClientGtk.cpp:
        (WebKit::DeviceMotionClientGtk::lastMotion):
        * WebCoreSupport/DeviceMotionClientGtk.h:
        (DeviceMotionClientGtk):

2012-06-11  Kaustubh Atrawalkar  <kaustubh@motorola.com>

        [DRT] LTC:: counterValueForElementById() could be moved to Internals.
        https://bugs.webkit.org/show_bug.cgi?id=84406

        Reviewed by Hajime Morita.

        Move the counterValueForElementById from LayoutTestCotroller to Internals and
        remove the old platform specific implementations as it exclusively tests WebCore functionality.

        * WebCoreSupport/DumpRenderTreeSupportGtk.cpp:
        * WebCoreSupport/DumpRenderTreeSupportGtk.h:
        (DumpRenderTreeSupportGtk):

2012-06-07  Simon Pena  <spena@igalia.com>

        [GTK] deviceScaleFactor setting is not honored
        https://bugs.webkit.org/show_bug.cgi?id=88511

        Reviewed by Gustavo Noronha Silva.

        Honor the deviceScaleFactor property in the paintWebView
        method of the ChromeClientGtk.

        * WebCoreSupport/ChromeClientGtk.cpp:
        (WebKit::paintWebView):

2012-06-04  Sudarsana Nagineni  <sudarsana.nagineni@linux.intel.com>

        [GTK] Memory leak in WebKitWebView
        https://bugs.webkit.org/show_bug.cgi?id=88214

        Reviewed by Martin Robinson.

        Fixed a memory leak in WebKitWebView by making
        GeolocationClientMock to be owned by the WebView.

        * webkit/webkitwebview.cpp:
        (webkit_web_view_init):
        * webkit/webkitwebviewprivate.h:

2012-06-04  Carlos Garcia Campos  <cgarcia@igalia.com>

        Unreviewed. Update NEWS and configure.ac for 1.9.3 release

        * NEWS: Added release notes for 1.9.3.

2012-06-04  Mario Sanchez Prada  <msanchez@igalia.com>

        [GTK] Remove geoclue dependency from WebKit API Layer
        https://bugs.webkit.org/show_bug.cgi?id=87801

        Reviewed by Martin Robinson.

        Make GeolocationClient for WebKitGTK+ use the new Geoclue-based
        geolocation provider available in WebCore.

        * WebCoreSupport/GeolocationClientGtk.cpp:
        (WebKit):
        (WebKit::GeolocationClient::GeolocationClient):
        (WebKit::GeolocationClient::startUpdating):
        (WebKit::GeolocationClient::stopUpdating):
        (WebKit::GeolocationClient::setEnableHighAccuracy):
        (WebKit::GeolocationClient::notifyPositionChanged):
        (WebKit::GeolocationClient::notifyErrorOccurred):
        * WebCoreSupport/GeolocationClientGtk.h:
        (GeolocationClient):

2012-05-31  Hajime Morrita  <morrita@chromium.org>

        REGRESSION(r117572): editing/spelling/spellcheck-async-remove-frame.html crashes on Mac
        https://bugs.webkit.org/show_bug.cgi?id=86859

        Reviewed by Ryosuke Niwa.

        * WebCoreSupport/TextCheckerClientGtk.h:
        (WebKit::TextCheckerClientGtk::requestCheckingOfString):

2012-05-31  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r119113.
        http://trac.webkit.org/changeset/119113
        https://bugs.webkit.org/show_bug.cgi?id=88016

        This caused multiple regressions (Requested by mrobinson on
        #webkit).

        * WebCoreSupport/TextCheckerClientGtk.cpp:
        (WebKit::TextCheckerClientGtk::checkSpellingOfString):
        * webkit/webkitspellcheckerenchant.cpp:
        (checkSpellingOfString):

2012-05-31  Sudarsana Nagineni  <sudarsana.nagineni@linux.intel.com>

        [GTK] Memory leak in webkit_web_view_init
        https://bugs.webkit.org/show_bug.cgi?id=87943

        Reviewed by Martin Robinson.

        Fixed a memory leak in webkit_web_view_init by making the
        UserMediaClientGtk to be owned by the WebView.

        * webkit/webkitwebview.cpp:
        (webkit_web_view_init):
        * webkit/webkitwebviewprivate.h:

2012-05-31  Martin Robinson  <mrobinson@igalia.com>

        Spell checker doesn't recognize contractions (apostrophes)
        https://bugs.webkit.org/show_bug.cgi?id=86118

        Reviewed by Gustavo Noronha Silva.

        The Enchant spell checker was breaking words on apostrophes, because
        apparently they were always being detected as Pango word-end
        characters. To know whether or not the apostrophe is a
        word end character requires looking at a string with a larger
        granularity than one character.

        Simplify the way the we break strings, by search for non-graphable
        character manually to find word starts and ends. This has the side
        effect of removing the dependency on Pango and eliminating one copy.

        This change also cleans up some misbehavior on the part of the
        WebCoreSupport layer which was not converting from Unicode character
        offsets to UTF-16. These offsets can be different if any of the
        characters in the UTF-16 string are surrogate pairs (non BMP
        characters).

        * WebCoreSupport/TextCheckerClientGtk.cpp:
        (WebKit::TextCheckerClientGtk::checkSpellingOfString): Properly
        convert from Unicode offsets to UTF-16 offsets.
        * webkit/webkitspellcheckerenchant.cpp:
        (findByteOffsetToFirstNonGraphableCharacter): Added this helper.
        (getExtentsOfNextWord): Ditto.
        (wordIsSpelledCorrectlyInAtLeastOneDictionary): Ditto.
        (checkSpellingOfString): Don't split words on apostrophes.

2012-05-30  Sudarsana Nagineni  <sudarsana.nagineni@linux.intel.com>

        [GTK] [WK2] Memory leak in webkitWebViewBaseStartDrag
        https://bugs.webkit.org/show_bug.cgi?id=87756

        Reviewed by Carlos Garcia Campos.

        Fixed a memory leak in drag and drop by using adoptRef instead
        of just getting a new reference of targetList.

        * WebCoreSupport/DragClientGtk.cpp:
        (WebKit::DragClient::startDrag):

2012-05-25  Jesus Sanchez-Palencia  <jesus.palencia@openbossa.org>

        WebKitTestRunner needs to support layoutTestController.setJavaScriptProfilingEnabled
        https://bugs.webkit.org/show_bug.cgi?id=42328

        Reviewed by Eric Seidel.

        * webkit/webkitwebinspector.cpp:
        (webkit_web_inspector_set_property):

2012-05-25  Lu Guanqun  <guanqun.lu@intel.com>

        [GTK] fix compilation for webkitwebview.cpp
        https://bugs.webkit.org/show_bug.cgi?id=87473

        Reviewed by Martin Robinson.

        When ACCELERATED_COMPOSITING and TEXTURE_MAPPER_GL is not set,
        the local variable 'priv' won't be used. Therefore the following warning:

        ../../../Source/WebKit/gtk/webkit/webkitwebview.cpp: In function ‘void webkit_web_view_realize(GtkWidget*)’:
        ../../../Source/WebKit/gtk/webkit/webkitwebview.cpp:971:27: warning: unused variable ‘priv’ [-Wunused-variable]

        * webkit/webkitwebview.cpp:
        (webkit_web_view_realize):

== Rolled over to ChangeLog-2012-05-22 ==
