2012-07-02  Benjamin Poulain  <bpoulain@apple.com>

        Do not do any logging initialization when logging is disabled
        https://bugs.webkit.org/show_bug.cgi?id=90228

        Reviewed by Simon Fraser.

        * webkit/webkitglobals.cpp:
        (webkitInit):

2012-06-29  Tony Chang  <tony@chromium.org>

        [GTK] Enable CSS grid layout LayoutTests on GTK+
        https://bugs.webkit.org/show_bug.cgi?id=90226

        Reviewed by Martin Robinson.

        * WebCoreSupport/DumpRenderTreeSupportGtk.cpp:
        (DumpRenderTreeSupportGtk::setCSSGridLayoutEnabled): Pass through to Settings object.
        * WebCoreSupport/DumpRenderTreeSupportGtk.h:
        (DumpRenderTreeSupportGtk):

2012-06-29  Konrad Piascik  <kpiascik@rim.com>

        Don't hardcode target dpi of 160 (it should be 96 on desktop)
        https://bugs.webkit.org/show_bug.cgi?id=88114

        Reviewed by Adam Barth.

        Updated the call to computeViewportAttributes.

        * WebCoreSupport/DumpRenderTreeSupportGtk.cpp:
        (DumpRenderTreeSupportGtk::dumpConfigurationForViewport):
        * webkit/webkitviewportattributes.cpp:
        (webkitViewportAttributesRecompute):

2012-06-25  Mark Hahnenberg  <mhahnenberg@apple.com>

        JSLock should be per-JSGlobalData
        https://bugs.webkit.org/show_bug.cgi?id=89123

        Reviewed by Geoffrey Garen.

        Changed all sites that used JSLock to instead use the new JSLockHolder
        and pass in the correct JS context that the code is about to interact with that 
        needs protection. Also added a couple JSLocks to places that didn't already 
        have it that needed it.

        * WebCoreSupport/DumpRenderTreeSupportGtk.cpp:
        (DumpRenderTreeSupportGtk::gcCountJavascriptObjects):

2012-06-27  Martin Robinson  <mrobinson@igalia.com>

        [gtk] Spell checker doesn't recognize contractions (apostrophes)
        https://bugs.webkit.org/show_bug.cgi?id=86118

        Reviewed by Gustavo Noronha Silva.

        Work-around a bug in Pango by trying to detect apostrophes
        that create contractions. This work-around is similar to one
        found in gtkspell.

        * webkit/webkitspellcheckerenchant.cpp:
        (wordEndIsAContractionApostrophe): Added this helper which tries to detect
        situations where a word end is both an apostrophe and followed by a alphabetic
        character.
        (checkSpellingOfString): When searching for the end of a word, skip over
        apostrophes that appear to be part of contractions.

2012-06-27  Zan Dobersek  <zandobersek@gmail.com>

        [Gtk] Add support for the Gamepad API
        https://bugs.webkit.org/show_bug.cgi?id=87503

        Reviewed by Carlos Garcia Campos.

        Add the Gamepad feature dependencies libraries to the LIBADD
        list for the libwebkitgtk library.

        * GNUmakefile.am:

2012-06-25  Carlos Garcia Campos  <cgarcia@igalia.com>

        Unreviewed. Update NEWS and configure.ac for 1.9.4 release

        * NEWS: Added release notes for 1.9.4.

2012-06-23  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r121058.
        http://trac.webkit.org/changeset/121058
        https://bugs.webkit.org/show_bug.cgi?id=89809

        Patch causes plugins tests to crash in GTK debug builds
        (Requested by zdobersek on #webkit).

        * WebCoreSupport/DumpRenderTreeSupportGtk.cpp:
        (DumpRenderTreeSupportGtk::gcCountJavascriptObjects):

2012-06-20  Mark Hahnenberg  <mhahnenberg@apple.com>

        JSLock should be per-JSGlobalData
        https://bugs.webkit.org/show_bug.cgi?id=89123

        Reviewed by Gavin Barraclough.

        Changed all sites that used JSLock to instead use the new JSLockHolder
        and pass in the correct JS context that the code is about to interact with that 
        needs protection.

        * WebCoreSupport/DumpRenderTreeSupportGtk.cpp:
        (DumpRenderTreeSupportGtk::gcCountJavascriptObjects):

2012-06-22  Amy Ousterhout  <aousterh@chromium.org>

        Renamed DeviceOrientation to DeviceOrientationData
        https://bugs.webkit.org/show_bug.cgi?id=88663

        Reviewed by Steve Block.

        Updated files to use the renamed DeviceOrientationData instead of DeviceOrientation.
        This change makes DeviceOrientationData consistent with DeviceMotionData.
        
        * WebCoreSupport/DeviceOrientationClientGtk.h:
        (DeviceOrientationClientGtk):

2012-06-21  Daniel Drake  <dsd@laptop.org>

        [GTK] Backport run-file-chooser to WebKit1
        https://bugs.webkit.org/show_bug.cgi?id=87283

        Reviewed by Gustavo Noronha Silva.

        This is a relatively straightforward backport of Mario Sanchez
        Prada's WebKit2 run-file-chooser signal work, intended for use by
        OLPC and others who are not quite ready to move to WebKit2.

        Add a new public class to the API, WebKitFileChooserRequest, to be
        emitted along with a new WebKitWebView::run-file-chooser signal to
        let client applications to provide their own file chooser dialog
        when the use interacts with HTML Input elements of type 'file'.

        * GNUmakefile.am: Added new source files and headers.
        * webkit/webkitfilechooserrequest.cpp: Added.
        (_WebKitFileChooserRequestPrivate):
        (webkit_file_chooser_request_init):
        (webkit_file_chooser_request_finalize):
        (webkit_file_chooser_request_get_property):
        (webkit_file_chooser_request_class_init):
        (webkit_file_chooser_request_create):
        (webkit_file_chooser_request_get_mime_types):
        (webkit_file_chooser_request_get_mime_types_filter):
        (webkit_file_chooser_request_get_select_multiple):
        (webkit_file_chooser_request_select_files):
        (webkit_file_chooser_request_get_selected_files):
        * webkit/webkitfilechooserrequest.h: Added.
        (_WebKitFileChooserRequest):
        (_WebKitFileChooserRequestClass):
        * webkit/webkitfilechooserrequestprivate.h: Added, 
        containing the prototype of webkit_file_chooser_request_create.

        Provide private API to make a file chooser request from the
        WebView, and provide a default handler for it.

        * webkit/webkitwebview.cpp:
        (fileChooserDialogResponseCallback): Handler for the 'response'
        signal for the GtkFileChooserDialog used in the default
        handler. It will call to webkit_file_chooser_request_select_files
        or webkit_file_chooser_request_cancel as needed.
        (webkitWebViewRealRunFileChooser): Default handler for the new
        'run-file-chooser' signal. It will create a GtkFileChooserDialog,
        connect to the 'response' signal and show it.
        (webkit_web_view_class_init): Connect the 'run-file-chooser'
        signal to the default handler, webkitWebViewRunFileChooser.
        (webkit_web_view_new):
        (webkitWebViewRunFileChooserRequest):
        * webkit/webkitwebview.h:
        (_WebKitWebViewClass): Added prototype for the handler of the new
        'run-file-chooser' signal.
        * webkit/webkitwebviewprivate.h: Added prototype for
        private new function webkitWebViewRunFileChooserRequest.

        Update runOpenPanel to use the new API, including a default handler
        with similar behaviour to before.

        * WebCoreSupport/ChromeClientGtk.cpp:
        (WebKit::ChromeClient::runOpenPanel): Now creates an instance of
        WebKitFileChooserRequest and asks the WebView to emit the
        new 'run-file-chooser' signal with it.

        Added the new public header to the main header.

        * webkit/webkit.h: Added webkitfilechooserrequest.h

        New unit tests for the new WebKitFileChooserRequest API.

        * tests/testwebview.c: Various WebKitFileChooserRequest tests,
        including MIME type filtering and selection handling.

        Updated documentation related files with the new API.

        * docs/webkitgtk-docs.sgml: Added new section.
        * docs/webkitgtk-sections.txt: Added new API.
        * docs/webkitgtk.types: Added get_type function.

2012-06-19  Chang Wan Hong  <jourmoon@company100.net>

        Refine syncLayersTimeoutCallback for Accelerated Compositing.
        https://bugs.webkit.org/show_bug.cgi?id=89538

        Reviewed by Martin Robinson.

        syncLayersTimeout reschedules the timer so that it can render each frame
        every 1/60 seconds on animation. However, because it takes to time to execute
        renderLayersToWindow, the timer is delayed. To fix this, we must reschedule
        the timer before calling renderLayersToWindow.

        * WebCoreSupport/AcceleratedCompositingContextGL.cpp:
        (WebKit::AcceleratedCompositingContext::syncLayersTimeout):

2012-06-19  Sergio Villar Senin  <svillar@igalia.com>

        Calling nativeImageForCurrentFrame() causes assertion failure: m_verifier.isSafeToUse()
        https://bugs.webkit.org/show_bug.cgi?id=67582

        Reviewed by David Levin.

        Use synchronousNativeIconForPageURL() to retrieve favicons.

        * webkit/webkitfavicondatabase.cpp:
        (getIconPixbufSynchronously):

2012-06-18  Mario Sanchez Prada  <msanchez@igalia.com>

        [GTK] Get rid of DumpRenderTreeSupportGtk::{in|de}crementAccessibilityValue
        https://bugs.webkit.org/show_bug.cgi?id=89226

        Reviewed by Martin Robinson.

        Remove unnecesary functions incrementAccessibilityValue() and
        decrementAccessibilityValue() from DumpRenderTreeSupportGtk.

        * WebCoreSupport/DumpRenderTreeSupportGtk.cpp:
        * WebCoreSupport/DumpRenderTreeSupportGtk.h:
        (DumpRenderTreeSupportGtk):

2012-06-14  Alejandro G. Castro  <alex@igalia.com>

        [GTK] Add TextureMapper ImageBuffer support as a fallback from the hardware accelerated path
        https://bugs.webkit.org/show_bug.cgi?id=73634

        Add the new graphics layer client that uses cairo to render the
        composition. The cairo transformations do not support perspective
        so in perspective cases we have just a representation not the real
        perspective transformation.

        This patch adds a new implementation of already tested cases.

        Reviewed by Martin Robinson.

        * GNUmakefile.am:
        * WebCoreSupport/AcceleratedCompositingContext.h:
        (AcceleratedCompositingContext):
        * WebCoreSupport/AcceleratedCompositingContextCairo.cpp: Added.
        * WebCoreSupport/ChromeClientGtk.cpp:
        (WebKit::ChromeClient::invalidateWidgetRect): We need to
        invalidate the widget in this case because we do not directly
        render to a texture but to the widget surface.
        (WebKit::ChromeClient::paint): We can not render here, we have to
        invalidate and wait for the widget rendering.
        * webkit/webkitwebview.cpp:
        (webkit_web_view_draw): In this case the renderLayersToWindow
        requires the graphics context used to render in the window.
        (webkit_web_view_realize): Small cleanup of the priv variable
        definition.

2012-06-14  Zan Dobersek  <zandobersek@gmail.com>

        [Gtk] Add support in DumpRenderTree for tracking repaints
        https://bugs.webkit.org/show_bug.cgi?id=87658

        Reviewed by Martin Robinson.

        Add methods to the DumpRenderTreeSupport class for controlling the
        status of repaint tracking along with retreiving and resetting the
        tracked repaints.

        * WebCoreSupport/DumpRenderTreeSupportGtk.cpp:
        (DumpRenderTreeSupportGtk::setTracksRepaints):
        (DumpRenderTreeSupportGtk::isTrackingRepaints):
        (DumpRenderTreeSupportGtk::trackedRepaintRects):
        (DumpRenderTreeSupportGtk::resetTrackedRepaints):
        * WebCoreSupport/DumpRenderTreeSupportGtk.h:
        (DumpRenderTreeSupportGtk):

2012-06-13  Amy Ousterhout  <aousterh@chromium.org>

        Rename currentDeviceMotion to lastMotion in DeviceMotionClient
        https://bugs.webkit.org/show_bug.cgi?id=88854

        Reviewed by Adam Barth.

        Rename the function currentDeviceMotion to lastMotion in DeviceMotionClient.
        This makes it consistent with the similar function lastOrientation in DeviceOrientationClient.

        * WebCoreSupport/DeviceMotionClientGtk.cpp:
        (WebKit::DeviceMotionClientGtk::lastMotion):
        * WebCoreSupport/DeviceMotionClientGtk.h:
        (DeviceMotionClientGtk):

2012-06-11  Kaustubh Atrawalkar  <kaustubh@motorola.com>

        [DRT] LTC:: counterValueForElementById() could be moved to Internals.
        https://bugs.webkit.org/show_bug.cgi?id=84406

        Reviewed by Hajime Morita.

        Move the counterValueForElementById from LayoutTestCotroller to Internals and
        remove the old platform specific implementations as it exclusively tests WebCore functionality.

        * WebCoreSupport/DumpRenderTreeSupportGtk.cpp:
        * WebCoreSupport/DumpRenderTreeSupportGtk.h:
        (DumpRenderTreeSupportGtk):

2012-06-07  Simon Pena  <spena@igalia.com>

        [GTK] deviceScaleFactor setting is not honored
        https://bugs.webkit.org/show_bug.cgi?id=88511

        Reviewed by Gustavo Noronha Silva.

        Honor the deviceScaleFactor property in the paintWebView
        method of the ChromeClientGtk.

        * WebCoreSupport/ChromeClientGtk.cpp:
        (WebKit::paintWebView):

2012-06-04  Sudarsana Nagineni  <sudarsana.nagineni@linux.intel.com>

        [GTK] Memory leak in WebKitWebView
        https://bugs.webkit.org/show_bug.cgi?id=88214

        Reviewed by Martin Robinson.

        Fixed a memory leak in WebKitWebView by making
        GeolocationClientMock to be owned by the WebView.

        * webkit/webkitwebview.cpp:
        (webkit_web_view_init):
        * webkit/webkitwebviewprivate.h:

2012-06-04  Carlos Garcia Campos  <cgarcia@igalia.com>

        Unreviewed. Update NEWS and configure.ac for 1.9.3 release

        * NEWS: Added release notes for 1.9.3.

2012-06-04  Mario Sanchez Prada  <msanchez@igalia.com>

        [GTK] Remove geoclue dependency from WebKit API Layer
        https://bugs.webkit.org/show_bug.cgi?id=87801

        Reviewed by Martin Robinson.

        Make GeolocationClient for WebKitGTK+ use the new Geoclue-based
        geolocation provider available in WebCore.

        * WebCoreSupport/GeolocationClientGtk.cpp:
        (WebKit):
        (WebKit::GeolocationClient::GeolocationClient):
        (WebKit::GeolocationClient::startUpdating):
        (WebKit::GeolocationClient::stopUpdating):
        (WebKit::GeolocationClient::setEnableHighAccuracy):
        (WebKit::GeolocationClient::notifyPositionChanged):
        (WebKit::GeolocationClient::notifyErrorOccurred):
        * WebCoreSupport/GeolocationClientGtk.h:
        (GeolocationClient):

2012-05-31  Hajime Morrita  <morrita@chromium.org>

        REGRESSION(r117572): editing/spelling/spellcheck-async-remove-frame.html crashes on Mac
        https://bugs.webkit.org/show_bug.cgi?id=86859

        Reviewed by Ryosuke Niwa.

        * WebCoreSupport/TextCheckerClientGtk.h:
        (WebKit::TextCheckerClientGtk::requestCheckingOfString):

2012-05-31  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r119113.
        http://trac.webkit.org/changeset/119113
        https://bugs.webkit.org/show_bug.cgi?id=88016

        This caused multiple regressions (Requested by mrobinson on
        #webkit).

        * WebCoreSupport/TextCheckerClientGtk.cpp:
        (WebKit::TextCheckerClientGtk::checkSpellingOfString):
        * webkit/webkitspellcheckerenchant.cpp:
        (checkSpellingOfString):

2012-05-31  Sudarsana Nagineni  <sudarsana.nagineni@linux.intel.com>

        [GTK] Memory leak in webkit_web_view_init
        https://bugs.webkit.org/show_bug.cgi?id=87943

        Reviewed by Martin Robinson.

        Fixed a memory leak in webkit_web_view_init by making the
        UserMediaClientGtk to be owned by the WebView.

        * webkit/webkitwebview.cpp:
        (webkit_web_view_init):
        * webkit/webkitwebviewprivate.h:

2012-05-31  Martin Robinson  <mrobinson@igalia.com>

        Spell checker doesn't recognize contractions (apostrophes)
        https://bugs.webkit.org/show_bug.cgi?id=86118

        Reviewed by Gustavo Noronha Silva.

        The Enchant spell checker was breaking words on apostrophes, because
        apparently they were always being detected as Pango word-end
        characters. To know whether or not the apostrophe is a
        word end character requires looking at a string with a larger
        granularity than one character.

        Simplify the way the we break strings, by search for non-graphable
        character manually to find word starts and ends. This has the side
        effect of removing the dependency on Pango and eliminating one copy.

        This change also cleans up some misbehavior on the part of the
        WebCoreSupport layer which was not converting from Unicode character
        offsets to UTF-16. These offsets can be different if any of the
        characters in the UTF-16 string are surrogate pairs (non BMP
        characters).

        * WebCoreSupport/TextCheckerClientGtk.cpp:
        (WebKit::TextCheckerClientGtk::checkSpellingOfString): Properly
        convert from Unicode offsets to UTF-16 offsets.
        * webkit/webkitspellcheckerenchant.cpp:
        (findByteOffsetToFirstNonGraphableCharacter): Added this helper.
        (getExtentsOfNextWord): Ditto.
        (wordIsSpelledCorrectlyInAtLeastOneDictionary): Ditto.
        (checkSpellingOfString): Don't split words on apostrophes.

2012-05-30  Sudarsana Nagineni  <sudarsana.nagineni@linux.intel.com>

        [GTK] [WK2] Memory leak in webkitWebViewBaseStartDrag
        https://bugs.webkit.org/show_bug.cgi?id=87756

        Reviewed by Carlos Garcia Campos.

        Fixed a memory leak in drag and drop by using adoptRef instead
        of just getting a new reference of targetList.

        * WebCoreSupport/DragClientGtk.cpp:
        (WebKit::DragClient::startDrag):

2012-05-25  Jesus Sanchez-Palencia  <jesus.palencia@openbossa.org>

        WebKitTestRunner needs to support layoutTestController.setJavaScriptProfilingEnabled
        https://bugs.webkit.org/show_bug.cgi?id=42328

        Reviewed by Eric Seidel.

        * webkit/webkitwebinspector.cpp:
        (webkit_web_inspector_set_property):

2012-05-25  Lu Guanqun  <guanqun.lu@intel.com>

        [GTK] fix compilation for webkitwebview.cpp
        https://bugs.webkit.org/show_bug.cgi?id=87473

        Reviewed by Martin Robinson.

        When ACCELERATED_COMPOSITING and TEXTURE_MAPPER_GL is not set,
        the local variable 'priv' won't be used. Therefore the following warning:

        ../../../Source/WebKit/gtk/webkit/webkitwebview.cpp: In function ‘void webkit_web_view_realize(GtkWidget*)’:
        ../../../Source/WebKit/gtk/webkit/webkitwebview.cpp:971:27: warning: unused variable ‘priv’ [-Wunused-variable]

        * webkit/webkitwebview.cpp:
        (webkit_web_view_realize):

== Rolled over to ChangeLog-2012-05-22 ==
