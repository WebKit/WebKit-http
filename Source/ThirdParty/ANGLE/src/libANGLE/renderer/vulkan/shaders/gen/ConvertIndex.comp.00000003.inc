// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2020 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ConvertIndex.comp.00000003.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kConvertIndex_comp_00000003[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x6d,0x95,0xed,0x6b,0xce,0x61,
    0x14,0xc7,0xaf,0xdf,0x7d,0xef,0xbe,0x37,0xcf,0xc4,0x3c,0xdc,0xcd,0xc2,0xfd,0x66,
    0x45,0x4b,0x0b,0x29,0xd9,0x6c,0x1e,0x46,0x19,0xca,0xc2,0xd0,0x50,0xac,0xc4,0xbc,
    0xe1,0xd5,0xc4,0xfc,0x01,0x9b,0x51,0x52,0x6c,0x33,0x5e,0x50,0x93,0xa7,0x44,0x29,
    0x0f,0x65,0xd8,0xfe,0x01,0xa4,0x90,0xbc,0x92,0xb7,0x9e,0x47,0xba,0x9d,0x73,0xfd,
    0x3e,0xd7,0xdd,0xf1,0x6b,0xab,0x6b,0xbf,0xdf,0xf9,0x9e,0xf3,0xfd,0x9e,0x73,0x9d,
    0x73,0xfd,0xae,0x3b,0x9d,0xca,0x97,0x3a,0x17,0xb9,0xf1,0xae,0xcc,0x4d,0x8b,0x9c,
    0xff,0x9b,0xe6,0x52,0x4e,0x5f,0x27,0xb8,0xac,0x7f,0x36,0x6e,0xdc,0xba,0xb1,0xfa,
    0xe8,0xb1,0xfd,0xd5,0x4b,0x96,0x2e,0x56,0xff,0x64,0x97,0xf6,0x71,0xea,0x9b,0x22,
    0x31,0x19,0x79,0x96,0xc8,0x6a,0xdf,0x77,0xf0,0x88,0xe2,0x3b,0x64,0x4d,0x15,0xbc,
    0xc4,0x6b,0x39,0xb7,0x8a,0x58,0xaf,0x25,0x68,0xb9,0x3c,0xb3,0x70,0xd6,0xcb,0xff,
    0x99,0x71,0x5a,0x37,0xdb,0xdb,0x99,0xa2,0x9d,0xe7,0xd9,0x28,0xf9,0x14,0x4b,0xc3,
    0xd7,0xb8,0x05,0x45,0x5f,0x6c,0xcf,0x37,0xfa,0xb5,0x09,0xfd,0xba,0x84,0x7e,0xdd,
    0x18,0xfa,0x75,0x46,0xbf,0x3e,0xa1,0x5f,0x8f,0x7e,0x0a,0x7e,0x43,0x82,0x1f,0xb0,
    0x08,0xac,0xc4,0x60,0x29,0xb0,0x32,0x83,0xa5,0xc1,0x26,0x92,0x3b,0xc4,0x69,0xae,
    0x1d,0xbe,0xef,0xce,0x55,0x60,0x77,0xfd,0xb7,0x97,0x8c,0xeb,0x1e,0xa3,0xf6,0x6e,
    0x53,0x7b,0x4f,0xa2,0xf6,0x1e,0x6a,0x0f,0x76,0x5f,0x42,0xaf,0x7f,0x0c,0xbd,0x7e,
    0xa3,0x37,0x90,0xd0,0x1b,0x40,0x2f,0xf8,0x5f,0x50,0xef,0x1c,0x59,0xd3,0x65,0x17,
    0x29,0xef,0x4f,0x7b,0xbf,0xbe,0x97,0x4b,0x8c,0xe6,0x9b,0x87,0xc6,0x5c,0xf1,0x84,
    0xf9,0x57,0x32,0xd7,0x72,0xef,0x2f,0x71,0xb3,0xe0,0x28,0xb6,0x02,0x7b,0xb6,0xd1,
    0x99,0x83,0x8e,0xf6,0x79,0x21,0x76,0x0e,0xdd,0x60,0x57,0x10,0xaf,0x7a,0x95,0xbc,
    0x67,0xf1,0x67,0xd9,0x67,0xda,0xc4,0x57,0x19,0x3b,0x8e,0x73,0xae,0x20,0x6b,0x86,
    0x30,0xab,0x0d,0x5e,0xa3,0x78,0x21,0xae,0xbf,0xd6,0xd4,0xaf,0xe7,0xa6,0x96,0x7c,
    0xab,0xc8,0x57,0x47,0xfd,0x6a,0xd7,0x83,0x55,0x0a,0xa3,0x01,0x9e,0x5d,0xca,0x5b,
    0x2d,0xcf,0x71,0xb2,0x1a,0xe0,0xa9,0xbd,0x06,0x4c,0xfd,0x6b,0x79,0xb7,0xfb,0x68,
    0x42,0x77,0x96,0xd8,0xdb,0xf0,0xa5,0x89,0xdf,0x4e,0x8f,0xb6,0xa1,0xb7,0x9d,0x6f,
    0x32,0x32,0xfc,0x16,0xfa,0xa6,0xf1,0x3b,0xf1,0x65,0x4d,0x5f,0x5a,0x13,0xf1,0x1d,
    0xd8,0xba,0xff,0x2e,0xb3,0x7f,0x3d,0x7b,0x5d,0xe8,0x9c,0xa6,0xa6,0x6e,0xf2,0xaa,
    0xdd,0x03,0xa6,0xbc,0x3e,0xc3,0xd3,0x33,0xd6,0x07,0xef,0x12,0x31,0xfd,0xf0,0xd4,
    0x1e,0x00,0x0b,0xf9,0x9f,0x72,0x66,0x83,0xfd,0x9c,0x7b,0x65,0x91,0x58,0xba,0xcf,
    0x17,0x60,0x1d,0xac,0x10,0x57,0x16,0xe9,0x5d,0xe4,0xdc,0x32,0x39,0xeb,0x29,0x34,
    0x1c,0xbd,0xfa,0x25,0x88,0xde,0x5d,0x3f,0xc5,0x1a,0x06,0xff,0x23,0xef,0xda,0x9b,
    0x11,0xfc,0x23,0x7e,0x86,0x19,0x3f,0x83,0x75,0xcc,0x45,0xcf,0xdc,0x4a,0xf4,0x1b,
    0xc1,0xeb,0xc5,0xaa,0xf4,0xdf,0x54,0x3c,0xf3,0x1c,0xbe,0x10,0xb7,0x01,0xdf,0x29,
    0xd1,0x52,0x7b,0x13,0xfe,0x26,0xc3,0xdd,0x6c,0xb8,0x9b,0x0c,0x77,0x0b,0xbe,0xc0,
    0x6d,0x06,0xdb,0x40,0x6d,0x3a,0xbf,0x5d,0xcc,0xb8,0xc5,0xf0,0x76,0x83,0x0f,0xc1,
    0xdb,0x03,0xaf,0xd5,0x68,0xed,0x25,0x6e,0x8f,0xef,0x5f,0x8c,0xed,0x03,0xd7,0xb8,
    0x5b,0x82,0xe9,0x77,0xb0,0x1f,0xbc,0x99,0x7e,0xb5,0xd1,0xaf,0xdf,0x92,0x4b,0x7d,
    0x07,0x64,0xb5,0xd1,0x33,0x7d,0x1f,0x95,0xe7,0x30,0x76,0x9b,0xd1,0x39,0x84,0xce,
    0x16,0x74,0xda,0x8d,0x8e,0xfa,0x0e,0xeb,0xef,0x08,0xbc,0xc3,0xa6,0xf6,0x97,0xf0,
    0x2a,0x4c,0xbf,0x5e,0x71,0x3f,0xe4,0xf0,0x87,0x7d,0xbf,0xc6,0x37,0x02,0xf7,0x0d,
    0xdc,0xbc,0xd9,0xe3,0x5b,0xf0,0x2a,0x93,0xe3,0x1d,0xdc,0xb7,0x86,0xfb,0x1e,0x5c,
    0xef,0x85,0xeb,0xec,0xe1,0x03,0xf8,0x42,0xf6,0xf9,0x91,0x7a,0xf5,0x39,0x28,0x2c,
    0xe5,0x4d,0x89,0xe2,0xb8,0x1a,0x62,0x43,0xde,0x4f,0xf8,0x5a,0xfc,0x99,0x8d,0xb1,
    0xcf,0xcc,0xed,0x13,0x7a,0x61,0xff,0xfa,0xfc,0xee,0x4a,0x7d,0xcc,0x24,0x38,0x6d,
    0xc4,0x7f,0x34,0x33,0x3c,0xce,0xfe,0xf4,0xdc,0xdf,0xa1,0xc6,0x13,0xe0,0x61,0x5e,
    0x9d,0xa6,0xcf,0xea,0x3b,0x29,0xab,0x93,0x3c,0x27,0x4d,0x0f,0xbe,0xc0,0xb3,0x7d,
    0xfe,0x6a,0xfa,0xfc,0xc5,0xf4,0xf9,0x1b,0xbe,0xd0,0xab,0x1f,0x70,0x6d,0x9f,0x47,
    0xc1,0x6d,0x9f,0x7f,0xc3,0x1d,0x35,0xdc,0x3f,0xe0,0xb6,0xcf,0x7f,0xc1,0x43,0x9f,
    0x0b,0xd4,0x5b,0x30,0x7d,0x9e,0x1a,0xc5,0x71,0x35,0xc4,0x86,0xbc,0x99,0x28,0xf6,
    0xe9,0xf7,0x1f,0xfa,0x5c,0x1a,0xc5,0x7d,0x54,0x9f,0xea,0x85,0xfd,0x77,0x9a,0x3e,
    0x4f,0x26,0xa6,0x9d,0xf8,0x82,0xf9,0xfe,0xcf,0xf0,0xfd,0xb7,0x9a,0x1e,0x9c,0x05,
    0x0f,0xb3,0x38,0x07,0xb6,0xdb,0xf4,0xef,0x3c,0xf7,0x60,0x0e,0x7f,0xad,0xcc,0xe3,
    0x3c,0xb9,0xc2,0x5e,0x2f,0xc0,0x69,0x61,0x5e,0xbd,0x66,0x5e,0xea,0xbb,0x28,0xab,
    0x97,0x7a,0x2f,0x9a,0x9a,0x2e,0x53,0x53,0x95,0xa9,0xe9,0x0a,0x78,0xb0,0xaf,0x16,
    0xef,0xa5,0xb8,0x9e,0x6b,0xdc,0xaf,0x39,0x62,0xb5,0x9e,0x6b,0xc4,0x85,0x7d,0x0c,
    0xe2,0xeb,0x30,0xd8,0x0d,0xee,0xac,0x0e,0xa3,0x75,0xd3,0xdc,0x59,0x37,0x4c,0xce,
    0x5b,0x45,0x5f,0x1c,0x77,0xdb,0xe4,0x1c,0x24,0xe7,0x6d,0xe2,0x82,0xfe,0x5d,0x72,
    0x36,0x99,0x73,0x71,0x8f,0xbb,0xc2,0xe6,0xbc,0x6f,0xb4,0xee,0xa2,0x75,0x9f,0xd8,
    0xa0,0xf5,0x00,0xad,0xbc,0xc1,0x1e,0x52,0x7f,0xde,0x68,0x3d,0x32,0xf5,0x3f,0x34,
    0xf5,0x3f,0x2e,0xfa,0xe2,0xb8,0x27,0x26,0xe7,0x03,0x72,0x3e,0x21,0x2e,0xe8,0x0f,
    0x91,0xf3,0xa9,0xe1,0x3d,0x33,0xbc,0x21,0x78,0xcf,0x98,0xb3,0x9e,0xc1,0x30,0xd3,
    0xde,0xc4,0x9d,0x39,0xec,0xcf,0x7f,0xe4,0x96,0xcb,0xfa,0x07,0xc2,0xc0,0x49,0x2a,
    0xa4,0x0b,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// layout(local_size_x = 64, local_size_y = 1, local_size_z = 1)in;
//
// layout(set = 0, binding = 0)buffer dst
// {
//
//     uint dstIndexBuf[];
// };
//
// layout(set = 0, binding = 1)readonly buffer src
// {
//
//     uint srcIndexBuf[];
// };
//
// layout(set = 0, binding = 2)readonly buffer srcIndirect
// {
//
//     uint srcIndirectBuf[];
// };
//
// layout(set = 0, binding = 3)buffer dstIndirect
// {
//
//     uint dstIndirectBuf[];
// };
//
// layout(push_constant)uniform PushConstants
// {
//
//     uint srcIndirectOffsetDiv4;
//
//     uint dstIndexBufOffsetDiv4;
//
//     uint maxIndex;
//
//     uint dstIndirectBufOffsetDiv4;
// };
//
// uint PullIndex(uint index)
// {
//
//     uint srcIndex = index;
//
//     uint srcBlock = srcIndexBuf[srcIndex >> 2];
//     uint srcComponent =(srcIndex & 3);
//
//     uint value =(srcBlock >>(srcComponent << 3))& 0xFF;
//
//     if(value == 0xFF)
//         value = 0xFFFF;
//
//     return value;
// }
//
// void PackIndexValue(uint srcValue, uint indexIndex, inout uint dstValue)
// {
//
//     dstValue |= srcValue <<(indexIndex << 4);
// }
//
// void main()
// {
//
//     uint indexCount = srcIndirectBuf[srcIndirectOffsetDiv4];
//     uint firstIndex = srcIndirectBuf[srcIndirectOffsetDiv4 + 2];
//     uint endIndex = firstIndex + indexCount;
//
//     uint index =((gl_GlobalInvocationID . x +(firstIndex >> 1))<< 1);
//
//     if(index >= endIndex)
//         return;
//
//     uint dstValue = 0;
//
//     if(index >= firstIndex)
//     {
//         uint srcValue = PullIndex(index);
//         PackIndexValue(srcValue, 0, dstValue);
//     }
//
//     if(index + 1 < endIndex)
//     {
//         uint srcValue = PullIndex(index + 1);
//         PackIndexValue(srcValue, 1, dstValue);
//     }
//
//     dstIndexBuf[dstIndexBufOffsetDiv4 + gl_GlobalInvocationID . x]= dstValue;
//
//     if(gl_GlobalInvocationID . x == 0)
//     {
//         dstIndirectBuf[dstIndirectBufOffsetDiv4]= srcIndirectBuf[srcIndirectOffsetDiv4];
//
//         dstIndirectBuf[dstIndirectBufOffsetDiv4 + 1]= srcIndirectBuf[srcIndirectOffsetDiv4 + 1];
//
//         dstIndirectBuf[dstIndirectBufOffsetDiv4 + 2]= firstIndex & 1;
//
//         dstIndirectBuf[dstIndirectBufOffsetDiv4 + 3]= srcIndirectBuf[srcIndirectOffsetDiv4 + 3];
//         dstIndirectBuf[dstIndirectBufOffsetDiv4 + 4]= 0;
//     }
//
// }
