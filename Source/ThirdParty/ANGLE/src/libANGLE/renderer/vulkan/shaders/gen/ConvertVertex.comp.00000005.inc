// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2020 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ConvertVertex.comp.00000005.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kConvertVertex_comp_00000005[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x9d,0x98,0x79,0x94,0x8f,0x65,
    0x14,0xc7,0x7f,0xef,0xec,0xc6,0x60,0x66,0x30,0x63,0x19,0x32,0x51,0x8d,0x4c,0xb6,
    0x06,0x65,0x4b,0x47,0x1a,0x4a,0x49,0x22,0x1c,0x92,0x25,0x52,0x91,0xd0,0x26,0x2a,
    0xb2,0xa6,0x2c,0x21,0x4b,0x4a,0x49,0xd9,0x93,0x52,0x42,0x92,0x3d,0x39,0xc7,0x39,
    0x2a,0xe7,0x90,0xa5,0x4d,0x69,0x75,0x92,0x6d,0xa8,0xe8,0xb9,0xef,0xfb,0xb9,0x5c,
    0xcf,0x99,0xbf,0x9a,0x73,0x9e,0xf3,0x3e,0xf7,0x7b,0xef,0xfd,0x3e,0xf7,0xb9,0xcf,
    0x7d,0x96,0xdf,0xc4,0xc7,0x55,0x4f,0x8e,0xc5,0x82,0x58,0x6a,0x2c,0x25,0x56,0x25,
    0x88,0x85,0x7f,0x19,0xb1,0xb8,0x98,0x74,0x4b,0xc6,0x92,0xc2,0x6f,0x61,0xdb,0x0e,
    0x6d,0x6b,0x0f,0x19,0xda,0xa7,0x76,0x41,0x83,0xba,0xa2,0x2f,0x1d,0x8b,0x0f,0xed,
    0x44,0x57,0xc6,0xd9,0x24,0xba,0x6f,0x82,0x6b,0x03,0x7a,0xf6,0x1f,0x28,0xf8,0x21,
    0xd7,0xd2,0x1d,0x9e,0x10,0x72,0xc5,0x62,0x2d,0xb0,0x95,0xd6,0xda,0x59,0x5f,0x11,
    0x0d,0x13,0xab,0xce,0x57,0xb1,0x00,0x2c,0xc1,0x60,0x71,0x60,0x29,0x06,0x8b,0x07,
    0x4b,0x33,0x58,0x02,0x58,0xba,0xc1,0x12,0xc1,0xca,0x19,0x2c,0x09,0xac,0x82,0xc1,
    0x92,0xc1,0x72,0x0c,0x96,0x02,0x56,0xcd,0x60,0x25,0xc0,0x6a,0x18,0x2c,0x15,0x2c,
    0xcf,0x60,0x25,0xc1,0xf2,0x0d,0x96,0x06,0x56,0xd7,0x60,0xa5,0xc0,0x0a,0x24,0xc7,
    0x6e,0x56,0x3a,0xdf,0x42,0x37,0x9b,0xde,0xc4,0xaa,0xb9,0xe8,0xe3,0xe5,0x4c,0xec,
    0xfb,0x90,0x0b,0xb1,0xef,0xeb,0xbe,0x97,0x5f,0xd0,0x45,0x72,0x2e,0x39,0x15,0x79,
    0xaf,0xc7,0xb7,0xaf,0x18,0xbe,0x7d,0x86,0x6f,0xbf,0xc7,0xb7,0x1f,0x3e,0x95,0x0f,
    0x31,0xcf,0x1c,0xe4,0x9c,0x20,0x92,0x2b,0xba,0x56,0xd6,0xcd,0x22,0x2e,0xb4,0x8f,
    0x0f,0xf9,0xa4,0x5f,0xde,0xd9,0x24,0x91,0xcf,0x58,0xf8,0x4d,0x08,0xf3,0x9e,0x4c,
    0x5c,0xb9,0x2e,0xa6,0x14,0xfa,0x8a,0x67,0x39,0xef,0x0c,0x7c,0x72,0x9d,0x7d,0x26,
    0xf5,0x94,0x8c,0x7f,0x16,0xfd,0x0c,0xf4,0xd9,0xf4,0xb3,0xe0,0xab,0x6c,0xf8,0xb2,
    0xb0,0xa9,0x46,0x3c,0x82,0x55,0x75,0xd5,0xa2,0x35,0xf1,0x7f,0x9a,0xc4,0x70,0x25,
    0x75,0x21,0x3c,0x4d,0x90,0xaf,0x02,0x93,0x39,0xe7,0x11,0xbf,0xac,0x43,0x2d,0xe4,
    0x9a,0xc6,0xff,0x6a,0x6c,0x93,0x8c,0xbe,0x0e,0xb5,0xab,0x72,0x01,0x31,0xd7,0x22,
    0x87,0x4d,0x59,0x47,0x95,0x9b,0x53,0xaf,0x6a,0xdf,0xca,0x93,0xdb,0x61,0x5f,0xce,
    0xb1,0xdc,0x69,0xfc,0x3a,0xb2,0xde,0x22,0x4b,0xde,0xba,0xb2,0x36,0x55,0x1c,0xaa,
    0xf5,0x57,0x95,0x3a,0xeb,0x4d,0xbc,0xf7,0x11,0x4b,0x1f,0xe6,0x2b,0x72,0x5f,0x13,
    0x9f,0x8c,0xd7,0xcf,0xac,0xf1,0x03,0xe8,0xec,0xfc,0x06,0xb0,0x1f,0x34,0x8e,0x41,
    0xd8,0xab,0xfe,0x71,0xf6,0x95,0xca,0x23,0x4c,0x9c,0x22,0x3f,0xed,0xda,0xf9,0xf8,
    0x8b,0xf2,0x48,0xf6,0x92,0xf2,0x8d,0x37,0xfe,0x22,0x4f,0xf3,0xf2,0xb7,0x80,0x35,
    0x91,0xf8,0xde,0xa6,0x16,0xf2,0x0c,0xff,0x12,0xe1,0x77,0x7f,0x2a,0x2f,0x63,0xfd,
    0x24,0x2f,0x7b,0x4d,0x5e,0x64,0xbf,0xec,0x85,0xe7,0x6b,0xc6,0xd8,0x47,0x5e,0x44,
    0xde,0x0f,0x96,0xed,0xe4,0x03,0xf8,0xc5,0x63,0x7f,0x10,0xce,0x03,0xd8,0x1f,0xe4,
    0xdc,0x0c,0xd0,0x7f,0x43,0x3f,0xc9,0xc4,0x5d,0x64,0xea,0x48,0xe4,0xca,0x41,0x74,
    0xb6,0xe6,0x3b,0x49,0x78,0x64,0x0f,0x0a,0x56,0x84,0x6d,0x43,0x57,0x45,0x71,0xac,
    0x7d,0x8c,0xb1,0x8b,0x1c,0x92,0xc8,0x98,0x32,0xef,0x3f,0x99,0xbf,0xca,0xc7,0x3c,
    0xf9,0xac,0x91,0xc3,0xfd,0x16,0x5c,0xaa,0x4f,0x09,0x2e,0xd5,0x97,0xf4,0xe4,0x34,
    0xcf,0xbe,0x8c,0xa7,0xcf,0xf0,0xf4,0x15,0x90,0x6f,0x74,0x51,0x4a,0x0e,0x7e,0x26,
    0x2f,0x52,0x23,0xcd,0x98,0xf7,0x2f,0xe0,0x62,0x23,0xfb,0xe7,0x57,0xf6,0x5c,0x3f,
    0x63,0xf3,0x1b,0xf8,0x3b,0xce,0x46,0x6a,0xfe,0x77,0xfc,0x04,0x3f,0xed,0x32,0x71,
    0x94,0x9c,0x9c,0x75,0xf6,0xa2,0xfb,0xc3,0xb5,0xa3,0xe4,0x47,0xfa,0xff,0xba,0x4c,
    0x4b,0xff,0x68,0xb8,0xbf,0xe2,0xc3,0x3c,0x0d,0xa2,0x7f,0x8c,0xfe,0x19,0xa7,0xff,
    0x0b,0x1f,0xf9,0x9e,0x72,0x5c,0x27,0xdc,0xf7,0x24,0xdc,0xa2,0x3f,0x85,0xfe,0x94,
    0x89,0xed,0x34,0x79,0x7e,0x97,0xd8,0xce,0x80,0x15,0x11,0x8f,0xc8,0xc7,0x5d,0x3b,
    0x81,0xef,0x71,0x93,0x8f,0xbf,0x8b,0xc9,0xc7,0x3f,0xe0,0xa3,0x9d,0x4d,0x52,0x18,
    0x7b,0x84,0x15,0x19,0x9b,0x73,0x8c,0xf9,0x2c,0x36,0xe7,0xb1,0x3b,0xc7,0x9c,0xce,
    0x82,0xa9,0xbd,0x14,0xda,0x59,0x93,0xe3,0x20,0x88,0x72,0xbc,0xcc,0xd8,0xc4,0x05,
    0x11,0xae,0x39,0x8e,0xe7,0x92,0x17,0x5c,0x72,0x9c,0x18,0x5c,0xcc,0xb1,0xe8,0x12,
    0x5c,0x4b,0x0c,0xa2,0x39,0x49,0x5f,0xf2,0xa3,0x73,0x14,0x5c,0x79,0x4b,0x30,0xb6,
    0xc4,0x25,0xf5,0x25,0xf2,0xf5,0x6e,0x0c,0x39,0xa3,0x52,0x83,0xe8,0x3e,0x17,0x5c,
    0xf4,0x52,0x8f,0xa9,0xf8,0x8a,0xbe,0x54,0x10,0xd5,0xa8,0xe8,0xa4,0xf6,0x4a,0x19,
    0xdf,0xd2,0x41,0x74,0x3f,0xa5,0xa1,0x97,0x5a,0x2d,0x6d,0xc6,0x4d,0x37,0xe3,0x4a,
    0x9d,0xa6,0x1b,0xde,0xcc,0x20,0xaa,0x6d,0xd1,0x49,0xcd,0x66,0x86,0xbc,0x49,0xa1,
    0x5f,0xd9,0x40,0xce,0x83,0xa8,0xb6,0x33,0x0c,0x5f,0xb9,0x20,0xda,0x5f,0x5b,0xc9,
    0x79,0xf9,0x20,0xc2,0xca,0x06,0x17,0x6b,0xaa,0x3c,0x79,0x38,0x49,0x1e,0x4e,0x9a,
    0xfc,0x66,0x05,0x97,0xae,0x59,0x76,0x10,0x61,0xcb,0x4c,0x1d,0x66,0x07,0x97,0xd6,
    0xe1,0x09,0xe3,0x5f,0x91,0xf1,0xc5,0x56,0xf6,0x55,0x45,0x72,0x21,0x67,0x42,0xa5,
    0x20,0xba,0xdf,0x05,0x97,0x5a,0xbf,0xce,0xb5,0x86,0x8c,0x53,0x92,0xfa,0x95,0x3b,
    0xa4,0x91,0xe4,0x98,0x3b,0x4a,0xfb,0xa9,0x8c,0x95,0x66,0xc6,0xaa,0x81,0x8d,0xd6,
    0x4b,0x2d,0xf6,0x64,0x4d,0x63,0x93,0x0f,0xae,0x75,0x7a,0x0d,0x7e,0xf9,0xc6,0xa6,
    0x36,0xfc,0xca,0x53,0x17,0x9e,0x3a,0xc6,0xa6,0x1e,0xb8,0xf2,0xd4,0xc7,0xaf,0x9e,
    0xc9,0xd5,0xb5,0xf0,0xd7,0x37,0x5c,0x0d,0xe0,0x2a,0x30,0x5c,0x0d,0xc1,0xd5,0xaf,
    0x11,0xbe,0x0d,0xc3,0xbd,0x11,0x17,0xca,0x36,0x37,0x65,0x8a,0xc9,0x4d,0x29,0xd3,
    0x2f,0x4d,0x6e,0xd2,0xcd,0x99,0xd6,0x98,0x33,0x54,0xc7,0x6c,0x82,0xcf,0x04,0x38,
    0x9b,0x81,0x35,0x35,0x73,0xba,0x01,0xbc,0x39,0xeb,0xd7,0xf8,0x02,0x16,0x71,0xb4,
    0x80,0x57,0x62,0x6c,0x61,0x62,0xcc,0xe0,0xbd,0x2b,0x7f,0x99,0x26,0xae,0xb2,0xc4,
    0x55,0xde,0xc4,0xd5,0xd2,0x3b,0xeb,0xdb,0x78,0x72,0x37,0x4f,0xee,0xee,0xc9,0x3d,
    0x3c,0xb9,0x97,0x27,0x0f,0xf5,0xe4,0x61,0x9e,0x3c,0xce,0x93,0x27,0x79,0xf2,0x1c,
    0x4f,0x9e,0x6b,0x64,0xb9,0xb7,0x17,0x7a,0xfa,0x75,0xde,0x5d,0xb5,0xd9,0x93,0xb7,
    0x79,0xeb,0x70,0x13,0x79,0xd1,0xfa,0xb8,0x99,0xfa,0x68,0x65,0x6c,0x0a,0xc1,0xc7,
    0xb2,0x2e,0xad,0xf1,0x2b,0x64,0x5d,0x5a,0x82,0xa9,0xfd,0x2d,0x1e,0xe7,0xad,0xc5,
    0x70,0xb6,0x05,0xd7,0xf5,0xbf,0x0d,0xbf,0xb6,0x70,0xb6,0x01,0x53,0xfb,0xdb,0x59,
    0x1b,0xe5,0xbc,0x03,0xce,0x76,0xc6,0xa6,0x3d,0xb8,0x9e,0xc5,0x1d,0xf0,0x6b,0x6f,
    0x6c,0xee,0x82,0x47,0xef,0x9d,0x4e,0x60,0x1d,0xc3,0x5c,0x46,0xd8,0xdd,0xf8,0x76,
    0xe2,0x9e,0xec,0x62,0xee,0x49,0xd1,0x75,0x76,0xad,0x0b,0xb5,0xd4,0x99,0xfa,0xeb,
    0x8a,0xdc,0xc5,0x8c,0x75,0x0f,0xf5,0x25,0xf3,0xe9,0x8e,0xac,0xba,0x7b,0x89,0x43,
    0x74,0x3d,0x90,0xf5,0x2c,0xed,0xc9,0xf9,0xd3,0x9d,0xfa,0x12,0x9b,0x6e,0xe0,0xea,
    0x7f,0x3f,0xb5,0xa9,0x6b,0xd2,0x1f,0xac,0x69,0x98,0xa3,0xa4,0xf0,0xcd,0xf9,0x20,
    0xef,0xd2,0x7e,0xe8,0xd5,0xf7,0x21,0x74,0xc2,0xdb,0x0b,0x59,0xf3,0x3a,0x90,0xbc,
    0x0e,0x30,0xf6,0x0f,0x83,0x2f,0x25,0x3f,0x8f,0x80,0x0d,0x22,0x3f,0x43,0x4c,0x7e,
    0x44,0x37,0xd8,0xb5,0xd9,0xe4,0x63,0xb0,0xe1,0x79,0x94,0x39,0x2f,0x81,0xe7,0x31,
    0x30,0xc9,0xfd,0x62,0x67,0x21,0xef,0xcc,0x27,0xc0,0x0b,0x78,0x03,0x0f,0xc7,0xf7,
    0x49,0x74,0x12,0xf3,0x50,0x64,0xe5,0x7d,0xca,0xe3,0x1d,0x0e,0x66,0x79,0x9f,0x01,
    0x1f,0xc1,0xdb,0x59,0x79,0x9f,0x45,0x27,0xbc,0xc3,0x90,0x35,0x17,0xa3,0xc8,0xc5,
    0x48,0x33,0xd6,0x73,0xe0,0x9a,0x8b,0xd1,0x60,0x9a,0x8b,0xb1,0x26,0x17,0xa2,0x1b,
    0xe3,0xda,0x44,0x72,0x31,0xc6,0xf0,0x4c,0x20,0x66,0x3d,0xeb,0x9e,0xe7,0xcd,0x3e,
    0x81,0x58,0xc6,0x81,0xc9,0xbd,0x36,0x16,0xff,0x89,0xc6,0xff,0x05,0x6f,0xce,0x2f,
    0x82,0x75,0x24,0x8e,0x29,0x26,0x0e,0xd1,0x4d,0x76,0x6d,0x2a,0x3c,0x93,0x19,0x63,
    0x92,0x79,0xc3,0x4d,0x41,0x37,0xd5,0x8c,0xf1,0x12,0xe7,0x97,0xca,0xd3,0x19,0x73,
    0x14,0x31,0xcf,0xe0,0x77,0xc5,0x74,0x33,0x8f,0x97,0xf1,0x9b,0x61,0xee,0x93,0x99,
    0xe0,0xd3,0xcc,0xb8,0x33,0xbd,0x71,0xa7,0x98,0x71,0x66,0x71,0x0e,0x6a,0x1e,0x66,
    0x79,0x79,0x18,0x8b,0x3c,0x04,0x79,0xb6,0xf1,0x7d,0x85,0x7d,0x21,0xbe,0x73,0x90,
    0x75,0x3d,0x5f,0x2d,0xe6,0x1e,0x7d,0x0d,0x5c,0xec,0xe7,0x22,0xeb,0x3e,0x9c,0xc7,
    0x5d,0x37,0x87,0x73,0x57,0xe3,0x99,0x67,0x38,0x5f,0x2f,0x86,0xf3,0x0d,0x70,0xcd,
    0xc9,0x7c,0xb0,0xe6,0xa6,0x7e,0xe7,0x1b,0xfb,0x37,0xc9,0xb3,0xae,0xe5,0x5b,0x60,
    0x0b,0x58,0xcb,0xc5,0x66,0x2d,0x45,0xb7,0x28,0xac,0xbf,0x68,0xee,0x8b,0xe0,0x5c,
    0xc8,0x6f,0x36,0xc9,0xcb,0x62,0x74,0x4b,0xcd,0x18,0xcb,0x19,0x63,0x8b,0x1b,0x23,
    0x2f,0x3c,0x23,0xa3,0x37,0xd4,0x72,0xd6,0x53,0xb0,0x15,0x06,0x57,0xce,0x15,0x1e,
    0xe7,0x62,0x38,0xf3,0xc2,0x33,0x34,0xba,0x7f,0x74,0x2f,0xad,0x04,0xd3,0xbd,0xb4,
    0xd2,0x5b,0xa7,0x21,0x26,0x9e,0xf7,0xbc,0xf3,0xfc,0xfd,0x62,0xce,0xf3,0x55,0xe0,
    0x7a,0x9e,0x7f,0x80,0xdf,0x2a,0x63,0xf3,0xa1,0xb7,0x0f,0x56,0x83,0xd9,0xf3,0xfc,
    0x23,0x7c,0x57,0x93,0xcf,0xb5,0x26,0x9f,0xa2,0x5b,0xe3,0xda,0x7a,0x62,0x5c,0x63,
    0xb8,0x3f,0xe6,0xbe,0x96,0xf9,0xac,0x43,0x96,0xf9,0xac,0xc5,0x76,0xbd,0xb1,0xfd,
    0x84,0xbb,0x5f,0xe5,0x0d,0xdc,0xed,0x9b,0xa8,0x81,0x4f,0xb1,0xd9,0x60,0x6c,0x36,
    0xc2,0xbf,0x1d,0x9b,0x4d,0xd8,0x6d,0x34,0x63,0x6e,0xf2,0xc6,0x5c,0x6b,0xfc,0xb7,
    0xe0,0x3f,0x88,0xf7,0xf9,0x56,0x30,0xf1,0xdd,0x8c,0xac,0xb6,0xdb,0x79,0x1b,0xa8,
    0xed,0x67,0x60,0xfa,0xb6,0xdf,0xc1,0x5b,0x61,0x3c,0xef,0xa7,0xcf,0xb1,0xd9,0x01,
    0xdf,0x36,0x30,0xb5,0xdf,0xc9,0x5b,0x42,0xee,0xbe,0x9d,0xde,0xdb,0xab,0x22,0xf9,
    0xcd,0xe6,0xed,0x95,0xc5,0xff,0x1a,0x25,0xfe,0x4a,0x86,0x63,0x17,0xb8,0x70,0xec,
    0xf2,0xde,0x98,0x55,0xe1,0xa8,0x6c,0xde,0x6f,0x39,0x86,0xaf,0x0a,0x7c,0x97,0x99,
    0xb7,0xcf,0x6e,0xf3,0xb6,0x11,0xfe,0x2f,0xb0,0x1b,0x4e,0xbd,0x7e,0x09,0xa6,0xf5,
    0xfa,0x15,0x98,0xcc,0x6f,0x37,0xb2,0xe6,0x6b,0x0f,0x7c,0x12,0xdb,0x1e,0x13,0x5b,
    0x9c,0xf9,0x9f,0x60,0x35,0x13,0x5b,0x2e,0xf1,0x54,0x37,0xbf,0x53,0xbf,0x2d,0xe6,
    0x77,0xea,0x77,0xe0,0x5a,0xf7,0xdf,0x53,0xf7,0x23,0x8c,0xcd,0x0f,0xe0,0x7a,0xb7,
    0x1f,0x06,0x6b,0x6a,0xce,0xd4,0x1f,0xe1,0x3a,0x6c,0xfc,0x7e,0x22,0x0e,0xbd,0xff,
    0x8f,0xf0,0xff,0x97,0x7e,0xd8,0xcb,0x3c,0x8f,0x60,0xa7,0xbf,0x77,0xfe,0x03,0x83,
    0x27,0x82,0x36,0xfc,0x16,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// layout(local_size_x = 64, local_size_y = 1, local_size_z = 1)in;
//
// layout(set = 0, binding = 0)buffer dest
// {
//     uint destData[];
// };
//
// layout(set = 0, binding = 1)buffer src
// {
//     uint srcData[];
// };
//
// layout(push_constant)uniform PushConstants
// {
//
//     uint outputCount;
//
//     uint componentCount;
//
//     uint srcOffset;
//     uint destOffset;
//
//     uint Ns;
//     uint Bs;
//     uint Ss;
//     uint Es;
//
//     uint Nd;
//     uint Bd;
//     uint Sd;
//     uint Ed;
//
//     bool isSrcHDR;
//     bool isSrcA2BGR10;
// } params;
//
// uint getSourceComponentOffset(uint vertex, uint component)
// {
//     return vertex * params . Ss + component * params . Bs + params . srcOffset;
// }
//
// uint getDestinationComponentOffset(uint vertex, uint component)
// {
//     return vertex * params . Sd + component * 4 + params . destOffset;
// }
//
// uint getShiftBits(uint offset, uint B)
// {
//
//     uint shift =(offset % 4)* 8;
//
//     return shift;
// }
//
//       float loadSourceComponent(uint cd)
// {
//
//     uint vertex = cd / params . Nd;
//     uint component = cd % params . Nd;
//
//     if(component >= params . Ns && component < 3)
//     {
//         return 0;
//     }
//
//     uint offset = getSourceComponentOffset(vertex, component);
//     uint block = srcData[offset / 4];
//
//     uint shiftBits;
//     uint valueBits;
//     uint valueMask;
//
//     if(params . isSrcHDR)
//     {
//         valueBits = component == 3 ? 2 : 10;
//         valueMask = component == 3 ? 0x03 : 0x3FF;
//         if(params . isSrcA2BGR10)
//         {
//             shiftBits = 10 * component;
//         }
//         else
//         {
//
//             shiftBits = component == 3 ? 0 :(valueBits *(2 - component)+ 2);
//         }
//     }
//     else
//     {
//         shiftBits = getShiftBits(offset, params . Bs);
//         valueBits = params . Bs * 8;
//         valueMask = valueBits == 32 ? - 1 :(1 << valueBits)- 1;
//     }
//
//     uint valueAsUint;
//
//     if(component >= params . Ns && component == 3)
//     {
//
//         valueAsUint = valueMask;
//
//     }
//     else
//     {
//         valueAsUint =(block >> shiftBits)& valueMask;
//     }
//
//     float positiveMax = valueMask;
//
//           float value = valueAsUint / positiveMax;
//
//     return value;
// }
//
//        float convertComponent(float srcValue)
// {
//
//     return srcValue;
// }
//
// uint makeDestinationComponent(uint cd, float value)
// {
//
//     uint valueAsUint = floatBitsToInt(value);
//
//     return valueAsUint;
// }
//
// void storeDestinationComponents(uint valueAsUint)
// {
//
//     destData[gl_GlobalInvocationID . x + params . destOffset / 4]= valueAsUint;
// }
//
// void main()
// {
//     if(gl_GlobalInvocationID . x >= params . outputCount)
//         return;
//
//     uint valueOut = 0;
//     for(uint i = 0;i < 1;++ i)
//     {
//         uint cd = gl_GlobalInvocationID . x * 1 + i;
//         if(cd >= params . componentCount)
//         {
//             break;
//         }
//
//               float srcValue = loadSourceComponent(cd);
//                float destValue = convertComponent(srcValue);
//         valueOut |= makeDestinationComponent(cd, destValue);
//     }
//
//     storeDestinationComponents(valueOut);
// }
