#
#    Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies)
#
#    This library is free software; you can redistribute it and/or
#    modify it under the terms of the GNU Library General Public
#    License as published by the Free Software Foundation; either
#    version 2 of the License, or (at your option) any later version.
#
#    This library is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#    Library General Public License for more details.
#
#    You should have received a copy of the GNU Library General Public License
#    along with this library; see the file COPYING.LIB.  If not, write to
#   the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
#   Boston, MA 02110-1301, USA.
#

#if USE(COORDINATED_GRAPHICS)
messages -> LayerTreeCoordinatorProxy {
    SetCompositingLayerState(uint32_t id, WebKit::WebLayerInfo layerInfo)
    SetCompositingLayerChildren(uint32_t id, Vector<uint32_t> children)
#if ENABLE(CSS_FILTERS)
    SetCompositingLayerFilters(uint32_t id, WebCore::FilterOperations filters)
#endif
#if ENABLE(CSS_SHADERS)
    CreateCustomFilterProgram(int id, WebCore::CustomFilterProgramInfo programInfo)
    RemoveCustomFilterProgram(int id)
#endif
    SetRootCompositingLayer(uint32_t id)
    DeleteCompositingLayer(uint32_t id)
    CreateTileForLayer(uint32_t layerID, int tileID, WebCore::IntRect tileRect, WebKit::SurfaceUpdateInfo updateInfo)
    UpdateTileForLayer(uint32_t layerID, int tileID, WebCore::IntRect tileRect, WebKit::SurfaceUpdateInfo updateInfo)
    RemoveTileForLayer(uint32_t layerID, int tileID)
    CreateUpdateAtlas(int atlasID, WebKit::ShareableSurface::Handle handle)
    RemoveUpdateAtlas(int atlasID)
    CreateImageBacking(uint64_t imageID)
    UpdateImageBacking(uint64_t imageID, WebKit::ShareableSurface::Handle handle)
    ClearImageBackingContents(uint64_t imageID)
    RemoveImageBacking(uint64_t imageID)
    DidRenderFrame(WebCore::IntSize contentsSize, WebCore::IntRect coveredRect)
    DidChangeScrollPosition(WebCore::IntPoint position)
    SetLayerAnimations(uint32_t id, WebCore::GraphicsLayerAnimations animations)
    SetAnimationsLocked(bool locked)

#if ENABLE(REQUEST_ANIMATION_FRAME)
    RequestAnimationFrame()
#endif

#if USE(GRAPHICS_SURFACE)
    CreateCanvas(uint32_t id, WebCore::IntSize canvasSize, WebCore::GraphicsSurfaceToken token)
    SyncCanvas(uint32_t id, uint32_t frontBuffer)
    DestroyCanvas(uint32_t id)
#endif

    SetBackgroundColor(WebCore::Color color)
}
#endif
