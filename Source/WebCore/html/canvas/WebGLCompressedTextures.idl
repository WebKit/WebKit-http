/*
 * Copyright (C) 2011 Google Inc. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1.  Redistributions of source code must retain the above copyright
 *     notice, this list of conditions and the following disclaimer.
 * 2.  Redistributions in binary form must reproduce the above copyright
 *     notice, this list of conditions and the following disclaimer in the
 *     documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS "AS IS" AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

module html {
    interface [
        Conditional=WEBGL,
        GenerateIsReachable=ImplContext,
        OmitConstructor,
        DontCheckEnums
    ] WebGLCompressedTextures {
        /* Compressed Texture Formats */
        const unsigned int COMPRESSED_RGB_S3TC_DXT1_EXT        = 0x83F0;
        const unsigned int COMPRESSED_RGBA_S3TC_DXT1_EXT       = 0x83F1;
        const unsigned int COMPRESSED_RGBA_S3TC_DXT5_EXT       = 0x83F3;
        const unsigned int ETC1_RGB8_OES                       = 0x8D64;
        const unsigned int COMPRESSED_RGB_PVRTC_4BPPV1_IMG     = 0x8C00;
        const unsigned int COMPRESSED_RGBA_PVRTC_4BPPV1_IMG    = 0x8C02;

        [StrictTypeChecking] void compressedTexImage2D(in unsigned long target, in long level, in unsigned long internalformat,
                                                       in long width, in long height, in long border, in ArrayBufferView data);
        [StrictTypeChecking] void compressedTexSubImage2D(in unsigned long target, in long level, in long xoffset, in long yoffset,
                                                          in long width, in long height, in unsigned long format, in ArrayBufferView data);
    };
}
