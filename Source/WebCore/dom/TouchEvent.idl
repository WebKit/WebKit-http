/*
 * Copyright 2008, The Android Open Source Project
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *  * Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE COMPUTER, INC. OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
 * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

module events {

    interface [
        Conditional=TOUCH_EVENTS
    ] TouchEvent : UIEvent {
        readonly attribute TouchList touches;
        readonly attribute TouchList targetTouches;
        readonly attribute TouchList changedTouches;
        readonly attribute boolean ctrlKey;
        readonly attribute boolean shiftKey;
        readonly attribute boolean altKey;
        readonly attribute boolean metaKey;

        void initTouchEvent(in [Optional=CallWithDefaultValue] TouchList touches,
                            in [Optional=CallWithDefaultValue] TouchList targetTouches,
                            in [Optional=CallWithDefaultValue] TouchList changedTouches,
                            in [Optional=CallWithDefaultValue] DOMString type,
                            in [Optional=CallWithDefaultValue] DOMWindow view,
                            in [Optional=CallWithDefaultValue] long screenX, 
                            in [Optional=CallWithDefaultValue] long screenY, 
                            in [Optional=CallWithDefaultValue] long clientX, 
                            in [Optional=CallWithDefaultValue] long clientY,
                            in [Optional=CallWithDefaultValue] boolean ctrlKey,
                            in [Optional=CallWithDefaultValue] boolean altKey,
                            in [Optional=CallWithDefaultValue] boolean shiftKey,
                            in [Optional=CallWithDefaultValue] boolean metaKey);
    };
}
