/*
 * Copyright (C) 2010 Google Inc. All rights reserved.
 * Copyright (C) 2012 Intel Inc. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 *     * Redistributions of source code must retain the above copyright
 * notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above
 * copyright notice, this list of conditions and the following disclaimer
 * in the documentation and/or other materials provided with the
 * distribution.
 *     * Neither the name of Google Inc. nor the names of its
 * contributors may be used to endorse or promote products derived from
 * this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

// See: http://dev.w3.org/2006/webapi/WebTiming/
[
    Conditional=WEB_TIMING,
    EventTarget,
    OmitConstructor
] interface Performance {
    readonly attribute PerformanceNavigation navigation;
    readonly attribute PerformanceTiming timing;
    [V8CustomGetter] readonly attribute MemoryInfo memory;

#if defined(ENABLE_PERFORMANCE_TIMELINE) && ENABLE_PERFORMANCE_TIMELINE
    PerformanceEntryList webkitGetEntries();
    PerformanceEntryList webkitGetEntriesByType(in DOMString entryType);
    PerformanceEntryList webkitGetEntriesByName(in DOMString name, in [Optional=DefaultIsNullString] DOMString entryType);
#endif

#if defined(ENABLE_RESOURCE_TIMING) && ENABLE_RESOURCE_TIMING
    void webkitClearResourceTimings();
    void webkitSetResourceTimingBufferSize(in unsigned long maxSize);

    attribute EventListener onwebkitresourcetimingbufferfull;
#endif

    // See http://www.w3.org/TR/2012/CR-user-timing-20120726/
#if defined(ENABLE_USER_TIMING) && ENABLE_USER_TIMING
    void webkitMark(in DOMString markName)
        raises(DOMException);
    void webkitClearMarks(in [Optional=DefaultIsNullString]  DOMString markName);

    void webkitMeasure(in DOMString measureName, in [Optional=DefaultIsNullString] DOMString startMark, in [Optional=DefaultIsNullString] DOMString endMark)
        raises(DOMException);
    void webkitClearMeasures(in [Optional=DefaultIsNullString] DOMString measureName);
#endif

    // See http://www.w3.org/TR/hr-time/ for details.
    double now();
};

