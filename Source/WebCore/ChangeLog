2011-06-07  Andras Becsi  <abecsi@webkit.org>

        Reviewed by Yury Semikhatsky.
 
        REGRESSION(r88221): "Chromium debug compilation broken".
        https://bugs.webkit.org/show_bug.cgi?id=62197

        No new tests needed.

        * bindings/v8/V8GCController.cpp: Also rename call-sites.
        (WebCore::V8GCController::gcPrologue):
        (WebCore::V8GCController::gcEpilogue):

2011-06-07  MORITA Hajime  <morrita@google.com>

        Unreviewed, rolling out r88212 and r88219.
        http://trac.webkit.org/changeset/88212
        http://trac.webkit.org/changeset/88219
        https://bugs.webkit.org/show_bug.cgi?id=57439

        Tests get timeout at Snow Leopard

        * css/html.css:
        (html:focus, body:focus, input[readonly]:focus):
        * rendering/RenderWidget.cpp:
        (WebCore::RenderWidget::paint):

2011-06-07  Andras Becsi  <abecsi@webkit.org>

        Rubber-stamped by Csaba Osztrogon√°c.

        [Qt][V8] Fix the build after 88221.

        No new tests needed.

        * WebCore.pro: Remove non-existing files.
        * bindings/v8/V8DOMMap.cpp: 
        (WebCore::removeAllDOMObjects): Also rename the definition of the function.

2011-06-06  Dmitry Lomov  <dslomov@google.com>

        Reviewed by Adam Barth.

        https://bugs.webkit.org/show_bug.cgi?id=62164
        Remove "multi-threaded" logic in V8 DOMData, DOMDataStore and friends
        This functionality is untested and unused:
        This is an old code from Lockers-based implementation of WebWorkers in
        V8 bindings, to make sure that DOM objects are released on the right thread
        even though GC could have happened on any thread. It is currently unused (since
        current model is one worker per process) and is being removed because new implementation
        of WebWorkers will be using V8 isolates.

        * WebCore.gypi:
        * bindings/v8/ChildThreadDOMData.cpp: Removed.
        * bindings/v8/ChildThreadDOMData.h: Removed.
        * bindings/v8/DOMData.cpp:
        (WebCore::DOMData::DOMData):
        (WebCore::DOMData::getCurrent):
        (WebCore::DOMData::getMainThreadStore):
        * bindings/v8/DOMData.h:
        (WebCore::DOMData::getStore):
        (WebCore::DOMData::getCurrentMainThreadStore):
        (WebCore::DOMData::handleWeakObject):
        * bindings/v8/DOMDataStore.cpp:
        (WebCore::DOMDataStore::DOMDataStore):
        (WebCore::DOMDataStore::~DOMDataStore):
        (WebCore::DOMDataStore::weakNodeCallback):
        * bindings/v8/DOMDataStore.h:
        * bindings/v8/MainThreadDOMData.cpp: Removed.
        * bindings/v8/MainThreadDOMData.h: Removed.
        * bindings/v8/V8DOMMap.cpp:
        (WebCore::getDOMDataStore):
        (WebCore::visitDOMNodes):
        (WebCore::visitDOMObjects):
        (WebCore::visitActiveDOMObjects):
        (WebCore::visitDOMSVGElementInstances):
        * bindings/v8/V8DOMMap.h:
        * bindings/v8/V8GCController.cpp:
        (WebCore::V8GCController::gcPrologue):
        (WebCore::V8GCController::gcEpilogue):
        * bindings/v8/WorkerScriptController.cpp:
        (WebCore::WorkerScriptController::~WorkerScriptController):

2011-06-06  Nico Weber  <thakis@chromium.org>

        Reviewed by Adam Barth.

        [chromium] Make VideoFrameChromium's destructor virtual
        https://bugs.webkit.org/show_bug.cgi?id=62186

        This fixes a real bug, since WebMediaPlayerClientImpl::putCurrentFrame
        deletes a VideoFrameChromium subclass type through this interface
        class, causing ~VideoFrameChromiumImpl's destructor not to run.
        (VideoFrameChroimumImpl happens to not have a destructor or any
        non-POD member variables, so it's more a latent bug.)

        * platform/graphics/chromium/VideoFrameChromium.cpp:
        (WebCore::VideoFrameChromium::~VideoFrameChromium):
        * platform/graphics/chromium/VideoFrameChromium.h:

2011-06-06  Simon Fraser  <simon.fraser@apple.com>

        Reviewed by Sammy Weinig.

        Remove some unnecessary includes from AnimationBase.cpp
        https://bugs.webkit.org/show_bug.cgi?id=62183

        * page/animation/AnimationBase.cpp:

2011-06-06  Kent Tamura  <tkent@chromium.org>

        Unreviewed, a crash fix by a roll out.

        REGRESSION(r87980): Null pointer dereference in RenderTextControl::setInnerText()
        https://bugs.webkit.org/show_bug.cgi?id=62116

        Roll out the WebCore part of r87980.

        * html/SearchInputType.cpp:
        (WebCore::SearchInputType::SearchInputType):
        (WebCore::SearchInputType::createShadowSubtree):
        (WebCore::SearchInputType::destroyShadowSubtree):
        * html/SearchInputType.h:
        (WebCore::SearchInputType::innerBlockElement):
        (WebCore::SearchInputType::resultsButtonElement):
        (WebCore::SearchInputType::cancelButtonElement):
        * html/TextFieldInputType.cpp:
        (WebCore::TextFieldInputType::TextFieldInputType):
        (WebCore::TextFieldInputType::createShadowSubtree):
        (WebCore::TextFieldInputType::destroyShadowSubtree):
        * html/TextFieldInputType.h:
        (WebCore::TextFieldInputType::innerTextElement):
        (WebCore::TextFieldInputType::innerSpinButtonElement):
        (WebCore::TextFieldInputType::speechButtonElement):
        (WebCore::TextFieldInputType::setInnerTextElement):
        (WebCore::TextFieldInputType::setSpeechButtonElement):
        * html/shadow/TextControlInnerElements.cpp:
        * html/shadow/TextControlInnerElements.h:

2011-06-06  No'am Rosenthal  <noam.rosenthal@nokia.com>

        Reviewed by Simon Fraser.

        Allow copying of KeyframeValueList.
        https://bugs.webkit.org/show_bug.cgi?id=62171

        Make a deep copy of KeyframeValueList, copying each of the keyframes with a virtual clone() function.

        No new functionality so no new tests.

        * platform/graphics/GraphicsLayer.h:
        (WebCore::FloatAnimationValue::clone):
        (WebCore::TransformAnimationValue::TransformAnimationValue):
        (WebCore::TransformAnimationValue::clone):
        (WebCore::TransformAnimationValue::value):
        (WebCore::KeyframeValueList::KeyframeValueList):

2011-06-06  Simon Fraser  <simon.fraser@apple.com>

        Reviewed by Dan Bernstein.

        Incorrect rounding of color values during transitions
        https://bugs.webkit.org/show_bug.cgi?id=62141
        
        When blending integers, round to the nearest integer, instead of always rounding down.

        Test: transitions/color-transition-rounding.html

        * page/animation/AnimationBase.cpp:
        (WebCore::blendFunc):

2011-06-06  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r88202.
        http://trac.webkit.org/changeset/88202
        https://bugs.webkit.org/show_bug.cgi?id=62182

        This broke the mac clang bot (Requested by koz__ on #webkit).

        * dom/Node.cpp:
        (WebCore::Node::hasNonEmptyBoundingBox):
        * rendering/InlineBox.h:
        * rendering/RenderBlock.cpp:
        (WebCore::RenderBlock::absoluteRects):
        * rendering/RenderBlock.h:
        * rendering/RenderBox.cpp:
        (WebCore::RenderBox::absoluteRects):
        * rendering/RenderBox.h:
        * rendering/RenderInline.cpp:
        (WebCore::RenderInline::absoluteRects):
        * rendering/RenderInline.h:
        * rendering/RenderObject.cpp:
        (WebCore::RenderObject::absoluteBoundingBoxRect):
        * rendering/RenderObject.h:
        (WebCore::RenderObject::absoluteRects):
        * rendering/RenderText.cpp:
        (WebCore::RenderText::absoluteRects):
        * rendering/RenderText.h:
        * rendering/RenderView.cpp:
        (WebCore::RenderView::absoluteRects):
        * rendering/RenderView.h:

2011-06-06  Noel Gordon  <noel.gordon@gmail.com>

        Reviewed by Hajime Morita.

        Draw CSS outline style for render widgets: iframe, embed, object, applet.
        https://bugs.webkit.org/show_bug.cgi?id=57439

        Draw CSS outlines for render widgets: iframe, embed, object, applet. These elements can
        be focused (via clicks or tabIndex) but should not have a visible focus ring by default.

        Tests: fast/replaced/no-focus-ring-embed-1.html
               fast/replaced/no-focus-ring-embed-2.html
               fast/replaced/no-focus-ring-iframe.html
               fast/replaced/no-focus-ring-object-1.html
               fast/replaced/no-focus-ring-object-2.html
               fast/replaced/outline-replaced-elements.html

        * css/html.css:
        (applet:focus, embed:focus, iframe:focus, object:focus):  Default to no focus ring.
        * rendering/RenderWidget.cpp:
        (WebCore::RenderWidget::paint): Paint the render widget CSS outline style.

2011-06-06  MORITA Hajime  <morrita@google.com>

        Reviewed by Kent Tamura.

        Assertion fails in TextCheckingHelper by right-clicking on <input type=search>
        https://bugs.webkit.org/show_bug.cgi?id=61991

        Added a guard bofore TextCheckingHelper construction sites.

        Test: editing/spelling/spellcheck-input-search-crash.html

        * editing/Editor.cpp:
        (WebCore::Editor::isSelectionUngrammatical):
        (WebCore::Editor::guessesForUngrammaticalSelection):
        (WebCore::Editor::guessesForMisspelledOrUngrammaticalSelection):

2011-06-06  Emil A Eklund  <eae@chromium.org>

        Reviewed by Eric Seidel.

        Update RenderBlock::paint to use IntPoint internally
        https://bugs.webkit.org/show_bug.cgi?id=62140

        Covered by existing tests.

        * rendering/RenderBlock.cpp:
        (WebCore::RenderBlock::paint):

2011-06-06  Emil A Eklund  <eae@chromium.org>

        Reviewed by Eric Seidel.

        Convert RenderBox::absoluteRects to IntPoint
        https://bugs.webkit.org/show_bug.cgi?id=62130

        Covered by existing tests.

        * dom/Node.cpp:
        (WebCore::Node::hasNonEmptyBoundingBox):
        * rendering/RenderBlock.cpp:
        (WebCore::RenderBlock::absoluteRects):
        * rendering/RenderBlock.h:
        * rendering/RenderBox.cpp:
        (WebCore::RenderBox::absoluteRects):
        * rendering/RenderBox.h:
        * rendering/RenderInline.cpp:
        (WebCore::RenderInline::absoluteRects):
        * rendering/RenderInline.h:
        * rendering/RenderObject.cpp:
        (WebCore::RenderObject::absoluteBoundingBoxRect):
        * rendering/RenderObject.h:
        (WebCore::RenderObject::absoluteRects):
        * rendering/RenderText.cpp:
        (WebCore::RenderText::absoluteRects):
        * rendering/RenderText.h:
        * rendering/RenderView.cpp:
        (WebCore::RenderView::absoluteRects):
        * rendering/RenderView.h:

2011-06-06  Levi Weintraub  <leviw@chromium.org>

        Reviewed by Eric Seidel.

        Switch shouldPaint to use IntPoint
        https://bugs.webkit.org/show_bug.cgi?id=62158

        Switching shouldPaint to take an IntPoint representing the paint offset instead
        of a pair of ints.

        No new tests as this is simple refactoring.

        * rendering/RenderReplaced.cpp:
        (WebCore::RenderReplaced::paint):
        (WebCore::RenderReplaced::shouldPaint):
        * rendering/RenderReplaced.h:
        * rendering/RenderWidget.cpp:
        (WebCore::RenderWidget::paint):

2011-06-06  James Simonsen  <simonjam@chromium.org>

        Reviewed by James Robinson.

        Add monotonicallyIncreasingTime() to get monotonically increasing time
        https://bugs.webkit.org/show_bug.cgi?id=37743

        * platform/chromium/SystemTimeChromium.cpp:
        (WebCore::monotonicallyIncreasingTime): Add primitive monotonicallyIncreasingTime() which just wraps currentTime().

2011-06-06  Emil A Eklund  <eae@chromium.org>

        Reviewed by Eric Seidel.

        Convert RenderBox::pushContentsClip to IntPoint
        https://bugs.webkit.org/show_bug.cgi?id=62133

        Covered by existing tests.

        * rendering/RenderBlock.cpp:
        (WebCore::Covered by existing tests.RenderBlock::paint):
        * rendering/RenderBox.cpp:
        (WebCore::RenderBox::pushContentsClip):
        * rendering/RenderBox.h:
        * rendering/RenderTable.cpp:
        (WebCore::RenderTable::paint):
        * rendering/RenderTableSection.cpp:
        (WebCore::RenderTableSection::paint):

2011-06-06  Levi Weintraub  <leviw@chromium.org>

        Reviewed by Eric Seidel.

        Switch InlineFlowBox::paintMask to use IntPoint
        https://bugs.webkit.org/show_bug.cgi?id=62156

        Switching InlineFlowBox::paintMask to take an IntPoint representing the paint
        offset instead of a pair of ints.

        No new tests as this is simple refactoring.

        * rendering/InlineFlowBox.cpp:
        (WebCore::InlineFlowBox::paint):
        (WebCore::InlineFlowBox::paintMask):
        * rendering/InlineFlowBox.h:

2011-06-06  Emil A Eklund  <eae@chromium.org>

        Reviewed by Eric Seidel.

        Convert hitTest to IntPoint
        https://bugs.webkit.org/show_bug.cgi?id=62144

        Covered by existing tests.

        * rendering/InlineBox.cpp:
        (WebCore::InlineBox::nodeAtPoint):
        * rendering/RenderBlock.cpp:
        (WebCore::RenderBlock::hitTestFloats):
        (WebCore::RenderBlock::hitTestContents):
        * rendering/RenderInline.cpp:
        (WebCore::RenderInline::nodeAtPoint):
        * rendering/RenderLayer.cpp:
        (WebCore::RenderLayer::hitTestContents):
        * rendering/RenderLayer.h:
        (WebCore::RenderLayer::renderBoxLocation):
        (WebCore::RenderLayer::renderBoxX):
        (WebCore::RenderLayer::renderBoxY):
        * rendering/RenderLineBoxList.cpp:
        (WebCore::RenderLineBoxList::hitTest):
        * rendering/RenderLineBoxList.h:
        * rendering/RenderObject.cpp:
        (WebCore::RenderObject::hitTest):
        * rendering/RenderObject.h:

2011-06-06  Levi Weintraub  <leviw@chromium.org>

        Reviewed by Eric Seidel.

        Switch paintScrollbar to use IntPoint
        https://bugs.webkit.org/show_bug.cgi?id=62151

        Switching paintScrollbar to use IntPoint instead of a pair of ints.

        No new tests since this is simple refactoring.

        * rendering/RenderListBox.cpp:
        (WebCore::RenderListBox::paintObject):
        (WebCore::RenderListBox::paintScrollbar):
        * rendering/RenderListBox.h:

2011-06-06  Daniel Cheng  <dcheng@chromium.org>

        Reviewed by Tony Chang.

        [chromium] Delete dead clipboard code.
        https://bugs.webkit.org/show_bug.cgi?id=62113

        No new tests since this change only deleted unused code.

        * WebCore.gypi:
        * platform/chromium/ChromiumDataObjectLegacy.cpp: Removed.
        * platform/chromium/ChromiumDataObjectLegacy.h: Removed.
        * platform/chromium/ReadableDataObject.cpp: Removed.
        * platform/chromium/ReadableDataObject.h: Removed.
        * platform/chromium/WritableDataObject.cpp: Removed.
        * platform/chromium/WritableDataObject.h: Removed.

2011-06-06  Levi Weintraub  <leviw@chromium.org>

        Reviewed by Eric Seidel.

        Switch paintOutline, paintContinuationOutlines, and paintOutlineForLine to use IntPoint
        https://bugs.webkit.org/show_bug.cgi?id=62137

        Switching paintOutline, paintContinuationOutlines, and paintOutlineForLine to take an IntPoint
        representing the paint offset instead of a pair of ints.

        No new tests as this is simple refactoring.

        * rendering/RenderBlock.cpp:
        (WebCore::RenderBlock::paintObject):
        (WebCore::RenderBlock::paintContinuationOutlines):
        * rendering/RenderBlock.h:
        * rendering/RenderInline.cpp:
        (WebCore::RenderInline::paintOutline):
        (WebCore::RenderInline::paintOutlineForLine):
        * rendering/RenderInline.h:
        * rendering/RenderLineBoxList.cpp:
        (WebCore::RenderLineBoxList::paint):

2011-06-06  Emil A Eklund  <eae@chromium.org>

        Reviewed by Eric Seidel.

        Convert RenderBox::popContentsClip to IntPoint
        https://bugs.webkit.org/show_bug.cgi?id=62132

        Covered by existing tests.

        * rendering/RenderBlock.cpp:
        (WebCore::RenderBlock::paint):
        * rendering/RenderBox.cpp:
        (WebCore::RenderBox::popContentsClip):
        * rendering/RenderBox.h:
        * rendering/RenderTable.cpp:
        (WebCore::RenderTable::paint):
        * rendering/RenderTableSection.cpp:
        (WebCore::RenderTableSection::paint):

2011-06-06  Levi Weintraub  <leviw@chromium.org>

        Reviewed by Eric Seidel.

        Remove tx/ty offset from selectionRect
        https://bugs.webkit.org/show_bug.cgi?id=62146

        Removing unused offset parameters from selectionRect.

        No new tests since this is just cleanup.

        * rendering/EllipsisBox.cpp:
        (WebCore::EllipsisBox::selectionRect):
        * rendering/EllipsisBox.h:
        * rendering/InlineTextBox.cpp:
        (WebCore::InlineTextBox::selectionRect):
        * rendering/InlineTextBox.h:
        * rendering/RenderText.cpp:
        (WebCore::RenderText::absoluteRectsForRange):
        (WebCore::ellipsisRectForBox):
        (WebCore::RenderText::absoluteQuadsForRange):
        (WebCore::RenderText::selectionRectForRepaint):
        * rendering/svg/RenderSVGInlineText.cpp:
        (WebCore::RenderSVGInlineText::localCaretRect):
        * rendering/svg/SVGInlineTextBox.cpp:
        (WebCore::SVGInlineTextBox::selectionRect):
        * rendering/svg/SVGInlineTextBox.h:

2011-06-06  Paul Kinlan  <paulkinlan@google.com>

        Reviewed by Jeremy Orlow.

        Let developers call createEvent("PopStateEvent"), previously it wasn't
        exposed and threw an exeception. 
        https://bugs.webkit.org/show_bug.cgi?id=62099

        * WebCore/dom/Document.cpp:
        * WebCore/dom/PopStateEvent.cpp:
        * WebCore/dom/PopStateEvent.h:

2011-06-03  Levi Weintraub  <leviw@chromium.org>

        Reviewed by Eric Seidel.

        Switch paintSelection to use IntPoint
        https://bugs.webkit.org/show_bug.cgi?id=62059

        Switching paintSelection to use an IntPoint to represent the paint offset
        instead of a pair of ints.

        No new tests since this is simple refactoring.

        * rendering/EllipsisBox.cpp:
        (WebCore::EllipsisBox::paint):
        (WebCore::EllipsisBox::paintSelection):
        * rendering/EllipsisBox.h:
        * rendering/RenderBlock.cpp:
        (WebCore::RenderBlock::paintObject):
        (WebCore::RenderBlock::paintSelection):
        * rendering/RenderBlock.h:

2011-06-06  Emil A Eklund  <eae@chromium.org>

        Reviewed by Eric Seidel.

        Convert RenderBox::clipRect to IntPoint
        https://bugs.webkit.org/show_bug.cgi?id=62045

        Covered by existing tests.

        * rendering/RenderBox.cpp:
        (WebCore::RenderBox::clipRect):
        * rendering/RenderBox.h:
        * rendering/RenderLayer.cpp:
        (WebCore::RenderLayer::calculateClipRects):
        (WebCore::RenderLayer::calculateRects):
        (WebCore::RenderLayer::repaintBlockSelectionGaps):
        * rendering/RenderLayerBacking.cpp:
        (WebCore::clipBox):

2011-06-06  Peter Kasting  <pkasting@google.com>

        Reviewed by Antonio Gomes.

        Remove unnecessary args from scroll functions.
        https://bugs.webkit.org/show_bug.cgi?id=61648

        No behavior change, so no tests.

        * WebCore.exp.in:
        * WebCore.order:
        * dom/Element.cpp:
        (WebCore::Element::scrollIntoView):
        (WebCore::Element::scrollIntoViewIfNeeded):
        * editing/FrameSelection.cpp:
        (WebCore::FrameSelection::revealSelection):
        * page/EventHandler.cpp:
        (WebCore::EventHandler::handleMousePressEvent):
        * page/FrameView.cpp:
        (WebCore::FrameView::scrollToAnchor):
        * rendering/RenderBox.cpp:
        (WebCore::RenderBox::canBeScrolledAndHasScrollableArea):
        (WebCore::RenderBox::canBeProgramaticallyScrolled):
        * rendering/RenderBox.h:
        * rendering/RenderLayer.cpp:
        (WebCore::RenderLayer::scrollRectToVisible):
        (WebCore::RenderLayer::autoscroll):
        * rendering/RenderLayer.h:
        * rendering/RenderListBox.h:
        (WebCore::RenderListBox::canBeProgramaticallyScrolled):
        * rendering/RenderTextControl.h:
        (WebCore::RenderTextControl::canBeProgramaticallyScrolled):

2011-06-06  Levi Weintraub  <leviw@chromium.org>

        Reviewed by Eric Seidel.

        Switch paintContents, paintColumnContents, paintColumnRules, and paintSelection to use IntPoint
        https://bugs.webkit.org/show_bug.cgi?id=62134

        Switching paintContents, paintColumnContents, paintColumnRules, and paintSelection to take an
        IntPoint representing the paint offset instead of a pair of ints.

        No new tests as this simple refactoring.

        * rendering/RenderBlock.cpp:
        (WebCore::RenderBlock::paintColumnRules):
        (WebCore::RenderBlock::paintColumnContents):
        (WebCore::RenderBlock::paintContents):
        (WebCore::RenderBlock::paintObject):
        (WebCore::RenderBlock::paintSelection):
        * rendering/RenderBlock.h:

2011-06-06  Yael Aharon  <yael.aharon@nokia.com>

        Reviewed by Eric Seidel.

        Inline elements are wrapped prematurely with non-zero border, margin or padding.
        https://bugs.webkit.org/show_bug.cgi?id=60459

        When an inline element has a right border/margin/padding and it has more than one descendant with no siblings,
        the width of the right border/margin/padding should be included in line breaking calculation only once,
        and not for each descendant.

        Test: fast/inline/inline-wrap-with-parent-padding.html

        * rendering/RenderBlockLineLayout.cpp:
        (WebCore::RenderBlock::LineBreaker::nextLineBreak):

2011-06-06  Shishir Agrawal  <shishir@chromium.org>

        Reviewed by Tony Gentilcore.

        Add a "prerender" state for page visibility.
        https://bugs.webkit.org/show_bug.cgi?id=62062

        * page/PageVisibilityState.cpp:
        (WebCore::pageVisibilityStateString):
        * page/PageVisibilityState.h:

2011-06-06  Cary Clark  <caryclark@google.com>

        Reviewed by Eric Seidel.

        Fix typo in CachedFont.cpp #define
        https://bugs.webkit.org/show_bug.cgi?id=62127

        No new tests. The define typo in question is
        not yet enabled, so this change has no functional
        impact.

        * loader/cache/CachedFont.cpp:
        change SKIA_MAC_ON_CHROME to SKIA_ON_MAC_CHROME

2011-06-03  Levi Weintraub  <leviw@chromium.org>

        Reviewed by Eric Seidel.

        Switch paintFloats, paintChildren, and paintEllipsisBoxes to use IntPoint
        https://bugs.webkit.org/show_bug.cgi?id=62058

        Switching paintFloats, paintChildren, and paintEllipsisBoxes to take IntPoints representing
        their paint offsets instead of pairs of ints.

        No new tests since this is simple refactoring.

        * rendering/RenderBlock.cpp:
        (WebCore::RenderBlock::paintColumnContents):
        (WebCore::RenderBlock::paintContents):
        (WebCore::RenderBlock::paintChildren):
        (WebCore::RenderBlock::paintObject):
        (WebCore::RenderBlock::paintFloats):
        (WebCore::RenderBlock::paintEllipsisBoxes):
        * rendering/RenderBlock.h:

2011-06-06  Steve Block  <steveblock@google.com>

        Reviewed by Yury Semikhatsky.

        Use of ENABLE(INSPECTOR) is inconsistent
        https://bugs.webkit.org/show_bug.cgi?id=62118

        Correctly guard implementation of ScriptProfiler.

        No new tests, build fix only.

        * bindings/v8/ScriptProfiler.cpp:
        (WebCore::ScriptProfiler::initialize):

2011-06-04  Dominic Cooney  <dominicc@chromium.org>

        Reviewed by Dimitri Glazkov.

        Add WebCoreTestSupport project.
        https://bugs.webkit.org/show_bug.cgi?id=61076

        * WebCore.vcproj/WebCoreCommon.vsprops:
        * WebCore.vcproj/WebCoreTestSupport.vcproj: Added.
        * WebCore.vcproj/copyForwardingHeaders.cmd: Copy WebCoreTestSupport.h.

2011-06-06  Alexandru Chiculita  <achicu@adobe.com>

        Reviewed by Kent Tamura.

        Add ENABLE_CSS_EXCLUSIONS support for build-webkit script
        https://bugs.webkit.org/show_bug.cgi?id=61628

        This patch modifies only the build system. Therefore,
        there are no new tests.

        * Configurations/FeatureDefines.xcconfig:

2011-06-06  Mihnea Ovidenie  <mihnea@adobe.com>

        Reviewed by Kent Tamura.

        Add ENABLE(CSS_REGIONS) guard for CSS Regions support
        https://bugs.webkit.org/show_bug.cgi?id=61631
        
        This patch modifies only the build system. Therefore,
        there are no new tests.

        * Configurations/FeatureDefines.xcconfig:

2011-06-03  Hans Wennborg  <hans@chromium.org>

        Reviewed by Tony Gentilcore.

        IndexedDB: Clean-up function prototypes in IDBLevelDBBackingStore.cpp
        https://bugs.webkit.org/show_bug.cgi?id=62013

        Clean up the prototypes for cursor open functions by introducing the
        CursorOptions struct.

        Just clean-up, no new functionality so no new tests.

        * storage/IDBLevelDBBackingStore.cpp:
        (WebCore::CursorOptions::CursorImplCommon::CursorImplCommon):
        (WebCore::CursorOptions::CursorImplCommon::firstSeek):
        (WebCore::CursorOptions::CursorImplCommon::continueFunction):
        (WebCore::CursorOptions::ObjectStoreCursorImpl::create):
        (WebCore::CursorOptions::ObjectStoreCursorImpl::ObjectStoreCursorImpl):
        (WebCore::CursorOptions::IndexKeyCursorImpl::create):
        (WebCore::CursorOptions::IndexKeyCursorImpl::IndexKeyCursorImpl):
        (WebCore::CursorOptions::IndexCursorImpl::create):
        (WebCore::CursorOptions::IndexCursorImpl::IndexCursorImpl):
        (WebCore::IDBLevelDBBackingStore::openObjectStoreCursor):
        (WebCore::IDBLevelDBBackingStore::openIndexKeyCursor):
        (WebCore::IDBLevelDBBackingStore::openIndexCursor):

2011-06-06  Mustafizur Rahaman  <mustaf.here@gmail.com>

        Reviewed by Darin Adler.

        Fix LayoutTests/canvas/philip/tests/2d.composite.operation.highlight.html
        https://bugs.webkit.org/show_bug.cgi?id=48290
        
        "highlight" is not a valid globalComposite operation
        as per http://www.w3.org/TR/2011/WD-2dcontext-20110525/#compositing
        Therefore, removed the option from the source code.
        
        Tests: No new tests required.
        LayoutTests\canvas\philip\tests\2d.composite.operation.highlight.html can be used for testing.

        * css/CSSPrimitiveValueMappings.h:
        (WebCore::CSSPrimitiveValue::CSSPrimitiveValue):
        (WebCore::CSSPrimitiveValue::operator CompositeOperator):
        * platform/graphics/GraphicsTypes.cpp:
        * platform/graphics/GraphicsTypes.h:
        * platform/graphics/cairo/CairoUtilities.cpp:
        (WebCore::toCairoOperator):
        * platform/graphics/cg/GraphicsContextCG.cpp:
        (WebCore::GraphicsContext::setPlatformCompositeOperation):
        * platform/graphics/gpu/SharedGraphicsContext3D.cpp:
        (WebCore::SharedGraphicsContext3D::applyCompositeOperator):
        * platform/graphics/openvg/PainterOpenVG.cpp:
        (WebCore::PlatformPainterState::applyBlending):
        * platform/graphics/qt/GraphicsContextQt.cpp:
        (WebCore::toQtCompositionMode):
        * platform/graphics/skia/SkiaUtils.cpp:

2011-06-04  Abhishek Arya  <inferno@chromium.org>

        Reviewed by Kent Tamura.

        Add some asserts for array boundary checks in TextRun. Fix
        an integer issue in linux text controller code.
        https://bugs.webkit.org/show_bug.cgi?id=62085

        Testing ComplexTextControllerLinux change requires a testcase
        > 32 kb which is not feasible. All other changes are tested by
        existing layouttests.

        * platform/graphics/TextRun.h:
        (WebCore::TextRun::operator[]): add assert.
        (WebCore::TextRun::data): add assert.
        * platform/graphics/WidthIterator.cpp:
        (WebCore::WidthIterator::advance): bail early and prevent access
        to one byte across the text run boundary.
        * platform/graphics/chromium/ComplexTextControllerLinux.cpp:
        (WebCore::ComplexTextController::getNormalizedTextRun): wrong
        int16 vs int comparison.
        * rendering/svg/SVGTextRunRenderingContext.cpp:
        (WebCore::SVGTextRunWalker::walk): bail early when from and to
        is outside the text run boundary. this hit easily after adding
        the assert when from = to = end and read in run.data(from). 

2011-06-05  Kent Tamura  <tkent@chromium.org>

        Reviewed by Dimitri Glazkov.

        Rolling out r84528.
        http://trac.webkit.org/changeset/84528
        https://bugs.webkit.org/show_bug.cgi?id=62100

        It made several problems on elements with new shadow DOM.

        * dom/Element.cpp:
        (WebCore::Element::copyNonAttributeProperties):

2011-06-05  Igor Oliveira  <igor.oliveira@openbossa.org>

        Reviewed by Kenneth Rohde Christiansen.

        fast/viewport/viewport-45.html fails in GTK+/Qt
        https://bugs.webkit.org/show_bug.cgi?id=47481

        computeViewportAttributes does many math operations with float point arithmetic
        and in some cases there is loss of precision making tests have incorrect values.

        * dom/ViewportArguments.cpp:
        (WebCore::computeViewportAttributes):

== Rolled over to ChangeLog-2011-06-04 ==
