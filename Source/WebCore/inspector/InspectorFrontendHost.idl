/*
 * Copyright (C) 2007, 2008 Apple Inc. All rights reserved.
 * Copyright (C) 2008 Matt Lilek <webkit@mattlilek.com>
 * Copyright (C) 2009 Google Inc. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 *     * Redistributions of source code must retain the above copyright
 * notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above
 * copyright notice, this list of conditions and the following disclaimer
 * in the documentation and/or other materials provided with the
 * distribution.
 *     * Neither the name of Google Inc. nor the names of its
 * contributors may be used to endorse or promote products derived from
 * this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

module core {
    interface [
        Conditional=INSPECTOR
    ] InspectorFrontendHost {
        void loaded();
        void closeWindow();
        void bringToFront();
        void setZoomFactor(in float zoom);
        void inspectedURLChanged(in DOMString newURL);

        void requestAttachWindow();
        void requestDetachWindow();
        void requestSetDockSide(in DOMString side);
        void setAttachedWindowHeight(in unsigned long height);
        void moveWindowBy(in float x, in float y);
        void setInjectedScriptForOrigin(in DOMString origin, in DOMString script);

        DOMString localizedStringsURL();
        DOMString hiddenPanels();

        void copyText(in DOMString text);
        void openInNewTab(in DOMString url);
        boolean canSave();
        void save(in DOMString url, in DOMString content, in boolean forceSaveAs);
        void append(in DOMString url, in DOMString content);

        boolean canInspectWorkers();

        [Custom] DOMString platform();
        [Custom] DOMString port();
        [Custom] void showContextMenu(in MouseEvent event, in DOMObject items);
        void sendMessageToBackend(in DOMString message);

        [Custom] void recordActionTaken(in unsigned long actionCode);
        [Custom] void recordPanelShown(in unsigned long panelCode);
        [Custom] void recordSettingChanged(in unsigned long settingChanged);
        
        DOMString loadResourceSynchronously(in DOMString url);
    };
}
