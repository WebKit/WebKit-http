/*
 * Copyright (C) 2007, 2008 Apple Inc. All rights reserved.
 * Copyright (C) 2008 Matt Lilek <webkit@mattlilek.com>
 * Copyright (C) 2009 Google Inc. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 *     * Redistributions of source code must retain the above copyright
 * notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above
 * copyright notice, this list of conditions and the following disclaimer
 * in the documentation and/or other materials provided with the
 * distribution.
 *     * Neither the name of Google Inc. nor the names of its
 * contributors may be used to endorse or promote products derived from
 * this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

[
    NoInterfaceObject,
    Conditional=INSPECTOR,
    ImplementationLacksVTable
] interface InspectorFrontendHost {
    void loaded();
    void closeWindow();
    void bringToFront();
    void setZoomFactor(unrestricted float zoom);
    void inspectedURLChanged(DOMString newURL);

    void requestSetDockSide(DOMString side);

    void setAttachedWindowHeight(unsigned long height);
    void setAttachedWindowWidth(unsigned long width);
    void setToolbarHeight(unrestricted float height);

    void moveWindowBy(unrestricted float x, unrestricted float y);

    DOMString localizedStringsURL();
    DOMString debuggableType();

    void copyText(DOMString text);
    void openInNewTab(DOMString url);
    boolean canSave();
    void save(DOMString url, DOMString content, boolean base64Encoded, boolean forceSaveAs);
    void append(DOMString url, DOMString content);
    void close(DOMString url);

    [Custom] DOMString platform();
    [Custom] DOMString port();
    [Custom] void showContextMenu(MouseEvent event, any items);
    void dispatchEventAsContextMenuEvent(Event event);
    void sendMessageToBackend(DOMString message);

    [Custom] void recordActionTaken(unsigned long actionCode);
    [Custom] void recordPanelShown(unsigned long panelCode);
    [Custom] void recordSettingChanged(unsigned long settingChanged);

    boolean isUnderTest();

    void beep();

    // Deprecated
    boolean canInspectWorkers();
    boolean canSaveAs();
};
