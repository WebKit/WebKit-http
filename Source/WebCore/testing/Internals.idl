/*
 * Copyright (C) 2011 Google Inc. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1.  Redistributions of source code must retain the above copyright
 *     notice, this list of conditions and the following disclaimer.
 * 2.  Redistributions in binary form must reproduce the above copyright
 *     notice, this list of conditions and the following disclaimer in the
 *     documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS "AS IS" AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

module window {
    interface [
        OmitConstructor
    ] Internals {
        DOMString elementRenderTreeAsText(in Element element) raises(DOMException);
        boolean isPreloaded(in Document document, in DOMString url);

        Node ensureShadowRoot(in Element host) raises (DOMException);
        Node shadowRoot(in Element host) raises (DOMException);
        Element includerFor(in Node node) raises (DOMException);
        void removeShadowRoot(in Element host) raises (DOMException);
        DOMString shadowPseudoId(in Element element) raises (DOMException);
        Element createShadowContentElement(in Document document) raises(DOMException);
        Element getElementByIdInShadowRoot(in Node shadowRoot, in DOMString id) raises(DOMException);
        void disableMemoryCache(in boolean disabled);

        void setInspectorResourcesDataSizeLimits(in Document document, in long maximumResourcesContentSize, in long maximumSingleResourceContentSize) raises(DOMException);

        ClientRect boundingBox(in Element element) raises(DOMException);

        void setForceCompositingMode(in Document document, in boolean enabled) raises(DOMException);
    };
}

