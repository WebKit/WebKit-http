This tests element's undoscope attribute.

PASS An element has the undoscope attribute set to true. 
PASS element.undoManager returns an UndoManager object. 
PASS After element.undoScope = false, element.undoManager returns null. 
PASS After element.undoScope = true, element.undoManager returns an UndoManager object. 
PASS After element.removeAttribute('undoscope'), element.undoManager returns null. 
PASS After element.setAttribute('undoscope', ''), element.undoManager returns an UndoManager object. 
PASS After element.setAttribute('undoscope', 'undoscope'), element.undoManager returns an UndoManager object. 
PASS After element.setAttribute('undoscope', ''); element.undoScope = false;, element.undoManager returns null. 
PASS After element.removeAttribute('undoscope'); element.undoScope = true;, element.undoManager returns an UndoManager object. 
PASS After element.undoScope = true; element.removeAttribute('undoscope');, element.undoManager returns null. 
PASS After element.undoScope = false; element.setAttribute('undoscope', '');, element.undoManager returns an UndoManager object. 
PASS After the parant of element becomes editable, element.undoManager returns null. 
PASS After the parant of element becomes non-editable, element.undoManager returns an UndoManager object. 
PASS After the parant of element becomes editable through inheritance, element.undoManager returns null. 
PASS After the parant of element becomes non-editable and element becomes editable, element.undoManager returns an UndoManager object. 
PASS element.undoManager is disconnected when element.undoScope = false. 
PASS element.undoManager is disconnected when its parent becomes editable. 
PASS Setting contentEditable of an ancestor of element to true doesn't disconnect element.undoManager if element is still an editing host. 

