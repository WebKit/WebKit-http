 




        
  



PASS Passing an element which is not a submit button should throw 
FAIL Passing a submit button not owned by the context object should throw assert_throws_dom: function "() => {
    form.requestSubmit(submitButton);
  }" threw object "TypeError: form.requestSubmit is not a function. (In 'form.requestSubmit(submitButton)', 'form.requestSubmit' is undefined)" that is not a DOMException NotFoundError: property "code" is equal to undefined, expected 8
FAIL requestSubmit() should accept button[type=submit], input[type=submit], and input[type=image] form.requestSubmit is not a function. (In 'form.requestSubmit(control)', 'form.requestSubmit' is undefined)
FAIL requestSubmit() should trigger interactive form validation form.requestSubmit is not a function. (In 'form.requestSubmit()', 'form.requestSubmit' is undefined)
FAIL requestSubmit() doesn't run form submission reentrantly form.requestSubmit is not a function. (In 'form.requestSubmit()', 'form.requestSubmit' is undefined)
FAIL requestSubmit() doesn't run interactive validation reentrantly form.requestSubmit is not a function. (In 'form.requestSubmit()', 'form.requestSubmit' is undefined)
FAIL requestSubmit() for a disconnected form should not submit the form form.requestSubmit is not a function. (In 'form.requestSubmit()', 'form.requestSubmit' is undefined)
FAIL The value of the submitter should be appended, and form* attributes of the submitter should be handled. form.requestSubmit is not a function. (In 'form.requestSubmit(form.querySelector('[type=submit]'))', 'form.requestSubmit' is undefined)

