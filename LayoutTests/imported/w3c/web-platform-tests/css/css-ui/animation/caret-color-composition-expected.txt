
FAIL Compositing: property <caret-color> underlying [rgb(50, 50, 50)] from add [rgb(100, 100, 100)] to add [rgb(200, 200, 200)] at (-0.3) should be [rgb(120, 120, 120)] assert_equals: expected "rgb ( 120 , 120 , 120 ) " but got "rgb ( 70 , 70 , 70 ) "
FAIL Compositing: property <caret-color> underlying [rgb(50, 50, 50)] from add [rgb(100, 100, 100)] to add [rgb(200, 200, 200)] at (0) should be [rgb(150, 150, 150)] assert_equals: expected "rgb ( 150 , 150 , 150 ) " but got "rgb ( 100 , 100 , 100 ) "
FAIL Compositing: property <caret-color> underlying [rgb(50, 50, 50)] from add [rgb(100, 100, 100)] to add [rgb(200, 200, 200)] at (0.5) should be [rgb(200, 200, 200)] assert_equals: expected "rgb ( 200 , 200 , 200 ) " but got "rgb ( 150 , 150 , 150 ) "
FAIL Compositing: property <caret-color> underlying [rgb(50, 50, 50)] from add [rgb(100, 100, 100)] to add [rgb(200, 200, 200)] at (1) should be [rgb(250, 250, 250)] assert_equals: expected "rgb ( 250 , 250 , 250 ) " but got "rgb ( 200 , 200 , 200 ) "
FAIL Compositing: property <caret-color> underlying [rgb(50, 50, 50)] from add [rgb(100, 100, 100)] to add [rgb(200, 200, 200)] at (1.5) should be [rgb(255, 255, 255)] assert_equals: expected "rgb ( 255 , 255 , 255 ) " but got "rgb ( 250 , 250 , 250 ) "
PASS Compositing: property <caret-color> underlying [auto] from add [rgb(100, 100, 100)] to add [rgb(200, 200, 200)] at (-0.3) should be [rgb(70, 70, 70)] 
PASS Compositing: property <caret-color> underlying [auto] from add [rgb(100, 100, 100)] to add [rgb(200, 200, 200)] at (0) should be [rgb(100, 100, 100)] 
PASS Compositing: property <caret-color> underlying [auto] from add [rgb(100, 100, 100)] to add [rgb(200, 200, 200)] at (0.5) should be [rgb(150, 150, 150)] 
PASS Compositing: property <caret-color> underlying [auto] from add [rgb(100, 100, 100)] to add [rgb(200, 200, 200)] at (1) should be [rgb(200, 200, 200)] 
PASS Compositing: property <caret-color> underlying [auto] from add [rgb(100, 100, 100)] to add [rgb(200, 200, 200)] at (1.5) should be [rgb(250, 250, 250)] 

