
PASS global setup 
PASS Service Worker headers in the request of a fetch event 
PASS Service Worker responds to fetch event with string 
PASS Service Worker responds to fetch event using request fragment with string 
PASS Service Worker responds to fetch event with blob body 
PASS Service Worker responds to fetch event with the referrer URL 
PASS Service Worker responds to fetch event with an existing client id 
FAIL Service Worker responds to fetch event with the correct resulting client id assert_equals: Service Worker should respond with an empty resulting client id for subresource requests expected "Resulting Client ID Not Found" but got "Resulting Client ID Found: undefined"
PASS Service Worker does not respond to fetch event 
PASS Service Worker responds to fetch event with null response body 
PASS Service Worker fetches other file in fetch event 
PASS Service Worker responds to fetch event with POST form 
PASS Service Worker falls back to network in fetch event with POST form 
PASS Multiple calls of respondWith must throw InvalidStateErrors 
PASS Service Worker event.respondWith must set the used flag 
PASS Service Worker should expose FetchEvent URL fragments. 
FAIL Service Worker responds to fetch event with the correct cache types assert_equals: expected "no-cache" but got "default"
PASS Service Worker should intercept EventSource 
PASS Service Worker responds to fetch event with the correct integrity_metadata 
PASS FetchEvent#body is a string 
FAIL FetchEvent#body is a ReadableStream promise_test: Unhandled rejection with value: object "ReferenceError: Can't find variable: TextEncoderStream"
PASS FetchEvent#body is a string and is passed to network fallback 
PASS FetchEvent#body is a blob 
PASS FetchEvent#body is a blob and is passed to network fallback 
PASS Service Worker responds to fetch event with the correct keepalive value 
FAIL FetchEvent#request.isReloadNavigation is true (location.reload()) assert_equals: expected "method = GET, isReloadNavigation = false" but got "method = GET, isReloadNavigation = undefined"
FAIL FetchEvent#request.isReloadNavigation is true (history.go(0)) assert_equals: expected "method = GET, isReloadNavigation = false" but got "method = GET, isReloadNavigation = undefined"
FAIL FetchEvent#request.isReloadNavigation is true (POST + location.reload()) assert_equals: expected "method = GET, isReloadNavigation = false" but got "method = GET, isReloadNavigation = undefined"
FAIL FetchEvent#request.isReloadNavigation is true (with history traversal) assert_equals: expected "method = GET, isReloadNavigation = false" but got "method = GET, isReloadNavigation = undefined"
FAIL FetchEvent#request.isHistoryNavigation is true (with history.go(-1)) assert_equals: expected "method = GET, isHistoryNavigation = false" but got "method = GET, isHistoryNavigation = undefined"
FAIL FetchEvent#request.isHistoryNavigation is true (with history.go(1)) assert_equals: expected "method = GET, isHistoryNavigation = false" but got "method = GET, isHistoryNavigation = undefined"
FAIL FetchEvent#request.isHistoryNavigation is false (with history.go(0)) assert_equals: expected "method = GET, isHistoryNavigation = false" but got "method = GET, isHistoryNavigation = undefined"
FAIL FetchEvent#request.isHistoryNavigation is false (with location.reload) assert_equals: expected "method = GET, isHistoryNavigation = false" but got "method = GET, isHistoryNavigation = undefined"
FAIL FetchEvent#request.isHistoryNavigation is true (with history.go(-2)) assert_equals: expected "method = GET, isHistoryNavigation = false" but got "method = GET, isHistoryNavigation = undefined"
FAIL FetchEvent#request.isHistoryNavigation is true (with history.go(2)) assert_equals: expected "method = GET, isHistoryNavigation = false" but got "method = GET, isHistoryNavigation = undefined"
FAIL FetchEvent#request.isHistoryNavigation is true (POST + history.go(-1)) assert_equals: expected "method = GET, isHistoryNavigation = false" but got "method = GET, isHistoryNavigation = undefined"
PASS restore global state 

