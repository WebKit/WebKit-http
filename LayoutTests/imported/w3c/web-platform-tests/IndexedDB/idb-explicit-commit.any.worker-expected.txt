
FAIL Explicitly committed data can be read back out. promise_test: Unhandled rejection with value: object "TypeError: txn.commit is not a function. (In 'txn.commit()', 'txn.commit' is undefined)"
FAIL commit() on a version change transaction does not cause errors. txn.commit is not a function. (In 'txn.commit()', 'txn.commit' is undefined)
FAIL A committed transaction becomes inactive immediately. promise_test: Unhandled rejection with value: object "TypeError: txn.commit is not a function. (In 'txn.commit()', 'txn.commit' is undefined)"
FAIL A committed transaction is inactive in future request callbacks. promise_test: Unhandled rejection with value: object "TypeError: txn.commit is not a function. (In 'txn.commit()', 'txn.commit' is undefined)"
FAIL Puts issued after commit are not fulfilled. promise_test: Unhandled rejection with value: object "TypeError: txn.commit is not a function. (In 'txn.commit()', 'txn.commit' is undefined)"
FAIL Calling commit on an aborted transaction throws. assert_throws_dom: The transaction should have been aborted. function "() => { txn.commit(); }" threw object "TypeError: txn.commit is not a function. (In 'txn.commit()', 'txn.commit' is undefined)" that is not a DOMException InvalidStateError: property "code" is equal to undefined, expected 11
FAIL Calling commit on a committed transaction throws. promise_test: Unhandled rejection with value: object "TypeError: txn.commit is not a function. (In 'txn.commit()', 'txn.commit' is undefined)"
FAIL Calling abort on a committed transaction throws and does not prevent persisting the data. promise_test: Unhandled rejection with value: object "TypeError: txn.commit is not a function. (In 'txn.commit()', 'txn.commit' is undefined)"
FAIL Calling txn.commit() when txn is inactive should throw. assert_throws_dom: The transaction should be inactive so calling commit should throw. function "() => { txn.commit(); }" threw object "TypeError: txn.commit is not a function. (In 'txn.commit()', 'txn.commit' is undefined)" that is not a DOMException InvalidStateError: property "code" is equal to undefined, expected 11
FAIL Transactions with same scope should stay in program order, even if one calls commit. promise_test: Unhandled rejection with value: object "TypeError: txn2.commit is not a function. (In 'txn2.commit()', 'txn2.commit' is undefined)"
FAIL Transactions that explicitly commit and have errors should abort. promise_test: Unhandled rejection with value: object "TypeError: txn1.commit is not a function. (In 'txn1.commit()', 'txn1.commit' is undefined)"
FAIL Transactions that handle all errors properly should behave as expected when an explicit commit is called in an onerror handler. promise_test: Unhandled rejection with value: object "TypeError: txn1.commit is not a function. (In 'txn1.commit()', 'txn1.commit' is undefined)"

