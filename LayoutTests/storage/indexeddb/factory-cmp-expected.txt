Test IndexedDB key comparison using IDBFactory.cmp().

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


indexedDB = window.indexedDB || window.webkitIndexedDB || window.mozIndexedDB;
PASS indexedDB == null is false
IDBDatabaseException = window.IDBDatabaseException || window.webkitIDBDatabaseException;
PASS IDBDatabaseException == null is false
PASS typeof indexedDB.cmp === 'function' is true

compare valid keys
PASS indexedDB.cmp(-Infinity,-Number.MAX_VALUE) === -1 is true
PASS indexedDB.cmp(-Number.MAX_VALUE,-Infinity) === 1 is true
PASS indexedDB.cmp(-Infinity,-Infinity) === 0 is true
PASS indexedDB.cmp(-Number.MAX_VALUE,-Number.MAX_VALUE) === 0 is true
PASS indexedDB.cmp(-Number.MAX_VALUE,-1) === -1 is true
PASS indexedDB.cmp(-1,-Number.MAX_VALUE) === 1 is true
PASS indexedDB.cmp(-Number.MAX_VALUE,-Number.MAX_VALUE) === 0 is true
PASS indexedDB.cmp(-1,-1) === 0 is true
PASS indexedDB.cmp(-1,-Number.MIN_VALUE) === -1 is true
PASS indexedDB.cmp(-Number.MIN_VALUE,-1) === 1 is true
PASS indexedDB.cmp(-1,-1) === 0 is true
PASS indexedDB.cmp(-Number.MIN_VALUE,-Number.MIN_VALUE) === 0 is true
PASS indexedDB.cmp(-Number.MIN_VALUE,0) === -1 is true
PASS indexedDB.cmp(0,-Number.MIN_VALUE) === 1 is true
PASS indexedDB.cmp(-Number.MIN_VALUE,-Number.MIN_VALUE) === 0 is true
PASS indexedDB.cmp(0,0) === 0 is true
PASS indexedDB.cmp(0,Number.MIN_VALUE) === -1 is true
PASS indexedDB.cmp(Number.MIN_VALUE,0) === 1 is true
PASS indexedDB.cmp(0,0) === 0 is true
PASS indexedDB.cmp(Number.MIN_VALUE,Number.MIN_VALUE) === 0 is true
PASS indexedDB.cmp(Number.MIN_VALUE,1) === -1 is true
PASS indexedDB.cmp(1,Number.MIN_VALUE) === 1 is true
PASS indexedDB.cmp(Number.MIN_VALUE,Number.MIN_VALUE) === 0 is true
PASS indexedDB.cmp(1,1) === 0 is true
PASS indexedDB.cmp(1,Number.MAX_VALUE) === -1 is true
PASS indexedDB.cmp(Number.MAX_VALUE,1) === 1 is true
PASS indexedDB.cmp(1,1) === 0 is true
PASS indexedDB.cmp(Number.MAX_VALUE,Number.MAX_VALUE) === 0 is true
PASS indexedDB.cmp(Number.MAX_VALUE,Infinity) === -1 is true
PASS indexedDB.cmp(Infinity,Number.MAX_VALUE) === 1 is true
PASS indexedDB.cmp(Number.MAX_VALUE,Number.MAX_VALUE) === 0 is true
PASS indexedDB.cmp(Infinity,Infinity) === 0 is true
PASS indexedDB.cmp(Infinity,new Date(0)) === -1 is true
PASS indexedDB.cmp(new Date(0),Infinity) === 1 is true
PASS indexedDB.cmp(Infinity,Infinity) === 0 is true
PASS indexedDB.cmp(new Date(0),new Date(0)) === 0 is true
PASS indexedDB.cmp(new Date(0),new Date(1000)) === -1 is true
PASS indexedDB.cmp(new Date(1000),new Date(0)) === 1 is true
PASS indexedDB.cmp(new Date(0),new Date(0)) === 0 is true
PASS indexedDB.cmp(new Date(1000),new Date(1000)) === 0 is true
PASS indexedDB.cmp(new Date(1000),new Date(1317399931023)) === -1 is true
PASS indexedDB.cmp(new Date(1317399931023),new Date(1000)) === 1 is true
PASS indexedDB.cmp(new Date(1000),new Date(1000)) === 0 is true
PASS indexedDB.cmp(new Date(1317399931023),new Date(1317399931023)) === 0 is true
PASS indexedDB.cmp(new Date(1317399931023),'') === -1 is true
PASS indexedDB.cmp('',new Date(1317399931023)) === 1 is true
PASS indexedDB.cmp(new Date(1317399931023),new Date(1317399931023)) === 0 is true
PASS indexedDB.cmp('','') === 0 is true
PASS indexedDB.cmp('','\0') === -1 is true
PASS indexedDB.cmp('\0','') === 1 is true
PASS indexedDB.cmp('','') === 0 is true
PASS indexedDB.cmp('\0','\0') === 0 is true
PASS indexedDB.cmp('\0','a') === -1 is true
PASS indexedDB.cmp('a','\0') === 1 is true
PASS indexedDB.cmp('\0','\0') === 0 is true
PASS indexedDB.cmp('a','a') === 0 is true
PASS indexedDB.cmp('a','aa') === -1 is true
PASS indexedDB.cmp('aa','a') === 1 is true
PASS indexedDB.cmp('a','a') === 0 is true
PASS indexedDB.cmp('aa','aa') === 0 is true
PASS indexedDB.cmp('aa','b') === -1 is true
PASS indexedDB.cmp('b','aa') === 1 is true
PASS indexedDB.cmp('aa','aa') === 0 is true
PASS indexedDB.cmp('b','b') === 0 is true
PASS indexedDB.cmp('b','ba') === -1 is true
PASS indexedDB.cmp('ba','b') === 1 is true
PASS indexedDB.cmp('b','b') === 0 is true
PASS indexedDB.cmp('ba','ba') === 0 is true
PASS indexedDB.cmp('ba','¬¢') === -1 is true
PASS indexedDB.cmp('¬¢','ba') === 1 is true
PASS indexedDB.cmp('ba','ba') === 0 is true
PASS indexedDB.cmp('¬¢','¬¢') === 0 is true
PASS indexedDB.cmp('¬¢','Ê∞¥') === -1 is true
PASS indexedDB.cmp('Ê∞¥','¬¢') === 1 is true
PASS indexedDB.cmp('¬¢','¬¢') === 0 is true
PASS indexedDB.cmp('Ê∞¥','Ê∞¥') === 0 is true
PASS indexedDB.cmp('Ê∞¥','ùÑû') === -1 is true
PASS indexedDB.cmp('ùÑû','Ê∞¥') === 1 is true
PASS indexedDB.cmp('Ê∞¥','Ê∞¥') === 0 is true
PASS indexedDB.cmp('ùÑû','ùÑû') === 0 is true
PASS indexedDB.cmp('ùÑû','ÔøΩ') === -1 is true
PASS indexedDB.cmp('ÔøΩ','ùÑû') === 1 is true
PASS indexedDB.cmp('ùÑû','ùÑû') === 0 is true
PASS indexedDB.cmp('ÔøΩ','ÔøΩ') === 0 is true
PASS indexedDB.cmp('ÔøΩ',[]) === -1 is true
PASS indexedDB.cmp([],'ÔøΩ') === 1 is true
PASS indexedDB.cmp('ÔøΩ','ÔøΩ') === 0 is true
PASS indexedDB.cmp([],[]) === 0 is true
PASS indexedDB.cmp([],[-Infinity]) === -1 is true
PASS indexedDB.cmp([-Infinity],[]) === 1 is true
PASS indexedDB.cmp([],[]) === 0 is true
PASS indexedDB.cmp([-Infinity],[-Infinity]) === 0 is true
PASS indexedDB.cmp([-Infinity],[-Number.MAX_VALUE]) === -1 is true
PASS indexedDB.cmp([-Number.MAX_VALUE],[-Infinity]) === 1 is true
PASS indexedDB.cmp([-Infinity],[-Infinity]) === 0 is true
PASS indexedDB.cmp([-Number.MAX_VALUE],[-Number.MAX_VALUE]) === 0 is true
PASS indexedDB.cmp([-Number.MAX_VALUE],[-1]) === -1 is true
PASS indexedDB.cmp([-1],[-Number.MAX_VALUE]) === 1 is true
PASS indexedDB.cmp([-Number.MAX_VALUE],[-Number.MAX_VALUE]) === 0 is true
PASS indexedDB.cmp([-1],[-1]) === 0 is true
PASS indexedDB.cmp([-1],[-Number.MIN_VALUE]) === -1 is true
PASS indexedDB.cmp([-Number.MIN_VALUE],[-1]) === 1 is true
PASS indexedDB.cmp([-1],[-1]) === 0 is true
PASS indexedDB.cmp([-Number.MIN_VALUE],[-Number.MIN_VALUE]) === 0 is true
PASS indexedDB.cmp([-Number.MIN_VALUE],[0]) === -1 is true
PASS indexedDB.cmp([0],[-Number.MIN_VALUE]) === 1 is true
PASS indexedDB.cmp([-Number.MIN_VALUE],[-Number.MIN_VALUE]) === 0 is true
PASS indexedDB.cmp([0],[0]) === 0 is true
PASS indexedDB.cmp([0],[Number.MIN_VALUE]) === -1 is true
PASS indexedDB.cmp([Number.MIN_VALUE],[0]) === 1 is true
PASS indexedDB.cmp([0],[0]) === 0 is true
PASS indexedDB.cmp([Number.MIN_VALUE],[Number.MIN_VALUE]) === 0 is true
PASS indexedDB.cmp([Number.MIN_VALUE],[1]) === -1 is true
PASS indexedDB.cmp([1],[Number.MIN_VALUE]) === 1 is true
PASS indexedDB.cmp([Number.MIN_VALUE],[Number.MIN_VALUE]) === 0 is true
PASS indexedDB.cmp([1],[1]) === 0 is true
PASS indexedDB.cmp([1],[Number.MAX_VALUE]) === -1 is true
PASS indexedDB.cmp([Number.MAX_VALUE],[1]) === 1 is true
PASS indexedDB.cmp([1],[1]) === 0 is true
PASS indexedDB.cmp([Number.MAX_VALUE],[Number.MAX_VALUE]) === 0 is true
PASS indexedDB.cmp([Number.MAX_VALUE],[Infinity]) === -1 is true
PASS indexedDB.cmp([Infinity],[Number.MAX_VALUE]) === 1 is true
PASS indexedDB.cmp([Number.MAX_VALUE],[Number.MAX_VALUE]) === 0 is true
PASS indexedDB.cmp([Infinity],[Infinity]) === 0 is true
PASS indexedDB.cmp([Infinity],[new Date(0)]) === -1 is true
PASS indexedDB.cmp([new Date(0)],[Infinity]) === 1 is true
PASS indexedDB.cmp([Infinity],[Infinity]) === 0 is true
PASS indexedDB.cmp([new Date(0)],[new Date(0)]) === 0 is true
PASS indexedDB.cmp([new Date(0)],[new Date(1000)]) === -1 is true
PASS indexedDB.cmp([new Date(1000)],[new Date(0)]) === 1 is true
PASS indexedDB.cmp([new Date(0)],[new Date(0)]) === 0 is true
PASS indexedDB.cmp([new Date(1000)],[new Date(1000)]) === 0 is true
PASS indexedDB.cmp([new Date(1000)],[new Date(1317399931023)]) === -1 is true
PASS indexedDB.cmp([new Date(1317399931023)],[new Date(1000)]) === 1 is true
PASS indexedDB.cmp([new Date(1000)],[new Date(1000)]) === 0 is true
PASS indexedDB.cmp([new Date(1317399931023)],[new Date(1317399931023)]) === 0 is true
PASS indexedDB.cmp([new Date(1317399931023)],['']) === -1 is true
PASS indexedDB.cmp([''],[new Date(1317399931023)]) === 1 is true
PASS indexedDB.cmp([new Date(1317399931023)],[new Date(1317399931023)]) === 0 is true
PASS indexedDB.cmp([''],['']) === 0 is true
PASS indexedDB.cmp([''],['\0']) === -1 is true
PASS indexedDB.cmp(['\0'],['']) === 1 is true
PASS indexedDB.cmp([''],['']) === 0 is true
PASS indexedDB.cmp(['\0'],['\0']) === 0 is true
PASS indexedDB.cmp(['\0'],['a']) === -1 is true
PASS indexedDB.cmp(['a'],['\0']) === 1 is true
PASS indexedDB.cmp(['\0'],['\0']) === 0 is true
PASS indexedDB.cmp(['a'],['a']) === 0 is true
PASS indexedDB.cmp(['a'],['aa']) === -1 is true
PASS indexedDB.cmp(['aa'],['a']) === 1 is true
PASS indexedDB.cmp(['a'],['a']) === 0 is true
PASS indexedDB.cmp(['aa'],['aa']) === 0 is true
PASS indexedDB.cmp(['aa'],['b']) === -1 is true
PASS indexedDB.cmp(['b'],['aa']) === 1 is true
PASS indexedDB.cmp(['aa'],['aa']) === 0 is true
PASS indexedDB.cmp(['b'],['b']) === 0 is true
PASS indexedDB.cmp(['b'],['ba']) === -1 is true
PASS indexedDB.cmp(['ba'],['b']) === 1 is true
PASS indexedDB.cmp(['b'],['b']) === 0 is true
PASS indexedDB.cmp(['ba'],['ba']) === 0 is true
PASS indexedDB.cmp(['ba'],['¬¢']) === -1 is true
PASS indexedDB.cmp(['¬¢'],['ba']) === 1 is true
PASS indexedDB.cmp(['ba'],['ba']) === 0 is true
PASS indexedDB.cmp(['¬¢'],['¬¢']) === 0 is true
PASS indexedDB.cmp(['¬¢'],['Ê∞¥']) === -1 is true
PASS indexedDB.cmp(['Ê∞¥'],['¬¢']) === 1 is true
PASS indexedDB.cmp(['¬¢'],['¬¢']) === 0 is true
PASS indexedDB.cmp(['Ê∞¥'],['Ê∞¥']) === 0 is true
PASS indexedDB.cmp(['Ê∞¥'],['ùÑû']) === -1 is true
PASS indexedDB.cmp(['ùÑû'],['Ê∞¥']) === 1 is true
PASS indexedDB.cmp(['Ê∞¥'],['Ê∞¥']) === 0 is true
PASS indexedDB.cmp(['ùÑû'],['ùÑû']) === 0 is true
PASS indexedDB.cmp(['ùÑû'],['ÔøΩ']) === -1 is true
PASS indexedDB.cmp(['ÔøΩ'],['ùÑû']) === 1 is true
PASS indexedDB.cmp(['ùÑû'],['ùÑû']) === 0 is true
PASS indexedDB.cmp(['ÔøΩ'],['ÔøΩ']) === 0 is true
PASS indexedDB.cmp(['ÔøΩ'],[[]]) === -1 is true
PASS indexedDB.cmp([[]],['ÔøΩ']) === 1 is true
PASS indexedDB.cmp(['ÔøΩ'],['ÔøΩ']) === 0 is true
PASS indexedDB.cmp([[]],[[]]) === 0 is true
PASS indexedDB.cmp([[]],[[], []]) === -1 is true
PASS indexedDB.cmp([[], []],[[]]) === 1 is true
PASS indexedDB.cmp([[]],[[]]) === 0 is true
PASS indexedDB.cmp([[], []],[[], []]) === 0 is true
PASS indexedDB.cmp([[], []],[[], [], []]) === -1 is true
PASS indexedDB.cmp([[], [], []],[[], []]) === 1 is true
PASS indexedDB.cmp([[], []],[[], []]) === 0 is true
PASS indexedDB.cmp([[], [], []],[[], [], []]) === 0 is true
PASS indexedDB.cmp([[], [], []],[[[]]]) === -1 is true
PASS indexedDB.cmp([[[]]],[[], [], []]) === 1 is true
PASS indexedDB.cmp([[], [], []],[[], [], []]) === 0 is true
PASS indexedDB.cmp([[[]]],[[[]]]) === 0 is true
PASS indexedDB.cmp([[[]]],[[[[]]]]) === -1 is true
PASS indexedDB.cmp([[[[]]]],[[[]]]) === 1 is true
PASS indexedDB.cmp([[[]]],[[[]]]) === 0 is true
PASS indexedDB.cmp([[[[]]]],[[[[]]]]) === 0 is true

compare invalid keys
Expecting exception from indexedDB.cmp(void 0, true)
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp(true, void 0)
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp(void 0, 'valid')
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp('valid', void 0)
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp(true, 'valid')
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp('valid', true)
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp(true, false)
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp(false, true)
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp(true, 'valid')
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp('valid', true)
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp(false, 'valid')
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp('valid', false)
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp(false, NaN)
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp(NaN, false)
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp(false, 'valid')
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp('valid', false)
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp(NaN, 'valid')
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp('valid', NaN)
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp(NaN, null)
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp(null, NaN)
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp(NaN, 'valid')
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp('valid', NaN)
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp(null, 'valid')
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp('valid', null)
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp(null, {})
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp({}, null)
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp(null, 'valid')
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp('valid', null)
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp({}, 'valid')
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp('valid', {})
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp({}, function () {})
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp(function () {}, {})
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp({}, 'valid')
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp('valid', {})
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp(function () {}, 'valid')
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp('valid', function () {})
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp(function () {}, /regex/)
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp(/regex/, function () {})
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp(function () {}, 'valid')
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp('valid', function () {})
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp(/regex/, 'valid')
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp('valid', /regex/)
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp(/regex/, window)
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp(window, /regex/)
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp(/regex/, 'valid')
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp('valid', /regex/)
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp(window, 'valid')
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp('valid', window)
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp(window, window.document)
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp(window.document, window)
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp(window, 'valid')
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp('valid', window)
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp(window.document, 'valid')
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp('valid', window.document)
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp(window.document, window.document.body)
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp(window.document.body, window.document)
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp(window.document, 'valid')
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp('valid', window.document)
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp(window.document.body, 'valid')
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR
Expecting exception from indexedDB.cmp('valid', window.document.body)
PASS Exception was thrown.
PASS code is IDBDatabaseException.DATA_ERR

compare identical keys
PASS indexedDB.cmp(0, -0) === 0 is true
PASS successfullyParsed is true

TEST COMPLETE

