Test IndexedDB's triggering versionchange event

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


indexedDB = self.indexedDB || self.webkitIndexedDB || self.mozIndexedDB || self.msIndexedDB || self.OIndexedDB;

indexedDB.open(name)
db1 = event.target.result
versionChangeEventCount = 0;
db1 will be open when we call db2.setVersion, which will trigger versionchange on db1
indexedDB.open(name)
db2 = event.target.result
db2 will be open when we call db3.setVersion, which will trigger versionchange on db2
request = db2.setVersion('1')
PASS event.target is db1
PASS event.version is '1'
PASS versionChangeEventCount is 1
close db1 now so versionchange doesn't trigger on db1 again when we call db3.setVersion
db1.close();
PASS db2 received blocked event
PASS event.target.result is event.target.transaction
PASS event.target.transaction.mode is 'versionchange'
PASS db2.version is '1'
request = indexedDB.open(name);
db3 = event.target.result;
request = db3.setVersion('2');
this request will block because db2 is still open
PASS event.target is db2
PASS event.target.version is '1'
PASS event.version is '2'
PASS versionChangeEventCount is 2
don't close db2, so it will block db3.setVersion
PASS event.target.source is db3
PASS event.target.source.version is '1'
PASS event.version is '2'
close db2 now so onsuccess will be called
db2.close();
PASS event.target.result is event.target.transaction
PASS event.target.transaction.mode is 'versionchange'
PASS db3.version is '2'
PASS versionChangeEventCount is 3
PASS successfullyParsed is true

TEST COMPLETE

