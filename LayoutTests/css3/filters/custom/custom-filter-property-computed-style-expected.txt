Tests the computed style of the custom() function of the -webkit-filter property.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".



Custom with vertex shader : custom(url(vertex.shader))
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(url(vertex.shader) none, 1 1 filter-box)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(url(vertex.shader) none, 1 1 filter-box)'

Custom with fragment shader : custom(none url(fragment.shader))
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none url(fragment.shader), 1 1 filter-box)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none url(fragment.shader), 1 1 filter-box)'

Custom with both shaders : custom(url(vertex.shader) url(fragment.shader))
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(url(vertex.shader) url(fragment.shader), 1 1 filter-box)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(url(vertex.shader) url(fragment.shader), 1 1 filter-box)'

Custom with mix function : custom(none mix(url(fragment.shader)))
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none mix(url(fragment.shader) normal source-over), 1 1 filter-box)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none mix(url(fragment.shader) normal source-over), 1 1 filter-box)'

Custom with mix function and blend mode normal : custom(none mix(url(fragment.shader) normal))
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none mix(url(fragment.shader) normal source-over), 1 1 filter-box)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none mix(url(fragment.shader) normal source-over), 1 1 filter-box)'

Custom with mix function and blend mode multiply : custom(none mix(url(fragment.shader) multiply))
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none mix(url(fragment.shader) multiply source-over), 1 1 filter-box)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none mix(url(fragment.shader) multiply source-over), 1 1 filter-box)'

Custom with mix function and blend mode screen : custom(none mix(url(fragment.shader) screen))
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none mix(url(fragment.shader) screen source-over), 1 1 filter-box)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none mix(url(fragment.shader) screen source-over), 1 1 filter-box)'

Custom with mix function and blend mode overlay : custom(none mix(url(fragment.shader) overlay))
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none mix(url(fragment.shader) overlay source-over), 1 1 filter-box)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none mix(url(fragment.shader) overlay source-over), 1 1 filter-box)'

Custom with mix function and blend mode darken : custom(none mix(url(fragment.shader) darken))
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none mix(url(fragment.shader) darken source-over), 1 1 filter-box)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none mix(url(fragment.shader) darken source-over), 1 1 filter-box)'

Custom with mix function and blend mode lighten : custom(none mix(url(fragment.shader) lighten))
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none mix(url(fragment.shader) lighten source-over), 1 1 filter-box)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none mix(url(fragment.shader) lighten source-over), 1 1 filter-box)'

Custom with mix function and blend mode color-dodge : custom(none mix(url(fragment.shader) color-dodge))
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none mix(url(fragment.shader) color-dodge source-over), 1 1 filter-box)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none mix(url(fragment.shader) color-dodge source-over), 1 1 filter-box)'

Custom with mix function and blend mode color-burn : custom(none mix(url(fragment.shader) color-burn))
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none mix(url(fragment.shader) color-burn source-over), 1 1 filter-box)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none mix(url(fragment.shader) color-burn source-over), 1 1 filter-box)'

Custom with mix function and blend mode hard-light : custom(none mix(url(fragment.shader) hard-light))
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none mix(url(fragment.shader) hard-light source-over), 1 1 filter-box)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none mix(url(fragment.shader) hard-light source-over), 1 1 filter-box)'

Custom with mix function and blend mode soft-light : custom(none mix(url(fragment.shader) soft-light))
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none mix(url(fragment.shader) soft-light source-over), 1 1 filter-box)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none mix(url(fragment.shader) soft-light source-over), 1 1 filter-box)'

Custom with mix function and blend mode difference : custom(none mix(url(fragment.shader) difference))
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none mix(url(fragment.shader) difference source-over), 1 1 filter-box)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none mix(url(fragment.shader) difference source-over), 1 1 filter-box)'

Custom with mix function and blend mode exclusion : custom(none mix(url(fragment.shader) exclusion))
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none mix(url(fragment.shader) exclusion source-over), 1 1 filter-box)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none mix(url(fragment.shader) exclusion source-over), 1 1 filter-box)'

Custom with mix function and blend mode hue : custom(none mix(url(fragment.shader) hue))
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none mix(url(fragment.shader) hue source-over), 1 1 filter-box)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none mix(url(fragment.shader) hue source-over), 1 1 filter-box)'

Custom with mix function and blend mode saturation : custom(none mix(url(fragment.shader) saturation))
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none mix(url(fragment.shader) saturation source-over), 1 1 filter-box)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none mix(url(fragment.shader) saturation source-over), 1 1 filter-box)'

Custom with mix function and blend mode color : custom(none mix(url(fragment.shader) color))
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none mix(url(fragment.shader) color source-over), 1 1 filter-box)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none mix(url(fragment.shader) color source-over), 1 1 filter-box)'

Custom with mix function and blend mode luminosity : custom(none mix(url(fragment.shader) luminosity))
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none mix(url(fragment.shader) luminosity source-over), 1 1 filter-box)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none mix(url(fragment.shader) luminosity source-over), 1 1 filter-box)'

Custom with mix function and alpha compositing mode clear : custom(none mix(url(fragment.shader) clear))
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none mix(url(fragment.shader) normal clear), 1 1 filter-box)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none mix(url(fragment.shader) normal clear), 1 1 filter-box)'

Custom with mix function and alpha compositing mode copy : custom(none mix(url(fragment.shader) copy))
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none mix(url(fragment.shader) normal copy), 1 1 filter-box)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none mix(url(fragment.shader) normal copy), 1 1 filter-box)'

Custom with mix function and alpha compositing mode source-over : custom(none mix(url(fragment.shader) source-over))
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none mix(url(fragment.shader) normal source-over), 1 1 filter-box)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none mix(url(fragment.shader) normal source-over), 1 1 filter-box)'

Custom with mix function and alpha compositing mode destination-over : custom(none mix(url(fragment.shader) destination-over))
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none mix(url(fragment.shader) normal destination-over), 1 1 filter-box)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none mix(url(fragment.shader) normal destination-over), 1 1 filter-box)'

Custom with mix function and alpha compositing mode source-in : custom(none mix(url(fragment.shader) source-in))
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none mix(url(fragment.shader) normal source-in), 1 1 filter-box)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none mix(url(fragment.shader) normal source-in), 1 1 filter-box)'

Custom with mix function and alpha compositing mode destination-in : custom(none mix(url(fragment.shader) destination-in))
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none mix(url(fragment.shader) normal destination-in), 1 1 filter-box)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none mix(url(fragment.shader) normal destination-in), 1 1 filter-box)'

Custom with mix function and alpha compositing mode source-out : custom(none mix(url(fragment.shader) source-out))
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none mix(url(fragment.shader) normal source-out), 1 1 filter-box)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none mix(url(fragment.shader) normal source-out), 1 1 filter-box)'

Custom with mix function and alpha compositing mode destination-out : custom(none mix(url(fragment.shader) destination-out))
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none mix(url(fragment.shader) normal destination-out), 1 1 filter-box)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none mix(url(fragment.shader) normal destination-out), 1 1 filter-box)'

Custom with mix function and alpha compositing mode source-atop : custom(none mix(url(fragment.shader) source-atop))
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none mix(url(fragment.shader) normal source-atop), 1 1 filter-box)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none mix(url(fragment.shader) normal source-atop), 1 1 filter-box)'

Custom with mix function and alpha compositing mode destination-atop : custom(none mix(url(fragment.shader) destination-atop))
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none mix(url(fragment.shader) normal destination-atop), 1 1 filter-box)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none mix(url(fragment.shader) normal destination-atop), 1 1 filter-box)'

Custom with mix function and alpha compositing mode xor : custom(none mix(url(fragment.shader) xor))
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none mix(url(fragment.shader) normal xor), 1 1 filter-box)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none mix(url(fragment.shader) normal xor), 1 1 filter-box)'

Custom with mix function and blend mode first, alpha compositing mode second : custom(none mix(url(fragment.shader) multiply clear))
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none mix(url(fragment.shader) multiply clear), 1 1 filter-box)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none mix(url(fragment.shader) multiply clear), 1 1 filter-box)'

Custom with mix function and alpha compositing mode first, blend mode second : custom(none mix(url(fragment.shader) clear multiply))
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none mix(url(fragment.shader) multiply clear), 1 1 filter-box)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none mix(url(fragment.shader) multiply clear), 1 1 filter-box)'

Custom with vertex shader and mix function : custom(url(vertex.shader) mix(url(fragment.shader)))
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(url(vertex.shader) mix(url(fragment.shader) normal source-over), 1 1 filter-box)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(url(vertex.shader) mix(url(fragment.shader) normal source-over), 1 1 filter-box)'

Custom with mix function and mesh size : custom(none mix(url(fragment.shader)), 10)
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none mix(url(fragment.shader) normal source-over), 10 10 filter-box)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none mix(url(fragment.shader) normal source-over), 10 10 filter-box)'

Custom with mesh size : custom(url(vertex.shader), 10)
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(url(vertex.shader) none, 10 10 filter-box)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(url(vertex.shader) none, 10 10 filter-box)'

Custom with both mesh sizes : custom(none url(fragment.shader), 10 20)
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none url(fragment.shader), 10 20 filter-box)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none url(fragment.shader), 10 20 filter-box)'

Custom with mesh size : custom(url(vertex.shader), 10)
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(url(vertex.shader) none, 10 10 filter-box)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(url(vertex.shader) none, 10 10 filter-box)'

Custom with both mesh sizes : custom(none url(fragment.shader), 10 20)
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none url(fragment.shader), 10 20 filter-box)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none url(fragment.shader), 10 20 filter-box)'

Custom with detached mesh : custom(none url(fragment.shader), detached)
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none url(fragment.shader), 1 1 filter-box detached)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none url(fragment.shader), 1 1 filter-box detached)'

Custom with detached and mesh size : custom(none url(fragment.shader), 10 20 detached)
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none url(fragment.shader), 10 20 filter-box detached)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none url(fragment.shader), 10 20 filter-box detached)'

Custom with default filter-box : custom(none url(fragment.shader), filter-box)
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none url(fragment.shader), 1 1 filter-box)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none url(fragment.shader), 1 1 filter-box)'

Custom with content-box : custom(none url(fragment.shader), content-box)
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none url(fragment.shader), 1 1 content-box)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none url(fragment.shader), 1 1 content-box)'

Custom with border-box : custom(none url(fragment.shader), border-box)
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none url(fragment.shader), 1 1 border-box)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none url(fragment.shader), 1 1 border-box)'

Custom with padding-box : custom(none url(fragment.shader), padding-box)
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none url(fragment.shader), 1 1 padding-box)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none url(fragment.shader), 1 1 padding-box)'

Custom with mesh-size and padding-box : custom(none url(fragment.shader), 10 padding-box)
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none url(fragment.shader), 10 10 padding-box)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none url(fragment.shader), 10 10 padding-box)'

Custom with mesh-size and padding-box : custom(none url(fragment.shader), padding-box detached)
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none url(fragment.shader), 1 1 padding-box detached)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none url(fragment.shader), 1 1 padding-box detached)'

Custom with both mesh-sizes and padding-box : custom(none url(fragment.shader), 10 20 padding-box)
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none url(fragment.shader), 10 20 padding-box)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none url(fragment.shader), 10 20 padding-box)'

Custom with both mesh-sizes and padding-box and detached : custom(none url(fragment.shader), 10 20 padding-box detached)
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none url(fragment.shader), 10 20 padding-box detached)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none url(fragment.shader), 10 20 padding-box detached)'

Custom with padding-box and detached : custom(none url(fragment.shader), padding-box detached)
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none url(fragment.shader), 1 1 padding-box detached)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none url(fragment.shader), 1 1 padding-box detached)'

Custom with integer parameters : custom(none url(fragment.shader), p1 1, p2 2 3, p3 3 4 5, p4 4 5 6 7)
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none url(fragment.shader), 1 1 filter-box, p1 1, p2 2 3, p3 3 4 5, p4 4 5 6 7)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none url(fragment.shader), 1 1 filter-box, p1 1, p2 2 3, p3 3 4 5, p4 4 5 6 7)'

Custom with float parameters : custom(none url(fragment.shader), p1 1.1, p2 2.2 3.3, p3 3.1 4.1 5.1, p4 4.1 5.2 6.3 7.4)
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none url(fragment.shader), 1 1 filter-box, p1 1.1, p2 2.2 3.3, p3 3.1 4.1 5.1, p4 4.1 5.2 6.3 7.4)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none url(fragment.shader), 1 1 filter-box, p1 1.1, p2 2.2 3.3, p3 3.1 4.1 5.1, p4 4.1 5.2 6.3 7.4)'

Custom with transform translate parameter : custom(none url(fragment.shader), p1 translate(10px, 10px))
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none url(fragment.shader), 1 1 filter-box, p1 matrix(1, 0, 0, 1, 10, 10))'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none url(fragment.shader), 1 1 filter-box, p1 matrix(1, 0, 0, 1, 10, 10))'

Custom with multiple transform parameters : custom(none url(fragment.shader), p1 translate(10px, 10px), p2 scale(2))
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none url(fragment.shader), 1 1 filter-box, p1 matrix(1, 0, 0, 1, 10, 10), p2 matrix(2, 0, 0, 2, 0, 0))'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none url(fragment.shader), 1 1 filter-box, p1 matrix(1, 0, 0, 1, 10, 10), p2 matrix(2, 0, 0, 2, 0, 0))'

Custom with multiple transforms single parameter : custom(none url(fragment.shader), p1 translate(10px, 10px) scale(2))
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none url(fragment.shader), 1 1 filter-box, p1 matrix(2, 0, 0, 2, 10, 10))'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none url(fragment.shader), 1 1 filter-box, p1 matrix(2, 0, 0, 2, 10, 10))'

Custom with percent transform parameter : custom(none url(fragment.shader), p1 translate(50%, 50%))
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none url(fragment.shader), 1 1 filter-box, p1 matrix(1, 0, 0, 1, 250, 300))'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none url(fragment.shader), 1 1 filter-box, p1 matrix(1, 0, 0, 1, 250, 300))'

Custom with mesh size and number parameters : custom(none url(fragment.shader), 10 20 filter-box, p1 1, p2 2 3, p3 3 4 5, p4 4 5 6 7)
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'custom(none url(fragment.shader), 10 20 filter-box, p1 1, p2 2 3, p3 3 4 5, p4 4 5 6 7)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 1
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none url(fragment.shader), 10 20 filter-box, p1 1, p2 2 3, p3 3 4 5, p4 4 5 6 7)'

Multiple with fragment shader : grayscale() custom(none url(fragment.shader)) sepia()
PASS removeBaseURL(filterStyle.getPropertyValue('-webkit-filter')) is 'grayscale(1) custom(none url(fragment.shader), 1 1 filter-box) sepia(1)'
PASS jsWrapperClass(filterRule) is 'CSSValueList'
PASS jsWrapperClass(filterRule.__proto__) is 'CSSValueListPrototype'
PASS jsWrapperClass(filterRule.constructor) is 'CSSValueListConstructor'
PASS filterRule.length is 3
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_GRAYSCALE
PASS removeBaseURL(subRule.cssText) is 'grayscale(1)'
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_CUSTOM
PASS removeBaseURL(subRule.cssText) is 'custom(none url(fragment.shader), 1 1 filter-box)'
PASS subRule.operationType is WebKitCSSFilterValue.CSS_FILTER_SEPIA
PASS removeBaseURL(subRule.cssText) is 'sepia(1)'
PASS successfullyParsed is true

TEST COMPLETE

