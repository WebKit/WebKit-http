This tests the constructor for the CustomEvent DOM class.

On success, you will see a series of "PASS" messages, followed by "TEST COMPLETE".


PASS new CustomEvent('eventType').bubbles is false
PASS new CustomEvent('eventType').cancelable is false
FAIL new CustomEvent('eventType').detail should be null (of type object). Was undefined (of type undefined).
FAIL new CustomEvent('eventType', { bubbles: true, cancelable: true }).bubbles should be true. Was false.
FAIL new CustomEvent('eventType', { bubbles: true, cancelable: true }).cancelable should be true. Was false.
FAIL new CustomEvent('eventType', { bubbles: true, cancelable: true }).detail should be null (of type object). Was undefined (of type undefined).
FAIL new CustomEvent('eventType', { detail: 10 }).detail should be 10 (of type number). Was undefined (of type undefined).
FAIL new CustomEvent('eventType', { detail: 'string' }).detail should be string (of type string). Was undefined (of type undefined).
FAIL new CustomEvent('eventType', { detail: detailObject }).detail should be [object Object] (of type object). Was undefined (of type undefined).
FAIL new CustomEvent('eventType', { detail: document }).detail should be [object HTMLDocument] (of type object). Was undefined (of type undefined).
FAIL new CustomEvent('eventType', { get detail() { return true; } }).detail should be true (of type boolean). Was undefined (of type undefined).
FAIL new CustomEvent('eventType', { get detail() { throw 'Custom Error'; } }) should throw an exception. Was [object CustomEvent].
PASS successfullyParsed is true

TEST COMPLETE

