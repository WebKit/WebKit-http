
Title: TC0011
Fragment: 't=3'
Comment: Equivalent to #t=a,e. The media is requested from a to e.
EVENT(canplaythrough)
EXPECTED (video.currentTime == '3') OK
EXPECTED (video.initialTime == '3') OK
RUN(video.play())
EVENT(pause)
EXPECTED (video.currentTime - fragmentEndTime <= '0.5') OK

Title: TC0012
Fragment: 't=3,'
Comment: Invalid syntax, hence the temporal fragment is ignored.
EVENT(canplaythrough)
EXPECTED (video.currentTime == '0') OK
EXPECTED (video.initialTime == '0') OK

Title: TC0014
Fragment: 't=15'
Comment: The request lies beyond the end of the resource. If the UA knows the duration of the resource, it seeks to the end of the media resource. Otherwise, the UA will send an (out-of-range) HTTP request with an 'include-setup' in order to setup its decoding pipeline.
EVENT(canplaythrough)
EXPECTED (video.currentTime == 'duration') OK
EXPECTED (video.initialTime == 'duration') OK

Title: TC0015
Fragment: 't=,7'
Comment: Equivalent to #t=0,b. The media is requested from 0 to b.
EVENT(canplaythrough)
EXPECTED (video.currentTime == '0') OK
EXPECTED (video.initialTime == '0') OK
RUN(video.play())
EVENT(pause)
EXPECTED (video.currentTime - fragmentEndTime <= '0.5') OK

Title: TC0017
Fragment: 't=,15'
Comment: Equivalent to #t=0,e. The media is requested from 0 to e.
EVENT(canplaythrough)
EXPECTED (video.currentTime == '0') OK
EXPECTED (video.initialTime == '0') OK
RUN(video.play())
EVENT(pause)
EXPECTED (video.currentTime - fragmentEndTime <= '0.5') OK

END OF TEST

