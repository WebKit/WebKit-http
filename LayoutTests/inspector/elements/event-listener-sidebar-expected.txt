Tests event listeners output in the Elements sidebar panel.

Inspect Me

======== click ========
[expanded] document (anonymous function)
    isAttribute: false
    listenerBody: function (event) { console.log("click - document - capturing"); }
    node: HTMLDocument
    type: click
    useCapture: true
[expanded] button#node (anonymous function)
    isAttribute: false
    listenerBody: function (event) { console.log("click - button - capturing"); }
    node: HTMLButtonElement
    type: click
    useCapture: true
[expanded] button#node clickHandler
    isAttribute: false
    listenerBody: function clickHandler(event) { console.log("click - button - bubbling (registered before attribute)"); }
    node: HTMLButtonElement
    type: click
    useCapture: false
[expanded] button#node (anonymous function)
    isAttribute: true
    listenerBody: function (event) { console.log("click - button - attribute"); }
    node: HTMLButtonElement
    type: click
    useCapture: false
[expanded] button#node (anonymous function)
    isAttribute: false
    listenerBody: function (event) { console.log("click - button - bubbling (registered after attribute)"); }
    node: HTMLButtonElement
    type: click
    useCapture: false
[expanded] document documentClickHandler
    isAttribute: true
    listenerBody: function documentClickHandler(event) { console.log("click - document - attribute"); }
    node: HTMLDocument
    type: click
    useCapture: false

======== hover ========
[expanded] button#node hoverHandler
    isAttribute: false
    listenerBody: function hoverHandler(event) { console.log("hover - button - bubbling"); }
    node: HTMLButtonElement
    type: hover
    useCapture: false

