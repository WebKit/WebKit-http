Tests event listeners output in the Elements sidebar panel.

Inspect Me

======== click ========
[expanded] document event-listener-sidebar.html:19
    isAttribute: false
    lineNumber: 19
    listenerBody: function (event) { console.log("click - document - capturing"); }
    node: #document
    sourceName: [clipped-for-test]/LayoutTests/inspector/elements/event-listener-sidebar.html
    type: click
    useCapture: true
[expanded] document (anonymous function)
    isAttribute: false
    listenerBody: ObjectHandler
    node: #document
    type: click
    useCapture: true
[expanded] button#node event-listener-sidebar.html:15
    isAttribute: false
    lineNumber: 15
    listenerBody: function (event) { console.log("click - button - capturing"); }
    node: <button>
    sourceName: [clipped-for-test]/LayoutTests/inspector/elements/event-listener-sidebar.html
    type: click
    useCapture: true
[expanded] button#node event-listener-sidebar.html:12
    isAttribute: false
    lineNumber: 12
    listenerBody: function clickHandler(event) { console.log("click - button - bubbling (registered before attribute)"); }
    node: <button>
    sourceName: [clipped-for-test]/LayoutTests/inspector/elements/event-listener-sidebar.html
    type: click
    useCapture: false
[expanded] button#node event-listener-sidebar.html:16
    isAttribute: true
    lineNumber: 16
    listenerBody: function (event) { console.log("click - button - attribute"); }
    node: <button>
    sourceName: [clipped-for-test]/LayoutTests/inspector/elements/event-listener-sidebar.html
    type: click
    useCapture: false
[expanded] button#node event-listener-sidebar.html:17
    isAttribute: false
    lineNumber: 17
    listenerBody: function (event) { console.log("click - button - bubbling (registered after attribute)"); }
    node: <button>
    sourceName: [clipped-for-test]/LayoutTests/inspector/elements/event-listener-sidebar.html
    type: click
    useCapture: false
[expanded] document event-listener-sidebar.html:6
    isAttribute: true
    lineNumber: 6
    listenerBody: function documentClickHandler(event) { console.log("click - document - attribute"); }
    node: #document
    sourceName: [clipped-for-test]/LayoutTests/inspector/elements/event-listener-sidebar.html
    type: click
    useCapture: false

======== custom event ========
[expanded] body event-listener-sidebar.html:10
    isAttribute: false
    lineNumber: 10
    listenerBody: function f() {}
    node: <body>
    sourceName: [clipped-for-test]/LayoutTests/inspector/elements/event-listener-sidebar.html
    type: custom event
    useCapture: true

======== hover ========
[expanded] button#node event-listener-sidebar.html:14
    isAttribute: false
    lineNumber: 14
    listenerBody: function hoverHandler(event) { console.log("hover - button - bubbling"); }
    node: <button>
    sourceName: [clipped-for-test]/LayoutTests/inspector/elements/event-listener-sidebar.html
    type: hover
    useCapture: false

======== click ========
[expanded] document event-listener-sidebar.html:19
    isAttribute: false
    lineNumber: 19
    listenerBody: function (event) { console.log("click - document - capturing"); }
    node: #document
    sourceName: [clipped-for-test]/LayoutTests/inspector/elements/event-listener-sidebar.html
    type: click
    useCapture: true
[expanded] document (anonymous function)
    isAttribute: false
    listenerBody: ObjectHandler
    node: #document
    type: click
    useCapture: true
[expanded] document event-listener-sidebar.html:6
    isAttribute: true
    lineNumber: 6
    listenerBody: function documentClickHandler(event) { console.log("click - document - attribute"); }
    node: #document
    sourceName: [clipped-for-test]/LayoutTests/inspector/elements/event-listener-sidebar.html
    type: click
    useCapture: false

======== custom event ========
[expanded] body event-listener-sidebar.html:10
    isAttribute: false
    lineNumber: 10
    listenerBody: function f() {}
    node: <body>
    sourceName: [clipped-for-test]/LayoutTests/inspector/elements/event-listener-sidebar.html
    type: custom event
    useCapture: true
Listeners for selected node only(should be no listeners):

