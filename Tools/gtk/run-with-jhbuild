#!/usr/bin/env python
# Copyright (C) 2011 Igalia S.L.
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA

import common
import os
import subprocess
import sys

def install_and_run_jhbuild():
    installation_prefix = os.path.abspath(common.top_level_path('WebKitBuild', 'Dependencies', 'Root'))
    source_path = os.path.abspath(common.top_level_path('WebKitBuild', 'Dependencies', 'Source'))
    jhbuild_source_path = os.path.join(source_path, 'jhbuild')

    if not os.path.exists(source_path):
        os.makedirs(source_path)
    if not os.path.exists(installation_prefix):
        os.makedirs(installation_prefix)

    if not os.path.exists(jhbuild_source_path):
        process = subprocess.Popen(['git', 'clone', 'git://git.gnome.org/jhbuild'], cwd=source_path)
        process.wait()
        if process.returncode != 0:
            raise Exception('jhbuild git clone failed with return code: %i' % process.returncode)

    # jhbuild is really unhappy about having MAKE defined to something like 'make -j4'
    # so we just undefine it here.
    env_without_make = dict(os.environ)
    if 'MAKE' in env_without_make:
        del env_without_make['MAKE']

    process = subprocess.Popen(['./autogen.sh', '--prefix=%s' % installation_prefix],
                               cwd=jhbuild_source_path, env=env_without_make)
    process.wait()
    if process.returncode != 0:
        raise Exception('jhbuild configure failed with return code: %i' % process.returncode)

    process = subprocess.Popen(['make', 'install'], cwd=jhbuild_source_path, env=env_without_make)
    process.wait()
    if process.returncode != 0:
        raise Exception('jhbuild configure failed with return code: %i' % process.returncode)

    process = subprocess.Popen(common.top_level_path('Tools', 'Scripts', 'update-webkitgtk-libs'))
    process.wait()
    if process.returncode != 0:
        raise Exception('jhbuild configure failed with return code: %i' % process.returncode)

jhbuild_path = common.top_level_path('WebKitBuild', 'Dependencies', 'Root', 'bin', 'jhbuild')
if not os.path.exists(jhbuild_path):
    install_and_run_jhbuild()

process = subprocess.Popen([jhbuild_path, '--no-interact', '-f', common.top_level_path('Tools', 'gtk', 'jhbuildrc'), 'run'] + sys.argv[1:])
process.wait()
sys.exit(process.returncode)



