2012-12-17  Adam Klein  <adamk@chromium.org>

        build-webkit: rename --template-tag to --template-element to match ENABLE #define name
        https://bugs.webkit.org/show_bug.cgi?id=105072

        Reviewed by Laszlo Gombos.

        * Scripts/webkitperl/FeatureList.pm:

2012-12-17  Julien Chaffraix  <jchaffraix@webkit.org>

        Add some unit testing for WTF::clampTo* functions
        https://bugs.webkit.org/show_bug.cgi?id=105060

        Reviewed by Emil A Eklund.

        The new tests are targeted at clamping to int / unsigned and float as those are
        the one explicitely exposed through more dedicated functions (like clampToInteger,
        clampToPositiveInteger and clampToFloat).

        * TestWebKitAPI/Tests/WTF/MathExtras.cpp:

2012-12-17  Eric Seidel  <eric@webkit.org>

        rpt --profile --chromium-android throws exception
        https://bugs.webkit.org/show_bug.cgi?id=105061

        Reviewed by Daniel Bates.

        Somehow popen(args) got turned into popen(*args) at some point,
        which caused my new stringify code to fail when args was passed by name.
        Fixed and tested.

        * Scripts/webkitpy/common/system/executive.py:
        (Executive._stringify_args):
        (Executive):
        (Executive.popen):
        * Scripts/webkitpy/common/system/executive_unittest.py:
        (ExecutiveTest.test_popen_args):

2012-12-17  Mark Pilgrim  <pilgrim@chromium.org>

        Use Platform::current() instead of webKitPlatformSupport() in DumpRenderTree
        https://bugs.webkit.org/show_bug.cgi?id=105054

        Reviewed by Jochen Eisinger.

        Part of a refactoring series; see tracking bug 82948.

        * DumpRenderTree/chromium/NotificationPresenter.cpp:
        (NotificationPresenter::show):
        * DumpRenderTree/chromium/Task.cpp:
        (postTask):
        * DumpRenderTree/chromium/TestRunner/src/WebTestPlugin.cpp:

2012-12-17  Emil A Eklund  <eae@chromium.org>

        Clamp values in LayoutUnit::operator/ when SATURATED_LAYOUT_ARITHMETIC is enabled
        https://bugs.webkit.org/show_bug.cgi?id=104955

        Reviewed by Julien Chaffraix.

        Add tests for LayoutUnit.

        * TestWebKitAPI/CMakeLists.txt:
        * TestWebKitAPI/ForwardingHeaders: Added.
        * TestWebKitAPI/ForwardingHeaders/WebCore: Added.
        * TestWebKitAPI/ForwardingHeaders/WebCore/LayoutUnit.h: Added.
        * TestWebKitAPI/TestWebKitAPI.gyp/TestWebKitAPI.gyp:
        * TestWebKitAPI/TestWebKitAPI.gypi:
        * TestWebKitAPI/TestWebKitAPI.xcodeproj/project.pbxproj:
        * TestWebKitAPI/Tests/WebCore/LayoutUnit.cpp: Added.
        (TestWebKitAPI):
        (TestWebKitAPI::TEST):
        * TestWebKitAPI/win/TestWebKitAPI.vcproj:

2012-12-17  Jochen Eisinger  <jochen@chromium.org>

        [chromium] removed unused preferences from testRunner.overridePreference
        https://bugs.webkit.org/show_bug.cgi?id=105169

        Reviewed by Tony Chang.

        Most notably this removes the code related to font family maps which is
        now handled via window.internals.settings

        * DumpRenderTree/chromium/TestRunner/public/WebPreferences.h:
        (WebPreferences):
        * DumpRenderTree/chromium/TestRunner/src/TestRunner.cpp:
        (WebTestRunner::TestRunner::overridePreference):
        * DumpRenderTree/chromium/TestRunner/src/TestRunner.h:
        (TestRunner):
        * DumpRenderTree/chromium/TestRunner/src/WebPreferences.cpp:
        (WebTestRunner::WebPreferences::applyTo):

2012-12-17  James Robinson  <jamesr@chromium.org>

        [chromium] Move creation of WebLayerTreeView to WebWidgetClient
        https://bugs.webkit.org/show_bug.cgi?id=105071

        Reviewed by Adrienne Walker.

        Update WebViewHost for the new WebWidgetClient interface.

        * DumpRenderTree/chromium/WebViewHost.cpp:
        (WebViewHost::initializeLayerTreeView):
        (WebViewHost::layerTreeView):
        (WebViewHost::~WebViewHost):
        * DumpRenderTree/chromium/WebViewHost.h:
        (WebViewHost):

2012-12-17  Kenneth Rohde Christiansen  <kenneth@webkit.org>

        [EFL][WK2] window_create doesn't receive the url
        https://bugs.webkit.org/show_bug.cgi?id=105184

        Reviewed by Alexis Menard.

        * MiniBrowser/efl/main.c: Use the url supplied to window_create
        (on_window_create):

2012-12-17  Ilya Tikhonovsky  <loislo@chromium.org>

        Web Inspector: Native Memory Instrumentation: MemoryInstrumentation doesn't detect reportMemoryUsage method defined in a base class.
        https://bugs.webkit.org/show_bug.cgi?id=105026

        Reviewed by Yury Semikhatsky.

        Old SFINAE test was replaced with new one based on this article:
        http://stackoverflow.com/questions/1966362/sfinae-to-check-for-inherited-member-functions

        New test which covers this problem was added.

        * TestWebKitAPI/Tests/WTF/MemoryInstrumentationTest.cpp:

2012-12-17  Anthony Scian  <ascian@rim.com>

        [Blackberry] Static code analysis warning fixes
        https://bugs.webkit.org/show_bug.cgi?id=105129

        Reviewed by Rob Buis.

        Added null checks for fopen calls, no recovery attempted; access fault prevention only.

        * DumpRenderTree/blackberry/DumpRenderTree.cpp:
        (BlackBerry::WebKit::createFile):
        (BlackBerry::WebKit::DumpRenderTree::runTest):

2012-12-17  John Mellor  <johnme@chromium.org>

        Add Anton Vayvod and Tim Volodine as contributors in committers.py
        https://bugs.webkit.org/show_bug.cgi?id=105025

        Unreviewed. Adds two contributors to committers.py.
        They are initially contributing to the Text Autosizing feature (master bug: 84186).

        * Scripts/webkitpy/common/config/committers.py:

2012-12-17  Mikhail Pozdnyakov  <mikhail.pozdnyakov@intel.com>

        Unreviewed, add myself to committers.py.

        * Scripts/webkitpy/common/config/committers.py:

2012-12-17  Oswald Buddenhagen  <oswald.buddenhagen@digia.com>

        [Qt] remove some unnecessary CONFIG additions

        Reviewed by Simon Hausmann.

        qt is already added by spec_pre.prf, warn_on and depend_includepath by
        default_pre.prf.

        * qmake/mkspecs/features/default_post.prf:

2012-12-17  Ilya Tikhonovsky  <loislo@chromium.org>

        Unreviewed, rolling out r137892.
        http://trac.webkit.org/changeset/137892
        https://bugs.webkit.org/show_bug.cgi?id=105026

        it broke compilation on windows

        * TestWebKitAPI/Tests/WTF/MemoryInstrumentationTest.cpp:

2012-12-14  Ilya Tikhonovsky  <loislo@chromium.org>

        Web Inspector: Native Memory Instrumentation: MemoryInstrumentation doesn't detect reportMemoryUsage method defined in a base class.
        https://bugs.webkit.org/show_bug.cgi?id=105026

        Reviewed by Yury Semikhatsky.

        Old SFINAE test was replaced with new one based on this article:
        http://stackoverflow.com/questions/1966362/sfinae-to-check-for-inherited-member-functions

        New test which covers this problem was added.

        * TestWebKitAPI/Tests/WTF/MemoryInstrumentationTest.cpp:

2012-12-17  Oswald Buddenhagen  <oswald.buddenhagen@digia.com>

        [Qt] rely on automatic output directory setup

        Reviewed by Simon Hausmann.

        Now being a proper qt module (by virtue of having load(qt_build_config)
        in .qmake.conf), webkit gets the path setup goodies for free.

        This also fixes Makefile.api.Debug/Release trying to generate qrc_WebKit.cpp
        at the same time, instead of the debug and release version ending up in different
        directories as they should.

        * qmake/mkspecs/features/default_pre.prf:

2012-12-17  Charles Wei  <charles.wei@torchmobile.com.cn>

        [BlackBerry] Need to re-enable video track
        https://bugs.webkit.org/show_bug.cgi?id=105155

        Reviewed by George Staikos.

        Just enable Video Track for BlackBerry.

        * Scripts/webkitperl/FeatureList.pm:

2012-12-17  JÃ¡nos Badics  <jbadics@inf.u-szeged.hu>

        Unreviewed. Added myself to committers.py

        * Scripts/webkitpy/common/config/committers.py:

2012-12-17  Jonathan Liu  <net147@gmail.com>

        Fix linking of libraries with -Wl,-whole-archive
        https://bugs.webkit.org/show_bug.cgi?id=104436

        Reviewed by Simon Hausmann.

        If there is more than one library in LIBS linked with
        -Wl,-whole-archive -l... -Wl,-no-whole-archive, qmake tries to
        merge the duplicate flags in LIBS which causes linking to fail.

        Add no_smart_library_merge to CONFIG to prevent the duplicate
        flags from being removed when using -Wl,-whole-archive.

        * qmake/mkspecs/features/functions.prf:

2012-12-16  Arvid Nilsson  <anilsson@rim.com>

        [BlackBerry] Adapt to new BlackBerry::Platform::TouchPoint API
        https://bugs.webkit.org/show_bug.cgi?id=105143
        RIM PR 171941

        Reviewed by Rob Buis.
        Internally reviewed by George Staikos.

        Adapt to new method names and encapsulation of TouchPoint data members.

        * DumpRenderTree/blackberry/EventSender.cpp:
        (addTouchPointCallback):
        (updateTouchPointCallback):
        (touchEndCallback):
        (releaseTouchPointCallback):
        (sendTouchEvent):

2012-12-16  Maciej Stachowiak  <mjs@apple.com>

        Add a script to compute the mean and 95% confidence interval (using two-sided t-test) of a sample set
        https://bugs.webkit.org/show_bug.cgi?id=105148

        Reviewed by Filip Pizlo.

        Usage examples:
        
        $ sampstat --help
        Usage: sampstat [options] [FILES]
          Compute the mean and 95% confidence interval of a sample set.
          Standard input or files must contain two or more decimal numbers, one per line.
        
        Options:
          -h, --help            show this help message and exit
          -u UNIT, --unit=UNIT  assume values are in units of UNIT
          -v, --verbose         print all values (with units)
        
        $ sampstat -u MB memresults.txt
        2356.90 MB +/- 101.34 MB (4.3%)
        
        $ sampstat -v -u MB memresults.txt
              2318.21 MB
              2399.56 MB
              2352.93 MB
        ----------------
        Mean: 2356.90 MB +/- 101.34 MB (4.3%)
        

        * Scripts/sampstat: Added.
        (sum): Helper function to compute the sum of a list.
        (arithmeticMean): Compute the meam of a list.
        (standardDeviation): Compute the sample standard deviation (unbiased estimator).
        (standardError): Compute the sample standard error.
        (tDist): Compute t(.025, n-1), the t-value for atwo-sided 95% confidence interval. 
        (twoSidedConfidenceInterval): Compute the two-sided confidence interval range about the mean.

2012-12-15  Nima Ghanavatian  <nghanavatian@rim.com>

        [BlackBerry] Pass key modifiers with touch and mouse events
        https://bugs.webkit.org/show_bug.cgi?id=105108

        Reviewed by Rob Buis.

        Update DRT to new api.

        Internally reviewed by Gen Mak.

        * DumpRenderTree/blackberry/EventSender.cpp:
        (mouseDownCallback):
        (mouseUpCallback):
        (mouseMoveToCallback):

2012-12-15  Zan Dobersek  <zandobersek@gmail.com>

        Stop the XvfbDriver before proceeding with its starting setup
        https://bugs.webkit.org/show_bug.cgi?id=105006

        Reviewed by Philippe Normand.

        Just as with the base Driver implementation, stop the XvfbDriver
        before proceeding with setting up lock files and a new Xvfb instance.
        This forces any driver or Xvfb instances that are currently under
        the driver's control to be closed/killed and cleaned up after.

        * Scripts/webkitpy/layout_tests/port/xvfbdriver.py:
        (XvfbDriver._start):

2012-12-14  Dirk Pranke  <dpranke@chromium.org>

        webkitpy: make port_name a required parameter to the non-test ports
        https://bugs.webkit.org/show_bug.cgi?id=105057

        Reviewed by Eric Seidel.

        This is just minor code cleanup along the path to making Port
        constructors simpler and pushing more logic into the port factory.

        * Scripts/webkitpy/layout_tests/port/base.py:
        (Port.__init__):
        * Scripts/webkitpy/layout_tests/port/base_unittest.py:
        (PortTest.make_port):
        * Scripts/webkitpy/layout_tests/port/port_testcase.py:
        (TestWebKitPort.__init__):
        * Scripts/webkitpy/layout_tests/port/test.py:
        (TestPort):
        (TestPort.determine_full_port_name):
        (TestPort.__init__):
        * Scripts/webkitpy/layout_tests/port/xvfbdriver_unittest.py:
        (XvfbDriverTest.make_driver):
        (XvfbDriverTest.test_stop):

2012-12-14  Dirk Pranke  <dpranke@chromium.org>

        garden-o-matic doesn't know about reftests
        https://bugs.webkit.org/show_bug.cgi?id=101976

        Reviewed by Eric Seidel.

        Attempt to make garden-o-matic properly aware of reftests again.

        This is re-landing r137407 with a change to
        rebaselineWithStatusUpdates() to actually pass the filtered
        failureInofLost to checkout.rebaseline().

        Unfortunately, the testing coverage for this whole module is almost
        non-existent, and it's not obvious that there's a good way to
        stub out checkout.rebaseline() to test that the right thing
        happens. I verified the change manually.

        * BuildSlaveSupport/build.webkit.org-config/public_html/TestFailures/scripts/controllers.js:
        (.):
        * BuildSlaveSupport/build.webkit.org-config/public_html/TestFailures/scripts/ui/results.js:
        (.):
        * BuildSlaveSupport/build.webkit.org-config/public_html/TestFailures/scripts/ui/results_unittests.js:

2012-12-14  Ryosuke Niwa  <rniwa@webkit.org>

        "Running 1 DumpRenderTree over X shards" is not a helpful output
        https://bugs.webkit.org/show_bug.cgi?id=104858

        Reviewed by Dirk Pranke.

        The word "shard" is not typically used in test frameworks. This word is confusing for many WebKit
        contributors who typically don't have much experience on distributed computations and databases.
        So only print this message out in the debug mode.

        * Scripts/webkitpy/layout_tests/run_webkit_tests_integrationtest.py:
        * Scripts/webkitpy/layout_tests/views/printing.py:
        (Printer.print_workers_and_shards):

2012-12-13  Eric Seidel  <eric@webkit.org>

        Add --profiler=PROFILER option to run-perf-tests to allow specifying which profiler to use on platforms with many
        https://bugs.webkit.org/show_bug.cgi?id=104891

        Reviewed by Ryosuke Niwa.

        I also implemented a very simple "Sample" Profiler using
        Mac OS X's /usr/bin/sample command line tool.

        The real reason for this abstraction is to make it easy
        to support both perf and pprof on linux which seem to
        be about equally popular among those I ask in the Chrome team.

        * Scripts/webkitpy/common/system/profiler.py:
        (ProfilerFactory.create_profiler):
        (ProfilerFactory):
        (ProfilerFactory.available_profilers_by_name):
        (ProfilerFactory.default_profiler_name):
        (Sample):
        (Sample.__init__):
        (Sample.attach_to_pid):
        (Sample.profile_after_exit):
        (IProfiler.attach_to_pid):
        * Scripts/webkitpy/layout_tests/port/driver.py:
        (Driver.__init__):
        * Scripts/webkitpy/performance_tests/perftestsrunner.py:
        (PerfTestsRunner._parse_args):

2012-12-13  Eric Seidel  <eric@webkit.org>

        Unreviewed, fixing typo in python unittest.

        I changed the default profiler on linux from pprof to perf in
        bug 104971.  I failed to update the unittest results at that time.

        * Scripts/webkitpy/common/system/profiler_unittest.py:
        (ProfilerFactoryTest.test_basic):

2012-12-13  Ian Vollick  <vollick@chromium.org>

        [chromium] Add a virtual test suite for enabling opt-in to composited scrolling
        https://bugs.webkit.org/show_bug.cgi?id=104911

        Reviewed by Dirk Pranke.

        Adds two virtual tests suites to run the tests in
        compositing/overflow/ and scrollbars/ with the flag
        --enable-accelerated-overflow-scroll, which I've also plumbed through
        in the usual way.

        * DumpRenderTree/chromium/DumpRenderTree.cpp:
        (main):
        * DumpRenderTree/chromium/TestRunner/public/WebPreferences.h:
        (WebPreferences):
        * DumpRenderTree/chromium/TestRunner/src/WebPreferences.cpp:
        (WebTestRunner::WebPreferences::reset):
        (WebTestRunner::WebPreferences::applyTo):
        * DumpRenderTree/chromium/TestShell.cpp:
        (TestShell::TestShell):
        (TestShell::resetWebSettings):
        * DumpRenderTree/chromium/TestShell.h:
        (TestShell::setAcceleratedCompositingForOverflowScrollEnabled):
        (TestShell):
        * Scripts/webkitpy/layout_tests/port/chromium.py:
        (ChromiumPort.virtual_test_suites):

2012-12-13  Eric Seidel  <eric@webkit.org>

        Use 'perf' to profile on linux instead of google-pprof by default
        https://bugs.webkit.org/show_bug.cgi?id=104971

        Reviewed by Dirk Pranke.

        This makes Chromium Linux match Chromium Android and use the perf
        tool by default.  Once https://bugs.webkit.org/show_bug.cgi?id=104891
        lands it will be possible to use pprof again on Linux.

        This is slightly more advanced than the AndroidPerf profiler as
        instead of using a timeout on "perf record" I instead watch
        for the termination of the target process and then control-C
        the 'perf record' process.  This required me to add two new
        methods to Executive, one to have a limited-time wait() and
        the second to be able to send a control-C.  I chose to add
        these to Executive to make them easier to mock/fix-for-win32
        at a later time if needed.

        * Scripts/webkitpy/common/system/executive.py:
        (Executive.wait_limited):
        (Executive.interrupt):
        * Scripts/webkitpy/common/system/profiler.py:
        (ProfilerFactory.create_profiler):
        (Perf):
        (Perf.__init__):
        (Perf._perf_path):
        (Perf.attach_to_pid):
        (Perf._first_ten_lines_of_profile):
        (Perf.profile_after_exit):

2012-12-13  Julie Parent  <jparent@chromium.org>

        Dashboard cleanup: remove usage of global g_builders.
        https://bugs.webkit.org/show_bug.cgi?id=104941

        Reviewed by Dirk Pranke.

        The dashboards use a lot of global state, which makes hacking on them
        complicated. This change removes the use of one such global: g_builders.
        In most cases, we can just use currentBuilderGroup().builders instead,
        which is now currentBuilders().
        Surprisingly, the most changes were required to the unit tests, since
        they were even bigger offenders of bad hygiene, relying on global state
        set by other tests, randomly clobbering global variables in ways the
        real code doesn't, etc.

        * TestResultServer/static-dashboards/builders.js:
        (BuilderGroup.prototype.setup):
        * TestResultServer/static-dashboards/dashboard_base.js:
        (.switch.return):
        (htmlForTestTypeSwitcher):
        * TestResultServer/static-dashboards/flakiness_dashboard.js:
        (generatePage):
        (getAllTestsTrie):
        (processTestRunsForAllBuilders):
        (showPopupForBuild):
        (generatePageForExpectationsUpdate):
        (loadExpectationsLayoutTests):
        * TestResultServer/static-dashboards/flakiness_dashboard_unittests.js:
        (resetGlobals):
        (stubResultsByBuilder):
        (test):
        * TestResultServer/static-dashboards/loader.js:
        (.):
        * TestResultServer/static-dashboards/loader_unittests.js:

2012-12-13  Eric Seidel  <eric@webkit.org>

        Callers should not have to stringify args before calling Executive run_command/popen
        https://bugs.webkit.org/show_bug.cgi?id=104975

        Reviewed by Dirk Pranke.

        One could argue that we should match the python call syntax here,
        but I think it's a more friendly API if we automagically handle
        stringification of args in run_command, etc.
        This removes map(unicode, args) from several callsites.

        When I first tried to land this change, I didn't realize that
        Executive._command_for_printing depended on this behavior
        having been applied to args in run_command.  The fix is to
        call _stringify_args in both run_command and popen.
        This is slightly redundant, but given how short args have to be
        (due to shell limits), I don't think the double-encode check
        matters in practice.

        This is slightly complicated by the fact that apache_http_server.py
        is the one caller in our codebase which uses shell=True.
        shell=True is a well-documented trail-of-tears:
        http://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess
        but to support this legacy (windows-only) code (which I can't easily test)
        I've added an if-hack to avoid stringifying the the popen(shell=True) case.

        * Scripts/webkitpy/common/system/executive.py:
        (Executive.run_command):
        (Executive._stringify_args):
        (Executive.popen):
        * Scripts/webkitpy/common/system/executive_unittest.py:
        (ExecutiveTest.test_auto_stringify_args):
        * Scripts/webkitpy/layout_tests/port/chromium_android.py:
        (attach_to_pid):

2012-12-13  Adrienne Walker  <enne@chromium.org>

        Unreviewed, rolling out r137645, r137646, and r137667.
        http://trac.webkit.org/changeset/137645
        http://trac.webkit.org/changeset/137646
        http://trac.webkit.org/changeset/137667
        https://bugs.webkit.org/show_bug.cgi?id=104911

        Breaks some overflow layout tests

        * Scripts/webkitpy/layout_tests/port/chromium.py:
        (ChromiumPort.virtual_test_suites):

2012-12-13  Dirk Pranke  <dpranke@chromium.org>

        Unreviewed, rolling out r137661.
        http://trac.webkit.org/changeset/137661
        https://bugs.webkit.org/show_bug.cgi?id=104891

        broke unit tests, run-webkit-tests

        * Scripts/webkitpy/common/system/executive.py:
        (Executive._run_command_with_teed_output):
        (Executive.run_command):
        (Executive.popen):
        * Scripts/webkitpy/common/system/profiler.py:
        (ProfilerFactory.create_profiler):
        (GooglePProf.profile_after_exit):
        (IProfiler.attach_to_pid):
        * Scripts/webkitpy/layout_tests/port/driver.py:
        (Driver.__init__):
        * Scripts/webkitpy/performance_tests/perftestsrunner.py:
        (PerfTestsRunner._parse_args):

2012-12-13  Dirk Pranke  <dpranke@chromium.org>

        nrwt: move rundetails, summarize_results into test_run_results
        https://bugs.webkit.org/show_bug.cgi?id=104963

        Reviewed by Eric Seidel.

        More cleanup; this the plain-old-data functions out of manager.py
        and into test_run_results next to the other aggregate data structures.

        Also this cleans up a bunch of test code and reduces duplication.

        * Scripts/webkitpy/layout_tests/controllers/manager.py:
        (Manager.run):
        * Scripts/webkitpy/layout_tests/controllers/manager_unittest.py:
        (ManagerTest.test_look_for_new_crash_logs):
        * Scripts/webkitpy/layout_tests/models/test_run_results.py:
        (TestRunResults.__init__):
        (TestRunResults.add):
        (RunDetails):
        (RunDetails.__init__):
        (_interpret_test_failures):
        (summarize_results):
        * Scripts/webkitpy/layout_tests/models/test_run_results_unittest.py: Added.
        (get_result):
        (run_results):
        (summarized_results):
        (InterpretTestFailuresTest):
        (InterpretTestFailuresTest.setUp):
        (InterpretTestFailuresTest.test_interpret_test_failures):
        (SummarizedResultsTest):
        (SummarizedResultsTest.setUp):
        (SummarizedResultsTest.test_no_svn_revision):
        (SummarizedResultsTest.test_svn_revision):
        (SummarizedResultsTest.test_summarized_results_wontfix):
        * Scripts/webkitpy/layout_tests/views/buildbot_results_unittest.py:
        (BuildBotPrinterTests.get_printer):
        (BuildBotPrinterTests.test_print_unexpected_results):
        (BuildBotPrinterTests.test_print_results):

2012-12-13  Eric Seidel  <eric@webkit.org>

        Make --profile output easier to understand for pprof on linux
        https://bugs.webkit.org/show_bug.cgi?id=104957

        Reviewed by Dirk Pranke.

        pprof is kinda mysterious, so we print some information
        on how to use it, and how to learn how to read the sample dump.
        This is similar to what we've done for perf output for Chromium Android.

        * Scripts/webkitpy/common/system/profiler.py:
        (GooglePProf._pprof_path):
        (GooglePProf.profile_after_exit):

2012-12-13  Dirk Pranke  <dpranke@chromium.org>

        Revert r137407 - it didn't actually work right.
        https://bugs.webkit.org/show_bug.cgi?id=101976

        Unreviewed, build fix.

        Turns out that rebaselining was completely broken with this change :(
        We're passing in a list of test names rather than the list of
        failureInfo objects.

        * BuildSlaveSupport/build.webkit.org-config/public_html/TestFailures/scripts/controllers.js:
        (.):
        * BuildSlaveSupport/build.webkit.org-config/public_html/TestFailures/scripts/ui/results.js:
        (.):
        * BuildSlaveSupport/build.webkit.org-config/public_html/TestFailures/scripts/ui/results_unittests.js:

2012-12-13  Antoine Labour  <piman@chromium.org>

        [chromium] Small fixes for WebPluginContainer::setWebLayer
        https://bugs.webkit.org/show_bug.cgi?id=104953

        Reviewed by James Robinson.

        * DumpRenderTree/chromium/TestRunner/src/WebTestPlugin.cpp: Clean up
        dangling pointers, force correct invalidation of the layer.

2012-12-13  Eric Seidel  <eric@webkit.org>

        Add --profiler=PROFILER option to run-perf-tests to allow specifying which profiler to use on platforms with many
        https://bugs.webkit.org/show_bug.cgi?id=104891

        Reviewed by Dirk Pranke.

        I also implemented a very simple "Sample" Profiler using
        Mac OS X's /usr/bin/sample command line tool.

        I also moved the map(unicode, args) call into Executive.popen
        so that all callers don't have to do it themselves.

        The real reason for this abstraction is to make it easy
        to support both perf and pprof on linux which seem to
        be about equally popular among those I ask in the Chrome team.

        * Scripts/webkitpy/common/system/executive.py:
        (Executive.popen):
        * Scripts/webkitpy/common/system/profiler.py:
        (ProfilerFactory.create_profiler):
        (ProfilerFactory):
        (ProfilerFactory.available_profilers_by_name):
        (ProfilerFactory.default_profiler_name):
        (Sample):
        (Sample.__init__):
        (Sample.attach_to_pid):
        (Sample.profile_after_exit):
        (IProfiler.attach_to_pid):
        * Scripts/webkitpy/layout_tests/port/driver.py:
        (Driver.__init__):
        * Scripts/webkitpy/performance_tests/perftestsrunner.py:
        (PerfTestsRunner._parse_args):

2012-12-13  Dirk Pranke  <dpranke@chromium.org>

        support -wk2 port names properly in webkitpy.layout_tests.port
        https://bugs.webkit.org/show_bug.cgi?id=104761

        Reviewed by Eric Seidel.

        Our support for WK2 port names was inconsistent at best; this patch
        modifies the code so that <port_name>-wk2 is supported for all ports that
        have WK2 implementations and is equivalent to specifying <port_name>
        and -2/--webkit-test-runner. In addition, this modifies
        builders.all_port_names() to include the wk2 variants.

        * Scripts/webkitpy/common/checkout/baselineoptimizer.py:
        * Scripts/webkitpy/layout_tests/port/apple.py:
        (ApplePort.determine_full_port_name):
        * Scripts/webkitpy/layout_tests/port/base.py:
        (Port.determine_full_port_name):
        (Port.__init__):
        * Scripts/webkitpy/layout_tests/port/builders.py:
        * Scripts/webkitpy/layout_tests/port/driver_unittest.py:
        (DriverTest.make_port):
        * Scripts/webkitpy/layout_tests/port/mac.py:
        (MacPort.default_baseline_search_path):
        * Scripts/webkitpy/layout_tests/port/win.py:
        (WinPort.default_baseline_search_path):
        * Scripts/webkitpy/tool/commands/rebaseline_unittest.py:
        (TestRebaselineExpectations.test_rebaseline_expectations):

2012-12-13  Ian Vollick  <vollick@chromium.org>

        [chromium] Add a virtual test suite for enabling opt-in to composited scrolling
        https://bugs.webkit.org/show_bug.cgi?id=104911

        Reviewed by Adrienne Walker.

        Adds two virtual tests suites to run the tests in
        compositing/overflow/ and scrollbars/ with the flag
        --enable-accelerated-compositing-for-overflow-scroll

        * Scripts/webkitpy/layout_tests/port/chromium.py:
        (ChromiumPort.virtual_test_suites):

2012-12-13  Dirk Pranke  <dpranke@chromium.org>

        delete extraneous self.fail in mastercfg_unittest.py
        https://bugs.webkit.org/show_bug.cgi?id=104940

        Reviewed by Eric Seidel.

        This was accidentally introduced in r137404.

        * BuildSlaveSupport/build.webkit.org-config/mastercfg_unittest.py:

2012-12-13  Dirk Pranke  <dpranke@chromium.org>

        Fix a mis-named variable after r137621.
        https://bugs.webkit.org/show_bug.cgi?id=104871

        Unreviewed, build fix.

        * Scripts/webkitpy/layout_tests/views/buildbot_results.py:
        (BuildBotPrinter.print_results):
        * Scripts/webkitpy/layout_tests/views/buildbot_results_unittest.py:

2012-12-13  Dirk Pranke  <dpranke@chromium.org>

        webkitpy: rename ResultSummary
        https://bugs.webkit.org/show_bug.cgi?id=104871

        Reviewed by Eric Seidel.

        This patch changes the names of ResultSummary and related modules,
        classes, and variables as a part of the larger clean up in bug 103824.

        This change is basically a bunch of search and replaces:
        - result_summary.py -> test_run_results.py
        - class ResultSummary -> class TestRunResults
        - "result_summary" or "rs" as a generic variable name -> "run_results",
          when it doesn't matter (or we don't know) if this refers to the
          initial pass over the tests or the retry pass.
        - "result_summary" as a variable containing the results of the initial,
          complete test run -> "initial_results"
        - "retry_summary" as a variable containing the results of retried
          results -> "retry_results"
        - ResultSummary.results (the property) -> TestRunResults.results_by_name
        - ResultSummary.failures (the property) -> TestRunResults.failures_by_name
        - RunDetails.result_summary -> RunDetails.initial_results
        - RunDetails.retry_summary -> RunDetails.retry_results

        * Scripts/webkitpy/layout_tests/controllers/layout_test_runner.py:
        (LayoutTestRunner.__init__):
        (LayoutTestRunner.run_tests):
        (LayoutTestRunner._mark_interrupted_tests_as_skipped):
        (LayoutTestRunner._interrupt_if_at_failure_limits):
        (LayoutTestRunner._interrupt_if_at_failure_limits.interrupt_if_at_failure_limit):
        (LayoutTestRunner._update_summary_with_result):
        (LayoutTestRunner._handle_finished_test):
        * Scripts/webkitpy/layout_tests/controllers/layout_test_runner_unittest.py:
        (FakePrinter.print_expected):
        (LayoutTestRunnerTests.test_interrupt_if_at_failure_limits):
        (LayoutTestRunnerTests.test_update_summary_with_result):
        * Scripts/webkitpy/layout_tests/controllers/manager.py:
        (RunDetails.__init__):
        (summarize_results):
        (Manager.run):
        (Manager._look_for_new_crash_logs):
        (Manager._tests_to_retry):
        (Manager._upload_json_files):
        (Manager._stats_trie):
        * Scripts/webkitpy/layout_tests/controllers/manager_unittest.py:
        (ManagerTest.test_look_for_new_crash_logs):
        (SummarizeResultsTest):
        (SummarizeResultsTest.get_run_results):
        (SummarizeResultsTest.summarized_results):
        * Scripts/webkitpy/layout_tests/layout_package/json_layout_results_generator.py:
        (JSONLayoutResultsGenerator.__init__):
        (JSONLayoutResultsGenerator._get_modifier_char):
        (JSONLayoutResultsGenerator._insert_failure_summaries):
        (JSONLayoutResultsGenerator._get_failure_summary_entry):
        * Scripts/webkitpy/layout_tests/models/test_run_results.py: Renamed from Tools/Scripts/webkitpy/layout_tests/models/result_summary.py.
        (TestRunResults):
        (TestRunResults.__init__):
        (TestRunResults.add):
        * Scripts/webkitpy/layout_tests/run_webkit_tests_integrationtest.py:
        (get_test_results):
        (MainTest.test_basic):
        * Scripts/webkitpy/layout_tests/views/buildbot_results.py:
        (BuildBotPrinter.print_results):
        (BuildBotPrinter.print_run_results):
        (BuildBotPrinter._print_run_results_entry):
        * Scripts/webkitpy/layout_tests/views/buildbot_results_unittest.py:
        (BuildBotPrinterTests.get_run_results):
        (BuildBotPrinterTests.test_print_unexpected_results.get_unexpected_results):
        (BuildBotPrinterTests):
        * Scripts/webkitpy/layout_tests/views/printing.py:
        (Printer.print_expected):
        (Printer._print_expected_results_of_type):
        (Printer.print_results):
        (Printer._print_timing_statistics):
        (Printer._print_worker_statistics):
        (Printer._print_aggregate_test_statistics):
        (Printer._print_individual_test_times):
        (Printer._print_directory_timings):
        * Scripts/webkitpy/layout_tests/views/printing_unittest.py:

2012-12-13  Thiago Marcos P. Santos  <thiago.santos@intel.com>

        [EFL] The WebKit2 bots are building and executing WebKit1 tests
        https://bugs.webkit.org/show_bug.cgi?id=104690

        Reviewed by Csaba OsztrogonÃ¡c.

        Pass --no-webkit1 option to the EFL WK2 bots when building. This
        will disable WK1 API and thus, the WK1 API tests.

        * BuildSlaveSupport/build.webkit.org-config/config.json:
        * BuildSlaveSupport/build.webkit.org-config/master.cfg:
        (CompileWebKit2Only):
        (BuildAndTestFactory):
        (BuildAndTestFactory.__init__):
        (BuildAndTestWebKit2OnlyFactory):
        Now bots using BuildAndTestWebKit2OnlyFactory (for instance only EFL) will
        get --no-webkit1 as a parameter on the build-webkit script.
        * Scripts/build-webkit:
        Added support for -no-webkit1 for the Qt and EFL port.

2012-12-13  Eric Seidel  <eric@webkit.org>

        build-webkit --chromium-android forces Make even when update-webkit used --ninja
        https://bugs.webkit.org/show_bug.cgi?id=104839

        Reviewed by Tony Chang.

        This was recommended by Peter as part of:
        https://bugs.webkit.org/show_bug.cgi?id=104434#c4
        Fixing this makes build-webkit --chromium-android work for the common (ninja) case.

        * Scripts/webkitdirs.pm:
        (buildChromium):

2012-12-13  Julie Parent  <jparent@chromium.org>

        Loader_unittests should reset state between runs.
        https://bugs.webkit.org/show_bug.cgi?id=104862

        Reviewed by Dirk Pranke.

        The loader_unittests were not resetting state between runs, leaving
        a lot of data behind in global objects that the dashboard and tests
        rely on.  A handful were resetting just a few objects.  Use the common
        resetGlobals() method instead.

        * TestResultServer/static-dashboards/loader_unittests.js:

2012-12-13  Andras Becsi  <andras.becsi@digia.com>

        [Qt][WK2] Fix painting on Mac with retina display
        https://bugs.webkit.org/show_bug.cgi?id=104574

        Reviewed by Kenneth Rohde Christiansen.

        Remove setting the devicePixelRatio experimental property
        since the value is now automatically picked up from Qt.

        * MiniBrowser/qt/qml/BrowserWindow.qml:

2012-12-13  Jussi Kukkonen  <jussi.kukkonen@intel.com>

        [EFL][GTK] Don't call deprecated g_type_init when glib => 2.35
        https://bugs.webkit.org/show_bug.cgi?id=103209

        Reviewed by Kenneth Rohde Christiansen.

        g_type_init() is deprecated from 2.35.0 onwards. Don't call it
        in that case to avoid warnings and/or build failure.

        * DumpRenderTree/gtk/ImageDiff.cpp:
        (main):

2012-12-13  Claudio Saavedra  <csaavedra@igalia.com>

        [Tools] Add exception for gtk_style_context_get()
        https://bugs.webkit.org/show_bug.cgi?id=104896

        Reviewed by Martin Robinson.

        Add new exception for gtk_style_context_get().

        * Scripts/webkitpy/style/checkers/cpp.py:
        (check_for_null): Add exception for gtk_style_context_get().
        * Scripts/webkitpy/style/checkers/cpp_unittest.py:
        (WebKitStyleTest.test_null_false_zero): Add a unit
        test for the new exception.

2012-12-13  Joaquim Rocha  <jrocha@igalia.com>

        REGRESSION (r137432): The /webkit2/WebKitCookieManager/accept-policy unit test is failing
        https://bugs.webkit.org/show_bug.cgi?id=104790

        Reviewed by Carlos Garcia Campos.

        Unskip the GTK accept policy test.

        * Scripts/run-gtk-tests:
        (TestRunner):

2012-12-13  Xingnan Wang  <xingnan.wang@intel.com>

        Unreviewed. Adding myself to committers list.

        * Scripts/webkitpy/common/config/committers.py:

2012-12-12  Roger Fong  <roger_fong@apple.com>

        Unreviewed. Fix typo in NRWT.

        * Scripts/webkitpy/layout_tests/port/base.py:
        (Port.is_reference_html_file):

2012-12-12  Roger Fong  <roger_fong@apple.com>

        Fix detection of ref test files in old and new run webkit tests.
        https://bugs.webkit.org/show_bug.cgi?id=104850.

        Reviewed by Timothy Horton.

        * Scripts/old-run-webkit-tests:
        (isUsedInReftest): 
        Add notref and ref prefix and suffix cases to isUsedinReftest.
        * Scripts/webkitpy/layout_tests/port/base.py:
        (Port):
        (Port.is_reference_html_file): 
        Typo in NRWT.

2012-12-12  Dirk Pranke  <dpranke@chromium.org>

        rework ChromiumAndroidDriver.start() et. al to avoid funky layering
        https://bugs.webkit.org/show_bug.cgi?id=104856

        Reviewed by Eric Seidel.

        r137523 / bug 10357 introduced some back-and-forth hopping during
        driver.start() in the chromium android port. This patch cleans it
        up a bit.

        * Scripts/webkitpy/layout_tests/port/chromium_android.py:
        (ChromiumAndroidDriver.__init__):
        (ChromiumAndroidDriver._start_once):
        * Scripts/webkitpy/layout_tests/port/chromium_android_unittest.py:
        * Scripts/webkitpy/layout_tests/port/driver.py:
        (Driver.start):
        (Driver._start):

2012-12-12  Eric Seidel  <eric@webkit.org>

        Add support for run-perf-tests --chromium-android --profile
        https://bugs.webkit.org/show_bug.cgi?id=103587

        Reviewed by Dirk Pranke.

        This makes it possible to profile PerformanceTests on an Android device
        using run-perf-tests --chromium-android --profile.
        CPU profiling on Android is sadly non-trivial, but this goes a long
        ways towards making it more accessible to non-Android developers.

        Although this script requires your device to be flashed with a
        userdebug build (an annoyingly non-trivial endeavor for external contributors)
        it endeavors to detect and explain the common errors encountered
        while trying to setup a device for perf-based profiling.

        * Scripts/webkitpy/common/system/profiler.py:
        (GooglePProf.profile_after_exit): Discovered that pprof will just hang if passed a missing file.
        * Scripts/webkitpy/layout_tests/port/chromium_android.py:
        (AndroidPerf):
        (AndroidPerf.__init__):
        (AndroidPerf.check_configuration):
        (AndroidPerf.print_setup_instructions):
        (_file_exists_on_device):
        (_run_adb_command):
        (attach_to_pid):
        (_perf_version_string):
        (_find_perfhost_binary):
        (_perfhost_path):
        (_first_ten_lines_of_profile):
        (profile_after_exit):
        (ChromiumAndroidDriver.__init__):
        (ChromiumAndroidDriver.__init__.methods):
        (ChromiumAndroidDriver._find_or_create_symfs):
        (ChromiumAndroidDriver._start_once):
        (ChromiumAndroidDriver):
        (ChromiumAndroidDriver._run_post_start_tasks):
        (ChromiumAndroidDriver._pid_from_android_ps_output):
        (ChromiumAndroidDriver._pid_on_target):
        * Scripts/webkitpy/layout_tests/port/chromium_android_unittest.py:
        (ChromiumAndroidDriverTest.test_pid_from_android_ps_output):
        (AndroidPerfTest):
        (AndroidPerfTest.test_perf_output_regexp):
        * Scripts/webkitpy/layout_tests/port/driver.py:
        (Driver._setup_environ_for_driver):
        (Driver):
        (Driver._start):
        (Driver._run_post_start_tasks):
        (Driver._pid_on_target):

2012-12-12  Dirk Pranke  <dpranke@chromium.org>

        nrwt: remove deprecated ORWT compatibility command line flags
        https://bugs.webkit.org/show_bug.cgi?id=104301

        Reviewed by Eric Seidel.

        The command line flags for --noshow-results, --[no-]launch-safari,
        and --use-remote-links-to-tests were for compatibility with
        old-run-webkit-tests, but the compatibility is not needed any more
        since NRWT is basically default and the scripts that passed the
        old flags have been updated.

        * Scripts/webkitpy/layout_tests/run_webkit_tests.py:
        (_set_up_derived_options):
        (parse_args):

2012-12-12  John Griggs  <jgriggs@rim.com>

        2012-12-12  John Griggs  <jgriggs@rim.com>

        [BlackBerry] Update Media Controls
        https://bugs.webkit.org/show_bug.cgi?id=104443
        https://przilla.ott.qnx.com/bugzilla/show_bug.cgi?id=204748

        Update Media Controls for BlackBerry platform to allow audio, embedded video and fullscreen video controls to be positioned and styled differently.

        Reviewed by Rob Buis.

        BlackBerry-specific update to Media Controls - No new tests required.

        * Scripts/webkitperl/FeatureList.pm:

2012-12-12  Justin Novosad  <junov@google.com>

        Adding myself to SkiaGraphics watchlist

        Unreviewed

        * Scripts/webkitpy/common/config/watchlist:

2012-12-12  Martin Robinson  <mrobinson@igalia.com>

        [GTK] Add authentication support to DRT and fix exposed issues in the libsoup backend
        https://bugs.webkit.org/show_bug.cgi?id=104285

        Reviewed by Gustavo Noronha Silva.

        Add support to DumpRenderTree for running authentication tests. Since the DRT
        expects an authentication callback, we add one to DRTSupport to avoid #ifdefs
        in platform-independent code for GTK+.

        * DumpRenderTree/gtk/DumpRenderTree.cpp:
        (resetDefaultsToConsistentValues): Reset the authentication password and username.
        (authenticationCallback): Added.
        (createWebView): Attach the authentiation callback during startup.
        * DumpRenderTree/gtk/TestRunnerGtk.cpp:
        (soupURIToKURL): soup_uri_to_string does not preserve passwords embedded
        in the URL so we add a somewhat messy method of re-adding them when they exist.
        It would be nice to use soupURIToKURL here, but it seems we cannot use KURL without
        pulling in lots of WebCore code so we use string search and replace.
        (TestRunner::queueLoad): Use the new helper.

2012-12-12  Dirk Pranke  <dpranke@chromium.org>

        garden-o-matic should prefer efl/ over efl-wk1/ and efl-wk2/ when rebaselining
        https://bugs.webkit.org/show_bug.cgi?id=102389

        Reviewed by Tony Chang.

        The code wasn't aware of both the efl-wk1 and efl-wk2 variants,
        because all_port_names() by itself doesn't tell you about the
        variants. Work around this for now, and filed bug 104761 to
        address the underlying problem.

        * Scripts/webkitpy/common/checkout/baselineoptimizer.py:
        * Scripts/webkitpy/common/checkout/baselineoptimizer_unittest.py:
        (BaselineOptimizerTest.test_efl):

2012-12-12  Krzysztof Czech  <k.czech@samsung.com>

        [EFL] Possibility to turn off accessibility feature for WebKit-EFL.
        https://bugs.webkit.org/show_bug.cgi?id=103036

        Reviewed by Laszlo Gombos.

        Guard dependencies for accessibility (ATK), so that they can be turned off.

        * WebKitTestRunner/InjectedBundle/AccessibilityUIElement.h:
        (AccessibilityUIElement):
        * WebKitTestRunner/PlatformEfl.cmake:

2012-12-12  Simon Fraser  <simon.fraser@apple.com>

        Add some entries in the watchlist, and register me for them.

        * Scripts/webkitpy/common/config/watchlist:

2012-12-12  Ilya Tikhonovsky  <loislo@chromium.org>

        Web Inspector: Native Memory Instrumentation: remove fake root MemoryObjectInfo.
        https://bugs.webkit.org/show_bug.cgi?id=104796

        Reviewed by Yury Semikhatsky.

        It was not a good idea to introduce a fake root MemoryObjectInfo.
        It makes a problem when we visit an object without its own MemoryObjectType.

        Example: RenderBox has a global pointer to a hash map.
        HashMap doesn't have its own object type because it is a generic container.
        It will inherit object type from the fake root memory object info.
        The same could happen for another container in another class with other MemoryObjectType.

        This fact forces me to create custom process method for root objects
        because they need to have their own MemoryObjectInfo with customisable memory object type.

        * TestWebKitAPI/Tests/WTF/MemoryInstrumentationTest.cpp:

        Drive by fix: InstrumentedPointer* was replaced with Wrapper* because actually it is using
        for instrumented and not instrumented object classes.

2012-12-12  Zan Dobersek  <zandobersek@gmail.com>

        [GTK] Remove the last of unnecessary configuration options in configure.ac
        https://bugs.webkit.org/show_bug.cgi?id=104793

        Reviewed by Martin Robinson.

        Removing the filters and indexed database features from the list of features
        being configurable through the configure script. This is not the case anymore
        as the corresponding configuration options are being removed.

        * Scripts/webkitdirs.pm:
        (buildAutotoolsProject):

2012-12-12  Mario Sanchez Prada  <mario@webkit.org>

        [GTK][WK2] New API to detect display/execution of insecure content
        https://bugs.webkit.org/show_bug.cgi?id=104578

        Reviewed by Martin Robinson.

        Add coding style exception for 'readability/enum_casing' in GTK.

        The GTK+ API use upper case, underscore separated, words in
        certain types of enums (e.g. signals, properties).

        * Scripts/webkitpy/style/checker.py: Added exception, both for
        WebKitGTK+ and WebKit2GTK+.

2012-12-12  Jochen Eisinger  <jochen@chromium.org>

        [chromium] Fix build on chromium-win

        Unreviewed build-fix.

        MSVS indeed doesn't have snprintf, adding wtf/StringExtras.h include
        to work around that.

        * DumpRenderTree/chromium/TestRunner/src/WebTestPlugin.cpp:

2012-12-12  Simon Hausmann  <simon.hausmann@digia.com>

        [Qt] Fix build on Mac

        Reviewed by Csaba OsztrogonÃ¡c.

        On Mac OS X we have sqlite as a system library available.

        * qmake/mkspecs/features/features.prf:

2012-12-12  Zan Dobersek  <zandobersek@gmail.com>

        Unreviewed GTK gardening.

        Skipping another unit test that regressed in r137432.

        * Scripts/run-gtk-tests:
        (TestRunner):

2012-12-12  Simon Hausmann  <simon.hausmann@digia.com>

        [Qt] Fix linkage against SQLite
        https://bugs.webkit.org/show_bug.cgi?id=104781

        Reviewed by Csaba OsztrogonÃ¡c.

        Detect SQLite either through pkg-config, from the SQLITE3SRCDIR
        environment variable or from qtbase via a qt5.git build. Bail out early
        with an error message if neither option applies.

        This removes the usage of $$QT.core.sources and the dependency on Qt's
        system-sqlite configure setting. We should always favour a system
        library over a copy in Qt.

        * qmake/mkspecs/features/features.prf:

2012-12-12  Tommy Widenflycht  <tommyw@google.com>

        MediaStream API: Change the data channel descriptor pattern to a handler pattern
        https://bugs.webkit.org/show_bug.cgi?id=104543

        Reviewed by Kent Tamura.

        Adding mocks to be able to test this refactoring.

        * DumpRenderTree/DumpRenderTree.gypi:
        * DumpRenderTree/chromium/MockWebRTCDataChannelHandler.cpp: Added.
        (DataChannelReadyStateTask):
        (DataChannelReadyStateTask::DataChannelReadyStateTask):
        (MockWebRTCDataChannelHandler::MockWebRTCDataChannelHandler):
        (MockWebRTCDataChannelHandler::setClient):
        (MockWebRTCDataChannelHandler::bufferedAmount):
        (MockWebRTCDataChannelHandler::sendStringData):
        (MockWebRTCDataChannelHandler::sendRawData):
        (MockWebRTCDataChannelHandler::close):
        * DumpRenderTree/chromium/MockWebRTCDataChannelHandler.h: Added.
        (MockWebRTCDataChannelHandler):
        (MockWebRTCDataChannelHandler::taskList):
        * DumpRenderTree/chromium/MockWebRTCPeerConnectionHandler.cpp:
        (RTCPeerConnectionReadyStateTask::RTCPeerConnectionReadyStateTask):
        (RemoteDataChannelTask::RemoteDataChannelTask):
        (MockWebRTCPeerConnectionHandler::createDataChannel):
        (MockWebRTCPeerConnectionHandler::stop):
        * DumpRenderTree/chromium/MockWebRTCPeerConnectionHandler.h:
        (MockWebRTCPeerConnectionHandler):

2012-12-12  Jochen Eisinger  <jochen@chromium.org>

        [chromium] WebTestPlugin must not depend on WTF::String
        https://bugs.webkit.org/show_bug.cgi?id=104783

        Reviewed by Kent Tamura.

        In a component build, we can't access the WTF that is part of the
        WebKit component. Accessing WTF instead will pull in a separate copy
        into the TestRunner library. Instead of WTF::String::number use
        snprintf() to print numbers.

        * DumpRenderTree/chromium/TestRunner/src/WebTestPlugin.cpp:

2012-12-12  Jocelyn Turcotte  <jocelyn.turcotte@digia.com>

        [Qt] Do not automatically enable force_static_libs_as_shared when using debug_and_release
        https://bugs.webkit.org/show_bug.cgi?id=104562

        Reviewed by Tor Arne VestbÃ¸.

        force_static_libs_as_shared creates issues on Mac if QtWebKit is built as a framework.
        QtWebProcess, for example, will link to the framework's release library and will rely
        on DYLD_IMAGE_SUFFIX to switch to the debug build. Since QtWebProcess will also links
        directly to the debug build of WebCore, and that QtWebKit release will link in the
        release build of WebCore, both the debug and release version will be loaded.

        To fix this properly we should make sure that applications always link to the release
        build of dependent libraries by bypassing resolveFinalLibraryName.
        Disable it for now as force_static_libs_as_shared is mainly for development while
        debug_and_release is mainly for production builds.

        * qmake/mkspecs/features/default_post.prf:

2012-12-12  Zan Dobersek  <zandobersek@gmail.com>

        Unreviewed GTK gardening of the unit tests.

        Skip two unit tests that regressed during the hackfest.

        * Scripts/run-gtk-tests:
        (TestRunner):

2012-12-11  Ryosuke Niwa  <rniwa@webkit.org>

        Add Koji Ishii to the list of contributors.

        * Scripts/webkitpy/common/config/committers.py:

2012-12-11  Dominic Mazzoni  <dmazzoni@google.com>

        AX: Make isActionSupported cross-platform.
        https://bugs.webkit.org/show_bug.cgi?id=104681

        Reviewed by Chris Fleizach.

        Replace isActionSupported, which takes a platform-specific
        argument, with three cross-platform methods.

        * DumpRenderTree/AccessibilityUIElement.cpp:
        (isPressActionSupportedCallback):
        (isIncrementActionSupportedCallback):
        (isDecrementActionSupportedCallback):
        (AccessibilityUIElement::getJSClass):
        * DumpRenderTree/AccessibilityUIElement.h:
        (AccessibilityUIElement):
        * DumpRenderTree/blackberry/AccessibilityUIElementBlackBerry.cpp:
        (AccessibilityUIElement::isPressActionSupported):
        (AccessibilityUIElement::isIncrementActionSupported):
        (AccessibilityUIElement::isDecrementActionSupported):
        * DumpRenderTree/chromium/TestRunner/src/AccessibilityUIElementChromium.cpp:
        (WebTestRunner::AccessibilityUIElement::AccessibilityUIElement):
        (WebTestRunner::AccessibilityUIElement::isPressActionSupportedCallback):
        (WebTestRunner):
        (WebTestRunner::AccessibilityUIElement::isIncrementActionSupportedCallback):
        (WebTestRunner::AccessibilityUIElement::isDecrementActionSupportedCallback):
        (WebTestRunner::AccessibilityUIElement::incrementCallback):
        (WebTestRunner::AccessibilityUIElement::decrementCallback):
        (WebTestRunner::AccessibilityUIElement::pressCallback):
        * DumpRenderTree/chromium/TestRunner/src/AccessibilityUIElementChromium.h:
        (AccessibilityUIElement):
        * DumpRenderTree/gtk/AccessibilityUIElementGtk.cpp:
        (AccessibilityUIElement::isPressActionSupported):
        (AccessibilityUIElement::isIncrementActionSupported):
        (AccessibilityUIElement::isDecrementActionSupported):
        * DumpRenderTree/mac/AccessibilityUIElementMac.mm:
        (AccessibilityUIElement::isPressActionSupported):
        (AccessibilityUIElement::isIncrementActionSupported):
        (AccessibilityUIElement::isDecrementActionSupported):
        * DumpRenderTree/win/AccessibilityUIElementWin.cpp:
        (AccessibilityUIElement::isPressActionSupported):
        (AccessibilityUIElement::isIncrementActionSupported):
        (AccessibilityUIElement::isDecrementActionSupported):
        * WebKitTestRunner/InjectedBundle/AccessibilityUIElement.cpp:
        (WTR::AccessibilityUIElement::isPressActionSupported):
        (WTR::AccessibilityUIElement::isIncrementActionSupported):
        (WTR::AccessibilityUIElement::isDecrementActionSupported):
        * WebKitTestRunner/InjectedBundle/AccessibilityUIElement.h:
        (AccessibilityUIElement):
        * WebKitTestRunner/InjectedBundle/Bindings/AccessibilityUIElement.idl:
        * WebKitTestRunner/InjectedBundle/mac/AccessibilityUIElementMac.mm:
        (WTR::AccessibilityUIElement::isPressActionSupported):
        (WTR):
        (WTR::AccessibilityUIElement::isIncrementActionSupported):
        (WTR::AccessibilityUIElement::isDecrementActionSupported):

2012-12-11  Dirk Pranke  <dpranke@chromium.org>

        nrwt: remove result_summary.total_tests_by_expectation
        https://bugs.webkit.org/show_bug.cgi?id=104756

        Reviewed by Eric Seidel.

        This field wasn't being used by anything.

        * Scripts/webkitpy/layout_tests/models/result_summary.py:
        (ResultSummary.__init__):

2012-12-11  Dirk Pranke  <dpranke@chromium.org>

        garden-o-matic doesn't know about reftests
        https://bugs.webkit.org/show_bug.cgi?id=101976

        Reviewed by Ojan Vafai.

        This is a first attempt at fixing this, sort of a "stop-the-bleeding"
        fix. We will now look at the list of tests we're asked to rebaseline,
        and log which ones are reftests into the status area, and rebaseline
        the rest.

        Longer-term, we should display feedback in the results area based on
        which tests we're looking at. If the test list contains no reftests,
        we should behave as today; if the list is all reftest, we should
        probably disable the button, and if the list is a mix, we should
        probably display an alert next to the button or something. It would
        also be nice to annotate which tests were reftests, maybe with a
        "(reftest)" next to the test name or something.

        * BuildSlaveSupport/build.webkit.org-config/public_html/TestFailures/scripts/controllers.js:
        (.):
        * BuildSlaveSupport/build.webkit.org-config/public_html/TestFailures/scripts/ui/results.js:
        (.):
        * BuildSlaveSupport/build.webkit.org-config/public_html/TestFailures/scripts/ui/results_unittests.js:

2012-12-11  Dirk Pranke  <dpranke@chromium.org>

        REGRESSION(r133380): new tests without expected file reported as failing tests on the bots
        https://bugs.webkit.org/show_bug.cgi?id=101469

        Reviewed by Ryosuke Niwa.

        Fix parsing of NRWT's output to identify missing results separately
        from other regressions.

        * BuildSlaveSupport/build.webkit.org-config/master.cfg:
        (RunWebKitTests._parseNewRunWebKitTestsOutput):
        * BuildSlaveSupport/build.webkit.org-config/mastercfg_unittest.py:
        (MasterCfgTest.test_nrwt_leaks_parsing):
        (test_nrwt_missing_results):

2012-12-11  Dirk Pranke  <dpranke@chromium.org>

        buildbot: change run-webkit-tests --no-launch-safari to --no-show-results
        https://bugs.webkit.org/show_bug.cgi?id=104299

        Reviewed by Ryosuke Niwa.

        Since --no-show-results is the more generically-named flag that NRWT uses.

        * BuildSlaveSupport/build.webkit.org-config/master.cfg:
        (RunWebKitTests):

2012-12-11  Dirk Pranke  <dpranke@chromium.org>

        remove --use-remote-links-to-tests from buildbot configs (except apple win)
        https://bugs.webkit.org/show_bug.cgi?id=104291

        Reviewed by Csaba OsztrogonÃ¡c.

        This flag is ignored by NRWT and was just implemented for compatibility.
        ORWT still uses it, though.

        * BuildSlaveSupport/build.webkit.org-config/master.cfg:
        (RunWebKitTests):
        (RunWebKitTests.start):

2012-12-11  Anders Carlsson  <andersca@apple.com>

        ASSERT running platform/mac/plugins/convert-point.html on the WK2 bots
        https://bugs.webkit.org/show_bug.cgi?id=104735

        Reviewed by Jon Honeycutt.

        Do the testing from within NPP_New instead of NPN_SetWindow. Plug-ins aren't supposed to do any real work inside NPP_SetWindow,
        and doing so will more easily trigger the assertion failure. Ideally we should get rid of the initial sync painting pass, but this
        gets the test passing again!

        * DumpRenderTree/TestNetscapePlugIn/Tests/mac/ConvertPoint.cpp:
        (ConvertPoint::NPP_New):

2012-12-11  Julie Parent  <jparent@chromium.org>

        Dashboard unit tests should not make xhrs.
        https://bugs.webkit.org/show_bug.cgi?id=104598

        Reviewed by Dirk Pranke.

        The unit test were requesting 25 files that they did not use.
        Stub out loader.request to avoid making the xhrs.
        Result: order of magnitude speed improvement in test run time (from ~1600ms to 160ms on my machine).
        
        * TestResultServer/static-dashboards/run-embedded-unittests.html:
        * TestResultServer/static-dashboards/run-unittests.html:

2012-12-11  Filip Pizlo  <fpizlo@apple.com>

        Profiler should show bytecode dumps as they would have been visible to the JITs, including the profiling data that the JITs would see
        https://bugs.webkit.org/show_bug.cgi?id=104647

        Reviewed by Oliver Hunt.

        Added a "profiling" (or "p") command to show the profiling data that the JITs saw
        for each JIT compilation of a code block.
        
        Also added instruction counts in the "full" display and made the "full" display the
        default thing you see.

        * Scripts/display-profiler-output:

2012-12-11  Eric Seidel  <eric@webkit.org>

        Unreviewed, rolling out r137371.
        http://trac.webkit.org/changeset/137371
        https://bugs.webkit.org/show_bug.cgi?id=104434

        Various scripts are not ready for out/ as the build directory,
        this can't work as written.

        * Scripts/update-webkit:
        * Scripts/webkitdirs.pm:
        (buildChromium):

2012-12-11  Zan Dobersek  <zandobersek@gmail.com>

        Unreviewed GTK build functionality fix.

        Turns out the CSP feature was not enabled, that's why all the tests were failing.

        * Scripts/webkitperl/FeatureList.pm:

2012-12-11  Eric Seidel  <eric@webkit.org>

        Make Ninja the default build system for build-webkit --chromium
        https://bugs.webkit.org/show_bug.cgi?id=104434

        Reviewed by Daniel Bates.

        As far as I can tell, most Chromium developers are now using Ninja
        as their default build system instead of the native Xcode/Visual Studio/Make.
        This change makes Ninja the default for developers as well as all Chromium webkit bots.

        Developers can pass --no-ninja to get the platform-native buildsystem instead of Ninja.
        It's possible we may wish to make this a per-platform default, and have
        Ninja only be the default for Mac/Linux.

        There was a thread on webkit-dev discussing this change:
        http://lists.webkit.org/pipermail/webkit-dev/2012-December/023113.html

        * Scripts/update-webkit:

2012-12-11  Dirk Pranke  <dpranke@chromium.org>

        nrwt: record the order and run times of all of the tests in a single file
        https://bugs.webkit.org/show_bug.cgi?id=104184

        Reviewed by Ryosuke Niwa.

        Replace the N tests_run*.txt files that we output into
        layout-test-results with a single packed JSON trie that contains
        the test ordering and run statistics. This can eventually be uploaded
        to the TestResultsServer to replace the times.json file we currently
        upload as well, and will let us replay the results of a previous
        run fairly deterministically.

        * Scripts/webkitpy/layout_tests/controllers/layout_test_runner.py:
        (Worker.__init__):
        (Worker.start):
        (Worker._run_test):
        (Worker.stop):
        (Worker._clean_up_after_test):
        * Scripts/webkitpy/layout_tests/controllers/manager.py:
        (Manager._upload_json_files):
        (Manager._copy_results_html_file):
        (Manager):
        (Manager._stats_trie):
        (Manager._stats_trie._worker_number):
        * Scripts/webkitpy/layout_tests/models/test_results.py:
        (TestResult.__init__):
        * Scripts/webkitpy/layout_tests/run_webkit_tests_integrationtest.py:
        (MainTest.test_missing_and_unexpected_results):
        (MainTest.test_retrying_and_flaky_tests):
        (EndToEndTest.test_end_to_end):
        (EndToEndTest.test_reftest_with_two_notrefs):
        (RebaselineTest.test_reset_results):
        (RebaselineTest.test_missing_results):
        (RebaselineTest.test_new_baseline):

2012-12-11  Dirk Pranke  <dpranke@chromium.org>

        check-webkit-style complaining about TestExpectations lines a patch didn't modify
        https://bugs.webkit.org/show_bug.cgi?id=104687

        Reviewed by Ojan Vafai.

        Way back in bug 60466 / r86165, we changed the style checker
        for TestExpectations to ensure that the entire file linted, not
        just the lines modified by a patch, in order to ensure that a
        new line didn't cause errors elsewhere in the file (e.g., by
        introducing duplicate lines). At the time, errors in the
        expectations files were fatal and we didn't have a separate step
        on the bots that would lint the files to ensure things were still
        okay, so this was probably the right thing to do, but it could
        cause some patches to fail the style check even though the patches
        themselves were fine.

        However, now errors aren't always fatal, and we have a separate build
        step to lint the files. So, we should probably not punish the
        patches and the style checker should filter out "unrelated" errors.

        In theory we should be comparing the output pre- and post-patch
        to filter out pre-existing errors, but I don't think the style
        checker has that ability.

        * Scripts/webkitpy/style/checkers/test_expectations.py:
        (TestExpectationsChecker.__init__):
        * Scripts/webkitpy/style/checkers/test_expectations_unittest.py:
        (TestExpectationsTestCase.assert_lines_lint):

2012-12-11  Dirk Pranke  <dpranke@chromium.org>

        nrwt isn't rejecting unrecognized expectations
        https://bugs.webkit.org/show_bug.cgi?id=104701

        Reviewed by Ojan Vafai.

        NRWT is silently ignoring unrecognized expectations like "Text"
        and "Audio" (largely because I haven't fully removed support for
        the old syntax and keywords and restructured the code to do the
        proper checking). Temporarily change the tokenizer to reject
        unrecognized expectations until I can make those changes.

        * Scripts/webkitpy/layout_tests/models/test_expectations.py:
        (TestExpectationParser._tokenize_line):
        * Scripts/webkitpy/layout_tests/models/test_expectations_unittest.py:
        (ExpectationSyntaxTests.test_unknown_expectation):
        (TestExpectationSerializationTests.disabled_test_string_whitespace_stripping):

2012-12-11  Martin Robinson  <mrobinson@igalia.com>

        Fix a typo in my previous commit that is causing test failures.

        Reviewed by Gustavo Noronha Silva.

        There was an extra bit of statement appended after the end of a conditional. Somehow
        this compiled and caused test failures.

        * DumpRenderTree/gtk/EventSender.cpp:
        (continuousMouseScrollByCallback):

2012-12-11  Martin Robinson  <mrobinson@igalia.com>

        [GTK] Spurious stderr output from the event sender
        https://bugs.webkit.org/show_bug.cgi?id=104678

        Reviewed by Gustavo Noronha Silva.

        Eliminate some spurious stderr output from the EventSender by using an early return
        instead of an assertion that prints a warning to the console.

        * DumpRenderTree/gtk/EventSender.cpp:
        (continuousMouseScrollByCallback): We don't support continuous scroll events that
        move by page, but we should just fail silently instead of printing an error.

2012-12-11  Joone Hur  <joone.hur@intel.com>

        [GTK] Add GraphicsLayerActor
        https://bugs.webkit.org/show_bug.cgi?id=91940

        Reviewed by Gustavo Noronha Silva.

        Add GraphicsLayerActor to the list of classes that contain GObjects
        in the style checker script so that it does not complain about GObject
        coding style.

        * Scripts/webkitpy/style/checker.py:

2012-12-11  Oswald Buddenhagen  <oswald.buddenhagen@digia.com>

        [Qt] remove hack which avoids unused .obj directories all over the place

        Reviewed by Simon Hausmann.

        The feature is subject to upstreaming in Qt itself in
        https://codereview.qt-project.org/#change,42011

        * qmake/mkspecs/features/default_post.prf:

2012-12-11  Oswald Buddenhagen  <oswald.buddenhagen@digia.com>

        [Qt] move SQLITE3SRCDIR assignment to only use site

        Reviewed by Simon Hausmann.

        Target.pri includes WebCore.pri the almost first thing, so that is
        covered as well.

        * qmake/mkspecs/features/default_pre.prf:

2012-12-11  Oswald Buddenhagen  <oswald.buddenhagen@digia.com>

        [Qt] delete dead include paths

        Reviewed by Simon Hausmann.

        followup to https://bugs.webkit.org/show_bug.cgi?id=93446

        * DumpRenderTree/qt/DumpRenderTree.pro:

2012-12-11  Martin Robinson  <mrobinson@igalia.com>

        [GTK] Implement some missing FrameLoaderClient message in DRT
        https://bugs.webkit.org/show_bug.cgi?id=104444

        Reviewed by Gustavo Noronha Silva.

        Install a FrameLoadEvent callback that prints the necessary output for some
        missing FrameLoader events.

        * DumpRenderTree/gtk/DumpRenderTree.cpp:
        (frameLoadEventCallback): Added.
        (createWebView): Install the FrameLoader event callback.

2012-12-11  Oswald Buddenhagen  <oswald.buddenhagen@digia.com>

        [Qt] change setup of QMAKE_MOC

        Reviewed by Simon Hausmann.

        don't load(moc) explicitly - turns out that this breaks
        debug_and_release builds (the feature does not like being loaded before
        default_post has been loaded).
        so instead just do a minimal call to find the moc executable.

        as it's in fact only two files which need it, so de-centralize this call
        for the sake of saving some cpu cycles spent in qmake.

        * WebKitTestRunner/InjectedBundle/DerivedSources.pri:
        * qmake/mkspecs/features/default_pre.prf:

2012-12-11  Jocelyn Turcotte  <jocelyn.turcotte@digia.com>

        [Qt] Fix the linking of debug builds on Mac with force_static_libs_as_shared
        https://bugs.webkit.org/show_bug.cgi?id=104559

        Reviewed by Tor Arne VestbÃ¸.

        "contains(libraries, $$TARGET): return(true)" fails for intermediate libraries since
        at this point TARGET may contain the "_debug" suffix.

        Fix it by moving the TARGET adjustment later in the file.

        * qmake/mkspecs/features/default_post.prf:

2012-12-11  Martin Robinson  <mrobinson@igalia.com>

        [Coverity] [GTK] Remove some redundant null checks in DumpRenderTree
        https://bugs.webkit.org/show_bug.cgi?id=104570

        Reviewed by Daniel Bates.

        * DumpRenderTree/gtk/DumpRenderTree.cpp:
        (descriptionSuitableForTestResult): Remove a redundant null check.

2012-12-11  Alberto Garcia  <agarcia@igalia.com>

        Remove unused GErrors
        https://bugs.webkit.org/show_bug.cgi?id=104657

        Reviewed by Martin Robinson.

        Replace unused GErrors with null pointers.

        * DumpRenderTree/gtk/DumpRenderTree.cpp:
        (initializeFonts):
        * DumpRenderTree/gtk/EditingCallbacks.cpp:
        (dumpRange):
        * WebKitTestRunner/InjectedBundle/gtk/ActivateFontsGtk.cpp:
        (WTR::inititializeFontConfigSetting):

2012-12-11  Martin Robinson  <mrobinson@igalia.com>

        [GTK] Bump the jhbuild libsoup version to fix an authentication issue
        https://bugs.webkit.org/show_bug.cgi?id=104448

        Reviewed by Gustavo Noronha Silva.

        Bump the libsoup version to one from the git repository. This requires updating
        GLib as well which in turn requires adjusting the CFLAGS we pass when compiling
        the scanobj step of the gtkdoc generation.

        * gtk/generate-gtkdoc:
        * gtk/jhbuild.modules:

2012-12-11  Zan Dobersek  <zandobersek@gmail.com>

        Unreviewed functionality fix for the GTK port.

        Enable the MicroData feature support for the GTK port in the FeatureList module.
        This feature listing now again affects which features are enabled and which disabled
        on the development builds of the GTK port.

        * Scripts/webkitperl/FeatureList.pm:

2012-12-11  Jinwoo Song  <jinwoo7.song@samsung.com>

        [EFL][WK2] MiniBrowser is not built
        https://bugs.webkit.org/show_bug.cgi?id=104629

        Reviewed by Gyuyoung Kim.

        As we are finding an elementary package in Tools/MiniBrowser/efl/CMakeList.txt since r137203,
        we need to check if the package is found in the same place not in the Tools/CMakeList.txt.

        * CMakeLists.txt:
        * MiniBrowser/efl/CMakeLists.txt:

2012-12-11  Xabier Rodriguez Calvar  <calvaris@igalia.com>

        [GTK][jhbuild] Switch to GStreamer 1.0 build
        https://bugs.webkit.org/show_bug.cgi?id=91727

        Reviewed by Philippe Normand.

        Switch build-webkit --gtk to GStreamer 1.0 support and build the
        necessary GStreamer git modules from JHBuild.

        * gtk/jhbuild.modules: Added GStreamer 1.0.3 build support.

2012-12-11  Zan Dobersek  <zandobersek@gmail.com>

        [GTK] Feature enabling/disabling should be possible through build-webkit
        https://bugs.webkit.org/show_bug.cgi?id=99271

        Reviewed by Gustavo Noronha Silva.

        Refactor the code in webkitdirs.pm that builds an autotools project to generate
        autogen.sh arguments, make arguments and installation prefix from the passed-in
        parameters rather than generating all of that in build-webkit. The autogen.sh
        arguments now contain only enable/disable flags for options that are actually
        configurable in configure.ac, the flag value actually reflecting whether the feature
        is enabled or disabled in the feature list.

        Other features are overridable through modifying the GNUmakefile.features.am file.
        All these features are now stored in the build directory and upon change trigger
        a rerun of the autogen.sh script, pretty much like the autogen.sh arguments do.

        The override-feature-defines script is called by autogen.sh, before GNUmakefile.in is
        generated when calling autoreconf. Its task is to copy the GNUmakefile.features.am.in
        into GNUmakefile.features.am and modify it if there's a text file in the build directory
        that contains all the feature defines the build-webkit script has written. If the build
        is not done through build-webkit (and there's no file in build directory listing all the
        feature defines) the script does not advance further from copying.

        This approach is taken to overcome the rigidness of the automake system as it's impossible
        to effectively generate and use GNUmakefile.features.am or even GNUmakefile.features file
        after the autoreconf command execution in autogen.sh.

        * Scripts/build-jsc:
        (buildMyProject):
        * Scripts/build-webkit:
        * Scripts/webkitdirs.pm:
        (runAutogenForAutotoolsProjectIfNecessary):
        (mustReRunAutogen):
        (buildAutotoolsProject):
        (buildGtkProject):
        * Scripts/webkitperl/FeatureList.pm: Update the features that are currently enabled in
        Source/WebCore/GNUmakefile.features.am.in but aren't in the feature list.
        * Scripts/webkitpy/style/checker.py: Source/WebCore/GNUmakefile.features.am.in is recognized
        as a text file and tabulation errors are reported. Skip the file to suppress them.
        * gtk/override-feature-defines: Added.
        (copy_feature_defines_makefile):
        (adjust_feature_defines_makefile):
        (adjust_feature_defines_makefile.override_feature_define):
        (override_feature_defines):

2012-12-10  Yury Semikhatsky  <yurys@chromium.org>

        Memory instrumentation: make sure each edge is reported only once
        https://bugs.webkit.org/show_bug.cgi?id=104630

        Reviewed by Pavel Feldman.

        Test that outgoing edges are reported only once if we come to the same
        object twice: first by an address of a base class and then by a real address
        of the object.

        * TestWebKitAPI/Tests/WTF/MemoryInstrumentationTest.cpp:

2012-12-10  Dana Jansens  <danakj@chromium.org>

        [chromium] Remove WebCompositorOutputSurface implementations from DRT
        https://bugs.webkit.org/show_bug.cgi?id=104046

        Reviewed by Darin Fisher.

        The classes are now provided through WebCompositorSupport.

        * DumpRenderTree/DumpRenderTree.gypi:
        * DumpRenderTree/chromium/WebViewHost.cpp:
        (WebViewHost::createOutputSurface):
        * DumpRenderTree/chromium/WebViewHostOutputSurface.cpp: Removed.
        * DumpRenderTree/chromium/WebViewHostOutputSurface.h: Removed.
        * DumpRenderTree/chromium/WebViewHostSoftwareOutputDevice.cpp: Removed.
        * DumpRenderTree/chromium/WebViewHostSoftwareOutputDevice.h: Removed.

2012-12-10  Dirk Pranke  <dpranke@chromium.org>

        change --no-launch-safari to --no-show-results in scripts
        https://bugs.webkit.org/show_bug.cgi?id=104298

        Reviewed by Eric Seidel.

        Since Safari only exists on the Apple ports, NRWT calls the
        command line flag --[no-]show-results instead. This updates
        the scripts to use the new flag (but not the buildbot config yet).

        * Scripts/generate-coverage-data:
        * Scripts/webkit-tools-completion.sh:
        * Scripts/webkitpy/tool/steps/runtests.py:
        (RunTests.run):
        * Scripts/webkitpy/tool/steps/runtests_unittest.py:

2012-12-10  Dirk Pranke  <dpranke@chromium.org>

        nrwt: fix mapping of AUDIO onto FAIL when printing unexpected results
        https://bugs.webkit.org/show_bug.cgi?id=104597

        Reviewed by Ojan Vafai.

        This was broken in the recent printer refactoring.

        * Scripts/webkitpy/layout_tests/views/buildbot_results.py:
        (BuildBotPrinter.print_unexpected_results.add_result.is_expected):
        * Scripts/webkitpy/layout_tests/views/buildbot_results_unittest.py:
        (BuildBotPrinterTests.get_result):
        (BuildBotPrinterTests.test_print_unexpected_results):
        (BuildBotPrinterTests.test_print_unexpected_results.get_unexpected_results):
        (BuildBotPrinterTests):

2012-12-10  Dirk Pranke  <dpranke@chromium.org>

        old-run-webkit-tests: add --show-results properly
        https://bugs.webkit.org/show_bug.cgi?id=104608

        Reviewed by Eric Seidel.

        Rework r137219 / bug 104601 to use the correct perl idiom.

        * Scripts/old-run-webkit-tests:

2012-12-10  Aaron Colwell  <acolwell@chromium.org>

        Unreviewed. Adding Aaron Colwell to the contributor list.

        * Scripts/webkitpy/common/config/committers.py:

2012-12-10  Anders Carlsson  <andersca@apple.com>

        Remove WebKit2 tests on Windows
        https://bugs.webkit.org/show_bug.cgi?id=104607

        Reviewed by Tim Horton.

        Stop building WebKit2 tests and remove associated files.

        * TestWebKitAPI/win/InjectedBundleControllerWin.cpp: Removed.
        * TestWebKitAPI/win/PlatformUtilitiesWin.cpp: Removed.
        * TestWebKitAPI/win/PlatformWebViewWin.cpp: Removed.
        * TestWebKitAPI/win/TestWebKitAPI.sln: Removed.
        * TestWebKitAPI/win/TestWebKitAPI.vcproj:
        * TestWebKitAPI/win/TestWebKitAPIGenerated.vcproj: Removed.
        * TestWebKitAPI/win/TestWebKitAPIGeneratedCommon.vsprops: Removed.
        * TestWebKitAPI/win/TestWebKitAPIInjectedBundle.vcproj: Removed.
        * TestWebKitAPI/win/WindowMessageObserver.h: Removed.
        * TestWebKitAPI/win/copy-resources.cmd: Removed.

2012-12-10  Dirk Pranke  <dpranke@chromium.org>

        old-run-webkit-tests: support --no-show-results for compatibility w/ NRWT
        https://bugs.webkit.org/show_bug.cgi?id=104601

        Reviewed by Eric Siedel.

        This flag is being added so we can move all of the calling scripts
        over to using --no-show-results instead of --no-launch-safari.

        * Scripts/old-run-webkit-tests:

2012-12-10  Dirk Pranke  <dpranke@chromium.org>

        nrwt: use the default logic for skipping platform-specific tests for chromium
        https://bugs.webkit.org/show_bug.cgi?id=104403

        Reviewed by Stephen White.

        I thought I had fixed this a while ago, but the chromium port was
        using custom logic to figure out which platform/* tests to run (or
        skip) and as a result we were getting some odd behavior (like running
        tests in chromium-linux on chromium-mac, but only when there was
        an expectation listed for the test).

        Ports are supposed to only run the tests found under their
        baseline_search_path() by default.

        Not writing a test for this; theoretically there shouldn't been a
        test checking that the behavior for Chromium was *different* than
        the other ports before.

        * Scripts/webkitpy/layout_tests/port/chromium.py:
        (ChromiumPort._missing_symbol_to_skipped_tests):

2012-12-10  Dirk Pranke  <dpranke@chromium.org>

        fix regression in test-webkitpy after r137189
        https://bugs.webkit.org/show_bug.cgi?id=104589

        Reviewed by Eric Seidel.

        Need to specify full port names.

        * Scripts/webkitpy/layout_tests/run_webkit_tests_integrationtest.py:
        (MainTest.test_build_check):

2012-12-10  Laszlo Gombos  <l.gombos@samsung.com>

        [EFL] Change the minimum required EFL version to 1.6
        https://bugs.webkit.org/show_bug.cgi?id=104431

        Reviewed by Kenneth Rohde Christiansen.

        Change the minimum required EFL version to 1.6 from 1.7.
        The elementary EFL package is only required to build MiniBrowser,
        so I moved the required only to the Minibrowser CMake file.

        * MiniBrowser/efl/CMakeLists.txt: In addition removed
        ENABLE_GLIB_SUPPORT as it is obsolete and it was always set to be on.

2012-12-10  Dean Jackson  <dino@apple.com>

        Unreviewed. Adding Antoine to the contributor list so his name autocompletes in bugzilla.

        * Scripts/webkitpy/common/config/committers.py:

2012-12-10  Zan Dobersek  <zandobersek@gmail.com>

        REGRESSION (r118735): svg/dom/complex-svgView-specification.html, svg/dom/SVGViewSpec.html, svg/dom/viewspec-parser.html failing on GTK Linux 64-bit Release
        https://bugs.webkit.org/show_bug.cgi?id=87734

        Reviewed by Martin Robinson.

        When willSendRequest should return null in testing, cancel the SoupMessage
        instead of setting the request's URI to about:blank.

        * DumpRenderTree/gtk/DumpRenderTree.cpp:
        (willSendRequestCallback):

2012-12-10  Jochen Eisinger  <jochen@chromium.org>

        [chromium] Move the test implementation of WebKit::WebPlugin to the TestRunner library
        https://bugs.webkit.org/show_bug.cgi?id=104537

        Reviewed by Tony Chang.

        In order to hide implementation details from the public TestRunner API,
        I moved the plugin to WebTestPluginImpl and added a static create
        method to WebTestPlugin. Also, I renamed the plugin from TestWebPlugin
        to WebTestPlugin to be more in line with other classes in the
        TestRunner API.

        * DumpRenderTree/DumpRenderTree.gypi:
        * DumpRenderTree/chromium/TestRunner/public/WebTestPlugin.h: Added.
        (WebTestRunner):
        (WebTestPlugin):
        * DumpRenderTree/chromium/TestRunner/src/WebTestPlugin.cpp: Renamed from Tools/DumpRenderTree/chromium/TestWebPlugin.cpp.
        (WebTestRunner::WebTestPlugin::create):
        (WebTestRunner):
        (WebTestRunner::WebTestPlugin::WebTestPlugin):
        (WebTestRunner::WebTestPlugin::~WebTestPlugin):
        (WebTestRunner::WebTestPlugin::mimeType):
        * DumpRenderTree/chromium/TestWebPlugin.h: Removed.
        * DumpRenderTree/chromium/WebViewHost.cpp:
        (WebViewHost::createPlugin):

2012-12-10  Dirk Pranke  <dpranke@chromium.org>

        run_webkit_tests throws exception when DRT is not present
        https://bugs.webkit.org/show_bug.cgi?id=104565

        Reviewed by Jochen Eisinger.

        Don't actually try to print the bot results if there aren't
        any because we exited before running any tests.

        * Scripts/webkitpy/layout_tests/run_webkit_tests.py:
        (main):
        * Scripts/webkitpy/layout_tests/run_webkit_tests_integrationtest.py:
        (MainTest.test_build_check):

2012-12-10  Benjamin Poulain  <benjamin@webkit.org>

        Add convenience methods to use ListHashSet for a LRU cache
        https://bugs.webkit.org/show_bug.cgi?id=104499

        Reviewed by Sam Weinig.

        Test the new methods added to ListHashSet.

        * TestWebKitAPI/CMakeLists.txt:
        * TestWebKitAPI/GNUmakefile.am:
        * TestWebKitAPI/TestWebKitAPI.gypi:
        * TestWebKitAPI/TestWebKitAPI.xcodeproj/project.pbxproj:
        * TestWebKitAPI/Tests/WTF/ListHashSet.cpp: Added.
        (TestWebKitAPI):
        (TestWebKitAPI::TEST):

2012-12-10  Dirk Pranke  <dpranke@chromium.org>

        webkit-patch print-expectations doesn't work right for platforms w/ shared expectations
        https://bugs.webkit.org/show_bug.cgi?id=104405

        Reviewed by Eric Seidel.

        If multiple ports shared a TestExpectations file, webkit-patch
        print-expectations would use the expectation for the first port
        using that file and print the result for all ports, rather than
        re-parse and print each port separately (e.g., we might print
        the chromium-linux expectation for a file for both chromium-linux
        and chromium-mac). Discovered while testing/debugging the fix
        for bug 104403.

        * Scripts/webkitpy/layout_tests/port/test.py:
        (TestPort._skipped_tests_for_unsupported_features):
        * Scripts/webkitpy/layout_tests/run_webkit_tests.py:
        (lint):
        * Scripts/webkitpy/tool/commands/queries.py:
        (PrintExpectations._model):
        * Scripts/webkitpy/tool/commands/queries_unittest.py:
        (PrintExpectationsTest.test_platform):

2012-12-10  Dirk Pranke  <dpranke@chromium.org>

        nrwt: fix total number of tests computed in the result summary
        https://bugs.webkit.org/show_bug.cgi?id=104061

        Reviewed by Jochen Eisinger.

        Good thing I left this open, because I actually broke it again
        the same way in a merge. Fix the computation of the one_line_summary
        again, and add tests for it (also clean up some redundant tests).

        Also, add constants into the test port code so that the knowledge
        of how many tests should fail and how is next to the list of tests,
        rather than a totally different place.

        * Scripts/webkitpy/layout_tests/controllers/layout_test_runner.py:
        (LayoutTestRunner.run_tests):
        * Scripts/webkitpy/layout_tests/port/test.py:
        (TestList.__getitem__):
        * Scripts/webkitpy/layout_tests/run_webkit_tests_integrationtest.py:
        (get_test_results):
        (MainTest.setUp):
        (MainTest.test_basic):
        (MainTest.test_run_singly_actually_runs_tests):
        (MainTest.test_test_list_with_prefix):
        (MainTest.test_missing_and_unexpected_results_with_custom_exit_code.CustomExitCodePort):
        (MainTest.test_tolerance.ImageDiffTestPort):
        (EndToEndTest.parse_full_results):

2012-12-10  Mike West  <mkwst@chromium.org>

        Log to console when script is blocked by sandbox attributes.
        https://bugs.webkit.org/show_bug.cgi?id=104365

        Reviewed by Ojan Vafai.

        * Scripts/webkitpy/performance_tests/perftest.py:
        (PerfTest):
            Ignoring the new console message in perftests, as it broke parsing
            for the Parser/html-parser.html microbenchmark.

2012-12-10  Filip Pizlo  <fpizlo@apple.com>

        JSC profiling and debug dump code should use inferred names when possible
        https://bugs.webkit.org/show_bug.cgi?id=104519

        Reviewed by Oliver Hunt.

        The format I'm using for referring to a code block is now name#hash. For example,
        v8-crypto has something called bnpSquareTo#B5QFbU. The profiler allows you to use
        either the hash, the inferred name, or the combined hash and full name when referring
        to blocks.

        * Scripts/display-profiler-output:

2012-12-09  Filip Pizlo  <fpizlo@apple.com>

        Profiler should say things about OSR exits
        https://bugs.webkit.org/show_bug.cgi?id=104497

        Reviewed by Oliver Hunt.

        Adds support for displaying OSR exit information for full summary (just displays the
        counts and the number of recompilations), bytecode display (says which bytecodes
        exited), and DFG display (annotates disassembly with taken OSR exits and their
        counts).

        * Scripts/display-profiler-output:

2012-12-10  Alexis Menard  <alexis@webkit.org>

        [CSS3 Backgrounds and Borders] Remove CSS3_BACKGROUND feature flag.
        https://bugs.webkit.org/show_bug.cgi?id=104539

        Reviewed by Antonio Gomes.

        As discussed on webkit-dev it is not needed to keep this feature flag 
        as support for <position> type is a small feature that is already 
        implemented by three other UAs. It was useful while landing this 
        feature as partial bits were landed one after one.

        * Scripts/webkitperl/FeatureList.pm:
        * qmake/mkspecs/features/features.pri:

2012-12-10  Martin Robinson  <mrobinson@igalia.com>

        Build fix.

        Add a patchfile missing from my previous commit.

        * gtk/patches/harfbuzz-icu-detection-fix.patch: Added.

2012-12-10  Martin Robinson  <mrobinson@igalia.com>

        REGRESSION(137127): Causes assertion failures on the debug bots
        https://bugs.webkit.org/show_bug.cgi?id=104549

        Reviewed by Alejandro G. Castro.

        After handling the new TextOutput message we should return the method
        handling messages received.

        * WebKitTestRunner/TestInvocation.cpp:
        (WTR::TestInvocation::didReceiveMessageFromInjectedBundle): Fix a missing early return.

2012-12-09  Gustavo Noronha Silva  <gustavo.noronha@collabora.com>

        [Soup] utilize multipart/x-mixed-replace support recently added to libsoup
        https://bugs.webkit.org/show_bug.cgi?id=94515

        Reviewed by Martin Robinson.

        This change requires a very recent libsoup, so update our jhbuild
        requirements.

        * gtk/jhbuild.modules: depend on soup version that adds the multipart/x-mixed-replace
        support
        * efl/jhbuild.modules: ditto

2012-12-10  Zoltan Nyul  <zoltan.nyul@intel.com>

        Implement testRunner.setViewModeMediaFeature() in WebKitTestRunner
        https://bugs.webkit.org/show_bug.cgi?id=103886

        Reviewed by Kenneth Rohde Christiansen.

        Implement testRunner.setViewModeMediaFeature() in WebKitTestRunner.
        This API is required by layout tests.

        * WebKitTestRunner/InjectedBundle/Bindings/TestRunner.idl:
        * WebKitTestRunner/InjectedBundle/TestRunner.cpp:
        (WTR::TestRunner::setViewModeMediaFeature):
        (WTR):
        * WebKitTestRunner/InjectedBundle/TestRunner.h:
        (TestRunner):

2012-12-10  Martin Robinson  <mrobinson@igalia.com>

        [GTK] Bring Harfbuzz-ng support to Gtk
        https://bugs.webkit.org/show_bug.cgi?id=92098

        Reviewed by Gustavo Noronha Silva.

        Add HarfBuzz dependency.

        * GNUmakefile.am: Add FreeType/HarfBuzz CFLAGS to the WebCore Internals library.
        * gtk/jhbuild.modules: Add HarfBuzz to the JHbuild and remove Pango, since it
        should no longer affect layout test results.

2012-12-10  Simon Hausmann  <simon.hausmann@digia.com>

        [Qt] Use QLibraryInfo::LibraryExecutablesPath unconditionally
        https://bugs.webkit.org/show_bug.cgi?id=104541

        Reviewed by Jocelyn Turcotte.

        We now depend on a Qt 5 version that is guaranteed to have this API, so we
        can remove the configure checks for it.

        * qmake/config.tests/libexecdir/libexecdir.cpp: Removed.
        * qmake/config.tests/libexecdir/libexecdir.pro: Removed.
        * qmake/mkspecs/features/features.prf:

2012-12-10  VÃ­ctor Manuel JÃ¡quez Leal  <vjaquez@igalia.com>

        REGRESSION(r135863): GtkLauncher --help no longer displays all help options
        https://bugs.webkit.org/show_bug.cgi?id=104382

        Reviewed by Philippe Normand.

        Remove gst_init() because it steals the GOptionContext.
        gst_init_get_option_group() already does the initialization job.

        * GtkLauncher/main.c:
        (main):

2012-12-10  Zan Dobersek  <zandobersek@gmail.com>

        [GTK][WTR] Implement AccessibilityUIElement::titleUIElement
        https://bugs.webkit.org/show_bug.cgi?id=102953

        Reviewed by Martin Robinson.

        Implement AccessibilityUIElement::titleUIElement in the ATK backend
        in the same manner it is implemented in DumpRenderTree. Both implementations
        are updated to unref the relation set before the final function return
        rather than at the end of each loop through the relations held in the said
        relation set.

        * DumpRenderTree/gtk/AccessibilityUIElementGtk.cpp:
        (AccessibilityUIElement::titleUIElement):
        * WebKitTestRunner/InjectedBundle/atk/AccessibilityUIElementAtk.cpp:
        (WTR::AccessibilityUIElement::titleUIElement):

2012-12-10  Martin Robinson  <mrobinson@igalia.com>

        Fix the WebKit2 debug build

        * WebKitTestRunner/TestInvocation.cpp:
        (WTR::TestInvocation::didReceiveMessageFromInjectedBundle): Fix a typo of WKStringGetTypeID().

2012-12-10  Martin Robinson  <mrobinson@igalia.com>

        [WTR] Move text output accumulation to the UIProcess
        https://bugs.webkit.org/show_bug.cgi?id=104214

        Reviewed by Darin Adler.

        Instead of accumulating text output in the InjectedBundle and then sending it to the UIProcess 
        once a test is finished, immediately send any text output to the UIProcess. This will allow
        WebKitTestRunner to output text from the UIProcess as well.

        * WebKitTestRunner/InjectedBundle/InjectedBundle.cpp: Remove the handling of the text output
        StringBuilder. Add a method to send output to the UIProcess.
        * WebKitTestRunner/InjectedBundle/InjectedBundle.h:
        (InjectedBundle):
        * WebKitTestRunner/InjectedBundle/InjectedBundlePage.cpp: Change code that appends to the StringBuilder
        to use the new outputText method.
        * WebKitTestRunner/InjectedBundle/InjectedBundlePage.h:
        * WebKitTestRunner/InjectedBundle/TestRunner.cpp: Ditto.
        * WebKitTestRunner/InjectedBundle/atk/AccessibilityControllerAtk.cpp: Ditto.
        * WebKitTestRunner/TestInvocation.cpp:
        (WTR::TestInvocation::TestInvocation): Intialize the StringBuilder.
        (WTR::TestInvocation::invoke): Clear the StringBuilder when a new tests starts.
        (WTR::TestInvocation::dumpResults): m_textOutput is a StringBuilder now so the
        method of printing the text is slightly different.
        (WTR::TestInvocation::didReceiveMessageFromInjectedBundle): Handle the new TextOutput
        message by appending the results to the StringBuilder.
        * WebKitTestRunner/TestInvocation.h:
        (TestInvocation): Switch the type of m_textOutput.

2012-12-10  Mihnea Ovidenie  <mihnea@adobe.com>

        Unreviewed. Adding Mihai Maerean to the list of contributors, working on CSSRegions.

        * Scripts/webkitpy/common/config/committers.py:

2012-12-10  Joanmarie Diggs  <jdiggs@igalia.com>

        [GTK] accessibility/language-attribute.html is failing
        https://bugs.webkit.org/show_bug.cgi?id=98369

        Reviewed by Chris Fleizach.

        The test is failing for two reasons: Not exposing the language
        for accessible objects and AccessibilityUIElement::language() not
        being implemented.

        * DumpRenderTree/gtk/AccessibilityUIElementGtk.cpp:
        (AccessibilityUIElement::language): Implemented.

2012-12-10  Joanmarie Diggs  <jdiggs@igalia.com>

        [GTK] accessibility/editable-webarea-context-menu-point.html is failing
        https://bugs.webkit.org/show_bug.cgi?id=98364

        Reviewed by Chris Fleizach.

        The test is failing because the clickPoint values remain unchanged. The
        values remain unchanged because ATK lacks a means to keep track of this
        information.

        * DumpRenderTree/gtk/AccessibilityUIElementGtk.cpp:
        (AccessibilityUIElement::clickPointX): Added comment that ATK doesn't have clickPoint details
        (AccessibilityUIElement::clickPointY): Added comment that ATK doesn't have clickPoint details

2012-12-09  Alejandro PiÃ±eiro  <apinheiro@igalia.com>

        [GTK] lack of implemention of AccessibilityUIElementGtk::isSelectable and AccessibilityUIElementGtk::isMultiSelectable
        https://bugs.webkit.org/show_bug.cgi?id=104481

        Reviewed by Martin Robinson.

        * DumpRenderTree/gtk/AccessibilityUIElementGtk.cpp:
        (AccessibilityUIElement::isSelectable): Implement this by checking
        the current state of the AtkObject.
        (AccessibilityUIElement::isMultiSelectable): Implement this by
        checking the current state of the AtkObject.

2012-12-09  Joanmarie Diggs  <jdiggs@igalia.com>

        [GTK] accessibility/placeholder.html is failing
        https://bugs.webkit.org/show_bug.cgi?id=98373

        Reviewed by Martin Robinson.

        The test was failing because the placeholder text was not supported and
        AccessibilityUIElement::stringAttributeValue() was not implemented.

        * DumpRenderTree/gtk/AccessibilityUIElementGtk.cpp:
        (coreAttributeToAtkAttribute): New convenience method to convert WebCore attribute
        names into AtkObject attribute names
        (AccessibilityUIElement::stringAttributeValue): implemented

2012-12-09  Dan Winship  <danw@gnome.org>

        [GTK] Bump libxml2 requirement in jhbuild.modules
        https://bugs.webkit.org/show_bug.cgi?id=104477

        Reviewed by Martin Robinson.

        Fedora 18's Apache depends on symbols in libxml2 2.9.0, so the
        tests won't run if we only have libxml2 2.8.0 installed in the
        jhbuild root.

        * gtk/jhbuild.modules:

2012-12-09  Zan Dobersek  <zandobersek@gmail.com>

        Remove testRunner.disableImageLoading()
        https://bugs.webkit.org/show_bug.cgi?id=98083

        Reviewed by Gustavo Noronha Silva.

        Remove the disableImageLoading methods and callback.
        No tests use the method anymore and all ports except Wx
        now support this behavior through overriding the
        WebKitDisplayImagesKey preference.

        * DumpRenderTree/TestRunner.cpp:
        (TestRunner::staticFunctions):
        * DumpRenderTree/TestRunner.h:
        (TestRunner):
        * DumpRenderTree/blackberry/TestRunnerBlackBerry.cpp:
        (TestRunner::overridePreference): Add support for overriding the
        WebKitDisplayImagesKey preference which is now the preferred way
        of disabling image loading.
        * DumpRenderTree/efl/TestRunnerEfl.cpp:
        * DumpRenderTree/gtk/TestRunnerGtk.cpp:
        * DumpRenderTree/mac/TestRunnerMac.mm:
        * DumpRenderTree/qt/TestRunnerQt.cpp:
        * DumpRenderTree/qt/TestRunnerQt.h:
        (TestRunner):
        * DumpRenderTree/win/TestRunnerWin.cpp:
        * DumpRenderTree/wx/TestRunnerWx.cpp:

2012-12-09  Joanmarie Diggs  <jdiggs@igalia.com>

        [GTK] accessibility/label-for-control-hittest.html is failing
        https://bugs.webkit.org/show_bug.cgi?id=98368

        Reviewed by Martin Robinson.

        The test was failing because AccessibilityUIElement::elementAtPoint was
        not implemented.

        * DumpRenderTree/gtk/AccessibilityUIElementGtk.cpp:
        (AccessibilityUIElement::elementAtPoint): implemented

2012-12-09  Jon Lee  <jonlee@apple.com>

        [WK2] Move button image to injected bundle
        https://bugs.webkit.org/show_bug.cgi?id=104107
        <rdar://problem/12813842>

        Reviewed by Simon Fraser.

        * WebKitTestRunner/InjectedBundle/InjectedBundlePage.cpp:
        (WTR::InjectedBundlePage::InjectedBundlePage): Update the bundle page UI client.

2012-12-08  Halton Huo  <halton.huo@intel.com>

        [CMake] Add CMake style checker
        https://bugs.webkit.org/show_bug.cgi?id=104240

        Reviewed by Eric Seidel.

        The CMake style checker is followed by existing style checkers like cpp, python.
        Unit test is added as well.

        * Scripts/webkitpy/style/checker.py: Use CMakeChecker CMAKE type files(.cmake or CMakeLists.txt)
        (FileType):
        (CheckerDispatcher._file_type):
        (CheckerDispatcher._create_checker):
        * Scripts/webkitpy/style/checkers/cmake.py: Added.
        (CMakeChecker):
        (CMakeChecker.__init__): 
        (CMakeChecker.check):
        (CMakeChecker._process_line):
        (CMakeChecker._check_trailing_whitespace):
        (CMakeChecker._check_no_space_cmds):
        (CMakeChecker._check_one_space_cmds):
        (CMakeChecker._check_non_lowercase_cmd):
        (CMakeChecker._check_indent):
        * Scripts/webkitpy/style/checkers/cmake_unittest.py: Added.
        (CMakeCheckerTest):
        (CMakeCheckerTest.test_init):
        (CMakeCheckerTest.test_init._mock_handle_style_error):
        (CMakeCheckerTest.test_check):
        (CMakeCheckerTest.test_check._mock_handle_style_error):

2012-12-08  Kondapally Kalyan  <kalyan.kondapally@intel.com>

        [EFL] Enable WebGL by default.
        https://bugs.webkit.org/show_bug.cgi?id=102991.

        Reviewed by Kenneth Rohde Christiansen.

        Enable WebGL by default.

        * Scripts/webkitperl/FeatureList.pm:

2012-12-07  Scott Violet  <sky@chromium.org>

        [chromium] Remove linux theme related files and switch to default
        https://bugs.webkit.org/show_bug.cgi?id=103897

        Reviewed by Dimitri Glazkov.

        * Scripts/webkitpy/common/config/build_unittest.py:
        (ShouldBuildTest): linux->default

2012-12-07  Mike Lattanzio  <mlattanzio@rim.com>

        [BlackBerry] Update BlackBerry Port to use new Graphics::createBuffer BufferType enum values.
        https://bugs.webkit.org/show_bug.cgi?id=104121

        Reviewed by Rob Buis.

        Update createBuffer call to reflect new BufferType enum.
        Internal PR 254649
        Internal Review: Jakob Petsovits

        DRT is always backed for maximum compatibility.

        * DumpRenderTree/blackberry/PixelDumpSupportBlackBerry.cpp:
        (createBitmapContextFromWebView):

2012-12-07  Jochen Eisinger  <jochen@chromium.org>

        Add 'CHROMIUM_DEVEL_SANDBOX' to the environment variables to copy for layout test drivers
        https://bugs.webkit.org/show_bug.cgi?id=104355

        Reviewed by Dirk Pranke.

        This enables chromium's content_shell driver to run with the full SUID
        sandbox.

        * Scripts/webkitpy/layout_tests/port/base.py:
        (Port.to.setup_environ_for_server):

2012-12-07  KyungTae Kim  <ktf.kim@samsung.com>

        [EFL] Fix tools for WebKit2-only builds
        https://bugs.webkit.org/show_bug.cgi?id=103904

        Reviewed by Laszlo Gombos.

        The libewebkit2.so should be used for library path for EFL WebKit2.

        * Scripts/webkitdirs.pm:
        (builtDylibPathForName):

2012-12-07  Xiaobo Wang  <xbwang@torchmobile.com.cn>

        [BlackBerry] DRT - Update implementation of TestRunner.setCustomPolicyDelegate()
        https://bugs.webkit.org/show_bug.cgi?id=104243

        RIM PR 259337

        Reviewed by Rob Buis.

        1. Implement calculation of navigation originating in
        didDecidePolicyForNavigationAction().
        2. Implement policy delegate for resource response.
        3. Enable customPolicyDelegate if waitForPolicyDelegate() is called.
        4. Minor optional updates in dump() and dumpFrameLoadCallbacks().

        The patch fixed the following tests:
        - http/tests/download
        - fast/forms/mailto/formenctype-attribute-button-html.html
        - fast/forms/mailto/formenctype-attribute-input-html.html
        - fast/encoding/mailto-always-utf-8.html

        * DumpRenderTree/blackberry/DumpRenderTree.cpp:
        (BlackBerry::WebKit::DumpRenderTree::DumpRenderTree):
        (BlackBerry::WebKit::DumpRenderTree::resetToConsistentStateBeforeTesting):
        (BlackBerry::WebKit::DumpRenderTree::dump):
        (BlackBerry::WebKit::DumpRenderTree::didFinishLoadForFrame):
        (BlackBerry::WebKit::DumpRenderTree::didDecidePolicyForNavigationAction):
        (BlackBerry::WebKit::DumpRenderTree::didDecidePolicyForResponse):
        (BlackBerry::WebKit::DumpRenderTree::setCustomPolicyDelegate):
        * DumpRenderTree/blackberry/DumpRenderTreeBlackBerry.h:
        (DumpRenderTree):
        * DumpRenderTree/blackberry/TestRunnerBlackBerry.cpp:
        (TestRunner::setCustomPolicyDelegate):
        (TestRunner::waitForPolicyDelegate):
        (TestRunner::overridePreference):

2012-12-07  Gwang Yoon Hwang  <ryumiel@company100.net>

        [Qt] Adjust library name in layout_tests/port/qt.py after Qt5-r40
        https://bugs.webkit.org/show_bug.cgi?id=104348

        Reviewed by Csaba OsztrogonÃ¡c.

        After Qt-5.0.0-r40, the library was renamed from QtWebKitWidgets to
        Qt5WebKitWidgets. run-webkit-tests were still looking for QtWebKitWidgets

        * Scripts/webkitpy/layout_tests/port/qt.py:
        (QtPort._path_to_webcore_library):

2012-12-07  Csaba OsztrogonÃ¡c  <ossy@webkit.org>

        Unreviewed fix, unbreak run-launcher after library renaming.

        * Scripts/webkitdirs.pm:
        (builtDylibPathForName):

2012-12-06  Csaba OsztrogonÃ¡c  <ossy@webkit.org>

        Unreviewed fix after r136896, unbreak --debug-rwt to make bots result verbose again.
        https://bugs.webkit.org/show_bug.cgi?id=104296

        * Scripts/webkitpy/layout_tests/run_webkit_tests.py:
        (main):

2012-12-06  Rick Byers  <rbyers@chromium.org>

        CSS cursor property should support webkit-image-set
        https://bugs.webkit.org/show_bug.cgi?id=99493

        Reviewed by Beth Dakin.

        Add ENABLE_MOUSE_CURSOR_SCALE - disabled by default

        * Scripts/webkitperl/FeatureList.pm:
        * qmake/mkspecs/features/features.pri:

2012-12-06  Vivek Galatage  <vivek.vg@samsung.com>

        Unreviewed. Fixing the email address order to work correctly with bugzilla.

        * Scripts/webkitpy/common/config/committers.py:

2012-12-06  Jochen Eisinger  <jochen@chromium.org>

        [chromium] when forwarding events through the WebPluginContainer, create a UserGestureIndicator if processing a user gesture
        https://bugs.webkit.org/show_bug.cgi?id=104306

        Reviewed by Dimitri Glazkov.

        * DumpRenderTree/chromium/TestWebPlugin.cpp:
        (TestWebPlugin::TestWebPlugin):
        (TestWebPlugin::handleInputEvent): add support for printing the user gesture status
        * DumpRenderTree/chromium/TestWebPlugin.h:
        (TestWebPlugin):

2012-12-06  Dirk Pranke  <dpranke@chromium.org>

        new-run-webkit-tests --lint-test-files seems to be broken
        https://bugs.webkit.org/show_bug.cgi?id=104296

        Unreviewed, build fix.

        My recent refactoring caused me to not initialize the printer
        before calling lint(); this patch restructures the code to make
        the lint routine self-contained and do all the work necessary.
        This will also make it easier to move this code out into a standalone
        file.

        * Scripts/webkitpy/layout_tests/run_webkit_tests.py:
        (lint):
        (main):
        * Scripts/webkitpy/layout_tests/run_webkit_tests_integrationtest.py:
        (LintTest.test_all_configurations):
        (LintTest.test_lint_test_files):
        (LintTest.test_lint_test_files__errors):

2012-12-05  Filip Pizlo  <fpizlo@apple.com>

        DFG profiler should be helpful about gem installation
        https://bugs.webkit.org/show_bug.cgi?id=104217

        Reviewed by Oliver Hunt.
        
        'json' and 'highline' are not installed by default on the ruby distributions with
        which I am familiar, and the default error messages don't make me happy. This makes
        display-profiler-output print a helpful message if those gems are not found.

        * Scripts/display-profiler-output:

2012-12-05  Filip Pizlo  <fpizlo@apple.com>

        Profiler should print a helpful message if you pass the wrong arguments
        https://bugs.webkit.org/show_bug.cgi?id=104222

        Reviewed by Oliver Hunt.

        * Scripts/display-profiler-output:

2012-12-06  Ojan Vafai  <ojan@chromium.org>

        Allow for CCing a secondary email address from watchlists
        https://bugs.webkit.org/show_bug.cgi?id=104286

        Reviewed by Dirk Pranke.

        Change my watchlist CC address so I can filter these separately from
        when people explicitly CC me and update the watchlist parser to allow that.

        * Scripts/webkitpy/common/config/committers.py:
        * Scripts/webkitpy/common/config/watchlist:
        * Scripts/webkitpy/common/watchlist/watchlistparser.py:
        (WatchListParser._validate):
        * Scripts/webkitpy/common/watchlist/watchlistparser_unittest.py:
        (WatchListParserTest.test_cc_rule_with_invalid_email):
        (WatchListParserTest.test_cc_rule_with_secondary_email):

2012-12-06  Max Vujovic  <mvujovic@adobe.com>

        Unreviewed. Add myself to committers.py.

        * Scripts/webkitpy/common/config/committers.py:

2012-12-06  Yael Aharon  <yael.aharon@intel.com>

        [EFL] [WK2] fast/dom/vertical-scrollbar-in-rtl.html makes fast/regions tests flaky
        https://bugs.webkit.org/show_bug.cgi?id=104139

        Reviewed by Kenneth Rohde Christiansen.

        Resize the window back to 800x600 between tests.
        This should be a no-op if the test did not resize the window.

        * WebKitTestRunner/TestController.cpp:
        (WTR::TestController::resetStateToConsistentValues):

2012-12-06  Tommy Widenflycht  <tommyw@google.com>

        Speech Recognition API: Change the error code to a string on SpeechRecognitionError
        https://bugs.webkit.org/show_bug.cgi?id=104254

        Reviewed by Adam Barth.

        Changes the mock error function to take a string instead of an int.

        * DumpRenderTree/chromium/DRTTestRunner.cpp:
        (DRTTestRunner::setMockSpeechRecognitionError):
        * DumpRenderTree/chromium/MockWebSpeechRecognizer.cpp:
        (WebTestRunner::ErrorTask::ErrorTask):
        (MockWebSpeechRecognizer::setError):
        * DumpRenderTree/chromium/MockWebSpeechRecognizer.h:
        (MockWebSpeechRecognizer):

2012-12-06  Andras Becsi  <andras.becsi@digia.com>

        [Qt][Mac] Fix libxslt and libxml2 config tests
        https://bugs.webkit.org/show_bug.cgi?id=104164

        Reviewed by Simon Hausmann.

        We should not use pkg-config on Mac instead use direct include
        paths and add needed libraries to the linker options to detect
        libxslt and libxml2 provided by the system.
        Previously we would always fall back to qtxmlpatterns.

        * qmake/config.tests/libxml2/libxml2.pro:
        * qmake/config.tests/libxslt/libxslt.pro:

2012-12-06  Csaba OsztrogonÃ¡c  <ossy@webkit.org>

        [Qt] Fix the build if the path contains "+" character
        https://bugs.webkit.org/show_bug.cgi?id=104120

        Reviewed by Tor Arne VestbÃ¸.

        The second parameter of qmake's replace() is regular expression, so
        we have to escape special characters in paths passed to replace().

        * qmake/mkspecs/features/default_post.prf:
        * qmake/mkspecs/features/default_pre.prf:
        * qmake/mkspecs/features/functions.prf:

2012-12-06  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r136825.
        http://trac.webkit.org/changeset/136825
        https://bugs.webkit.org/show_bug.cgi?id=104251

        It made 100+ test fail on Qt-WK2 pixel bot, and 1800+ test
        flakey on Qt-WK2 non-pixel bot (Requested by Ossy on #webkit).

        * WebKitTestRunner/TestController.cpp:
        (WTR::TestController::resetStateToConsistentValues):

2012-12-06  Yael Aharon  <yael.aharon@intel.com>

        [EFL] [WK2] fast/dom/vertical-scrollbar-in-rtl.html makes fast/regions tests flaky
        https://bugs.webkit.org/show_bug.cgi?id=104139

        Reviewed by Kenneth Rohde Christiansen.

        Resize the window back to 800x600 between tests.
        This should be a no-op if the test did not resize the window.

        * WebKitTestRunner/TestController.cpp:
        (WTR::TestController::resetStateToConsistentValues):

2012-12-06  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r136784 and r136802.
        http://trac.webkit.org/changeset/136784
        http://trac.webkit.org/changeset/136802
        https://bugs.webkit.org/show_bug.cgi?id=104231

        breaks chromium canary (Requested by morrita on #webkit).

        * Scripts/webkitpy/common/config/build_unittest.py:
        (ShouldBuildTest):

2012-12-05  Ryosuke Niwa  <rniwa@webkit.org>

        Add myself to watch changes in PerformanceTests/*.

        * Scripts/webkitpy/common/config/watchlist:

2012-12-05  Shinya Kawanaka  <shinyak@chromium.org>

        [Chromium] DRT on Windows crashes when a testcase has a progress element in indeterminate state
        https://bugs.webkit.org/show_bug.cgi?id=102459

        Reviewed by Dimitri Glazkov.

        Since WebThemeControlDRTWin::markState does not consider indeterminate state, DRT caused a crash.

        * DumpRenderTree/chromium/WebThemeControlDRTWin.cpp:
        (WebThemeControlDRTWin::markState):

2012-12-05  Filip Pizlo  <fpizlo@apple.com>

        DFG profiler should be able to display where a code block was inlined into, and what it inlined
        https://bugs.webkit.org/show_bug.cgi?id=104216

        Reviewed by Oliver Hunt.

        Added an "inlines" command that shows the inline stacks that a code block participated
        in. Also cleaned up some of the ways we print compilation units.

        * Scripts/display-profiler-output:

2012-12-05  Halton Huo  <halton.huo@intel.com>

        [CMake] Unify coding style for CMake files
        https://bugs.webkit.org/show_bug.cgi?id=103605

        Reviewed by Laszlo Gombos.

        Update cmake files(.cmake, CMakeLists.txt) with following style rules:
        1. Indentation
        1.1 Use spaces, not tabs.
        1.2 Four spaces as indent.
        2. Spacing
        2.1 Place one space between control statements and their parentheses.
            For eg, if (), else (), elseif (), endif (), foreach (),
            endforeach (), while (), endwhile (), break ().
        2.2 Do not place spaces between function and macro statements and
            their parentheses. For eg, macro(), endmacro(), function(),
            endfunction().
        2.3 Do not place spaces between a command or function or macro and its
            parentheses, or between a parenthesis and its content. For eg,
            message("testing") not message( "testing") or message ("testing" )
        2.4 No space at line ending.
        3. Lowercase when call commands macros and functions. For eg,
           add_executable() not ADD_EXECUTABLE(), set() not SET().

        * CMakeLists.txt:
        * DumpRenderTree/TestNetscapePlugIn/CMakeLists.txt:
        * DumpRenderTree/efl/CMakeLists.txt:
        * EWebLauncher/CMakeLists.txt:
        * EWebLauncher/ControlTheme/CMakeLists.txt:
        * MiniBrowser/efl/CMakeLists.txt:
        * TestWebKitAPI/CMakeLists.txt:
        * TestWebKitAPI/PlatformEfl.cmake:
        * WebKitTestRunner/CMakeLists.txt:
        * WebKitTestRunner/PlatformEfl.cmake:
        * WinCELauncher/CMakeLists.txt:
        * clang/ReportMemoryUsagePlugin/CMakeLists.txt:

2012-12-05  Scott Violet  <sky@chromium.org>

        [chromium] Remove linux theme related files and switch to default
        https://bugs.webkit.org/show_bug.cgi?id=103897

        Reviewed by Tony Chang.

        * Scripts/webkitpy/common/config/build_unittest.py:
        (ShouldBuildTest): linux->default

2012-12-05  Dirk Pranke  <dpranke@chromium.org>

        nrwt: run_webkit_tests_integrationtest.py depends on being able to share a port w/ between master and worker
        https://bugs.webkit.org/show_bug.cgi?id=78168

        Reviewed by Ojan Vafai.

        This patch adds a single ordered list to ResultSummary that contains
        the results of every test run in order of result received, and
        modifies the TestResults class to contain the list of references used
        for each test as well as the pid of the driver; this allows us to stop
        having to override the test drivers to record the tests, and makes the
        integration tests that test rdering, retries, restarts, etc. black-box
        tests.

        * Scripts/webkitpy/layout_tests/controllers/single_test_runner.py:
        (SingleTestRunner._run_rebaseline):
        (SingleTestRunner._compare_output):
        (SingleTestRunner._run_reftest):
        (SingleTestRunner._compare_output_with_reference):
        * Scripts/webkitpy/layout_tests/models/result_summary.py:
        (ResultSummary.__init__):
        (ResultSummary.add):
        * Scripts/webkitpy/layout_tests/models/test_results.py:
        (TestResult.__init__):
        * Scripts/webkitpy/layout_tests/port/driver.py:
        (DriverOutput.__init__):
        (Driver.run_test):
        * Scripts/webkitpy/layout_tests/port/test.py:
        (TestDriver):
        (TestDriver.__init__):
        (TestDriver.run_test):
        (TestDriver.stop):
        * Scripts/webkitpy/layout_tests/run_webkit_tests_integrationtest.py:
        (get_tests_run):
        (get_test_batches):
        (get_test_results):
        (MainTest.test_batch_size):
        (MainTest.test_dryrun):
        (MainTest.test_natural_order):
        (MainTest.test_natural_order_test_specified_multiple_times):
        (MainTest.test_random_order):
        (MainTest.test_random_order_test_specified_multiple_times):
        (MainTest.test_no_order):
        (MainTest.test_no_order_test_specified_multiple_times):
        (MainTest.test_no_order_with_directory_entries_in_natural_order):
        (MainTest.test_repeat_each):
        (MainTest.test_ignore_flag):
        (MainTest.test_skipped_flag):
        (MainTest.test_iterations):
        (MainTest.test_run_chunk):
        (MainTest.test_run_part):
        (MainTest.test_run_singly):
        (MainTest.test_skip_failing_tests):
        (MainTest.test_single_file):
        (MainTest.test_single_file_with_prefix):
        (MainTest.test_single_skipped_file):
        (MainTest.test_test_list):
        (MainTest.test_test_list_with_prefix):
        (MainTest.test_exit_after_n_failures):
        (MainTest.test_exit_after_n_crashes):
        (MainTest.test_run_order__inline):
        (MainTest.test_reftest_run):
        (MainTest.test_reftest_run_reftests_if_pixel_tests_are_disabled):
        (MainTest.test_reftest_skip_reftests_if_no_ref_tests):
        (MainTest.test_reftest_expected_html_should_be_ignored):
        (MainTest.test_reftest_driver_should_run_expected_html):
        (MainTest.test_reftest_driver_should_run_expected_mismatch_html):
        (MainTest.test_no_http_tests):
        (MainTest.test_platform_tests_are_found):

2012-12-05  Dana Jansens  <danakj@chromium.org>

        [chromium] Make WebCompositorOutputSurface an empty class when USE_CC_OUTPUT_SURFACE is defined.
        https://bugs.webkit.org/show_bug.cgi?id=103967

        Reviewed by James Robinson.

        Use the WebCompositorSupport methods to create an OutputSurface. If they
        fail, then fall back to the WebViewHost methods.

        Once the chromium side lands, the WebCompositorSupport methods will stop
        failing, and will replace the WebViewHost ones.

        * DumpRenderTree/chromium/WebViewHost.cpp:
        (WebViewHost::createOutputSurface):

2012-12-05  Dirk Pranke  <dpranke@chromium.org>

        nrwt: split all of the buildbot-specific output into its own file
        https://bugs.webkit.org/show_bug.cgi?id=104165

        Reviewed by Ojan Vafai.

        Now that we have the RunDetails object we can move all of the
        buildbot-specific knowledge out of the core test-running code
        and into the outermost run_webkit_tests layer.

        * Scripts/webkitpy/layout_tests/run_webkit_tests.py:
        (run):
        (main):
        * Scripts/webkitpy/layout_tests/run_webkit_tests_integrationtest.py:
        (passing_run):
        (logging_run):
        (run_and_capture):
        (MainTest.test_all):
        (MainTest.test_max_locked_shards):
        (MainTest.test_child_processes_2):
        (MainTest.test_child_processes_min):
        (MainTest.test_full_results_html):
        (MainTest.test_hung_thread):
        (MainTest.test_keyboard_interrupt):
        (MainTest.test_no_tests_found):
        (MainTest.test_no_tests_found_2):
        (MainTest.test_repeat_each_iterations_num_tests):
        (MainTest.test_run_singly_actually_runs_tests):
        (MainTest.test_test_list):
        (MainTest.test_unexpected_failures):
        (MainTest.test_missing_and_unexpected_results):
        (MainTest.test_pixel_test_directories):
        (MainTest.test_missing_and_unexpected_results_with_custom_exit_code):
        (MainTest.test_crash_with_stderr):
        (MainTest.test_no_image_failure_with_image_diff):
        (MainTest.test_crash_log):
        (MainTest.test_web_process_crash_log):
        (MainTest.test_exit_after_n_failures_upload):
        (MainTest.test_results_directory_absolute):
        (MainTest.test_results_directory_default):
        (MainTest.test_results_directory_relative):
        (MainTest.test_retrying_and_flaky_tests):
        (MainTest.test_reftest_should_not_use_naming_convention_if_not_listed_in_reftestlist):
        (MainTest.test_output_diffs):
        (MainTest.test_unsupported_platform):
        (MainTest.test_verbose_in_child_processes):
        (EndToEndTest.test_end_to_end):
        (EndToEndTest.test_reftest_with_two_notrefs):
        (RebaselineTest.test_reset_results):
        (RebaselineTest.test_missing_results):
        (RebaselineTest.test_new_baseline):
        * Scripts/webkitpy/layout_tests/views/buildbot_results.py: Added.
        (BuildBotPrinter):
        (BuildBotPrinter.__init__):
        (BuildBotPrinter.print_results):
        (BuildBotPrinter._print):
        (BuildBotPrinter.print_result_summary):
        (BuildBotPrinter._print_result_summary_entry):
        (BuildBotPrinter.print_unexpected_results):
        (BuildBotPrinter.print_unexpected_results.add_to_dict_of_lists):
        (BuildBotPrinter.print_unexpected_results.add_result):
        * Scripts/webkitpy/layout_tests/views/buildbot_results_unittest.py: Added.
        (BuildBotPrinterTests):
        (BuildBotPrinterTests.assertEmpty):
        (BuildBotPrinterTests.assertNotEmpty):
        (BuildBotPrinterTests.get_printer):
        (BuildBotPrinterTests.get_result):
        (BuildBotPrinterTests.get_result_summary):
        (BuildBotPrinterTests.test_print_unexpected_results):
        (BuildBotPrinterTests.test_print_unexpected_results.get_unexpected_results):
        * Scripts/webkitpy/layout_tests/views/printing.py:
        (Printer):
        (Printer.__init__):
        (Printer.print_results):
        (Printer._print_statistics_for_test_timings):
        (Printer._print_baseline):
        (Printer._print_debug):
        * Scripts/webkitpy/layout_tests/views/printing_unittest.py:
        (Testprinter.get_printer):
        (Testprinter.get_result):
        (Testprinter.test_configure_and_cleanup):
        (Testprinter.test_print_config):
        (Testprinter.test_print_one_line_summary):
        (Testprinter.test_test_status_line):
        (Testprinter.test_details):

2012-12-05  Dirk Pranke  <dpranke@chromium.org>

        nrwt: collect all of the information about a run into a new RunDetails class
        https://bugs.webkit.org/show_bug.cgi?id=104158

        Reviewed by Ojan Vafai.

        This patch collects the information from both test passes (the
        main one and the retries) as well as the summarized results and
        the exit code into a RunDetails class, so that the integration
        tests can more easily tell what happened.

        Also, change the way the --lint-test-files works slightly so that
        we don't need to create a printer object (and hence we need to
        rework the tests that are testing logging).

        * Scripts/webkitpy/layout_tests/controllers/manager.py:
        (RunDetails):
        (RunDetails.__init__):
        (Manager.run):
        * Scripts/webkitpy/layout_tests/run_webkit_tests.py:
        (run):
        (main):
        * Scripts/webkitpy/layout_tests/run_webkit_tests_integrationtest.py:
        (passing_run):
        (run_and_capture):
        (LintTest.test_lint_test_files):
        (LintTest.test_lint_test_files__errors):
        (MainTest.test_verbose_in_child_processes):

2012-12-05  Dirk Pranke  <dpranke@chromium.org>

        nrwt: remove --no-record-results
        https://bugs.webkit.org/show_bug.cgi?id=104072

        Reviewed by Ojan Vafai.

        The command line flag was only being used in the unit tests and
        wasn't really needed once we started using a mock filesystem.

        Also, reformat a bunch of long lines ...

        * Scripts/webkitpy/layout_tests/controllers/manager.py:
        (Manager.run):
        * Scripts/webkitpy/layout_tests/run_webkit_tests.py:
        (parse_args):
        * Scripts/webkitpy/layout_tests/run_webkit_tests_integrationtest.py:
        (parse_args):
        (passing_run):
        (logging_run):
        (MainTest.test_repeat_each_iterations_num_tests):
        (MainTest.test_test_list):
        (MainTest.test_missing_and_unexpected_results):
        (MainTest.test_pixel_test_directories):
        (MainTest.test_missing_and_unexpected_results_with_custom_exit_code):
        (MainTest.test_crash_with_stderr):
        (MainTest.test_no_image_failure_with_image_diff):
        (MainTest.test_crash_log):
        (MainTest.test_web_process_crash_log):
        (MainTest.test_exit_after_n_failures_upload):
        (MainTest.test_results_directory_absolute):
        (MainTest.test_results_directory_relative):
        (MainTest.test_reftest_should_not_use_naming_convention_if_not_listed_in_reftestlist):
        (MainTest.test_additional_expectations):
        (MainTest.test_output_diffs):
        (EndToEndTest.test_end_to_end):
        (EndToEndTest.test_reftest_with_two_notrefs):
        (RebaselineTest.test_reset_results):
        (RebaselineTest.test_missing_results):
        (RebaselineTest.test_new_baseline):

2012-12-05  Dirk Pranke  <dpranke@chromium.org>

        nrwt: only summarize the results one way
        https://bugs.webkit.org/show_bug.cgi?id=104064

        Reviewed by Ojan Vafai.

        Change manager.summarize_results so that we always (and only)
        include both expected and unexpected results. Previously we
        would summarize the results twice, once with expected results
        and once without. This made the code much more confusing than
        it needed to be.

        * Scripts/webkitpy/layout_tests/controllers/manager.py:
        (summarize_results):
        (Manager.run):
        * Scripts/webkitpy/layout_tests/controllers/manager_unittest.py:
        (ResultSummaryTest.summarized_results):
        (ResultSummaryTest.test_no_svn_revision):
        (ResultSummaryTest.test_svn_revision):
        (ResultSummaryTest.test_summarized_results_wontfix):
        * Scripts/webkitpy/layout_tests/views/printing.py:
        (Printer.print_results):
        (Printer._print_unexpected_results):
        (Printer._print_unexpected_results.add_result):
        * Scripts/webkitpy/layout_tests/views/printing_unittest.py:
        (Testprinter.test_print_unexpected_results.get_unexpected_results):
        (Testprinter):

2012-12-05  Filip Pizlo  <fpizlo@apple.com>

        DFG profiler should display more information
        https://bugs.webkit.org/show_bug.cgi?id=104163

        Reviewed by Gavin Barraclough.

        Added the following:
        
        - Distinguish between source counts and bytecode counts.
        
        - Add a "full" summary view that shows both kinds of counts, plus inline counts.
        
        - Add a "source" command to see the source.
        
        - Add a "bytecode" command to see the bytecode and counts.

        * Scripts/display-profiler-output:

2012-12-05  Yong Li  <yoli@rim.com>

        [BlackBerry] Build with libjpegturbo
        https://bugs.webkit.org/show_bug.cgi?id=104152

        Reviewed by Rob Buis.

        RIM PR# 196975.
        Make sure the right include path for libjpeg is included.

        * Scripts/webkitdirs.pm:
        (blackberryCMakeArguments):

2012-12-05  Joseph Pecoraro  <pecoraro@apple.com>

        Remove stale check in check-for-webkit-framework-include-consistency
        https://bugs.webkit.org/show_bug.cgi?id=103775

        Reviewed by David Kilzer.

        The underlying issue was fixed in r81173.

        * Scripts/check-for-webkit-framework-include-consistency:

2012-12-05  Dirk Pranke  <dpranke@chromium.org>

        nrwt: simplify the finding of tests to retry
        https://bugs.webkit.org/show_bug.cgi?id=104067

        Reviewed by Ryosuke Niwa.

        I think this makes the code a little clearer; note that
        we were no longer using the include_missing flag.

        * Scripts/webkitpy/layout_tests/controllers/manager.py:
        (Manager.run):
        (Manager._failed_test_names):

2012-12-05  Dirk Pranke  <dpranke@chromium.org>

        nrwt: remove two unused parameters from a function
        https://bugs.webkit.org/show_bug.cgi?id=104059

        Reviewed by Ryosuke Niwa.

        Also remove an old, stale FIXME.

        * Scripts/webkitpy/layout_tests/controllers/manager.py:
        (interpret_test_failures):
        (summarize_results):
        * Scripts/webkitpy/layout_tests/controllers/manager_unittest.py:
        (ResultSummaryTest.test_interpret_test_failures):

2012-12-05  Dirk Pranke  <dpranke@chromium.org>

        nrwt: return result_summaries from LayoutTestRunner.run_tests()
        https://bugs.webkit.org/show_bug.cgi?id=104051

        Reviewed by Ojan Vafai.

        This patch completes the refactoring that makes the result summary      
        an object returned from the layout test runner, rather than having      
        it passed in and modified. This makes the split of duties between       
        the manager and runner clearer and makes the data flow more             
        functionally.                                                           

        Also clean up some minor lint issues.

        * Scripts/webkitpy/layout_tests/controllers/layout_test_runner.py:
        (LayoutTestRunner.__init__):
        (LayoutTestRunner.run_tests):
        (LayoutTestRunner._mark_interrupted_tests_as_skipped):
        * Scripts/webkitpy/layout_tests/controllers/layout_test_runner_unittest.py:
        (FakePrinter.print_expected):
        (LockCheckingRunner.__init__):
        (LayoutTestRunnerTests._runner):
        (LayoutTestRunnerTests._run_tests):
        (LayoutTestRunnerTests.test_interrupt_if_at_failure_limits):
        * Scripts/webkitpy/layout_tests/controllers/manager.py:
        (Manager.__init__):
        (Manager.run):
        (Manager._run_tests):

2012-12-05  Dirk Pranke  <dpranke@chromium.org>

        nrwt: move creation of the resultsummary objects into Manager._run_tests()
        https://bugs.webkit.org/show_bug.cgi?id=104048

        Reviewed by Ojan Vafai.

        This is a preparatory step to making the resultsummary just get
        returned from the layout_test_runner; this does most of manager-side
        changes.

        * Scripts/webkitpy/layout_tests/controllers/manager.py:
        (Manager._prepare_lists):
        (Manager.run):
        (Manager._run_tests):

2012-12-05  Leo Yang  <leoyang@rim.com>

        [BlackBerry] Enable CSS_IMAGE_RESOLUTION
        https://bugs.webkit.org/show_bug.cgi?id=104132

        Reviewed by Yong Li.

        * Scripts/webkitperl/FeatureList.pm:

2012-12-05  Filip Pizlo  <fpizlo@apple.com>

        JSC profiler should not count executions of op_call_put_result because doing so changes DFG codegen
        https://bugs.webkit.org/show_bug.cgi?id=104102

        Reviewed by Oliver Hunt.

        Modify the profiler to not output counts for op_call_put_result, since there
        won't be any. Also fix a few weird bugs, like providing better error reporting
        when you type something incorrectly and not reporting counts for slow paths
        in the old JIT since those counts are actually not what you think they are
        (we don't actually count slow path executions separately).

        * Scripts/display-profiler-output:

2012-12-05  Andras Becsi  <andras.becsi@digia.com>

        Fix compilation for Qt5.0.0 stable branch.
        https://bugs.webkit.org/show_bug.cgi?id=103870

        Reviewed by Simon Hausmann.

        Fix the use of renamed QWindow functions.
        Patch by Andras Becsi <andras.becsi@digia.com>

        * MiniBrowser/qt/BrowserWindow.cpp:
        (BrowserWindow::BrowserWindow):
        (BrowserWindow::onTitleChanged):
        * MiniBrowser/qt/raw/View.cpp:
        (View::View):

2012-12-05  Jussi Kukkonen  <jussi.kukkonen@intel.com>

        [WK2] InjectedBundle should check Intent url for null
        https://bugs.webkit.org/show_bug.cgi?id=104117

        Reviewed by Kenneth Rohde Christiansen.

        WKIntentServiceInfoCopyHref() can return null, we need to check
        for that in InjectedBundlePage::registerIntentServiceForFrame()
        to avoid crashing.

        * WebKitTestRunner/InjectedBundle/InjectedBundlePage.cpp:
        (WTR::InjectedBundlePage::registerIntentServiceForFrame):

2012-12-04  Jonathan Dong  <jonathan.dong@torchmobile.com.cn>

        Change email address of Jonathan Dong
        https://bugs.webkit.org/show_bug.cgi?id=103976

        Unreviewed, change my email address from jonathan.dong@torchmobile.com.cn
        to jonathan.dong.webkit@gmail.com in committers list.

        * Scripts/webkitpy/common/config/committers.py:

2012-12-04  Xiaobo Wang  <xbwang@torchmobile.com.cn>

        [BlackBerry] DRT - Tests under "dumpAsText" directory should be dumped as text
        https://bugs.webkit.org/show_bug.cgi?id=103986

        Reviewed by Rob Buis.

        Also move declaration of webSettingTransaction to before any WebSettings
        ::setXXX() calls so that it works as expected (commit only once in the
        function scope).

        * DumpRenderTree/blackberry/DumpRenderTree.cpp:
        (shouldDumpAsText):
        (BlackBerry::WebKit::DumpRenderTree::resetToConsistentStateBeforeTesting):

2012-12-04  Filip Pizlo  <fpizlo@apple.com>

        display-profiler-output should be able to show source code
        https://bugs.webkit.org/show_bug.cgi?id=104073

        Reviewed by Oliver Hunt.

        Display source code in the summary, using a one-line shortening.

        * Scripts/display-profiler-output:

2012-12-04  Filip Pizlo  <fpizlo@apple.com>

        display-profiler-output should not use reflective infocation to resolve command names

        Rubber stamped by Mark Hahnenberg.

        Reflection is amazing, but here it was just kind of a bit much.

        * Scripts/display-profiler-output:

2012-12-02  Filip Pizlo  <fpizlo@apple.com>

        JSC should be able to report profiling data associated with the IR dumps and disassembly
        https://bugs.webkit.org/show_bug.cgi?id=102999

        Reviewed by Gavin Barraclough.

        Added a tool that allows you to grok the output from JSC's new profiler. Currently,
        this still gets confused a bit about the execution counts of a method running
        standalone versus a method running inlined, but other than that, it's pretty cool.
        See the attached "sampling profiling session" attached to the bug to see it in
        action.
        
        Also had to feed EFL's build system.

        * DumpRenderTree/efl/CMakeLists.txt:
        * Scripts/display-profiler-output: Added.

2012-12-04  Dirk Pranke  <dpranke@chromium.org>

        nrwt: fix total number of tests computed in the result summary
        https://bugs.webkit.org/show_bug.cgi?id=104061

        Unreviewed, build fix.

        One of the recent changes to the resultsummary refactoring caused
        us to not include the number of skipped tests in the total number
        of tests, throwing off the totals printed in print_one_line_summary().

        Unfortunately, given the current state of the code it is difficult
        to construct an accurate unit test for this. I have verified the
        fix by hand, and will write a test once the remaining refactoring
        patches land, at which point it will be trivial to test it.

        * Scripts/webkitpy/layout_tests/controllers/manager.py:
        (Manager._prepare_lists):

2012-12-04  Dirk Pranke  <dpranke@chromium.org>

        nrwt is not returning the exit status properly
        https://bugs.webkit.org/show_bug.cgi?id=103830

        Unreviewed, build fix.

        The fix in r136474 wasn't quite right either, and would return
        the correct exceptional status, but not the correct failing status.

        * Scripts/webkitpy/layout_tests/run_webkit_tests.py:

2012-12-04  Dirk Pranke  <dpranke@chromium.org>

        nrwt: make paths and test_names passed arguments in Manager._prepare_lists et al
        https://bugs.webkit.org/show_bug.cgi?id=104047

        Reviewed by Eric Seidel.

        The code becomes cleaner if we are just passing values around rather
        than hanging them off the manager object, helps move _prepare_lists()
        to a pure function, and is needed to eventually make the
        result_summary object something returned from runner.run_tests()
        (note that two more patches are needed for that to happen).

        * Scripts/webkitpy/layout_tests/controllers/manager.py:
        (Manager.__init__):
        (Manager._http_tests):
        (Manager._prepare_lists):
        (Manager.needs_servers):
        (Manager._set_up_run):
        (Manager.run):
        (Manager._run_tests):
        (Manager._upload_json_files):
        * Scripts/webkitpy/layout_tests/controllers/manager_unittest.py:
        (ManagerTest.test_needs_servers.get_manager):
        (ManagerTest.test_needs_servers):
        (ManagerTest.integration_test_needs_servers.get_manager):
        (ManagerTest.integration_test_needs_servers):
        (ManagerTest.test_look_for_new_crash_logs.get_manager):
        (ManagerTest):
        (ManagerTest.test_look_for_new_crash_logs):
        * Scripts/webkitpy/layout_tests/layout_package/json_layout_results_generator.py:
        (JSONLayoutResultsGenerator.__init__):
        (JSONLayoutResultsGenerator._get_modifier_char):

2012-12-04  Adam Barth  <abarth@webkit.org>

        commit-queue can get stuck with a local commit
        https://bugs.webkit.org/show_bug.cgi?id=104032

        Reviewed by Dirk Pranke.

        Previously the commit-queue would only clean down to HEAD. If the
        commit-queue gets interrupted in the middle of a commit (e.g., after
        the local commit but before the dcommit), then it can end up with a
        patch locally committed. That patch will then prevent the commit-queue
        from functioning.

        This patch teaches the commit-queue to clean down to the merge base,
        which will remove any local commits.

        * Scripts/webkitpy/common/checkout/scm/git.py:
        (Git.working_directory_is_clean):
        (Git.clean_working_directory):
        * Scripts/webkitpy/tool/commands/roll_unittest.py:
        * Scripts/webkitpy/tool/steps/commit.py:
        (Commit._commit_warning):
        (Commit.run):

2012-12-04  Dirk Pranke  <dpranke@chromium.org>

        nrwt: store only the total number of tests in the result summary
        https://bugs.webkit.org/show_bug.cgi?id=103963

        Reviewed by Ryosuke Niwa.

        The result summary only needs the total number of tests that will
        be run (including repetitions) in order to provide the correct stats;
        it doesn't actually need to know how many unique tests there are, or
        or how many repetitions there are.

        * Scripts/webkitpy/layout_tests/controllers/layout_test_runner_unittest.py:
        (LayoutTestRunnerTests._result_summary):
        (LayoutTestRunnerTests.test_update_summary_with_result):
        * Scripts/webkitpy/layout_tests/controllers/manager.py:
        (Manager._prepare_lists):
        (Manager.run):
        * Scripts/webkitpy/layout_tests/controllers/manager_unittest.py:
        (ManagerTest.test_look_for_new_crash_logs):
        (ResultSummaryTest.get_result_summary):
        * Scripts/webkitpy/layout_tests/models/result_summary.py:
        (ResultSummary.__init__):
        * Scripts/webkitpy/layout_tests/views/printing_unittest.py:
        (Testprinter.get_result_summary):

2012-12-04  Dirk Pranke  <dpranke@chromium.org>

        nrwt: do less work when ctrl-c'ed
        https://bugs.webkit.org/show_bug.cgi?id=103961

        Reviewed by Ryosuke Niwa.

        Do less work when we are ctrl-c'ed, because the statistics aren't
        that useful anyway. While we're at it, modify summarize_results
        to be aware that we don't always retry results (instead of pretending
        that the retry produced the same results the initial run did).

        * Scripts/webkitpy/layout_tests/controllers/manager.py:
        (summarize_results):
        (Manager.run):

2012-12-04  Dirk Pranke  <dpranke@chromium.org>

        nrwt: result summaries should not require a list of tests to skip
        https://bugs.webkit.org/show_bug.cgi?id=103951

        Reviewed by Ryosuke Niwa.

        We shouldn't really be passing a list of tests to skip to the
        ResultSummary objects; they should be handled like any other
        test result as much as possible.

        * Scripts/webkitpy/layout_tests/controllers/layout_test_runner_unittest.py:
        (LayoutTestRunnerTests._result_summary):
        (LayoutTestRunnerTests.test_update_summary_with_result):
        * Scripts/webkitpy/layout_tests/controllers/manager.py:
        (Manager._prepare_lists):
        (Manager.run):
        * Scripts/webkitpy/layout_tests/controllers/manager_unittest.py:
        (ManagerTest.test_look_for_new_crash_logs):
        (ResultSummaryTest.get_result_summary):
        * Scripts/webkitpy/layout_tests/models/result_summary.py:
        (ResultSummary.__init__):
        * Scripts/webkitpy/layout_tests/models/test_expectations.py:
        (TestExpectations):
        * Scripts/webkitpy/layout_tests/views/printing_unittest.py:
        (Testprinter.get_result_summary):

2012-12-04  Dirk Pranke  <dpranke@chromium.org>

        nrwt: derive per-thread, per-worker stats from result summaries
        https://bugs.webkit.org/show_bug.cgi?id=103943

        Reviewed by Ojan Vafai.

        This patch changes the manager and printing code to pull more           
        information from the ResultSummary object rather than tracking          
        additional statistics on the side. This allows us to consolidate        
        a bunch of logic and remove a bunch of free-floating lists and dicts of 
        of values. We add the shard_name and worker_name to each TestResult,    
        and then modify print_timing_statistics() and upload_json_files()       
        to just need the result summaries.                                      

        Note that this patch also changes the timing statistics slightly
        so that the individual test times are the times to run just the
        tests themselves (TestResult.test_run_time) and do not include the
        times taken to run the ref tests, compute diffs, etc. The aggregated
        per-worker and per-shard statistics still use the total time to
        process each test (TestResult.total_run_time).

        * Scripts/webkitpy/layout_tests/controllers/layout_test_runner.py:
        (LayoutTestRunner.__init__):
        (LayoutTestRunner.run_tests):
        (LayoutTestRunner._handle_finished_test_list):
        (LayoutTestRunner._handle_finished_test):
        (Worker.handle):
        (Worker._run_test):
        * Scripts/webkitpy/layout_tests/controllers/manager.py:
        (summarize_results):
        (Manager.run):
        (Manager._upload_json_files):
        * Scripts/webkitpy/layout_tests/controllers/manager_unittest.py:
        (ResultSummaryTest.summarized_results):
        * Scripts/webkitpy/layout_tests/layout_package/json_layout_results_generator.py:
        (JSONLayoutResultsGenerator.__init__):
        (JSONLayoutResultsGenerator._get_test_timing):
        * Scripts/webkitpy/layout_tests/models/test_results.py:
        (TestResult.__init__):
        * Scripts/webkitpy/layout_tests/views/printing.py:
        (Printer.print_results):
        (Printer._print_timing_statistics):
        (Printer):
        (Printer._print_worker_statistics):
        (Printer._print_aggregate_test_statistics):
        (Printer._print_individual_test_times):
        (Printer._print_directory_timings):
        * Scripts/webkitpy/layout_tests/views/printing_unittest.py:
        (Testprinter.test_print_unexpected_results.get_unexpected_results):
        (Testprinter):

2012-12-04  Adam Barth  <abarth@webkit.org>

        Remove obsolete code from webkitpy
        https://bugs.webkit.org/show_bug.cgi?id=104029

        Reviewed by Eric Seidel.

        * Scripts/webkitpy/tool/bot/commitqueuetask.py:
        (CommitQueueTask.run):
        * Scripts/webkitpy/tool/steps/commit.py:
        (Commit.options):
        * Scripts/webkitpy/tool/steps/options.py:
        (Options):

2012-12-04  Jochen Eisinger  <jochen@chromium.org>

        [chromium] move WebPreferences and methods for modifying them to the TestRunner library
        https://bugs.webkit.org/show_bug.cgi?id=103841

        Reviewed by Darin Fisher.

        * DumpRenderTree/DumpRenderTree.gypi:
        * DumpRenderTree/chromium/DRTTestRunner.cpp:
        (DRTTestRunner::DRTTestRunner):
        (DRTTestRunner::reset):
        * DumpRenderTree/chromium/DRTTestRunner.h:
        (DRTTestRunner):
        * DumpRenderTree/chromium/TestRunner/public/WebPreferences.h: Renamed from Tools/DumpRenderTree/chromium/WebPreferences.h.
        (WebKit):
        (WebTestRunner):
        (WebPreferences):
        (WebTestRunner::WebPreferences::WebPreferences):
        * DumpRenderTree/chromium/TestRunner/public/WebTestDelegate.h:
        (WebTestRunner):
        (WebTestDelegate):
        (WebTestRunner::WebTestDelegate::localFileToDataURL):
        (WebTestRunner::WebTestDelegate::rewriteLayoutTestsURL):
        (WebTestRunner::WebTestDelegate::preferences):
        (WebTestRunner::WebTestDelegate::applyPreferences):
        * DumpRenderTree/chromium/TestRunner/src/TestRunner.cpp:
        (WebTestRunner::TestRunner::TestRunner):
        (WebTestRunner::TestRunner::reset):
        (WebTestRunner::TestRunner::setUserStyleSheetEnabled):
        (WebTestRunner):
        (WebTestRunner::TestRunner::setUserStyleSheetLocation):
        (WebTestRunner::TestRunner::setAuthorAndUserStylesEnabled):
        (WebTestRunner::TestRunner::setPopupBlockingEnabled):
        (WebTestRunner::TestRunner::setJavaScriptCanAccessClipboard):
        (WebTestRunner::TestRunner::setXSSAuditorEnabled):
        (WebTestRunner::TestRunner::setAllowUniversalAccessFromFileURLs):
        (WebTestRunner::TestRunner::setAllowFileAccessFromFileURLs):
        (WebTestRunner::TestRunner::overridePreference):
        (WebTestRunner::TestRunner::setPluginsEnabled):
        * DumpRenderTree/chromium/TestRunner/src/TestRunner.h:
        (TestRunner):
        * DumpRenderTree/chromium/TestRunner/src/WebPreferences.cpp: Renamed from Tools/DumpRenderTree/chromium/WebPreferences.cpp.
        (WebTestRunner::WebPreferences::reset):
        (WebTestRunner):
        (WebTestRunner::WebPreferences::applyTo):
        * DumpRenderTree/chromium/TestShell.h:
        (TestShell::preferences):
        (TestShell):
        * DumpRenderTree/chromium/WebViewHost.cpp:
        (WebViewHost::localFileToDataURL):
        (WebViewHost::rewriteLayoutTestsURL):
        (WebViewHost::preferences):
        (WebViewHost::applyPreferences):
        * DumpRenderTree/chromium/WebViewHost.h:
        (WebViewHost):

2012-12-04  Zan Dobersek  <zandobersek@gmail.com>

        Many webkitpy unit tests can be run standalone, are executable
        https://bugs.webkit.org/show_bug.cgi?id=103900

        Reviewed by Eric Seidel.

        There's no need anymore to run unit tests in standalone mode as they
        are now handled by test-webkitpy in a formidable fashion. This makes
        it possible for this patch to remove the following unnecessary bits:
        - remove shebang lines from unit test files,
        - remove calls to unittest.main(),
        - make unit test files non-executable.

        * Scripts/webkitpy/common/checkout/diff_parser_unittest.py:
        (DiffParserTest.test_git_mnemonicprefix):
        * Scripts/webkitpy/common/checkout/scm/scm_unittest.py:
        (GitTestWithMock.test_push_local_commits_to_server_without_username_and_with_password):
        * Scripts/webkitpy/common/config/build_unittest.py:
        (ShouldBuildTest.test_should_build):
        * Scripts/webkitpy/common/config/ports_unittest.py:
        (DeprecatedPortTest.test_chromium_xvfb_port):
        * Scripts/webkitpy/common/find_files_unittest.py:
        (TestWinNormalize.test_win):
        * Scripts/webkitpy/common/lru_cache_unittest.py:
        (LRUCacheTest.test_set_again):
        * Scripts/webkitpy/common/net/buildbot/buildbot_unittest.py:
        (test_results_zip_url):
        * Scripts/webkitpy/common/net/credentials_unittest.py:
        (test_keyring_without_git_repo_nor_keychain):
        * Scripts/webkitpy/common/net/omahaproxy_unittest.py:
        (OmahaProxyTest.test_get_revisions):
        * Scripts/webkitpy/common/net/unittestresults_unittest.py:
        * Scripts/webkitpy/common/newstringio_unittest.py:
        (NewStringIOTest.test_with):
        * Scripts/webkitpy/common/read_checksum_from_png_unittest.py:
        (ReadChecksumFromPngTest.test_read_checksum):
        * Scripts/webkitpy/common/system/file_lock_integrationtest.py:
        * Scripts/webkitpy/common/system/filesystem_mock_unittest.py:
        (MockFileSystemTest.test_normpath):
        * Scripts/webkitpy/common/system/filesystem_unittest.py:
        (RealFileSystemTest.test_sep):
        * Scripts/webkitpy/common/system/platforminfo_unittest.py:
        (TestPlatformInfo.test_total_bytes_memory):
        * Scripts/webkitpy/common/system/zipfileset_unittest.py:
        (ZipFileSetTest.test_namelist):
        * Scripts/webkitpy/layout_tests/controllers/layout_test_runner_unittest.py:
        * Scripts/webkitpy/layout_tests/controllers/manager_unittest.py:
        * Scripts/webkitpy/layout_tests/controllers/test_result_writer_unittest.py:
        (TestResultWriterTest.test_reftest_diff_image):
        * Scripts/webkitpy/layout_tests/layout_package/json_results_generator_unittest.py:
        (JSONGeneratorTest.test_test_timings_trie):
        * Scripts/webkitpy/layout_tests/models/test_expectations_unittest.py:
        (TestExpectationSerializationTests.test_string_whitespace_stripping):
        * Scripts/webkitpy/layout_tests/port/base_unittest.py:
        (KeyCompareTest.test_test_key):
        * Scripts/webkitpy/layout_tests/port/builders_unittest.py:
        (BuildersTest.test_path_from_name):
        * Scripts/webkitpy/layout_tests/port/chromium_android_unittest.py:
        (ChromiumAndroidTwoPortsTest.test_options_with_two_ports):
        * Scripts/webkitpy/layout_tests/port/chromium_linux_unittest.py:
        (ChromiumLinuxPortTest.test_path_to_image_diff):
        * Scripts/webkitpy/layout_tests/port/chromium_mac_unittest.py:
        (ChromiumMacPortTest.test_path_to_image_diff):
        * Scripts/webkitpy/layout_tests/port/chromium_port_testcase.py:
        (ChromiumPortLoggingTest.test_check_sys_deps):
        * Scripts/webkitpy/layout_tests/port/chromium_unittest.py:
        (ChromiumPortLoggingTest.test_check_sys_deps):
        * Scripts/webkitpy/layout_tests/port/config_unittest.py:
        (ConfigTest.test_default_configuration__scripterror):
        * Scripts/webkitpy/layout_tests/port/driver_unittest.py:
        (DriverTest.test_start_actually_starts):
        * Scripts/webkitpy/layout_tests/port/factory_unittest.py:
        (FactoryTest.test_get_from_builder_name):
        * Scripts/webkitpy/layout_tests/port/http_lock_unittest.py:
        * Scripts/webkitpy/layout_tests/port/image_diff_unittest.py:
        * Scripts/webkitpy/layout_tests/port/mock_drt_unittest.py:
        * Scripts/webkitpy/layout_tests/reftests/extract_reference_link_unittest.py:
        * Scripts/webkitpy/layout_tests/run_webkit_tests_integrationtest.py:
        (PortTest.disabled_test_mac_lion):
        * Scripts/webkitpy/layout_tests/servers/http_server_integrationtest.py:
        * Scripts/webkitpy/layout_tests/views/metered_stream_unittest.py:
        (VerboseTest.test_log_args):
        * Scripts/webkitpy/layout_tests/views/printing_unittest.py:
        (test_details):
        * Scripts/webkitpy/performance_tests/perftest_unittest.py:
        (TestPerfTestFactory.test_inspector_test):
        * Scripts/webkitpy/performance_tests/perftestsrunner_unittest.py:
        (test_parse_args):
        * Scripts/webkitpy/style/checker_unittest.py:
        * Scripts/webkitpy/style/checkers/changelog_unittest.py:
        (ChangeLogCheckerTest.test_no_error):
        * Scripts/webkitpy/style/checkers/common_unittest.py:
        (TabCheckerTest.test_tab):
        * Scripts/webkitpy/style/checkers/cpp_unittest.py:
        (CppCheckerTest.test_ne):
        * Scripts/webkitpy/style/checkers/jsonchecker_unittest.py:
        * Scripts/webkitpy/style/checkers/png_unittest.py:
        (PNGCheckerTest.test_check):
        * Scripts/webkitpy/style/checkers/test_expectations_unittest.py:
        * Scripts/webkitpy/style/checkers/text_unittest.py:
        (TextCheckerTest.test_init):
        * Scripts/webkitpy/style/checkers/watchlist_unittest.py:
        * Scripts/webkitpy/style/checkers/xcodeproj_unittest.py:
        (XcodeProjectFileCheckerTest.test_detect_development_region):
        * Scripts/webkitpy/style/checkers/xml_unittest.py:
        (XMLCheckerTest.test_no_error):
        * Scripts/webkitpy/style/patchreader_unittest.py:
        * Scripts/webkitpy/test/finder_unittest.py:
        (FinderTest.test_paths):
        * Scripts/webkitpy/test/runner_unittest.py:
        (RunnerTest.test_run):
        * Scripts/webkitpy/test/skip_unittest.py:
        (SkipTest.test_skip_if_true):
        * Scripts/webkitpy/thirdparty/__init___unittest.py:
        (ThirdpartyTest.test_imports):
        * Scripts/webkitpy/to_be_moved/update_webgl_conformance_tests_unittest.py:
        (TestTranslation.test_include_rewriting):
        * Scripts/webkitpy/tool/bot/queueengine_unittest.py:
        (QueueEngineTest.tearDown):
        * Scripts/webkitpy/tool/grammar_unittest.py:
        (GrammarTest.test_join_with_separators):
        * Scripts/webkitpy/tool/mocktool_unittest.py:
        (MockOptionsTest.test_kwarg__set):
        * Scripts/webkitpy/tool/multicommandtool_unittest.py:
        (test_command_help):

2012-12-04  Zan Dobersek  <zandobersek@gmail.com>

        Many webkitpy module files are executable, have shebang line
        https://bugs.webkit.org/show_bug.cgi?id=103985

        Reviewed by Dirk Pranke.

        Remove the executable bit from webkitpy module files that are
        unnecessarily executable. Remove the shebang line from webkitpy
        module files, they are of no use. Only non-third-party files are
        changed.

        * Scripts/webkitpy/bindings/main.py:
        * Scripts/webkitpy/common/config/watchlist:
        * Scripts/webkitpy/common/find_files.py:
        * Scripts/webkitpy/common/lru_cache.py:
        * Scripts/webkitpy/common/multiprocessing_bootstrap.py:
        * Scripts/webkitpy/common/net/file_uploader.py:
        * Scripts/webkitpy/common/newstringio.py:
        * Scripts/webkitpy/common/read_checksum_from_png.py:
        * Scripts/webkitpy/common/system/autoinstall.py:
        * Scripts/webkitpy/common/system/file_lock.py:
        * Scripts/webkitpy/common/system/file_lock_mock.py:
        * Scripts/webkitpy/common/version_check.py:
        * Scripts/webkitpy/layout_tests/controllers/manager.py:
        * Scripts/webkitpy/layout_tests/models/test_expectations.py:
        * Scripts/webkitpy/layout_tests/models/test_failures.py:
        * Scripts/webkitpy/layout_tests/models/test_input.py:
        * Scripts/webkitpy/layout_tests/port/__init__.py:
        * Scripts/webkitpy/layout_tests/port/base.py:
        * Scripts/webkitpy/layout_tests/port/builders.py:
        * Scripts/webkitpy/layout_tests/port/chromium.py:
        * Scripts/webkitpy/layout_tests/port/chromium_android.py:
        * Scripts/webkitpy/layout_tests/port/chromium_linux.py:
        * Scripts/webkitpy/layout_tests/port/chromium_mac.py:
        * Scripts/webkitpy/layout_tests/port/chromium_win.py:
        * Scripts/webkitpy/layout_tests/port/config.py:
        * Scripts/webkitpy/layout_tests/port/factory.py:
        * Scripts/webkitpy/layout_tests/port/http_lock.py:
        * Scripts/webkitpy/layout_tests/port/image_diff.py:
        * Scripts/webkitpy/layout_tests/port/mock_drt.py:
        * Scripts/webkitpy/layout_tests/port/port_testcase.py:
        * Scripts/webkitpy/layout_tests/port/server_process.py:
        * Scripts/webkitpy/layout_tests/port/test.py:
        * Scripts/webkitpy/layout_tests/run_webkit_tests.py:
        * Scripts/webkitpy/layout_tests/servers/apache_http_server.py:
        * Scripts/webkitpy/layout_tests/servers/http_server.py:
        * Scripts/webkitpy/layout_tests/servers/http_server_base.py:
        * Scripts/webkitpy/layout_tests/servers/websocket_server.py:
        * Scripts/webkitpy/layout_tests/views/metered_stream.py:
        * Scripts/webkitpy/layout_tests/views/printing.py:
        * Scripts/webkitpy/performance_tests/perftest.py:
        * Scripts/webkitpy/performance_tests/perftestsrunner.py:
        * Scripts/webkitpy/style/checkers/changelog.py:
        * Scripts/webkitpy/style/checkers/cpp.py:
        * Scripts/webkitpy/style/checkers/xcodeproj.py:
        * Scripts/webkitpy/to_be_moved/update_webgl_conformance_tests.py:
        (main): There's no need to run this module in standalone because
        it's wrapped by the Tools/Scripts/update-webgl-conformance-tests script.
        * Scripts/webkitpy/tool/commands/upload.py:
        * Scripts/webkitpy/tool/comments.py:
        * Scripts/webkitpy/tool/main.py:

2012-12-04  Ryosuke Niwa  <rniwa@webkit.org>

        Add a Chromium Android Release (Perf) to the list of perf. bots.

        * BuildSlaveSupport/build.webkit.org-config/templates/root.html:

2012-12-04  Zan Dobersek  <zandobersek@gmail.com>

        [GTK] Insert the jhbuild wrapper command at the beginning of the command list
        https://bugs.webkit.org/show_bug.cgi?id=103991

        Reviewed by Martin Robinson.

        Insert the Tools/gtk/run-with-jhbuild wrapper at the beginning of the
        command that's being formed in multiprocessing bootstrap. The wrapper is
        an executable Python script while the command being wrapped perhaps isn't
        and therefore requires the Python interpreter to be listed at the beginning
        of the command sublist that is then executed by the wrapper.

        Specifically, the webkitpy/layout_tests/run_webkit_tests.py module file
        is about to lose the executable bit and the Python-signaling shebang line.
        The Jhbuild wrapper simply executes the command that's passed, but that errs
        in this case unless the Python executable is executed and the module file
        is passed to it as an argument.

        * Scripts/webkitpy/common/multiprocessing_bootstrap.py:
        (run):

2012-12-04  Peter Beverloo  <peter@chromium.org>

        Add the Chromium Android Release (Perf) bot
        https://bugs.webkit.org/show_bug.cgi?id=103891

        Reviewed by Eric Seidel.

        Add configuration for the bot itself. It will be triggered by the Chromium
        Android Release builder. When running for Android, the DownloadAndPerfTest
        factory will also add the OutputAndroidDeviceStatus step.

        * BuildSlaveSupport/build.webkit.org-config/config.json:
        * BuildSlaveSupport/build.webkit.org-config/master.cfg:
        (DownloadAndPerfTestFactory.__init__):

2012-12-04  Peter Beverloo  <peter@chromium.org>

        [Chromium] The ChromiumAndroidDriver constructor should not rely on adb being available
        https://bugs.webkit.org/show_bug.cgi?id=103758

        Reviewed by Eric Seidel.

        Lazily initialize the adb command parameters rather than initializing it in the
        constructor now that there is an assert if adb is not available on the system and
        we're not in a Chromium Android checkout.

        * Scripts/webkitpy/layout_tests/port/chromium_android.py:
        (ChromiumAndroidDriver.__init__):
        (ChromiumAndroidDriver._push_file_if_needed):
        (ChromiumAndroidDriver._run_adb_command):
        (ChromiumAndroidDriver.cmd_line):
        (ChromiumAndroidDriver._start_once):
        (ChromiumAndroidDriver._read_prompt):
        (ChromiumAndroidDriver):
        (ChromiumAndroidDriver._adb_command):

2012-12-03  Ryosuke Niwa  <rniwa@webkit.org>

        Dromaeo should report individual test result
        https://bugs.webkit.org/show_bug.cgi?id=99800

        Reviewed by Eric Seidel.

        Ignore subtest results spit out by Dromaeo tests.

        * Scripts/webkitpy/performance_tests/perftest.py:
        (PerfTest): Added a line to ignore.
        * Scripts/webkitpy/performance_tests/perftest_unittest.py:
        (MainTest.test_parse_output_with_subtests): Added.

2012-12-03  Zan Dobersek  <zandobersek@gmail.com>

        Unreviewed, functionality fix after r136437.

        Calling sys.exit actually raises a SystemExit exception that
        is then handled in the second block and causes the script to
        return an 'exceptional' exit code rather than the code presenting
        the number of failed tests.

        This is just a temporary fix to get the faultless bots green while
        they are unnecessarily red at the moment. The problem and a proper
        fix will be properly addressed.

        * Scripts/webkitpy/layout_tests/run_webkit_tests.py:

2012-12-03  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r136460.
        http://trac.webkit.org/changeset/136460
        https://bugs.webkit.org/show_bug.cgi?id=103958

        This patch caused compile error when building DumpRenderTree
        (Requested by tasak on #webkit).

        * Scripts/webkitpy/common/config/build_unittest.py:
        (ShouldBuildTest):

2012-12-03  Scott Violet  <sky@chromium.org>

        [chromium] Remove linux theme related files and switch to default
        https://bugs.webkit.org/show_bug.cgi?id=103897

        Reviewed by Darin Fisher.

        * Scripts/webkitpy/common/config/build_unittest.py:
        (ShouldBuildTest): linux->default

2012-12-03  Roger Fong  <roger_fong@apple.com>

        Disable WebKit2 API tests on Apple Windows port.
        https://bugs.webkit.org/show_bug.cgi?id=103929.

        Reviewed by Timothy Horton.

        * Scripts/run-api-tests:
        (runTestsBySuite):

2012-12-03  Dirk Pranke  <dpranke@chromium.org>

        webkitpy's run_webkit_tests should initialize the printer earlier on
        https://bugs.webkit.org/show_bug.cgi?id=103661

        Reviewed by Eric Seidel.

        Initialize the printer before computing the derived options
        from the command line arguments, so that we can safely log from
        port methods.

        Also clean up a few miscellaneous lint warnings.

        * Scripts/webkitpy/layout_tests/port/chromium_android.py:
        (ChromiumAndroidPort.path_to_adb):
        * Scripts/webkitpy/layout_tests/port/mac.py:
        (MacPort.default_child_processes):
        (MacPort.sample_process):
        (MacPort.start_helper):
        (MacPort.stop_helper):
        (MacPort.nm_command):
        * Scripts/webkitpy/layout_tests/port/mac_unittest.py:
        (test_default_child_processes):
        * Scripts/webkitpy/layout_tests/run_webkit_tests.py:
        (run):
        (_set_up_derived_options):

2012-12-03  Dirk Pranke  <dpranke@chromium.org>

        webkitpy: autoinstaller is failing on windows
        https://bugs.webkit.org/show_bug.cgi?id=103699

        Reviewed by Tony Chang.

        Attempt to fix the python autoinstaller to work for pylint on win32
        again ... it turns out one of the dependent packages contains
        a write-protected test file and windows will choke when it tries to move
        it into place. Fortunately we can just delete the file prior to
        installing it in the final location, but we have to jump through
        a couple of hoops to do so.

        Also, make sure that we're flattening nested module names like
        "logilab/common" into either safe basenames (logilab_common) or
        host-specific subdirs (logilab\common) as needed.

        * Scripts/webkitpy/common/system/autoinstall.py:
        (AutoInstaller._url_downloaded_path):
        (AutoInstaller._install):
        (AutoInstaller.install):
        * Scripts/webkitpy/thirdparty/__init__.py:
        (AutoinstallImportHook._install_pylint):

2012-12-03  Dirk Pranke  <dpranke@chromium.org>

        nrwt: clean up exception propagation / handling for interrupts and early exits
        https://bugs.webkit.org/show_bug.cgi?id=103830

        Reviewed by Ojan Vafai.

        The code for propagating early exits out of the test run was
        convoluted and hard to follow. By adjusting the WorkerException to
        derive from BaseException rather than Exception (which is a fair
        way of representing an error that was really unexpected/unrecoverable
        anyway) and pushing the TestRunInterruptedException into the
        ResultSummary (which is also fair since it was more of a result
        than an exception) this allows us to consolidate and clean up
        a bunch of the try/catch logic and pass fewer state flags around.

        There are no real functional changes to this patch; there's an
        API change in that we stop exporting TestRunInterruptedException
        and WorkerException out of the Manager, and the existence of the
        MessagePool is now completely hidden.

        * Scripts/webkitpy/common/message_pool.py:
        (WorkerException):
        * Scripts/webkitpy/layout_tests/controllers/layout_test_runner.py:
        (LayoutTestRunner.run_tests):
        * Scripts/webkitpy/layout_tests/controllers/manager.py:
        (summarize_results):
        (Manager.run):
        * Scripts/webkitpy/layout_tests/controllers/manager_unittest.py:
        (ResultSummaryTest.summarized_results):
        * Scripts/webkitpy/layout_tests/models/result_summary.py:
        (ResultSummary.__init__):
        * Scripts/webkitpy/layout_tests/run_webkit_tests.py:
        (run):
        (main):
        * Scripts/webkitpy/layout_tests/run_webkit_tests_integrationtest.py:
        (MainTest.test_exception_raised.of):
        (MainTest.test_exception_raised):
        (MainTest.test_run_force):
        * Scripts/webkitpy/layout_tests/views/printing_unittest.py:
        (Testprinter.test_print_unexpected_results.get_unexpected_results):
        (Testprinter):

2012-12-03  Julien BRIANCEAU   <jbrianceau@nds.com>

        Add Qt/SH4 build slave to build.webkit.org
        https://bugs.webkit.org/show_bug.cgi?id=103384

        Reviewed by Csaba OsztrogonÃ¡c.

        * BuildSlaveSupport/build.webkit.org-config/config.json:

2012-12-03  Alexis Menard  <alexis@webkit.org>

        Enable CSS3 background-position offset by default
        https://bugs.webkit.org/show_bug.cgi?id=103917

        Reviewed by Benjamin Poulain.

        Even though each port may enable or not the feature we still need
        to pass it at configure time otherwise it will be disabled.

        * Scripts/webkitperl/FeatureList.pm:

2012-12-03  Sudarsana Nagineni  <sudarsana.nagineni@intel.com>

        Unreviewed. Adding myself to committers.py.

        * Scripts/webkitpy/common/config/committers.py:

2012-12-03  Laszlo Gombos  <l.gombos@samsung.com>

        [CMake] Enable building WebKit2-only build for the EFL port
        https://bugs.webkit.org/show_bug.cgi?id=103820

        Reviewed by Gyuyoung Kim.

        Set ENABLE_WEBKIT2 to OFF if build-webkit was run with --no-webkit2.
        Never set ENABLE_WEBKIT in build-webkit. This will simplyfy invoking
        cmake directly. Initialize $cmakeArgs to avoid potential
        warnings when running the script.

        * Scripts/build-webkit:

2012-12-03  Tommy Widenflycht  <tommyw@google.com>

        Speech Recognition API: Update SpeechRecognitionEvent to match the specification
        https://bugs.webkit.org/show_bug.cgi?id=103407

        Reviewed by Kentaro Hara.

        Changing the mock to use the new results delivery API.

        * DumpRenderTree/chromium/MockWebSpeechRecognizer.cpp:

2012-12-03  Alexis Menard  <alexis@webkit.org>

        [Qt] Enable CSS3 background-position offsets by default.
        https://bugs.webkit.org/show_bug.cgi?id=103877

        Reviewed by Tor Arne VestbÃ¸.

        Enable by default CSS3 background-position offsets.

        * qmake/mkspecs/features/features.pri:

2012-12-03  KyungTae Kim  <ktf.kim@samsung.com>

        [EFL][WK2] Use float variable for zoom levels for MiniBrowser
        https://bugs.webkit.org/show_bug.cgi?id=103863

        Reviewed by Gyuyoung Kim.

        Use float instead of int for zoomLevels variables for a clearer expression

        * MiniBrowser/efl/main.c:
        (on_key_down):

2012-12-02  KyungTae Kim  <ktf.kim@samsung.com>

        [EFL][WK2] Add support for a zoom level setting to MiniBrowser
        https://bugs.webkit.org/show_bug.cgi?id=99285

        Reviewed by Gyuyoung Kim.

         Add support for a zoom level setting to MiniBrowser.
         Shortcuts for setting operations are same as common browsers:
         Ctrl + '+' to zoom in, Ctrl + '-' to zoom out and Ctrl + '0' to zoom to default.

        * MiniBrowser/efl/main.c:
        (on_key_down):

2012-12-02  KyungTae Kim  <ktf.kim@samsung.com>

        [EFL][WK2] ECORE_GETOPT_VALUE_BOOL need to be used for Eina_Bool
        https://bugs.webkit.org/show_bug.cgi?id=103835

        Reviewed by Kentaro Hara.

        Because legacy_behavior_enabled is Eina_Bool, ECORE_GETOPT_VALUE_BOOL need to be used

        * MiniBrowser/efl/main.c:
        (elm_main):

2012-12-02  Mike West  <mkwst@chromium.org>

        Garden-o-matic shouldn't die when blank JSON results are received.
        https://bugs.webkit.org/show_bug.cgi?id=103838

        Reviewed by Adam Barth.

        * BuildSlaveSupport/build.webkit.org-config/public_html/TestFailures/scripts/base.js:
            If the JSONP string doesn't contain '(' or ')', return an empty object.
        * BuildSlaveSupport/build.webkit.org-config/public_html/TestFailures/scripts/base_unittests.js:
            Check that this behavior stays in place.

2012-12-02  Eric Seidel  <eric@webkit.org>

        run-perf-tests --profile should use iprofiler instead of instruments on Mac
        https://bugs.webkit.org/show_bug.cgi?id=103765

        Unreviewed.  Updating the unittests after my previous change.

        * Scripts/webkitpy/common/system/profiler_unittest.py:
        (ProfilerFactoryTest.test_basic):

2012-12-02  Julie Parent  <jparent@chromium.org>

        Remove dead code in flakiness dashboard for obsolete buildDir option
        https://bugs.webkit.org/show_bug.cgi?id=103792

        Reviewed by Dirk Pranke.

        * TestResultServer/static-dashboards/dashboard_base.js:
        (initBuilders):

2012-12-02  Dirk Pranke  <dpranke@chromium.org>

        nrwt: clean up logic for retrying failed tests a bit
        https://bugs.webkit.org/show_bug.cgi?id=103829

        Reviewed by Ojan Vafai.

        The code for determining when to retry test failures and
        show the results.html file was awkward and could stand some
        cleaning up. This patch should have no functional changes.

        The routine called _get_failures() returned a dict of test names
        to failure types, but we only ever used the names, so I've converted
        it to return a list (and renamed it); also, the show_results_html()
        file was calling that routine to figure out if anything failed, when
        the information was already in the result_summary (as either
        unexpected_results or total_failures), so we were doing unnecessary work.

        * Scripts/webkitpy/layout_tests/controllers/manager.py:
        (Manager.__init__):
        (Manager.run):
        (Manager._run_tests):
        (Manager._failed_test_names):
        (Manager._copy_results_html_file):

2012-12-02  Dirk Pranke  <dpranke@chromium.org>

        nrwt: remove unused methods in manager.py
        https://bugs.webkit.org/show_bug.cgi?id=103828

        Reviewed by Eric Seidel.

        These two methods weren't being called by anything and were no
        longer needed.

        * Scripts/webkitpy/layout_tests/controllers/manager.py:
        (Manager._get_failures):
        (Manager._upload_json_files):

2012-12-02  Laszlo Gombos  <l.gombos@samsung.com>

        Correct the spelling of the cmakeargs argument
        https://bugs.webkit.org/show_bug.cgi?id=103814

        Reviewed by Darin Adler.

        The script expects cmakeargs (plural), so lets get the
        documentation of the script report the same.

        * Scripts/build-webkit:

2012-12-02  Mike West  <mkwst@chromium.org>

        [gtk] Enable the CSP_NEXT runtime flag.
        https://bugs.webkit.org/show_bug.cgi?id=103810

        Reviewed by Adam Barth.

        * DumpRenderTree/gtk/DumpRenderTree.cpp:
        (resetDefaultsToConsistentValues):
            Turn on the CSP_NEXT runtime flag when running tests under GTK.

2012-12-02  Eric Seidel  <eric@webkit.org>

        run-perf-tests --profile should use iprofiler instead of instruments on Mac
        https://bugs.webkit.org/show_bug.cgi?id=103765

        Reviewed by Ryosuke Niwa.

        Stephanie pointed out that iprofiler is the newer command-line interface
        to replace /usr/bin/instruments in Instruments 4 (which according to the
        interblags is supported on everything since 10.6.6), so I've moved --profile
        to use iprofiler on Mac.

        I also made the IProfiler class wait for iprofiler to complete so that
        iprofiler won't continue running after run-perf-tests is complete (and
        spam over the top of your shell output).

        There are a couple of "got-chas" to this approach:
        1.  iprofiler will ask for your password the first time you run it, which may
            cause your first test to fail.  /usr/bin/instruments doesn't seem to do that.
        2.  iprofiler has nice (but kinda awkward for our purposes) support for separate
            directory and basename arguments, making IProfiler a somewhat awkward
            baseclass of SingleFileOutputProfiler

        I suspect we'll iterate from here.  It does seem slightly faster than
        /usr/bin/instruments was.

        * Scripts/webkitpy/common/system/profiler.py:
        (ProfilerFactory.create_profiler):
        (IProfiler):
        (IProfiler.__init__):
        (IProfiler.attach_to_pid):

2012-12-02  Yongjun Zhang  <yongjun_zhang@apple.com>

        Need a method to close all idle localstorage databases immediately.
        https://bugs.webkit.org/show_bug.cgi?id=103469

        Reviewed by David Kilzer.

        Add an JS method to TestRunner, to enable testing closing idle local storage databases in
        DumpRenderTree layout tests.

        * DumpRenderTree/TestRunner.cpp:
        (closeIdleLocalStorageDatabasesCallback):
        (TestRunner::staticFunctions):
        * DumpRenderTree/TestRunner.h:
        (TestRunner):
        * DumpRenderTree/blackberry/TestRunnerBlackBerry.cpp:
        (TestRunner::closeIdleLocalStorageDatabases):
        * DumpRenderTree/efl/TestRunnerEfl.cpp:
        (TestRunner::closeIdleLocalStorageDatabases):
        * DumpRenderTree/gtk/TestRunnerGtk.cpp:
        (TestRunner::closeIdleLocalStorageDatabases):
        * DumpRenderTree/mac/TestRunnerMac.mm:
        (TestRunner::closeIdleLocalStorageDatabases):
        * DumpRenderTree/win/TestRunnerWin.cpp:
        (TestRunner::closeIdleLocalStorageDatabases):
        * DumpRenderTree/wx/TestRunnerWx.cpp:
        (TestRunner::closeIdleLocalStorageDatabases):

2012-12-02  Yael Aharon  <yael.aharon@intel.com>

        [EFL][WK2] MiniBrowser should have a legacy mode
        https://bugs.webkit.org/show_bug.cgi?id=103679

        Reviewed by Kenneth Rohde Christiansen.

        Add an option to start MiniBrowser in legacy mode.

        * MiniBrowser/efl/main.c:
        (window_create):
        (elm_main):

2012-12-02  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r136236.
        http://trac.webkit.org/changeset/136236
        https://bugs.webkit.org/show_bug.cgi?id=103833

        [chromium] Flakey crashes in SpeechRecognitionEvent::emma
        during GC. (Requested by mkwst on #webkit).

        * DumpRenderTree/chromium/MockWebSpeechRecognizer.cpp:

2012-12-01  Zan Dobersek  <zandobersek@gmail.com>

        [XvfbDriver] XvfbDriverTest.test_next_free_display is flaky on builders using XvfbDriver
        https://bugs.webkit.org/show_bug.cgi?id=103806

        Reviewed by Dirk Pranke.

        There are occasional mishaps on builders where XvfbDriver doesn't properly
        clean up the Xvfb instance it was managing so the related guard lock files
        are still existing when the webkitpy unit tests are run. This can cause failures
        in XvfbDriverTest.test_next_free_display as the test tries to acquire displays
        with a specific number but is unable to due to the stale locks.

        The solution to this is to use MockFileLock when inside unit test. This is achievable
        by creating a file lock through the SystemHost instance connected to the Port object,
        the latter available to the Driver.

        * Scripts/webkitpy/common/system/file_lock_mock.py:
        (MockFileLock.acquire_lock): Return True to signal lock acquiring succeeded.
        (MockFileLock.release_lock): Return True to signal lock releasing succeeded.
        * Scripts/webkitpy/layout_tests/port/xvfbdriver.py:
        (XvfbDriver._next_free_display): Create the file lock through a mockable way.
        * Scripts/webkitpy/layout_tests/port/xvfbdriver_unittest.py:
        (XvfbDriverTest.test_next_free_display): Enable back the unit test.

2012-12-01  Zan Dobersek  <zandobersek@gmail.com>

        [GTK] A11y tests in WK2 report badly-formatted AX roles
        https://bugs.webkit.org/show_bug.cgi?id=102947

        Reviewed by Xan Lopez.

        As in DRT, convert the ATK accessibility roles to corresponding AXRoles.
        These are expected in both tests and their baselines.

        * WebKitTestRunner/InjectedBundle/atk/AccessibilityUIElementAtk.cpp:
        (WTR::roleToString):
        (WTR):
        (WTR::AccessibilityUIElement::role):

2012-11-30  Mike West  <mkwst@chromium.org>

        CSP 1.1: Make the CSP_NEXT flag runtime enabled.
        https://bugs.webkit.org/show_bug.cgi?id=103652

        Reviewed by Adam Barth.

        Ensures that the new SecurityPolicy runtime flag is enabled for Chromium's tests.

        * DumpRenderTree/chromium/TestShell.cpp:
        (TestShell::TestShell):

2012-11-30  Roger Fong  <roger_fong@apple.com>

        Unreviewed. Removed temporary debugging change from DRT (r136300).

        * DumpRenderTree/win/DumpRenderTree.cpp:
        (dump):

2012-11-30  Roger Fong  <roger_fong@apple.com>

        Unreviewed. Temporary change to DRT for debugging purposes.

        * DumpRenderTree/win/DumpRenderTree.cpp:
        (dump):

2012-11-29  Tommy Widenflycht  <tommyw@google.com>

        Speech Recognition API: Update SpeechRecognitionEvent to match the specification
        https://bugs.webkit.org/show_bug.cgi?id=103407

        Reviewed by Adam Barth.

        Changing the mock to use the new results delivery API.

        * DumpRenderTree/chromium/MockWebSpeechRecognizer.cpp:

2012-11-30  Simon Hausmann  <simon.hausmann@digia.com>, Pierre Rossi  <pierre.rossi@digia.com>

        [Qt] Separate Qt WebKit into Qt WebKit and Qt WebKit Widgets
        https://bugs.webkit.org/show_bug.cgi?id=99314

        Reviewed by Tor Arne VestbÃ¸.

        This big change separates QtWebKit into QtWebKit and QtWebKitWidgets as
        shared libraries.

        It's a big refactoring that mostly involves moving WebCore dependent
        code into QtWebKit and accessing it through exported QWebFrameAdapter
        and QWebPageAdapter classes.

        * DumpRenderTree/qt/DumpRenderTree.pro:
        * DumpRenderTree/qt/DumpRenderTreeQt.cpp:
        (WebCore::DumpRenderTree::dump): Adapt to internal API changes.
        * MiniBrowser/qt/MiniBrowser.pro:
        * Scripts/webkitpy/style/checker.py: Adapt Qt exceptions to new paths.
        * Scripts/webkitpy/style/checker_unittest.py:
        (GlobalVariablesTest.test_path_rules_specifier):
        * WebKitTestRunner/InjectedBundle/Target.pri:
        * qmake/mkspecs/features/default_post.prf:
        * qmake/mkspecs/features/webkit_modules.prf:
        * qmake/mkspecs/modules/webkitwidgets.prf: Removed.

2012-11-30  Csaba OsztrogonÃ¡c  <ossy@webkit.org>

        [Qt] Unreviewed trivial fix.

        Add empty.cpp back, it was removed accidentally by r129092.

        * qmake/config.tests/gccdepends/empty.cpp: Added.

2012-11-30  Tor Arne VestbÃ¸  <tor.arne.vestbo@digia.com>

        [Qt] Add support for prepare_docs and generate_docs

        Follow-up to changes in Qt in how documentation is built.

        Reviewed by Simon Hausmann.

        * qmake/mkspecs/features/default_post.prf:

2012-11-30  Zan Dobersek  <zandobersek@gmail.com>

        Finally remove webkitpy.common.system.deprecated_logging
        https://bugs.webkit.org/show_bug.cgi?id=103624

        Reviewed by Adam Barth.

        Remove the deprecated logging module and its unit tests now that such logging is not
        used anymore in webkitpy.

        The tee and OutputTee classes are moved into a new module, webkitpy.common.system.outputtee.
        The tee class is renamed to Tee to conform with the usual guidelines.

        Only unit test for the Tee class is currently provided as the OutputTee is not currently
        using the webkitpy Filesystem abstraction that would make its functionality testable.

        * Scripts/webkitpy/common/system/executive.py: tee (now Tee) is now in a new module.
        (Executive.run_and_throw_if_fail):
        * Scripts/webkitpy/common/system/outputtee.py: Renamed from Tools/Scripts/webkitpy/common/system/deprecated_logging.py.
        (Tee):
        (Tee.__init__):
        (Tee.write):
        (OutputTee):
        (OutputTee.__init__):
        (OutputTee.add_log):
        (OutputTee.remove_log):
        (OutputTee._open_log_file):
        (OutputTee._tee_outputs_to_files):
        * Scripts/webkitpy/common/system/outputtee_unittest.py: Renamed from Tools/Scripts/webkitpy/common/system/deprecated_logging_unittest.py.
        (SimpleTeeTest):
        (SimpleTeeTest.test_simple_tee):
        * Scripts/webkitpy/tool/bot/queueengine.py: OutputTee is now in a new module.
        * Scripts/webkitpy/webkitpy.pyproj: Remove the deprecated_logging module and related unit test file.

2012-11-30  Sudarsana Nagineni  <sudarsana.nagineni@intel.com>

        [EFL][WK2] Add support for PlatformWebView::simulateRightClick() in TestWebKitAPI
        https://bugs.webkit.org/show_bug.cgi?id=103634

        Reviewed by Gyuyoung Kim.

        Add support for PlatformWebView::simulateRightClick() and enable
        WebKit2 API test HitTestResultNodeHandle.

        * TestWebKitAPI/PlatformEfl.cmake:
        * TestWebKitAPI/efl/PlatformWebView.cpp:
        (TestWebKitAPI::PlatformWebView::simulateRightClick):
        (TestWebKitAPI):

2012-11-30  Mihai Maerean  <mmaerean@adobe.com>

        [CSSRegions] when WebKit uses V8, there should be a single variable to store if the CSS Regions feature is enabled
        https://bugs.webkit.org/show_bug.cgi?id=101192

        Reviewed by Hajime Morita.

        Removed the CSS Regions flag in Settings and switched to using the new flag I have added in RuntimeEnabledFeatures.

        Tests: No new tests because there is no functional change.

        * DumpRenderTree/chromium/WebPreferences.cpp:
        (WebPreferences::applyTo):

2012-11-29  Rafael Weinstein  <rafaelw@chromium.org>

        [HTMLTemplateElement] Add feature flag
        https://bugs.webkit.org/show_bug.cgi?id=103694

        Reviewed by Adam Barth.

        This flag will guard the implementation of the HTMLTemplateElement.
        http://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/templates/index.html

        * Scripts/webkitperl/FeatureList.pm:

2012-11-29  Dirk Pranke  <dpranke@chromium.org>

        Ignore errors when removing directories on win32 during autoinstall
        https://bugs.webkit.org/show_bug.cgi?id=103699

        Unreviewed, build fix.

        I think this will work on win32; if not, I'll have to actually
        reproduce this :). The problem is that the logilab files
        appear to contain a write-protected file, and deleting those
        is problematic on windows.

        * Scripts/webkitpy/common/system/autoinstall.py:
        (AutoInstaller._install):
        (AutoInstaller.install):

2012-11-29  Dirk Pranke  <dpranke@chromium.org>

        webkitpy: autoinstaller is failing on windows
        https://bugs.webkit.org/show_bug.cgi?id=103699

        Unreviewed, build fix.

        We're attempting to create directories with forward slashes in them;
        this is a no-no on windows.

        * Scripts/webkitpy/common/system/autoinstall.py:
        (AutoInstaller._create_scratch_directory_inner):

2012-11-29  Dirk Pranke  <dpranke@chromium.org>

        Fix python unit tests after r136158 (android port tests failing)
        https://bugs.webkit.org/show_bug.cgi?id=103581

        Unreviewed, build fix.

        The unit tests apparently weren't ran for this patch; we failed
        to update the mock executive calls out to adb to determine various
        aspects of the environment, and were failing to create drivers.

        * Scripts/webkitpy/layout_tests/port/chromium_android_unittest.py:
        (MockRunCommand.mock_run_command_fn):

2012-11-29  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r136175 and r136177.
        http://trac.webkit.org/changeset/136175
        http://trac.webkit.org/changeset/136177
        https://bugs.webkit.org/show_bug.cgi?id=103683

        Changes did not correct Windows build. (Requested by bfulgham
        on #webkit).

        * TestWebKitAPI/Tests/WebCore/win/BitmapImage.cpp:

2012-11-29  Brent Fulgham  <bfulgham@webkit.org>

        [Windows, WinCairo] Unreviewed build correction. Correct debug
        build case on build machine.

        * TestWebKitAPI/Tests/WebCore/win/BitmapImage.cpp:

2012-11-29  Brent Fulgham  <bfulgham@webkit.org>

        [Windows, WinCairo] Unreviewed build correction. Hide the
        unexported 'notSolidColor' symbol when testing against
        the BitmapImage class to avoid having to deal with a
        debug-only symbol in the Windows export definition file.

        * TestWebKitAPI/Tests/WebCore/win/BitmapImage.cpp: 

2012-11-29  Peter Beverloo  <peter@chromium.org>

        run-perf-tests --chromium-android should not require adb in my path
        https://bugs.webkit.org/show_bug.cgi?id=103581

        Reviewed by Eric Seidel.

        Remove the need to have "adb" available in the path for Layout and Performance
        tests. We'll determine the versions of the "adb" version in path (if any) and
        the one provided in the Chromium Android checkout. Unless the "adb" available
        in the path is newer, the provided version will be used.

        Some other minor nits addressed:
        - The path_to_forwarder/path_to_md5sum should not be in the "private overrides"
          section, as they're not overriding anything and are used by the driver.
        - Make _restart_adb_as_root slightly more robust by waiting for the device
          to come back online regardless of the output.

        * Scripts/webkitpy/layout_tests/port/chromium_android.py:
        (ChromiumAndroidPort.__init__):
        (ChromiumAndroidPort.check_build):
        (ChromiumAndroidPort.path_to_adb):
        (ChromiumAndroidPort):
        (ChromiumAndroidPort.path_to_forwarder):
        (ChromiumAndroidPort.path_to_md5sum):
        (ChromiumAndroidPort._path_to_helper):
        (ChromiumAndroidPort._determine_adb_version):
        (ChromiumAndroidPort._get_devices):
        (ChromiumAndroidDriver.__init__):
        (ChromiumAndroidDriver._setup_md5sum_and_push_data_if_needed):
        (ChromiumAndroidDriver._push_executable):
        (ChromiumAndroidDriver._restart_adb_as_root):

2012-11-29  Martin Robinson  <mrobinson@igalia.com>

        [GTK] [WebKit2] Embed the HTTP authentication dialog into the WebView
        https://bugs.webkit.org/show_bug.cgi?id=103277

        Reviewed by Carlos Garcia Campos.

        Skip the new WebKit2GtkAuthenticationDialog files so that they are not processed
        during gtkdoc generation.

        * gtk/generate-gtkdoc:
        (get_webkit2_options):

2012-11-29  Eric Seidel  <eric@webkit.org>

        run-perf-tests --chromium-android fails due to Skia INFO logging
        https://bugs.webkit.org/show_bug.cgi?id=103585

        Reviewed by Adam Barth.

        Ignore all INFO logging from Chromium code.
        Also added some basic testing of the ignored-stderr lines code.

        * Scripts/webkitpy/performance_tests/perftest.py:
        (PerfTest):
        * Scripts/webkitpy/performance_tests/perftest_unittest.py:
        (MainTest.test_ignored_stderr_lines):

2012-11-29  Sudarsana Nagineni  <sudarsana.nagineni@intel.com>

        [EFL][WK2] Add support for PlatformWebView::simulateMouseMove() in TestWebKitAPI
        https://bugs.webkit.org/show_bug.cgi?id=103252

        Reviewed by Kenneth Rohde Christiansen.

        Add support for PlatformWebView::simulateMouseMove() and enable
        WebKit2 API test MouseMoveAfterCrash.

        * TestWebKitAPI/PlatformEfl.cmake: Enable MouseMoveAfterCrash API
        test.
        * TestWebKitAPI/efl/PlatformWebView.cpp:
        (TestWebKitAPI::onWebProcessCrashed): Handle 'webprocess,crashed' signal
        to prevent loading an error page since the test case is reloading actual
        page after web process has terminated and recovered.
        (TestWebKitAPI):
        (TestWebKitAPI::PlatformWebView::PlatformWebView):
        (TestWebKitAPI::PlatformWebView::simulateMouseMove): Implemented.

2012-11-29  Andras Becsi  <andras.becsi@digia.com>

        [Qt] Fix installation of QtWebProcess binary
        https://bugs.webkit.org/show_bug.cgi?id=101735

        Reviewed by Simon Hausmann.

        Add config test to detect the availability of support
        for "program executables" in Qt (libexec).

        This test can be removed after the Qt5 release.

        * Tools.pro:
        * qmake/mkspecs/features/features.prf:
        * qmake/config.tests/libexecdir/libexecdir.cpp:
        * qmake/config.tests/libexecdir/libexecdir.pro:

2012-11-29  Eric Seidel  <eric@webkit.org>

        run-perf-tests does not work when the layout test directory does not exist
        https://bugs.webkit.org/show_bug.cgi?id=103572

        Reviewed by Ryosuke Niwa.

        Make sure that Profiler() calls maybe_make_directory for the output_dir
        before ever using it.  It's a little awkward to create the directory
        from the constructor, but its simplest that way as the various subclasses
        all use the directory at different times.

        Since this required having a filesystem in Profiler (and I didn't want
        to grab inside Workspace to get one), I just made Profiler expect a
        SystemHost instead of a separate filesystem, executive and workspace.

        * Scripts/webkitpy/common/system/profiler.py:
        (ProfilerFactory.create_profiler):
        (Profiler.__init__):
        (SingleFileOutputProfiler.__init__):
        (GooglePProf.__init__):
        (GooglePProf.profile_after_exit):
        (Instruments.__init__):
        (Instruments.attach_to_pid):
        * Scripts/webkitpy/common/system/profiler_unittest.py:
        (ProfilerFactoryTest.test_basic):

2012-11-28  Vivek Galatage  <vivek.vg@samsung.com>

        Adding secondary email id
        https://bugs.webkit.org/show_bug.cgi?id=103594

        Unreviewed. Adding secondary email.

        * Scripts/webkitpy/common/config/committers.py:

2012-11-28  Kent Tamura  <tkent@chromium.org>

        garden-o-matic: Use indeterminate <progress> in the status area
        https://bugs.webkit.org/show_bug.cgi?id=103494

        Reviewed by Adam Barth.

        * BuildSlaveSupport/build.webkit.org-config/public_html/TestFailures/scripts/ui.js:
        Wrap the "Processing..." message with an indeterminate progress bar.
        We keep the message as a fallback content.
        * BuildSlaveSupport/build.webkit.org-config/public_html/TestFailures/scripts/ui_unittests.js:
        Follow the above change.

2012-11-28  Nima Ghanavatian  <nghanavatian@rim.com>

        Adding Nima Ghanavatian to committers.py
        https://bugs.webkit.org/show_bug.cgi?id=103533

        Reviewed by Rob Buis.

        Adding myself to committers.py as a Committer.

        * Scripts/webkitpy/common/config/committers.py:

2012-11-28  peavo@outlook.com  <peavo@outlook.com>

        [WinCairo] Crash when requesting favicon.
        https://bugs.webkit.org/show_bug.cgi?id=102689

        Reviewed by Brent Fulgham.

        * TestWebKitAPI/Tests/WebCore/win: Added.
        * TestWebKitAPI/Tests/WebCore/win/BitmapImage.cpp: Added.
        (TestWebKitAPI::BitmapImageTest::BitmapImageTest): Allocate frame in constructor.
        (TestWebKitAPI::BitmapImageTest::frameCount): Override frameCount() method.
        (TestWebKitAPI::TEST): Added new test.
        * TestWebKitAPI/config.h: Make sure defines are correct for WinCairo.
       * TestWebKitAPI/win/TestWebKitAPI.vcproj: Added new test.

2012-11-28  Eric Seidel  <eric@webkit.org>

        run-perf-tests should have a --profile option for easy profiling
        https://bugs.webkit.org/show_bug.cgi?id=99517

        Reviewed by Adam Barth.

        This is a very basic implementation which works on Mac and Linux
        and makes it trivial for anyone to profile a PerformanceTest.

        Currently it's not "hard" to profile a PerformanceTest
        but lowering the barriers to entry here allows all of us to focus
        less on the tools and more on the code.

        This also paves the way for adding easy mobile-profiling (e.g. chromium-android)
        which is actually "hard", and this option will make much easier.

        * Scripts/webkitpy/common/system/profiler.py: Added.
        (ProfilerFactory):
        (ProfilerFactory.create_profiler):
        (Profiler):
        (Profiler.__init__):
        (Profiler.adjusted_environment):
        (Profiler.attach_to_pid):
        (Profiler.did_stop):
        (SingleFileOutputProfiler):
        (SingleFileOutputProfiler.__init__):
        (GooglePProf):
        (GooglePProf.__init__):
        (GooglePProf.adjusted_environment):
        (GooglePProf.did_stop):
        (Instruments):
        (Instruments.__init__):
        (Instruments.attach_to_pid):
        * Scripts/webkitpy/common/system/profiler_unittest.py: Added.
        (ProfilerFactoryTest):
        (ProfilerFactoryTest.test_basic):
        * Scripts/webkitpy/layout_tests/port/driver.py:
        (Driver.__init__):
        (Driver._start):
        (Driver.stop):
        (Driver.cmd_line):
        * Scripts/webkitpy/performance_tests/perftest.py:
        (PerfTest.parse_output):
        * Scripts/webkitpy/performance_tests/perftest_unittest.py:
        (MainTest.test_parse_output):
        (MainTest.test_parse_output_with_failing_line):
        * Scripts/webkitpy/performance_tests/perftestsrunner.py:
        (PerfTestsRunner._parse_args):
        (PerfTestsRunner.run):

2012-11-28  Zan Dobersek  <zandobersek@gmail.com>

        Remove deprecated logging usage from QueueEngine
        https://bugs.webkit.org/show_bug.cgi?id=103532

        Reviewed by Dirk Pranke.

        Replace usage of deprecated logging in webkitpy.tool.bot.queueengine with
        logging through the Logger object. The unit test is modified to reflect
        these changes.

        After these changes the deprecated logging (i.e. logging to stderr) is not
        used anymore through webkitpy and can be removed.

        * Scripts/webkitpy/tool/bot/queueengine.py:
        (QueueEngine.exit_after_handled_error):
        (QueueEngine.run):
        (QueueEngine._stopping):
        (QueueEngine._sleep):
        * Scripts/webkitpy/tool/bot/queueengine_unittest.py:
        (QueueEngineTest._run_engine):

2012-11-28  Nate Chapin  <japhet@chromium.org>

        Move empty loading to DocumentLoader, simplify FrameLoader::init()
        https://bugs.webkit.org/show_bug.cgi?id=101512

        Reviewed by Adam Barth.

        * DumpRenderTree/chromium/WebViewHost.cpp:
        (WebViewHost::updateForCommittedLoad): This function doesn't play nicely with empty urls and incorrectly
            interprets them as a non-empty load. This change is required for
             http/tests/navigation/new-window-redirect-history.html to continue to pass in chromium.
        * TestWebKitAPI/Tests/WebKit2/AboutBlankLoad.cpp: This test relies on a callback that no longer
             is sent for about:blank loads.  Hook into didFinishLoadForFrame() instead.
        (TestWebKitAPI::didFinishLoadForFrame):
        (TestWebKitAPI::TEST):

2012-11-28  Sadrul Habib Chowdhury  <sadrul@chromium.org>

        [chromium] Allow plugins to opt-in to receive synthetic mouse events out of touch events.
        https://bugs.webkit.org/show_bug.cgi?id=103092

        Reviewed by Tony Chang.

        Update the test web-plugin to be able to opt-in to receive synthesized mouse events created
        from touch events.

        * DumpRenderTree/chromium/TestWebPlugin.cpp:
        (parseTouchEventRequestType):
        (TestWebPlugin::TestWebPlugin):
        (TestWebPlugin::initialize):
        * DumpRenderTree/chromium/TestWebPlugin.h:
        (TestWebPlugin):

2012-11-28  Sudarsana Nagineni  <sudarsana.nagineni@intel.com>

        [EFL][WK2] Add support for PlatformWebView::simulateSpacebarKeyPress() in TestWebKitAPI
        https://bugs.webkit.org/show_bug.cgi?id=103123

        Reviewed by Laszlo Gombos.

        Add support for PlatformWebView::simulateSpacebarKeyPress().
        This functionality is needed by WebKit2 API test MouseMoveAfterCrash
        which is going to be unskipped in bug #103252.

        * TestWebKitAPI/efl/PlatformUtilities.cpp:
        (TestWebKitAPI::Util::sleep):
        * TestWebKitAPI/efl/PlatformWebView.cpp: Use usleep() instead of
        sleep().
        (TestWebKitAPI::PlatformWebView::simulateSpacebarKeyPress):
        (TestWebKitAPI):

2012-11-28  Yael Aharon  <yael.aharon@intel.com>

        Minor cleanup in TestInvocation
        https://bugs.webkit.org/show_bug.cgi?id=103512

        Reviewed by Kenneth Rohde Christiansen.

        Remove a function declaration that is not defined and not used.
        Fix spelling error in m_webProcessIsUnresponsive.

        * WebKitTestRunner/TestInvocation.cpp:
        (WTR::TestInvocation::TestInvocation):
        (WTR::TestInvocation::invoke):
        * WebKitTestRunner/TestInvocation.h:
        (TestInvocation):
        * WebKitTestRunner/cairo/TestInvocationCairo.cpp:
        (WTR::TestInvocation::dumpPixelsAndCompareWithExpected):
        * WebKitTestRunner/qt/TestInvocationQt.cpp:
        (WTR::TestInvocation::dumpPixelsAndCompareWithExpected):

2012-11-28  Thiago Marcos P. Santos  <thiago.santos@intel.com>

        Unreviewed. Use my personal email as bugzilla email.

        * Scripts/webkitpy/common/config/committers.py:

2012-11-28  Thiago Marcos P. Santos  <thiago.santos@intel.com>

        Unreviewed. Adding myself to committers.py.

        * Scripts/webkitpy/common/config/committers.py:

2012-11-26  Andrey Adaikin  <aandrey@chromium.org>

        Unreviewed. Adding myself to committers.py.

        * Scripts/webkitpy/common/config/committers.py:

2012-11-28  Tommy Widenflycht  <tommyw@google.com>

        Add basic implementation for MediaStreamAudioDestinationNode
        https://bugs.webkit.org/show_bug.cgi?id=101815

        Reviewed by Chris Rogers.

        Adds a bit of code that exercises the WebKit API.

        * DumpRenderTree/chromium/MockWebMediaStreamCenter.cpp:
        (MockWebMediaStreamSourceConsumer):
        (MockWebMediaStreamSourceConsumer::~MockWebMediaStreamSourceConsumer):
        (MockWebMediaStreamCenter::didCreateMediaStream):

2012-11-28  Matt Falkenhagen  <falken@chromium.org>

        Unreviewed. Adding myself to committers list.

        * Scripts/webkitpy/common/config/committers.py:

2012-11-27  Li Yin  <li.yin@intel.com>

        Unreviewed. Adding myself to committers list.

        * Scripts/webkitpy/common/config/committers.py:

2012-11-27  Christophe Dumez  <christophe.dumez@intel.com>

        Unreviewed. Adding myself to committers.py.

        * Scripts/webkitpy/common/config/committers.py:

2012-11-27  Vivek Galatage  <vivek.vg@samsung.com>

        Unreviewd. Adding myself to committers list.

        * Scripts/webkitpy/common/config/committers.py:

2012-11-27  Tony Chang  <tony@chromium.org>

        Bring back partytime!
        https://bugs.webkit.org/show_bug.cgi?id=103466

        Reviewed by Adam Barth.

        "code 404, message Unknown function images/partytime_gif" since we didn't
        allow .gif or .png files to be served.

        * Scripts/webkitpy/tool/servers/gardeningserver.py:
        (GardeningHTTPRequestHandler):

2012-11-27  Adam Barth  <abarth@webkit.org>

        run-perf-tests fails on Android because of stderr output
        https://bugs.webkit.org/show_bug.cgi?id=103462

        Reviewed by Ryosuke Niwa.

        The chromium-android port produces some stderr output that causes
        run-perf-tests to get sad and not record the results of the performance
        test. This patch teaches run-perf-test to ignore this output much in
        the same way that it currently ignores some stdout messages.

        * Scripts/webkitpy/performance_tests/perftest.py:
        (PerfTest.run):
        (PerfTest._should_ignore_line):
        (PerfTest):
        (PerfTest._should_ignore_line_in_stderr):
        (PerfTest._filter_stderr):
        (PerfTest._should_ignore_line_in_parser_test_result):

2012-11-27  Tony Chang  <tony@chromium.org>

        Fix garden-o-matic for non-chromium ports
        https://bugs.webkit.org/show_bug.cgi?id=103458

        Reviewed by Adam Barth.

        I was getting a 403 error when trying to select any non-chromium port.

        * Scripts/webkitpy/tool/servers/reflectionhandler.py:
        (ReflectionHandler._handle_request): Use the path without query params.

2012-11-27  Yael Aharon  <yael.aharon@intel.com>

        [EFL][WK2] 3D pixel tests are failing
        https://bugs.webkit.org/show_bug.cgi?id=102833

        Reviewed by Kenneth Rohde Christiansen.

        Generate a snapshot of the view in the UI process instead of the web process.
        We have to use Texture Mapper in order to correctly paint 3D transforms etc.

        * WebKitTestRunner/TestInvocation.h:
        (TestInvocation):
        * WebKitTestRunner/cairo/TestInvocationCairo.cpp:
        (WTR::writeFunction):
        (WTR::paintRepaintRectOverlay):
        (WTR):
        (WTR::TestInvocation::forceRepaintDoneCallback):
        (WTR::TestInvocation::dumpPixelsAndCompareWithExpected):
        * WebKitTestRunner/efl/PlatformWebViewEfl.cpp:
        (WTR::PlatformWebView::windowSnapshotImage):

2012-11-27  Adam Barth  <abarth@webkit.org>

        Make it possible to run performance tests on Chromium Android
        https://bugs.webkit.org/show_bug.cgi?id=103268

        Reviewed by Ryosuke Niwa.

        Based on a patch by Peter Beverloo.

        This patch (almost) makes it possible to run WebKit performance tests
        on the Chromium port for Android. There are a few things I had to do
        in order to make this happen:

        1) The worker number when creating a driver for a port is zero-based
           for layout tests and elsewhere. Android uses this to determine
           which device it has to run on, so make it zero based for performance
           tests as well.

        2) Tests aren't available on the Android device, so we start an HTTP
           server that serves the tests to the device or emulator.

        The one shortcoming of this patch is that chromium-android produces
        some stderr output that confuses run-perf-tests. I'll address that
        issue in a subsequent CL. This patch also depends on
        https://codereview.chromium.org/11416182 in order to work.

        * Scripts/webkitpy/layout_tests/port/chromium_android.py:
        (ChromiumAndroidPort.start_http_server):
        (ChromiumAndroidDriver._command_from_driver_input):
        * Scripts/webkitpy/performance_tests/perftest.py:
        (ReplayPerfTest.prepare):
        * Scripts/webkitpy/performance_tests/perftestsrunner.py:
        (PerfTestsRunner.__init__):
        (PerfTestsRunner._parse_args):
        (PerfTestsRunner._start_servers):
        (PerfTestsRunner):
        (PerfTestsRunner._stop_servers):
        (PerfTestsRunner.run):
        (PerfTestsRunner._run_tests_set):

2012-11-27  Zan Dobersek  <zandobersek@gmail.com>

        Remove use of deprecated logging from webkitpy.common and webkitpy.layout_tests
        https://bugs.webkit.org/show_bug.cgi?id=103408

        Reviewed by Dirk Pranke.

        Remove the use of the deprecated log and error methods by replacing them with
        logging through Python's logging.Logger objects.

        This patch covers such changes in webkitpy.common and webkitpy.layout_tests and also
        updates any affected unit test.

        * Scripts/webkitpy/common/checkout/changelog.py:
        (ChangeLogEntry._parse_entry):
        * Scripts/webkitpy/common/checkout/checkout.py:
        * Scripts/webkitpy/common/checkout/checkout_unittest.py:
        (CheckoutTest.test_apply_patch):
        * Scripts/webkitpy/common/checkout/deps_mock.py:
        (MockDEPS.write_variable):
        * Scripts/webkitpy/common/checkout/scm/detection.py:
        (SCMDetector.default_scm):
        * Scripts/webkitpy/common/checkout/scm/detection_unittest.py:
        (SCMDetectorTest.test_detect_scm_system):
        * Scripts/webkitpy/common/checkout/scm/git.py:
        (Git._check_git_architecture):
        (Git._commit_on_branch):
        * Scripts/webkitpy/common/checkout/scm/scm.py:
        (SCM.ensure_clean_working_directory):
        (SCM.ensure_no_local_commits):
        (SCM.will.commit_locally_with_message):
        * Scripts/webkitpy/common/checkout/scm/svn.py:
        (SVN.apply_reverse_diff):
        * Scripts/webkitpy/common/net/bugzilla/attachment.py:
        (Attachment._validate_flag_value):
        * Scripts/webkitpy/common/net/bugzilla/bugzilla.py:
        (Bugzilla._fetch_bug_page):
        (Bugzilla.bug_id_for_attachment_id):
        (Bugzilla.authenticate):
        (Bugzilla._commit_queue_flag):
        (Bugzilla.add_attachment_to_bug):
        (Bugzilla.add_patch_to_bug):
        (Bugzilla.create_bug):
        (Bugzilla.clear_attachment_flags):
        (Bugzilla.set_flag_on_attachment):
        (Bugzilla.obsolete_attachment):
        (Bugzilla.add_cc_to_bug):
        (Bugzilla.post_comment_to_bug):
        (Bugzilla.close_bug_as_fixed):
        (Bugzilla.reassign_bug):
        (reopen_bug):
        * Scripts/webkitpy/common/net/bugzilla/bugzilla_mock.py:
        (MockBugzilla.create_bug):
        (MockBugzilla.reassign_bug):
        (MockBugzilla.set_flag_on_attachment):
        (MockBugzilla.post_comment_to_bug):
        (MockBugzilla.add_attachment_to_bug):
        (MockBugzilla.add_patch_to_bug):
        (MockBugzilla.reopen_bug):
        * Scripts/webkitpy/common/net/bugzilla/bugzilla_unittest.py:
        (test_add_cc_to_bug):
        (_assert_reopen):
        (test_reopen_bug):
        * Scripts/webkitpy/common/net/buildbot/buildbot_mock.py:
        (MockBuilder.force_build):
        * Scripts/webkitpy/common/net/credentials.py:
        (Credentials._run_security_tool):
        * Scripts/webkitpy/common/net/credentials_unittest.py:
        (_assert_security_call):
        * Scripts/webkitpy/common/net/irc/irc_mock.py:
        (MockIRC.post):
        (MockIRC.disconnect):
        * Scripts/webkitpy/common/net/irc/ircproxy.py:
        (IRCProxy.__init__):
        (IRCProxy.disconnect):
        * Scripts/webkitpy/common/net/irc/ircproxy_unittest.py:
        (IRCProxyTest.test_trivial):
        * Scripts/webkitpy/common/net/layouttestresults.py:
        (ORWTResultsHTMLParser._failures_from_fail_row):
        * Scripts/webkitpy/common/net/layouttestresults_unittest.py:
        (test_failures_from_fail_row):
        * Scripts/webkitpy/common/net/networktransaction.py:
        * Scripts/webkitpy/common/net/resultsjsonparser.py:
        (JSONTestResult._tokenize):
        (JSONTestResult._failure_types_from_actual_result):
        * Scripts/webkitpy/common/net/statusserver.py:
        (StatusServer.update_status):
        (StatusServer.update_svn_revision):
        * Scripts/webkitpy/common/net/statusserver_mock.py:
        (MockStatusServer.release_work_item):
        (MockStatusServer.update_work_items):
        (MockStatusServer.submit_to_ews):
        (MockStatusServer.update_status):
        * Scripts/webkitpy/common/net/unittestresults.py:
        (UnitTestResults.results_from_string):
        * Scripts/webkitpy/common/system/executive_mock.py:
        (MockExecutive.running_pids):
        (MockExecutive.run_and_throw_if_fail):
        (MockExecutive.run_command):
        (MockExecutive.popen):
        * Scripts/webkitpy/common/system/user_mock.py:
        (MockUser.confirm):
        (MockUser.open_url):
        * Scripts/webkitpy/common/system/workspace_unittest.py:
        (WorkspaceTest.test_create_zip):
        (WorkspaceTest.test_create_zip_exception):
        * Scripts/webkitpy/common/watchlist/watchlist_mock.py:
        (MockWatchList.determine_cc_and_messages):
        * Scripts/webkitpy/layout_tests/port/chromium_win_unittest.py:
        (ChromiumWinTest.test_setup_environ_for_server_register_cygwin):
        * Scripts/webkitpy/layout_tests/port/efl_unittest.py:
        (EflPortTest.test_show_results_html_file):
        * Scripts/webkitpy/layout_tests/port/gtk_unittest.py:
        (GtkPortTest.test_show_results_html_file):
        * Scripts/webkitpy/layout_tests/port/mac_unittest.py:
        (test_show_results_html_file):
        * Scripts/webkitpy/layout_tests/port/port_testcase.py:
        (test_build_driver):
        * Scripts/webkitpy/layout_tests/port/qt_unittest.py:
        (QtPortTest.test_show_results_html_file):
        * Scripts/webkitpy/layout_tests/port/win_unittest.py:
        (WinPortTest.test_show_results_html_file):
        * Scripts/webkitpy/layout_tests/port/xvfbdriver_unittest.py:
        (XvfbDriverTest.assertDriverStartSuccessful):
        (XvfbDriverTest.test_start_no_pixel_tests):
        (XvfbDriverTest.test_start_pixel_tests):
        (XvfbDriverTest.test_start_arbitrary_worker_number):
        (XvfbDriverTest.test_start_next_worker):
        (XvfbDriverTest.test_stop):
        * Scripts/webkitpy/layout_tests/servers/apache_http_server_unittest.py:
        (TestLayoutTestApacheHttpd.test_start_cmd):
        * Scripts/webkitpy/performance_tests/perftestsrunner_unittest.py:
        (test_run_test_pause_before_testing):
        (test_run_memory_test):
        (_test_run_with_json_output):
        (test_run_respects_no_results):
        (test_run_generates_and_show_results_page):
        (test_run_respects_no_show_results):
        * Scripts/webkitpy/tool/bot/feeders_unittest.py:
        (FeedersTest.test_commit_queue_feeder):
        * Scripts/webkitpy/tool/bot/flakytestreporter_unittest.py:
        (FlakyTestReporterTest.test_create_bug_for_flaky_test):
        (test_report_flaky_tests_creating_bug):
        * Scripts/webkitpy/tool/bot/irc_command_unittest.py:
        (IRCCommandTest.test_rollout_updates_working_copy):
        * Scripts/webkitpy/tool/bot/ircbot_unittest.py:
        (IRCBotTest.test_exception_during_command):
        (IRCBotTest.test_hi):
        (IRCBotTest.test_help):
        (IRCBotTest.test_restart):
        (IRCBotTest.test_rollout):
        (IRCBotTest.test_revert):
        (IRCBotTest.test_roll_chromium_deps):
        (IRCBotTest.test_roll_chromium_deps_to_lkgr):
        (IRCBotTest.test_multi_rollout):
        (IRCBotTest.test_rollout_with_r_in_svn_revision):
        (IRCBotTest.test_multi_rollout_with_r_in_svn_revision):
        (IRCBotTest.test_rollout_bananas):
        (IRCBotTest.test_rollout_invalidate_revision):
        (IRCBotTest.test_rollout_invalidate_reason):
        (test_multi_rollout_invalidate_reason):
        (test_rollout_no_reason):
        (test_multi_rollout_no_reason):
        * Scripts/webkitpy/tool/bot/sheriff_unittest.py:
        (SheriffTest.test_post_blame_comment_on_bug):
        * Scripts/webkitpy/tool/commands/applywatchlistlocal_unittest.py:
        (ApplyWatchListLocalTest.test_args_parsing):
        (test_args_parsing_with_bug):
        * Scripts/webkitpy/tool/commands/download_unittest.py:
        (test_land_cowboy):
        (test_check_style):
        (test_create_rollout):
        (test_create_rollout_resolved):
        (test_rollout):
        * Scripts/webkitpy/tool/commands/earlywarningsystem_unittest.py:
        (AbstractEarlyWarningSystemTest.test_failing_tests_message):
        (EarlyWarningSytemTest._default_expected_logs):
        (EarlyWarningSytemTest._test_builder_ews):
        (EarlyWarningSytemTest._test_testing_ews):
        * Scripts/webkitpy/tool/commands/openbugs_unittest.py:
        (OpenBugsTest.test_args_parsing):
        * Scripts/webkitpy/tool/commands/queries_unittest.py:
        (QueryCommandsTest.test_bugs_to_commit):
        (QueryCommandsTest.test_patches_in_commit_queue):
        * Scripts/webkitpy/tool/commands/queues_unittest.py:
        (FeederQueueTest.test_feeder_queue):
        (AbstractPatchQueueTest.test_next_patch):
        (AbstractPatchQueueTest.test_upload_results_archive_for_patch):
        (CommitQueueTest.test_commit_queue):
        (test_commit_queue_failure):
        (test_commit_queue_failure_with_failing_tests):
        (test_rollout):
        (test_rollout_lands):
        (test_auto_retry):
        (test_manual_reject_during_processing):
        (test_report_flaky_tests):
        (StyleQueueTest.test_style_queue_with_style_exception):
        (test_style_queue_with_watch_list_exception):
        * Scripts/webkitpy/tool/commands/queuestest.py:
        (QueuesTest._default_begin_work_queue_logs):
        * Scripts/webkitpy/tool/commands/roll_unittest.py:
        (RollCommandsTest.test_update_chromium_deps):
        * Scripts/webkitpy/tool/commands/upload_unittest.py:
        (UploadCommandsTest.test_assign_to_committer):
        (test_post):
        (test_attach_to_bug):
        (test_attach_to_bug_no_description_or_comment):
        (test_land_safely):
        (test_prepare):
        (test_upload):
        (test_mark_bug_fixed):
        * Scripts/webkitpy/tool/steps/applywatchlist_unittest.py:
        (ApplyWatchListTest.test_apply_watch_list_local):
        * Scripts/webkitpy/tool/steps/commit_unittest.py:
        (CommitTest._test_check_test_expectations):
        * Scripts/webkitpy/tool/steps/runtests_unittest.py:
        (RunTestsTest.test_webkit_run_unit_tests):
        * Scripts/webkitpy/tool/steps/steps_unittest.py:
        (StepsTest._assert_step_output_with_bug):
        (StepsTest._assert_post_diff_output_for_bug):
        (StepsTest.test_post_diff):
        (StepsTest.test_post_diff_for_commit):
        (StepsTest.test_ensure_bug_is_open_and_assigned):
        (StepsTest.test_runtests_args):
        * Scripts/webkitpy/tool/steps/suggestreviewers_unittest.py:
        (SuggestReviewersTest.test_basic):
        * Scripts/webkitpy/tool/steps/validatechangelogs_unittest.py:
        (ValidateChangeLogsTest._assert_start_line_produces_output):

2012-11-27  Pratik Solanki  <psolanki@apple.com>

        objc/objc-runtime.h does not exist on all PLATFORM(MAC)
        https://bugs.webkit.org/show_bug.cgi?id=101780

        Reviewed by Brent Fulgham.

        Clean up header includes so we don't include objc/objc-runtime.h.

        * DumpRenderTree/mac/DumpRenderTree.mm:
        * DumpRenderTree/mac/ObjCPlugin.m:
        * TestWebKitAPI/mac/InstanceMethodSwizzler.h:
        * WebKitTestRunner/InjectedBundle/mac/ActivateFonts.mm:

2012-11-27  Marja HÃ¶lttÃ¤  <marja@chromium.org>

        Add callbacks to the FrameLoaderClient when a resource is requested
        https://bugs.webkit.org/show_bug.cgi?id=92761

        Reviewed by Adam Barth.

        In Chromium, when an extension script cancels a network
        request (which happens out of process), we'd like to
        notify content scripts running on the current page about
        which elements failed to load because the requests were
        cancelled (as opposed to e.g. the network request just
        didn't work). Since the resource request itself does not
        carry any information what DOM element is was made for,
        currently a content script has to search the DOM tree and
        guess which requests will be cancelled by its counter
        part. By adding these callbacks, the embedder can make
        this connection explictly.

        * DumpRenderTree/chromium/DRTTestRunner.cpp:
        (DRTTestRunner::DRTTestRunner):
        (DRTTestRunner::dumpResourceRequestCallbacks):
        (DRTTestRunner::reset):
        * DumpRenderTree/chromium/DRTTestRunner.h:
        (DRTTestRunner):
        (DRTTestRunner::setShouldDumpResourceRequestCallbacks):
        (DRTTestRunner::shouldDumpResourceRequestCallbacks):
        * DumpRenderTree/chromium/TestShell.h:
        (TestShell::shouldDumpResourceRequestCallbacks):
        * DumpRenderTree/chromium/WebViewHost.cpp:
        (WebViewHost::willRequestResource):
        * DumpRenderTree/chromium/WebViewHost.h:
        (WebViewHost):

2012-11-27  VÃ­ctor Manuel JÃ¡quez Leal  <vjaquez@igalia.com>

        [GStreamer] Verify if GStreamer was previously initialized
        https://bugs.webkit.org/show_bug.cgi?id=103151

        Reviewed by Philippe Normand.

        This patch adds the gst_init() in GtkLauncher, so we can add the
        GStreamer options in the command line through
        gst_init_get_option_group().

        This approach is not valid for MiniBrowser because it uses WebKit2,
        where the GStreamer backend lives in the web process, which is
        different from the UI process.

        * GNUmakefile.am:
        * GtkLauncher/main.c:
        (main):

2012-11-27  Andras Becsi  <andras.becsi@digia.com>

        [Qt] Fix the build with new Qt5 hash
        https://bugs.webkit.org/show_bug.cgi?id=103406

        Reviewed by Csaba OsztrogonÃ¡c.

        Remove references to deprecated QApplication::GuiServer which
        has been removed, and use QStyleFactory::create instead of
        instantiating a QWindowsStyle directly since it is about to
        become an internal class.

        * DumpRenderTree/qt/DumpRenderTreeMain.cpp:
        (main):
        * QtTestBrowser/qttestbrowser.cpp:
        (LauncherApplication::LauncherApplication):
        * WebKitTestRunner/InjectedBundle/qt/InjectedBundleQt.cpp:
        (WTR::InjectedBundle::platformInitialize):

2012-11-27  Sadrul Habib Chowdhury  <sadrul@chromium.org>

        [style] Add a style-check for enum-member names
        https://bugs.webkit.org/show_bug.cgi?id=103157

        Reviewed by Daniel Bates.

        * Scripts/webkitpy/style/checkers/cpp.py:
        (_EnumState):
        (_EnumState.__init__):
        (_EnumState.process_clean_line):
        (check_enum_casing):
        (check_style):
        (process_line):
        (_process_lines):
        (CppChecker):
        * Scripts/webkitpy/style/checkers/cpp_unittest.py:
        (NoNonVirtualDestructorsTest.test_enum_casing):
        (NoNonVirtualDestructorsTest.test_internal_braces.Foo):

2012-11-26  Ryuan Choi  <ryuan.choi@gmail.com>

        [EFL][jhbuild] Disable unnecessary options of elementary module
        https://bugs.webkit.org/show_bug.cgi?id=103360

        Reviewed by Gyuyoung Kim.

        When jhbuild configures elementary, unnecessary options may be enabled by
        user installed modules and it causes build break.

        * efl/jhbuild.modules:
        Added --disable-emap --disable-ethumb --disable-eweather to elementary.

2012-11-26  Varun Jain  <varunjain@chromium.org>

        LongPress and LongTap gestures should start drag/drop and open context menu respectively.
        https://bugs.webkit.org/show_bug.cgi?id=101545

        Reviewed by Antonio Gomes.

        For LongPress, we simulate drag by sending a mouse down and mouse drag
        events. If a drag is not started (because maybe there is no draggable
        element), then we show context menu instead (which is the current
        behavior for LongPress). For LongTap, we use the existing functions that
        LongPress uses to summon the context menu. LongPress initiated drag and
        drop can be enabled/disabled by the platform using the Setting
        touchDragDropEnabled which is disabled by default.

        * DumpRenderTree/chromium/TestRunner/src/EventSender.cpp:
        (WebTestRunner):
        (WebTestRunner::EventSender::EventSender):
        (WebTestRunner::EventSender::gestureLongTap):
        (WebTestRunner::EventSender::gestureEvent):
        * DumpRenderTree/chromium/TestRunner/src/EventSender.h:
        (EventSender):
        * DumpRenderTree/chromium/TestRunner/src/TestRunner.cpp:
        (WebTestRunner::TestRunner::TestRunner):
        (WebTestRunner::TestRunner::setTouchDragDropEnabled):
        (WebTestRunner):
        * DumpRenderTree/chromium/TestRunner/src/TestRunner.h:
        (TestRunner):

2012-11-26  Christophe Dumez  <christophe.dumez@intel.com>

        [EFL][WK2] Add setting to enable / disable HTML5 local storage functionality
        https://bugs.webkit.org/show_bug.cgi?id=103224

        Reviewed by Laszlo Gombos.

        Add --local-storage command line argument to MiniBrowser to
        explicitely disable HTML5 local storage functionality. This
        is useful for testing purposes.

        * MiniBrowser/efl/main.c:
        (window_create):
        (elm_main):

2012-11-26  Zan Dobersek  <zandobersek@gmail.com>

        Remove use of deprecated logging from most of webkitpy.tool
        https://bugs.webkit.org/show_bug.cgi?id=103180

        Reviewed by Dirk Pranke.

        Remove calls to log and error methods of the deprecated_logging module, replacing them
        by using Python's Logger objects. This patch covers the switch in all of webkitpy.tool
        except the QueueEngine.

        Unit tests are adjusted for these changes, moving output from expected stderr to expected logs.

        * Scripts/webkitpy/tool/bot/commitqueuetask_unittest.py:
        (MockCommitQueue.run_command):
        (MockCommitQueue.command_passed):
        (MockCommitQueue.command_failed):
        (MockCommitQueue.report_flaky_tests):
        (MockCommitQueue.archive_last_test_results):
        (CommitQueueTaskTest._run_through_task):
        (CommitQueueTaskTest.test_success_case):
        (test_fast_success_case):
        (test_clean_failure):
        (test_update_failure):
        (test_apply_failure):
        (test_validate_changelog_failure):
        (test_build_failure):
        (test_red_build_failure):
        (test_flaky_test_failure):
        (test_failed_archive):
        (test_double_flaky_test_failure):
        (test_test_failure):
        (test_red_test_failure):
        (test_very_red_tree_retry):
        (test_red_tree_patch_rejection):
        (test_land_failure):
        * Scripts/webkitpy/tool/bot/feeders.py:
        (CommitQueueFeeder._update_work_items):
        (EWSFeeder.feed):
        * Scripts/webkitpy/tool/bot/feeders_unittest.py:
        * Scripts/webkitpy/tool/bot/layouttestresultsreader.py:
        (LayoutTestResultsReader.archive):
        * Scripts/webkitpy/tool/bot/layouttestresultsreader_unittest.py:
        (test_archive_last_layout_test_results):
        * Scripts/webkitpy/tool/bot/sheriff.py:
        * Scripts/webkitpy/tool/commands/abstractsequencedcommand.py:
        (AbstractSequencedCommand.execute):
        * Scripts/webkitpy/tool/commands/commandtest.py:
        (CommandsTest.assert_execute_outputs):
        * Scripts/webkitpy/tool/commands/download.py:
        (AbstractPatchProcessingCommand._process_patch.execute):
        (ProcessBugsMixin._fetch_list_of_patches_to_process):
        (ProcessURLsMixin._fetch_list_of_patches_to_process):
        (AbstractRolloutPrepCommand._commit_info):
        * Scripts/webkitpy/tool/commands/download_unittest.py:
        (AbstractRolloutPrepCommandTest.test_commit_info):
        (DownloadCommandsTest.test_build):
        (DownloadCommandsTest.test_build_and_test):
        (test_apply_attachment):
        (test_apply_from_bug):
        (test_apply_watch_list):
        (test_land):
        (test_land_red_builders):
        (test_check_style):
        (test_build_attachment):
        (test_land_attachment):
        (test_land_from_bug):
        (test_land_from_url):
        (test_prepare_rollout):
        (test_create_rollout):
        (test_create_rollout_resolved):
        (test_rollout):
        * Scripts/webkitpy/tool/commands/earlywarningsystem.py:
        (AbstractEarlyWarningSystem.handle_script_error.does):
        * Scripts/webkitpy/tool/commands/earlywarningsystem_unittest.py:
        (EarlyWarningSytemTest._default_expected_stderr):
        (EarlyWarningSytemTest._default_expected_logs):
        (EarlyWarningSytemTest._test_testing_ews):
        * Scripts/webkitpy/tool/commands/openbugs.py:
        (OpenBugs.execute):
        * Scripts/webkitpy/tool/commands/openbugs_unittest.py:
        (OpenBugsTest.test_args_parsing):
        * Scripts/webkitpy/tool/commands/perfalizer.py:
        (Perfalizer.handle_unexpected_error):
        * Scripts/webkitpy/tool/commands/queries.py:
        (PatchesInCommitQueue.execute):
        (PatchesToCommitQueue._needs_commit_queue):
        * Scripts/webkitpy/tool/commands/queries_unittest.py:
        (QueryCommandsTest.test_bugs_to_commit):
        (QueryCommandsTest.test_patches_in_commit_queue):
        (QueryCommandsTest.test_patches_to_commit_queue):
        * Scripts/webkitpy/tool/commands/queues.py:
        (AbstractQueue._cc_watchers):
        (AbstractQueue.begin_work_queue):
        (FeederQueue.handle_unexpected_error):
        (CommitQueue.handle_script_error):
        (AbstractReviewQueue.handle_unexpected_error):
        (AbstractReviewQueue.handle_script_error):
        * Scripts/webkitpy/tool/commands/queues_unittest.py:
        (test_auto_retry):
        * Scripts/webkitpy/tool/commands/queuestest.py:
        (QueuesTest.assert_outputs):
        (QueuesTest._default_begin_work_queue_stderr):
        (QueuesTest):
        (QueuesTest._default_begin_work_queue_logs):
        (QueuesTest.assert_queue_outputs):
        * Scripts/webkitpy/tool/commands/roll_unittest.py:
        (RollCommandsTest.test_update_chromium_deps):
        (test_update_chromium_deps_older_revision):
        * Scripts/webkitpy/tool/commands/sheriffbot.py:
        (SheriffBot.handle_unexpected_error):
        * Scripts/webkitpy/tool/commands/stepsequence.py:
        (StepSequence.run_and_handle_errors):
        * Scripts/webkitpy/tool/commands/upload.py:
        (AssignToCommitter._assign_bug_to_last_patch_attacher):
        (AbstractPatchUploadingCommand._prepare_state):
        (PostCommits.execute):
        (MarkBugFixed._determine_bug_id_and_svn_revision):
        (MarkBugFixed.execute):
        (CreateBug.create_bug_from_commit):
        (CreateBug.execute):
        * Scripts/webkitpy/tool/commands/upload_unittest.py:
        (test_obsolete_attachments):
        (test_land_safely):
        (test_mark_bug_fixed):
        * Scripts/webkitpy/tool/multicommandtool.py:
        (Command.check_arguments_and_execute):
        (MultiCommandTool.main):
        * Scripts/webkitpy/tool/multicommandtool_unittest.py:
        (CommandTest.test_required_arguments):
        * Scripts/webkitpy/tool/steps/addsvnmimetypeforpng.py:
        (AddSvnMimetypeForPng.run):
        * Scripts/webkitpy/tool/steps/applypatch.py:
        (ApplyPatch.run):
        * Scripts/webkitpy/tool/steps/build.py:
        (Build.run):
        * Scripts/webkitpy/tool/steps/checkstyle.py:
        * Scripts/webkitpy/tool/steps/closebug.py:
        (CloseBug.run):
        * Scripts/webkitpy/tool/steps/closebugforlanddiff.py:
        (CloseBugForLandDiff.run):
        * Scripts/webkitpy/tool/steps/closebugforlanddiff_unittest.py:
        (CloseBugForLandDiffTest.test_empty_state):
        * Scripts/webkitpy/tool/steps/commit.py:
        (Commit.run):
        * Scripts/webkitpy/tool/steps/commit_unittest.py:
        (CommitTest._test_check_test_expectations):
        * Scripts/webkitpy/tool/steps/ensurelocalcommitifneeded.py:
        (EnsureLocalCommitIfNeeded.run):
        * Scripts/webkitpy/tool/steps/obsoletepatches.py:
        (ObsoletePatches.run):
        * Scripts/webkitpy/tool/steps/preparechangelog.py:
        (PrepareChangeLog.run):
        * Scripts/webkitpy/tool/steps/reopenbugafterrollout.py:
        (ReopenBugAfterRollout.run):
        * Scripts/webkitpy/tool/steps/runtests.py:
        (RunTests.run):
        * Scripts/webkitpy/tool/steps/runtests_unittest.py:
        (RunTestsTest.test_webkit_run_unit_tests):
        * Scripts/webkitpy/tool/steps/steps_unittest.py:
        (StepsTest.test_update_step):
        (StepsTest.test_runtests_args):
        * Scripts/webkitpy/tool/steps/update.py:
        (Update.run):
        * Scripts/webkitpy/tool/steps/updatechangelogswithreview_unittest.py:
        (UpdateChangeLogsWithReviewerTest.test_guess_reviewer_from_bug):
        (UpdateChangeLogsWithReviewerTest.test_guess_reviewer_from_multipatch_bug):
        * Scripts/webkitpy/tool/steps/updatechangelogswithreviewer.py:
        (UpdateChangeLogsWithReviewer._guess_reviewer_from_bug):
        (UpdateChangeLogsWithReviewer.run):
        * Scripts/webkitpy/tool/steps/updatechromiumdeps.py:
        (UpdateChromiumDEPS._validate_revisions):
        (UpdateChromiumDEPS.run):
        * Scripts/webkitpy/tool/steps/validatechangelogs.py:
        (ValidateChangeLogs._check_changelog_diff):
        (ValidateChangeLogs.run):
        * Scripts/webkitpy/tool/steps/validatechangelogs_unittest.py:
        (ValidateChangeLogsTest._assert_start_line_produces_output):
        * Scripts/webkitpy/tool/steps/validatereviewer.py:
        (ValidateReviewer.run):

2012-11-26  Zan Dobersek  <zandobersek@gmail.com>

        Coverage testing in webkitpy should omit some paths
        https://bugs.webkit.org/show_bug.cgi?id=103267

        Reviewed by Dirk Pranke.

        Omit testing coverage of any file under /usr directory and any file
        that is of third party origin and was autoinstalled.

        * Scripts/webkitpy/test/main.py:
        (Tester._run_tests):

2012-11-26  Jaehun Lim  <ljaehun.lim@samsung.com>

        Text Autosizing: Add Text Autosizing APIs for WK2
        https://bugs.webkit.org/show_bug.cgi?id=100633

        Reviewed by Sam Weinig.

        Add test cases for Text Autosizing in WKPreferences.

        * TestWebKitAPI/Tests/WebKit2/WKPreferences.cpp:
        (TestWebKitAPI::TEST):

2012-11-26  Pierre Rossi  <pierre.rossi@gmail.com>

        [Qt] REGRESSION(r135575): It made all tests assert
        https://bugs.webkit.org/show_bug.cgi?id=103169

        Reviewed by Simon Hausmann.

        This fixes another regression introduced in r135515:
        initializeWebKitQt shouldn't implicitely call initializeWebCoreQt
        since it can be called from WebKit2 to initialize QStyle for testing.
        This would then lead to things such as PlatformStrategies being
        initialized twice.

        * DumpRenderTree/qt/DumpRenderTreeQt.cpp: Also propagate the change to DRT this time.
        (WebCore::DumpRenderTree::DumpRenderTree):

2012-11-24  Zan Dobersek  <zandobersek@gmail.com>

        Add the --order option to NRWT
        https://bugs.webkit.org/show_bug.cgi?id=102229

        Reviewed by Dirk Pranke.

        The --order option controls in what order the gathered tests will be run.
        There are 3 options:
        - natural, the tests are sorted in natural order,
        - random, the tests are sorted in random order,
        - none, the tests are kept in the order in which they were specified through
        arguments or the test list.

        The natural option is the default one and maintains the current behavior.

        The none option is primarily intended to be used with the --test-list option,
        with the test list file expected to list specific test names.
        When a directory is specified as one of the paths from under which tests should
        be gathered and the none option is used, that path will expand to all the tests
        under it, with these tests sorted in the natural order.

        Using --order=random duplicated the behavior of the --randomize-order option, so
        the latter is removed.

        This patch also incorporates the change with which makes it is possible to specify
        a test via arguments or the test list multiple tests and then have the test run
        that many times.

        * Scripts/webkitpy/common/find_files.py:
        (find): Accept an optional sorting key that is used to sort files found in the directories
        that the given paths specify.
        (_normalized_find): Both paths that are then searched for the tests and the tests that
        were found are now kept in lists. This makes it possible to run a test multiple times
        by specifying it multiple times through arguments or the test list file.
        (_normalized_find.sort_by_directory_key):
        * Scripts/webkitpy/layout_tests/controllers/layout_test_finder.py:
        (LayoutTestFinder.find_tests): Keep the paths where we should search for tests in a list.
        (LayoutTestFinder.skip_tests): Subtracting from a set of paths is necessary.
        * Scripts/webkitpy/layout_tests/controllers/layout_test_runner.py:
        (LayoutTestRunner.__init__): The Sharder class no longer needs a test path separator.
        (Sharder.__init__): Ditto.
        (Sharder._resize_shards):
        * Scripts/webkitpy/layout_tests/controllers/layout_test_runner_unittest.py:
        (SharderTests.get_shards): Modify the Shader initializing as required.
        (SharderTests.test_multiple_locked_shards): The natural sorting and test name key unit tests
        are now moved to the base Port unit tests.
        * Scripts/webkitpy/layout_tests/controllers/manager.py:
        (Manager._prepare_lists): Keep the test names in a list. Order that list as specified by
        the new --order option.
        * Scripts/webkitpy/layout_tests/port/base.py:
        (Port.tests): This method should now return a list of all the tests found in the specified
        paths.
        (Port._real_tests): A list is required, so no conversion to a set is made.
        (Port):
        (Port.test_key): Place this method here for now, but it should really move into a separate
        module.
        (Port._natural_sort_key): Ditto.
        (Port._natural_sort_key.tryint):
        (Port._virtual_tests): A list is required, so the function now operates on that rather than
        on a set.
        * Scripts/webkitpy/layout_tests/port/base_unittest.py:
        (PortTest.test_find_with_skipped_directories_2): Adjust the test case to check for an empty
        list rather than an empty set.
        (PortTest.test_dont_require_http_server):
        (NaturalCompareTest): The natural sorting unit tests are placed here for now.
        (NaturalCompareTest.assert_cmp):
        (NaturalCompareTest.test_natural_compare):
        (KeyCompareTest): The test name key unit tests are placed here for now.
        (KeyCompareTest.assert_cmp):
        (KeyCompareTest.test_test_key):
        * Scripts/webkitpy/layout_tests/run_webkit_tests.py:
        (parse_args): Remove the --randomize-order option, it's now possible to replicate its behavior
        by using --order=random.
        * Scripts/webkitpy/layout_tests/run_webkit_tests_integrationtest.py: Add unit tests covering
        various aspects of this change.
        (MainTest.test_natural_order):
        (MainTest):
        (MainTest.test_natural_order_test_specified_multiple_times):
        (MainTest.test_random_order):
        (MainTest.test_random_order_test_specified_multiple_times):
        (MainTest.test_no_order):
        (MainTest.test_no_order_test_specified_multiple_times):
        (MainTest.test_no_order_with_directory_entries_in_natural_order):
        * Scripts/webkitpy/tool/commands/queries.py:
        (PrintExpectations.execute): Operate on a set of tests when printing out expectations.

2012-11-24  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r135600.
        http://trac.webkit.org/changeset/135600
        https://bugs.webkit.org/show_bug.cgi?id=103173

        It made EFL API test is failed (Requested by gyuyoung_mbp on
        #webkit).

        * TestWebKitAPI/PlatformEfl.cmake:
        * TestWebKitAPI/efl/PlatformUtilities.cpp:
        (TestWebKitAPI::Util::sleep):
        * TestWebKitAPI/efl/PlatformWebView.cpp:

2012-11-23  Alexis Menard  <alexis@webkit.org>

        [CSS3 Backgrounds and Borders] Implement new CSS3 background-position parsing.
        https://bugs.webkit.org/show_bug.cgi?id=102104

        Reviewed by Julien Chaffraix.

        Protect the new feature behind a feature flag.

        * Scripts/webkitperl/FeatureList.pm:
        * qmake/mkspecs/features/features.pri:

2012-11-23  Mario Sanchez Prada  <mario@webkit.org>

        Unreviewed. Update my e-mail address.

        * Scripts/webkitpy/common/config/committers.py:

2012-11-23  Mateusz Leszko  <m.leszko@samsung.com>

        [EFL][GTK] Adapt accessibility feature to WebKitTestRunner.
        https://bugs.webkit.org/show_bug.cgi?id=100757

        Reviewed by Laszlo Gombos.

        Allow to build accessibility feature in WebkitTestRunner for EFL Platform.
        Updating CMake files due to changes from Bug 99011.

        * WebKitTestRunner/InjectedBundle/AccessibilityController.cpp:
        (WTR::AccessibilityController::AccessibilityController):
        (WTR):
        * WebKitTestRunner/InjectedBundle/AccessibilityController.h:
        (AccessibilityController):
        * WebKitTestRunner/InjectedBundle/AccessibilityUIElement.cpp:
        (WTR):
        * WebKitTestRunner/InjectedBundle/AccessibilityUIElement.h:
        (AccessibilityUIElement):
        * WebKitTestRunner/InjectedBundle/atk/AccessibilityUIElementAtk.cpp: - Removed gtk/gtk.h dependency.
        * WebKitTestRunner/PlatformEfl.cmake: - Adding atk includes.

2012-11-16  Yury Semikhatsky  <yurys@chromium.org>

        Memory instrumentation: extract MemoryObjectInfo declaration into a separate file
        https://bugs.webkit.org/show_bug.cgi?id=102510

        Reviewed by Pavel Feldman.

        Added missing includes.

        * TestWebKitAPI/Tests/WTF/MemoryInstrumentationTest.cpp:

2012-11-23  Sudarsana Nagineni  <sudarsana.nagineni@intel.com>

        [EFL][WK2] Add support for PlatformWebView::simulateSpacebarKeyPress() in TestWebKitAPI
        https://bugs.webkit.org/show_bug.cgi?id=103123

        Reviewed by Kenneth Rohde Christiansen.

        Add support for PlatformWebView::simulateSpacebarKeyPress() and enable
        WebKit2 API test ResponsivenessTimerDoesntFireEarly.

        * TestWebKitAPI/PlatformEfl.cmake: Enable ResponsivenessTimerDoesntFireEarly
        test.
        * TestWebKitAPI/efl/PlatformUtilities.cpp:
        (TestWebKitAPI::Util::sleep): Use usleep() instead of sleep since the
        test case is passing 0.5 seconds to sleep.
        * TestWebKitAPI/efl/PlatformWebView.cpp:
        (TestWebKitAPI::PlatformWebView::simulateSpacebarKeyPress): Implemented.
        (TestWebKitAPI):

2012-11-23  Wojciech Bielawski  <w.bielawski@samsung.com>

        [WK2][WKTR] WebKitTestRunner needs eventSender.contextClick()
        https://bugs.webkit.org/show_bug.cgi?id=86881

        Reviewed by Kenneth Rohde Christiansen.

        eventSender object extended with contextClick() method in WebKitTestRunner.
        contextClick() method returns an array of menu items objects with field 'title' containing title of single
        context menu entry. According to some tests menu items objects shall also support 'click()' method, but it's not
        delivered in this patch.

        * WebKitTestRunner/InjectedBundle/Bindings/EventSendingController.idl:
        * WebKitTestRunner/InjectedBundle/EventSendingController.cpp:
        (WTR::EventSendingController::contextClick):
        (WTR):
        * WebKitTestRunner/InjectedBundle/EventSendingController.h:
        (EventSendingController):

2012-11-23  Simon Hausmann  <simon.hausmann@digia.com>

        [Qt] Compiling against QtWebkit API requires QT_DLL to be defined
        https://bugs.webkit.org/show_bug.cgi?id=102942

        Reviewed by Tor Arne VestbÃ¸.

        Remove the requirement of having QT_DLL defined in order for the QWEBKIT_EXPORT
        macro to be defined as Q_DECL_IMPORT. Instead unify the export macro definition
        to follow the same rules as other Qt 5 modules, with the exception that instead of
        QT_BUILD_WEBKIT_LIB we continue to use BUILDING_WEBKIT, because that's used also
        in other cross-platform header files to determine the correct meaning of export
        macros.

        * qmake/mkspecs/features/default_post.prf:
        * qmake/mkspecs/features/win32/default_post.prf:

2012-11-23  Simon Hausmann  <simon.hausmann@digia.com>

        [Qt] QWebPage::shouldInterruptJavaScript should be virtual in Qt 5
        https://bugs.webkit.org/show_bug.cgi?id=103111

        Reviewed by Kenneth Rohde Christiansen.

        This function was added as a slot during Qt 4.x times because adding
        virtual functions breaks binary compatibility. This constraint is gone
        with the initial release of WebKit with Qt 5, and therefore we can
        make it virtual now.

        The change is fully source compatible as existing "re-implementations"
        as slots will now be called through it being a virtual function. They
        become unused slots.

        * DumpRenderTree/qt/DumpRenderTreeQt.h:
        (WebCore::WebPage::shouldInterruptJavaScript):
        (WebPage):
        * QtTestBrowser/webpage.h:
        (WebPage):

2012-11-22  Peter Beverloo  <peter@chromium.org>

        [Chromium] Return an accurate exit code when running Android suites, and wait after restarting adb as root
        https://bugs.webkit.org/show_bug.cgi?id=103065

        Reviewed by Dirk Pranke.

        This addresses two further reliability issues in the Android test running
        scripts. Firstly, the run_tests.py script needs to have the --exit_code
        argument passed in order to return non-zero codes, which we need for the
        build master to distinguish failures from successful runs.

        Secondly, it modifies the layout test runner to briefly wait (through
        the wait-for-device command) after requesting a device to switch to root
        mode. Without this waiting period, commands might get lost and thereby
        unexpectedly fail.

        * Scripts/run-api-tests:
        * Scripts/run-chromium-webkit-unit-tests:
        * Scripts/webkitpy/layout_tests/port/chromium_android.py:
        (ChromiumAndroidDriver._setup_test):
        (ChromiumAndroidDriver._restart_adb_as_root):

2012-11-22  Simon Hausmann  <simon.hausmann@digia.com>, Pierre Rossi <pierre.rossi@digia.com>

        [Qt] Separate QWidget dependant code into separate WebKitWidgets static library
        https://bugs.webkit.org/show_bug.cgi?id=102800

        Reviewed by Tor Arne VestbÃ¸.

        This patch separates code that needs to use QWidget related APIs in
        WebKit/qt/WebCoreSupport and Api from code that doesn't. This means for
        example FrameLoaderClientQt.cpp remains in the WebKit1 static library,
        while qwebpage.cpp and qwebframe.cpp become part of the WebKitWidgets
        static library. WebKit1 is compiled without QT += widgets and therefore
        any widget related dependency has been moved "up" and out of WebKit1 into
        the WebKitWidgets library.

        Between the code in WebKit.a and WebKitWidgets.a new adapters and
        interfaces have been introduced, such as QWebPageAdapter and
        QWebFrameAdapter. QWebPageAdapter, when used from WebKit1, is a way to
        call out into the API layer, implemented by QWebPage (QWebPagePrivate).
        The other way around if QWebPage wants to access WebCore or
        WebCoreSupport related functionality, it will go through
        QWebPageAdapater (as base class). The separation in the direction up
        into the API layer is complete with this patch, no code in WebKit1
        depends on QtWidgets. The separation the other way around, code in the
        API layer not using any WebCore types, is not complete yet.

        Some classes such as QWebSettings, QWebElement or
        DumpRenderTreeSupportQt remain in WebKit1. While they are API layer,
        they do not depend on widget related Qt APIs and they make much more
        use of WebCore internal APIs and therefore are easier to keep in
        WebKit1.

        In the future we plan to place a real shared library boundary between
        WebKit1 and WebKitWidgets, by keeping the WebKit1 static library as
        part of the QtWebKit shared library and by turning the WebKitWidgets
        static library into a shared one.

        * DumpRenderTree/qt/DumpRenderTreeQt.cpp:
        (WebCore::WebPage::resetSettings):
        (WebCore::WebPage::createWindow):
        (WebCore::DumpRenderTree::DumpRenderTree):
        (WebCore::DumpRenderTree::resetToConsistentStateBeforeTesting):
        (WebCore::DumpRenderTree::initJSObjects):
        (WebCore::DumpRenderTree::dumpFrameScrollPosition):
        (WebCore::DumpRenderTree::dumpFramesAsText):
        (WebCore::DumpRenderTree::dump):
        (WebCore::DumpRenderTree::createWindow):
        (WebCore::DumpRenderTree::pageAdapter):
        (WebCore):
        (WebCore::DumpRenderTree::mainFrameAdapter):
        * DumpRenderTree/qt/DumpRenderTreeQt.h:
        (DumpRenderTree):
        * DumpRenderTree/qt/EventSenderQt.cpp:
        (EventSender::contextClick):
        (EventSender::scalePageBy):
        * DumpRenderTree/qt/TestRunnerQt.cpp:
        (TestRunner::reset):
        (TestRunner::display):
        (TestRunner::closeWebInspector):
        (TestRunner::showWebInspector):
        (TestRunner::evaluateInWebInspector):
        (TestRunner::setFrameFlatteningEnabled):
        (TestRunner::goBack):
        (TestRunner::setDefersLoading):
        (TestRunner::pauseAnimationAtTimeOnElementWithId):
        (TestRunner::pauseTransitionAtTimeOnElementWithId):
        (TestRunner::numberOfActiveAnimations):
        (TestRunner::setCaretBrowsingEnabled):
        (TestRunner::setAuthorAndUserStylesEnabled):
        (TestRunner::callShouldCloseOnWebView):
        (TestRunner::setSmartInsertDeleteEnabled):
        (TestRunner::setSelectTrailingWhitespaceEnabled):
        (TestRunner::execCommand):
        (TestRunner::isCommandEnabled):
        (TestRunner::findString):
        (TestRunner::elementDoesAutoCompleteForElementWithId):
        (TestRunner::setMockDeviceOrientation):
        (TestRunner::setGeolocationPermission):
        (TestRunner::numberOfPendingGeolocationPermissionRequests):
        (TestRunner::setMockGeolocationPositionUnavailableError):
        (TestRunner::setMockGeolocationPosition):
        (TestRunner::evaluateScriptInIsolatedWorld):
        (TestRunner::addUserStyleSheet):
        (TestRunner::setMinimumTimerInterval):
        * DumpRenderTree/qt/TextInputControllerQt.cpp:
        (TextInputController::selectedRange):
        (TextInputController::firstRectForCharacterRange):
        (TextInputController::unmarkText):
        * DumpRenderTree/qt/WorkQueueItemQt.cpp:
        (LoadAlternateHTMLStringItem::invoke):
        * qmake/mkspecs/features/default_post.prf:
        * qmake/mkspecs/features/production_build.prf:
        * qmake/mkspecs/features/webkit_modules.prf:
        * qmake/mkspecs/modules/webkitwidgets.prf: Added.

2012-11-22  Christophe Dumez  <christophe.dumez@intel.com>

        WebKitTestRunner needs layoutTestController.setCacheModel
        https://bugs.webkit.org/show_bug.cgi?id=42684

        Reviewed by Kenneth Rohde Christiansen.

        Add support for testRunner.setCacheModel to WebKitTestRunner.

        * WebKitTestRunner/InjectedBundle/Bindings/TestRunner.idl:
        * WebKitTestRunner/InjectedBundle/InjectedBundle.cpp:
        (WTR::InjectedBundle::beginTesting):
        * WebKitTestRunner/InjectedBundle/TestRunner.cpp:
        (WTR::TestRunner::setCacheModel):
        (WTR):
        * WebKitTestRunner/InjectedBundle/TestRunner.h:
        (TestRunner):

2012-11-22  Balazs Kelemen  <kbalazs@webkit.org>

        [Qt][WTR] TestController::platformRunUntil should not do busy waiting
        https://bugs.webkit.org/show_bug.cgi?id=101327

        Reviewed by Simon Hausmann.

        Avoid busy waiting for events in platformRunUntil while making
        sure we don't change the behavior of modal event loops.

        * WebKitTestRunner/TestController.cpp:
        (WTR::TestController::~TestController):
        * WebKitTestRunner/TestController.h:
        (TestController):
        * WebKitTestRunner/efl/TestControllerEfl.cpp:
        (WTR::TestController::platformDestroy):
        (WTR):
        * WebKitTestRunner/gtk/TestControllerGtk.cpp:
        (WTR::TestController::platformDestroy):
        (WTR):
        * WebKitTestRunner/mac/TestControllerMac.mm:
        (WTR::TestController::platformDestroy):
        (WTR):
        * WebKitTestRunner/qt/TestControllerQt.cpp:
        (TestController::RunLoop): Helper class to handle
        the event loop logic
        (WTR):
        (WTR::TestController::RunLoop::RunLoop):
        (WTR::TestController::RunLoop::runUntil): Use QEventLoop to implement
        the run loop. This is the appropriate API to push the WaitForMoreEvents
        flag to QCoreApplication::processEvents and also being able to exit the
        loop if we have timed out.
        (WTR::TestController::RunLoop::notifyDone):
        (WTR::TestController::RunLoop::timerFired):
        (WTR::TestController::RunLoop::runModal):
        (WTR::TestController::notifyDone):
        (WTR::TestController::platformInitialize):
        (WTR::TestController::platformDestroy):
        (WTR::TestController::platformRunUntil):
        (WTR::TestController::runModal):
        * WebKitTestRunner/win/TestControllerWin.cpp:
        (WTR::TestController::platformDestroy):
        (WTR):

2012-11-22  Sudarsana Nagineni  <sudarsana.nagineni@intel.com>

        [EFL][WK2] Enable WKPreferences and AboutBlankLoad API tests
        https://bugs.webkit.org/show_bug.cgi?id=102926

        Reviewed by Kenneth Rohde Christiansen.

        Add missing bits needed by WKPreferences and AboutBlankLoad API
        tests in the test harness and enable these tests on EFL port.

        * TestWebKitAPI/PlatformEfl.cmake:
        * TestWebKitAPI/Tests/WebKit2/WKPreferences.cpp:
        (TestWebKitAPI::TEST):
        * TestWebKitAPI/efl/PlatformUtilities.cpp:
        (TestWebKitAPI::Util::MIMETypeForWKURLResponse):
        (Util):

2012-11-21  Zan Dobersek  <zandobersek@gmail.com>

        [GTK][WTR] Implement AccessibilityUIElement::stringValue
        https://bugs.webkit.org/show_bug.cgi?id=102951

        Reviewed by Martin Robinson.

        Implement AccessibilityUIElement::stringValue in the ATK backend
        in the same manner it is implemented in DumpRenderTree.

        * WebKitTestRunner/InjectedBundle/atk/AccessibilityUIElementAtk.cpp:
        (WTR::replaceCharactersForResults):
        (WTR):
        (WTR::AccessibilityUIElement::stringValue):

2012-11-21  Vineet Chaudhary  <rgf748@motorola.com>

        Unreviewed. Adding myself to committers.py.

        * Scripts/webkitpy/common/config/committers.py:

2012-11-21  Tien-Ren Chen  <trchen@chromium.org>

        [chromium] Device scale factor should be no-op when applyDeviceScaleFactorInCompositor == 0
        https://bugs.webkit.org/show_bug.cgi?id=100061

        Reviewed by Adam Barth.

        On Android we're using a different pixel scaling implementation
        (WebCore::Settings::applyDefaultDeviceScaleFactorInCompositor() == 0) than other
        platforms. In this mode, we don't make use of device-independent pixels. Device
        scale factor is provided to WebKit and get merged into page scale factor. Other
        than that device scale factor should have no effects on rendering.

        * DumpRenderTree/chromium/WebPreferences.cpp:
        (WebPreferences::applyTo):

2012-11-21  Fady Samuel  <fsamuel@chromium.org>

        Clear MousePressed state on context menu to avoid initiating a drag
        https://bugs.webkit.org/show_bug.cgi?id=101786

        Reviewed by Ojan Vafai.

        * DumpRenderTree/chromium/TestRunner/src/EventSender.cpp:
        (WebTestRunner):
        (WebTestRunner::EventSender::EventSender):
        (WebTestRunner::EventSender::contextClick):
        Only send a MouseUp on Windows. Keep the current mouse pressed state when
        calling up a context menu.

2012-11-21  Thiago Marcos P. Santos  <thiago.santos@intel.com>

        [EFL] KURL unit test crashing when tiled backing store is enabled on Release Bots
        https://bugs.webkit.org/show_bug.cgi?id=102895

        Reviewed by Gyuyoung Kim.

        Change the link order so it wont override the new operator on gtest.
        Looks like it was crashing because an allocator mismatch (using libc's
        new and later fastMalloc delete. Thanks to Kangil Han for hinting on
        the fastMalloc issue.

        * TestWebKitAPI/CMakeLists.txt:

2012-11-21  Kentaro Hara  <haraken@chromium.org>

        Unreviewed, rolling out r135340.
        http://trac.webkit.org/changeset/135340
        https://bugs.webkit.org/show_bug.cgi?id=102492

        It broke Safari's internal build

        * WebKitTestRunner/InjectedBundle/Bindings/CodeGeneratorTestRunner.pm:
        (new):
        (GenerateModule):
        (GenerateInterface):
        (finish):

2012-11-21  Yael Aharon  <yael.aharon@intel.com>, Gyuyoung Kim <gyuyoung.kim@samsung.com>

        [EFL] Turn on WTF_USE_TILED_BACKING_STORE by default
        https://bugs.webkit.org/show_bug.cgi?id=101526

        Reviewed by Kenneth Rohde Christiansen.

        Turn on WTF_USE_TILED_BACKING_STORE for EFL port.

        * Scripts/webkitperl/FeatureList.pm:
        * TestWebKitAPI/CMakeLists.txt: No include KURL.cpp because of API test crash.

2012-11-21  Jongseok Yang  <js45.yang@samsung.com>

        [EFL][WK2] Rename ewk_view_setting_encoding_custom_XXX to ewk_view_custom_encoding_XXX
        https://bugs.webkit.org/show_bug.cgi?id=102867

        Reviewed by Gyuyoung Kim.

        Rename ewk_view_setting_encoding_custom_XXX to ewk_view_custom_encoding_XXX.

        ewk_view_setting_encoding_custom_XXX APIs might be misunderstanded as the "setting" word
        because ewk_view_setting_encoding_custom_set triggers the "reload" operation.
        And ewk_view_setting_XXX is not correct because there is ewk_settings object for settings.

        * MiniBrowser/efl/main.c:
        (on_key_down):

2012-11-20  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r133859.
        http://trac.webkit.org/changeset/133859
        https://bugs.webkit.org/show_bug.cgi?id=102875

        This patch makes API test broken (Requested by gyuyoung on
        #webkit).

        * Scripts/webkitperl/FeatureList.pm:

2012-11-20  Jinwoo Song  <jinwoo7.song@samsung.com>

        [EFL][WK2] Add Ewk_Window_Features API and related UI callbacks
        https://bugs.webkit.org/show_bug.cgi?id=99114

        Reviewed by Gyuyoung Kim.

        Implemented window_create and window_close smartcallback functions.

        * MiniBrowser/efl/main.c:
        (on_window_create):
        (on_window_close):
        (window_create):

2012-11-20  Ojan Vafai  <ojan@chromium.org>

        Simplify builder filters now that we have lists of which builders run which tests
        https://bugs.webkit.org/show_bug.cgi?id=102849

        Reviewed by Dirk Pranke.

        We only need filters when we load the same master for multiple groups in the
        same test type, i.e. when we need to only include some of the builders that run
        a given test suite on a given master.

        Also, get rid of the DEFAULT_BUILDER enum. We were always using the first builder anyways.
        Now just make it a method on BuilderGroup.

        * TestResultServer/static-dashboards/builders.js:
        (BuilderGroup.prototype.append):
        (BuilderGroup.prototype.setup):
        (BuilderGroup.prototype._defaultBuilder):
        (BuilderGroup.prototype.master):
        (requestBuilderList):
        (isChromiumWebkitTipOfTreeTestRunner):
        (isChromiumWebkitDepsTestRunner):
        (loadBuildersList):
        * TestResultServer/static-dashboards/flakiness_dashboard_unittests.js:
        (test):

2012-11-20  Ojan Vafai  <ojan@chromium.org>

        Remove perfav master for webkit_unit_tests and test_shell_tests.
        There are no bots on this master that run these tests.
        * TestResultServer/static-dashboards/builders.js:

2012-11-20  Ojan Vafai  <ojan@chromium.org>

        Remove special case for layout tests when builders fail to load
        https://bugs.webkit.org/show_bug.cgi?id=102842

        Reviewed by Tony Chang.

        Now that we load only builders that actually run the given test
        type, we can reliably show errors to the users because it
        represents a broken bot.
        * TestResultServer/static-dashboards/loader.js:

2012-11-15  Ojan Vafai  <ojan@chromium.org>

        Generate a list of builders/test suites from the buildbot json
        https://bugs.webkit.org/show_bug.cgi?id=102443

        Reviewed by Dirk Pranke.

        Instead of the cludgy things we do now to track which bots run which tests,
        we generate all that data from the buildbots' json files.
        This is the minimal amount to keep everything working. Once this lands,
        we can also do a bunch of followup cleanup.

        For now we commit the generated data. In theory, in the future, we could
        have the test results server generate the data on the fly.

        For the sake of easily understanding what changes when we run the generate script,
        also checkin a pretty printed version of the output. The pretty printed version
        is too large to serve as part of the flakiness dashboard though.

        This also has the benefit of making the dashboard load much faster since
        we no longer ever need to block on requests to buildbot.

        * TestResultServer/generate_builders_json.py: Added.
        (master_json_url):
        (builder_json_url):
        (cached_build_json_url):
        (fetch_json):
        (insert_builder_and_test_data):
        (main):
        * TestResultServer/generate_builders_json_unittest.py: Added.
        (GenerateBuildersJsonTest):
        (GenerateBuildersJsonTest.test_master_json_url):
        (GenerateBuildersJsonTest.test_builder_json_url):
        (GenerateBuildersJsonTest.test_cached_build_json_url):
        (GenerateBuildersJsonTest.test_generate_json_data):
        (GenerateBuildersJsonTest.test_generate_json_data.dummy_fetch_json):
        * TestResultServer/static-dashboards/builders-pretty.jsonp: Added.
        * TestResultServer/static-dashboards/builders.js:
        (LOAD_BUILDBOT_DATA):
        (BuilderGroup):
        (BuilderGroup.prototype.append):
        (BuilderGroup.prototype.master):
        (requestBuilderList):
        * TestResultServer/static-dashboards/builders.jsonp: Added.
        * TestResultServer/static-dashboards/builders_unittests.js: Added.
        * TestResultServer/static-dashboards/dashboard_base.js:
        * TestResultServer/static-dashboards/flakiness_dashboard.js:
        (showPopupForBuild):
        (htmlForTestResults):
        (htmlForIndividualTestOnAllBuildersWithResultsLinks):
        (loadExpectationsLayoutTests):
        * TestResultServer/static-dashboards/flakiness_dashboard_unittests.js:
        (resetGlobals):
        (test):
        * TestResultServer/static-dashboards/loader.js:
        * TestResultServer/static-dashboards/loader_unittests.js:
        * TestResultServer/static-dashboards/run-embedded-unittests.html:
        * TestResultServer/static-dashboards/run-unittests.html:
        * TestResultServer/static-dashboards/timeline_explorer.html:

2012-11-20  Thiago Marcos P. Santos  <thiago.santos@intel.com>

        [WTR][Qt] Enable fixedLayout when needed by the test
        https://bugs.webkit.org/show_bug.cgi?id=102811

        Reviewed by Kenneth Rohde Christiansen.

        Create a flickable view for CSS Device Adaptation tests. This is
        crucial for testing them since they will change the size of the
        viewport.

        * WebKitTestRunner/PlatformWebView.h:
        (PlatformWebView):
        * WebKitTestRunner/qt/PlatformWebViewQt.cpp:
        (WTR::PlatformWebView::PlatformWebView):
        (WTR::PlatformWebView::viewSupportsOptions):
        (WTR):
        * WebKitTestRunner/qt/main.cpp:
        (main):

2012-11-20  Thiago Marcos P. Santos  <thiago.santos@intel.com>

        [WTR] WebKitTestRunner should be able to run tests using fixed layout
        https://bugs.webkit.org/show_bug.cgi?id=102517

        Reviewed by Kenneth Rohde Christiansen.

        WTR will now request the creation of a view that has a page using
        fixed layout for CSS Device Adaptation tests, but this feature might
        be used in the future by any other test that requires a mobile-like type
        of viewport (i.e. Viewport META tests should be ported).

        The viewport type of the other tests remains unchanged and is restored
        when the runner leaves the device-adapt/ folder.

        * WebKitTestRunner/PlatformWebView.h:
        (PlatformWebView):
        * WebKitTestRunner/TestInvocation.cpp:
        (WTR):
        (WTR::shouldUseFixedLayout):
        (WTR::updateLayoutType):
        (WTR::TestInvocation::invoke):
        * WebKitTestRunner/efl/PlatformWebViewEfl.cpp:
        (WTR::PlatformWebView::PlatformWebView):
        (WTR::PlatformWebView::viewSupportsOptions):
        (WTR):

2012-11-20  Csaba OsztrogonÃ¡c  <ossy@webkit.org>

        [Qt] REGRESSION(r128174): Fast build path doesn't work now
        https://bugs.webkit.org/show_bug.cgi?id=100360

        Reviewed by Tor Arne VestbÃ¸.

        Use a separated .builtRevisions.cache file instead of .qmake.cache to cache built SVN revisions.

        * Scripts/webkitdirs.pm:
        (buildQMakeProjects):

2012-11-20  Mateusz Leszko  <m.leszko@samsung.com>

        [EFL][GTK]Sharing accessibility support in WebKitTestRunner.
        https://bugs.webkit.org/show_bug.cgi?id=99011

        Reviewed by Martin Robinson.

        Accessibility files from gtk folder are moved to atk folder due to common implementation. Event Type naming changed to default, from Gtk to ATK.

        * WebKitTestRunner/InjectedBundle/atk/AccessibilityControllerAtk.cpp: Renamed from Tools/WebKitTestRunner/InjectedBundle/gtk/AccessibilityControllerGtk.cpp.
        (WTR::AccessibilityController::logAccessibilityEvents):
        * WebKitTestRunner/InjectedBundle/atk/AccessibilityUIElementAtk.cpp: Renamed from Tools/WebKitTestRunner/InjectedBundle/gtk/AccessibilityUIElementGtk.cpp.

2012-11-20  Zan Dobersek  <zandobersek@gmail.com>

        webkitpy unit tests should run serially when checking code coverage
        https://bugs.webkit.org/show_bug.cgi?id=102693

        Reviewed by Dirk Pranke.

        When checking code coverage, the unit tests should not be run in parallel
        as this causes the tracing functions (set via sys.settrace in the coverage
        module) being overriden, resulting in incorrect coverage reports.

        * Scripts/webkitpy/test/main.py:
        (Tester._run_tests):

2012-11-19  Viatcheslav Ostapenko  <v.ostapenko@samsung.com>

        [EFL] Add fallback for WebkitTestRunner if opengl is not available.
        https://bugs.webkit.org/show_bug.cgi?id=102704

        Reviewed by Laszlo Gombos.

        Add fallback to non-opengl evas engine in WebkitTestRunner if opengl is not available.

        * WebKitTestRunner/efl/PlatformWebViewEfl.cpp:
        (WTR::initEcoreEvas):

2012-11-19  Dimitri Glazkov  <dglazkov@chromium.org>

        [garden-o-matic] Switch frontend to use the gardeningserver.
        https://bugs.webkit.org/show_bug.cgi?id=102712

        Reviewed by Dirk Pranke.

        Instead of serving garden-o-matic frontend as file, we now serve it from the gardening server. This enables
        using garden-o-matic in a Chrome OS device, with a separate machine as a headless server.

        * BuildSlaveSupport/build.webkit.org-config/public_html/TestFailures/garden-o-matic.html: Changed CSP policy to use 'self'.
        * BuildSlaveSupport/build.webkit.org-config/public_html/TestFailures/scripts/checkout.js: Removed now-unnecessary references to kLocalServerURL.
        * BuildSlaveSupport/build.webkit.org-config/public_html/TestFailures/scripts/checkout_unittests.js: Tweaked the test expectation.
        * BuildSlaveSupport/build.webkit.org-config/public_html/TestFailures/scripts/config.js: Removed kLocalServerURL.
        * BuildSlaveSupport/build.webkit.org-config/public_html/TestFailures/scripts/controllers.js: Spuriously updated the name of the webkit-patch command.
        * BuildSlaveSupport/build.webkit.org-config/public_html/TestFailures/scripts/results.js: Removed kLocalServerURL.
        * Scripts/webkitpy/tool/servers/gardeningserver.py: Changed to use the new launch URL.

2012-11-19  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r135172.
        http://trac.webkit.org/changeset/135172
        https://bugs.webkit.org/show_bug.cgi?id=102710

        Broke some WebKit2 api tests :( (Requested by japhet on
        #webkit).

        * DumpRenderTree/chromium/WebViewHost.cpp:
        (WebViewHost::updateForCommittedLoad):

2012-11-19  Dimitri Glazkov  <dglazkov@chromium.org>

        [garden-o-matic] Enable serving garden-o-matic with gardeningserver.
        https://bugs.webkit.org/show_bug.cgi?id=102703

        Reviewed by Ojan Vafai.

        To enable gardening from a Chrome OS device, we need the ability to serve garden-o-matic
        from the same origin as the gardening server. This change gently massages the current
        logic to adapt an extension-sniffing-based approach of identifying static files,
        rather than requiring an explicit list.

        * Scripts/webkitpy/tool/servers/reflectionhandler.py:
        (ReflectionHandler): Replaced STATIC_FILE_NAMES with STATIC_FILE_EXTENSIONS.
        (ReflectionHandler._handle_request): Changed the logic to smell for extensions, rather than specific files.
        * Scripts/webkitpy/tool/servers/reflectionhandler_unittest.py: Added.

2012-11-19  Ojan Vafai  <ojan@chromium.org>

        Add DOM and HTML watchlists and add myself to a bunch of lists
        https://bugs.webkit.org/show_bug.cgi?id=102707

        Reviewed by Eric Seidel.

        * Scripts/webkitpy/common/config/watchlist:

2012-11-19  Jochen Eisinger  <jochen@chromium.org>

        [chromium] move methods that only use the WebKit API from DRTTestRunner to TestRunner
        https://bugs.webkit.org/show_bug.cgi?id=102676

        Reviewed by Tony Chang.

        In addition, I've replaced parsePageNumber with the more commonly used
        cppVariantToInt32, moved abortModal to the list of stubbed out methods,
        and removed setAutomaticLinkDetectionEnabled which wasn't used
        anywhere.

        * DumpRenderTree/chromium/DRTTestRunner.cpp:
        (DRTTestRunner::DRTTestRunner):
        (DRTTestRunner::reset):
        (DRTTestRunner::overridePreference):
        * DumpRenderTree/chromium/DRTTestRunner.h:
        (DRTTestRunner):
        * DumpRenderTree/chromium/TestRunner/src/TestRunner.cpp:
        (WebTestRunner::TestRunner::TestRunner):
        (WebTestRunner::TestRunner::reset):
        (WebTestRunner):
        (WebTestRunner::TestRunner::setTabKeyCyclesThroughElements):
        (WebTestRunner::TestRunner::setAsynchronousSpellCheckingEnabled):
        (WebTestRunner::TestRunner::execCommand):
        (WebTestRunner::TestRunner::isCommandEnabled):
        (WebTestRunner::TestRunner::pauseAnimationAtTimeOnElementWithId):
        (WebTestRunner::TestRunner::pauseTransitionAtTimeOnElementWithId):
        (WebTestRunner::TestRunner::elementDoesAutoCompleteForElementWithId):
        (WebTestRunner::TestRunner::numberOfActiveAnimations):
        (WebTestRunner::TestRunner::callShouldCloseOnWebView):
        (WebTestRunner::TestRunner::setDomainRelaxationForbiddenForURLScheme):
        (WebTestRunner::TestRunner::evaluateScriptInIsolatedWorldAndReturnValue):
        (WebTestRunner::TestRunner::evaluateScriptInIsolatedWorld):
        (WebTestRunner::TestRunner::setIsolatedWorldSecurityOrigin):
        (WebTestRunner::TestRunner::setIsolatedWorldContentSecurityPolicy):
        (WebTestRunner::TestRunner::addOriginAccessWhitelistEntry):
        (WebTestRunner::TestRunner::removeOriginAccessWhitelistEntry):
        (WebTestRunner::TestRunner::hasCustomPageSizeStyle):
        (WebTestRunner::TestRunner::forceRedSelectionColors):
        (WebTestRunner::TestRunner::addUserScript):
        (WebTestRunner::TestRunner::addUserStyleSheet):
        (WebTestRunner::TestRunner::startSpeechInput):
        (WebTestRunner::TestRunner::loseCompositorContext):
        (WebTestRunner::TestRunner::markerTextForListItem):
        (WebTestRunner::TestRunner::findString):
        (WebTestRunner::TestRunner::setMinimumTimerInterval):
        (WebTestRunner::TestRunner::setAutofilled):
        (WebTestRunner::TestRunner::setValueForUser):
        (WebTestRunner::TestRunner::enableFixedLayoutMode):
        (WebTestRunner::TestRunner::setFixedLayoutSize):
        (WebTestRunner::TestRunner::selectionAsMarkup):
        (WebTestRunner::TestRunner::setTextSubpixelPositioning):
        (WebTestRunner::TestRunner::resetPageVisibility):
        (WebTestRunner::TestRunner::setPageVisibility):
        (WebTestRunner::TestRunner::setTextDirection):
        (WebTestRunner::TestRunner::textSurroundingNode):
        (WebTestRunner::TestRunner::workerThreadCount):
        (WebTestRunner::TestRunner::cppVariantToBool):
        (WebTestRunner::TestRunner::cppVariantToInt32):
        (WebTestRunner::TestRunner::cppVariantToWebString):
        (WebTestRunner::TestRunner::cppVariantToWebStringArray):
        (WebTestRunner::TestRunner::printErrorMessage): formerly logErrorToConsole
        (WebTestRunner::TestRunner::fallbackMethod):
        * DumpRenderTree/chromium/TestRunner/src/TestRunner.h:
        (WebKit):
        (WebTestRunner::TestRunner::setWebView):
        (TestRunner):
        * DumpRenderTree/chromium/TestShell.cpp:
        (TestShell::createMainWindow):
        (TestShell::~TestShell):

2012-11-19  Yusuke Sato  <yusukes@chromium.org>

        [Chromium] Flash cannot receive scroll events when threaded compositing is in use
        https://bugs.webkit.org/show_bug.cgi?id=101423

        Reviewed by James Robinson.

        Call setWantsWheelEvents(true) in initialize() so that gesture-events and transformed-events tests in
        LayoutTests/platform/chromium/plugins/ will not fail even if a buildbot introduces threaded compositing
        in the future.

        * DumpRenderTree/chromium/TestWebPlugin.cpp:
        (TestWebPlugin::initialize):

2012-11-19  Nate Chapin  <japhet@chromium.org>

        Move empty loading to DocumentLoader, simplify FrameLoader::init()
        https://bugs.webkit.org/show_bug.cgi?id=101512

        Reviewed by Adam Barth.

        Chromium DRT has some code that doesn't play nicely with empty urls and incorrectly
        interprets them as a non-empty load. This ensures
        http/tests/navigation/new-window-redirect-history.html continues to pass
        in chromium.

        * DumpRenderTree/chromium/WebViewHost.cpp:
        (WebViewHost::updateForCommittedLoad):

2012-11-19  Vincent Scheib  <scheib@chromium.org>

        [Chromium] Remove WebKit::WebRuntimeFeatures::enablePointerLock.
        https://bugs.webkit.org/show_bug.cgi?id=96946

        Reviewed by Adam Barth.

        The runtime flag functionality has already been removed.
        Now that Chromium no longer has a compile dependency on this
        API, it can be removed as well.

        * DumpRenderTree/chromium/TestShell.cpp:
        (TestShell::TestShell):

2012-11-19  Kihong Kwon  <kihong.kwon@samsung.com>

        Add PROXIMITY_EVENTS feature
        https://bugs.webkit.org/show_bug.cgi?id=102658

        Reviewed by Kentaro Hara.

        Add PROXIMITY_EVENTS feature to FeatureList and qmake.

        * Scripts/webkitperl/FeatureList.pm:
        * qmake/mkspecs/features/features.pri:

2012-11-19  Christophe Dumez  <christophe.dumez@intel.com>

        [WK2][WTR] Memory leak in TestController::initialize()
        https://bugs.webkit.org/show_bug.cgi?id=102616

        Reviewed by Kenneth Rohde Christiansen.

        Remove call to WKStringCreateWithUTF8CString() to construct
        the icon database path which was leaking memory since the
        returned WKStringRef was not adopted. The code now uses
        WTF::String instead of std::string and converts it to a
        WKStringRef using toWK().

        * WebKitTestRunner/StringFunctions.h:
        (WTR::toWK): Overload toWK() to take a WTF::String in
        argument.
        (WTR):
        * WebKitTestRunner/TestController.cpp:
        (WTR::TestController::initialize):

2012-11-19  Kentaro Hara  <haraken@chromium.org>

        Remove IDLStructure.pm
        https://bugs.webkit.org/show_bug.cgi?id=102642

        Reviewed by Adam Barth.

        Previously IDLStructure.pm was full of regular expressions to
        parse IDL files. Now a new IDL parser is implemented, IDLStructure.pm
        just contains several data structures for the IDL parser. We can
        move them to IDLParser.pm and thus remove IDLStructure.pm.

        No tests. No change in generated code.

        * WebKitTestRunner/DerivedSources.make:
        * WebKitTestRunner/GNUmakefile.am:
        * WebKitTestRunner/InjectedBundle/DerivedSources.pri:

2012-11-18  KyungTae Kim  <ktf.kim@samsung.com>

        [EFL] Not to include "ewk_view_private.h" in Tools
        https://bugs.webkit.org/show_bug.cgi?id=102644

        Reviewed by Gyuyoung Kim.

        Include ewk_view.h instead of ewk_view_private.h in Tools

        * DumpRenderTree/efl/PixelDumpSupportEfl.cpp:

2012-11-18  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r135104.
        http://trac.webkit.org/changeset/135104
        https://bugs.webkit.org/show_bug.cgi?id=102638

        Should not use commit queue to add people to committer list.
        (Requested by ap_ on #webkit).

        * Scripts/webkitpy/common/config/committers.py:

2012-11-18  Vivek Galatage  <vivek.vg@samsung.com>

        Add myself to committers.py
        https://bugs.webkit.org/show_bug.cgi?id=102636

        Reviewed by Laszlo Gombos.

        Add myself to committers.py

        * Scripts/webkitpy/common/config/committers.py:

2012-11-18  Genevieve Mak  <gmak@rim.com>

        [BlackBerry] Enable Touch Sliders
        https://bugs.webkit.org/show_bug.cgi?id=102516

        Reviewed by Rob Buis.

        Enabled for BlackBerry only
        PR #242781
        PR #176014

        * Scripts/webkitperl/FeatureList.pm:

2012-11-17  Dimitri Glazkov  <dglazkov@chromium.org>

        Remove unused code I wrote a long time ago from gardeningserver.py
        https://bugs.webkit.org/show_bug.cgi?id=102605

        Reviewed by Adam Barth.

        * Scripts/webkitpy/tool/servers/gardeningserver.py: Removed.
        * Scripts/webkitpy/tool/servers/gardeningserver_unittest.py: Removed.

2012-11-16  Tony Chang  <tony@chromium.org>

        Remove ENABLE_CSS_HIERARCHIES since it's no longer in use
        https://bugs.webkit.org/show_bug.cgi?id=102554

        Reviewed by Andreas Kling.

        As mentioned in https://bugs.webkit.org/show_bug.cgi?id=79939#c41 ,
        we're going to revist this feature once additional vendor support is
        achieved.

        * Scripts/webkitperl/FeatureList.pm:

2012-11-16  Jochen Eisinger  <jochen@chromium.org>

        [chromium] move stubs from DRTTestRunner to TestRunner
        https://bugs.webkit.org/show_bug.cgi?id=102489

        Reviewed by Adam Barth.

        This is part of moving all methods from DRTTestRunner to TestRunner.
        Instead of keeping one stub per method, I'm using a shared stub to
        clean up the code.

        * DumpRenderTree/chromium/DRTTestRunner.cpp:
        (DRTTestRunner::DRTTestRunner):
        * DumpRenderTree/chromium/DRTTestRunner.h:
        (DRTTestRunner):
        * DumpRenderTree/chromium/TestRunner/src/TestRunner.cpp:
        (WebTestRunner::TestRunner::TestRunner):
        (WebTestRunner):
        (WebTestRunner::TestRunner::fallbackMethod):
        (WebTestRunner::TestRunner::notImplemented):
        * DumpRenderTree/chromium/TestRunner/src/TestRunner.h:
        (WebTestRunner):
        (TestRunner):
        (WebTestRunner::TestRunner::setDelegate):
        * DumpRenderTree/chromium/TestShell.cpp:
        (TestShell::createMainWindow):
        (TestShell::~TestShell):

2012-11-16  Jochen Eisinger  <jochen@chromium.org>

        [chromium] fake drag drop operations in the WebTestProxyBase instead of the WebViewHost
        https://bugs.webkit.org/show_bug.cgi?id=102495

        Reviewed by Adam Barth.

        When a drag operation is initiated in a layout test, we need to
        simulate a corresponding drop event, otherwise the WebViewImpl will sit
        there waiting for it. Instead of having the embedder taking care of
        this, move this into the TestRunner library.

        * DumpRenderTree/chromium/TestRunner/public/WebTestProxy.h:
        (WebKit):
        (WebTestProxyBase):
        (WebTestRunner::WebTestProxy::startDragging):
        * DumpRenderTree/chromium/TestRunner/src/WebTestProxy.cpp:
        (WebTestRunner::WebTestProxyBase::startDragging):
        (WebTestRunner):
        * DumpRenderTree/chromium/WebViewHost.cpp:
        * DumpRenderTree/chromium/WebViewHost.h:
        (WebViewHost):

2012-11-16  Tien-Ren Chen  <trchen@chromium.org>

        Rename applyDefaultDeviceScaleFactorInCompositor to setApplyDeviceScaleFactorInCompositor
        https://bugs.webkit.org/show_bug.cgi?id=102462

        Reviewed by James Robinson.

        As we no longer have this "default" device scale factor.

        * DumpRenderTree/chromium/WebPreferences.cpp:
        (WebPreferences::applyTo):

2012-11-15  Takashi Sakamoto  <tasak@google.com>

        [Win] key event's location does not work on Windows platform.
        https://bugs.webkit.org/show_bug.cgi?id=89742

        Reviewed by Brent Fulgham.

        Modified keyDownCallback to use lparam to specify left-hand keys or
        right-hand keys.

        * DumpRenderTree/win/EventSender.cpp:
        (makeKeyDataForScanCode):
        Given a virtual keycode, generate scancode and extended key bit of
        lparam.
        (keyDownCallback):
        Use lparam for left-hand and right-hand keys, because Windows doesn't
        directly provide a virtual keycode which distinguishes between
        left-hand and right-hand. For example, when control key is pressed,
        wparam has VK_CONTROL, neither VK_RCONTROL nor VK_LCONTROL.

2012-11-16  Tommy Widenflycht  <tommyw@google.com>

        [chromium] MediaStream API: Add missing WebRTCPeerConnectionHandlerClient::didAddRemoteDataChannel
        https://bugs.webkit.org/show_bug.cgi?id=102386

        Reviewed by Adam Barth.

        Adding mock data channel functionality.

        * DumpRenderTree/chromium/MockWebRTCPeerConnectionHandler.cpp:
        (MockWebRTCPeerConnectionHandler::openDataChannel):

2012-11-16  Jochen Eisinger  <jochen@chromium.org>

        [chromium] delete unused testRunner methods
        https://bugs.webkit.org/show_bug.cgi?id=102479

        Reviewed by Adam Barth.

        These methods aren't used by any layout test. Remove them to avoid bit rot

        * DumpRenderTree/chromium/DRTTestRunner.cpp:
        (DRTTestRunner::DRTTestRunner):
        (DRTTestRunner::reset):
        * DumpRenderTree/chromium/DRTTestRunner.h:
        (DRTTestRunner):
        * DumpRenderTree/chromium/WebViewHost.cpp:
        (WebViewHost::shouldBeginEditing):
        (WebViewHost::shouldEndEditing):
        (WebViewHost::shouldInsertNode):
        (WebViewHost::shouldInsertText):
        (WebViewHost::shouldChangeSelectedRange):
        (WebViewHost::shouldDeleteRange):
        (WebViewHost::shouldApplyStyle):
        (WebViewHost::startDragging):
        (WebViewHost::enterFullScreenNow):
        (WebViewHost::exitFullScreenNow):

2012-11-15  Alexey Proskuryakov  <ap@apple.com>

        Private Browsing is a per-page setting that sets a global value
        https://bugs.webkit.org/show_bug.cgi?id=67870

        Reviewed by Sam Weinig.

        * DumpRenderTree/mac/DumpRenderTree.mm: (setDefaultsToConsistentValuesForTesting):
        Call _switchNetworkLoaderToNewTestingSession before making other settings, so that
        they would actually apply to the testing session.

        * WebKitTestRunner/InjectedBundle/InjectedBundle.cpp:
        (WTR::InjectedBundle::initialize):
        (WTR::InjectedBundle::beginTesting):
        Only call WKBundleSwitchNetworkLoaderToNewTestingSession once per process, matching
        WebKit1. I'm not fully sure what is going wrong, but apparently creating mutiple
        sessions with the same identifier doesn't quite work.

2012-11-16  Yael Aharon  <yael.aharon@intel.com>

        Unreviewed. Help bugzilla find me.

        * Scripts/webkitpy/common/config/committers.py:

2012-11-16  Peter Beverloo  <peter@chromium.org>

        Running TestWebKitAPI and webkit_unit_tests for Chromium Android should defer to the Chromium-sided test runner
        https://bugs.webkit.org/show_bug.cgi?id=102245

        Reviewed by Tony Chang.

        When running TestWebKitAPI and webkit_unit_test for Chromium Android, defer
        the actual running part to the test runner which lives on the Chromium side.
        Re-implementing or even generalizing the device-interaction part in WebKit
        is error prone and not worth the effort.

        * Scripts/run-api-tests:
        * Scripts/run-chromium-webkit-unit-tests:

2012-11-15  Yury Semikhatsky  <yurys@chromium.org>

        Memory instrumentation: add code for reporting stack traces of unknown instrumented objects
        https://bugs.webkit.org/show_bug.cgi?id=102384

        Reviewed by Pavel Feldman.

        Updated return type in accord with the changes in MemoryInstrumentationClient.

        * TestWebKitAPI/Tests/WTF/MemoryInstrumentationTest.cpp:

2012-11-15  Gustavo Noronha Silva  <gns@gnome.org>

        [GTK] Split WebCore/platform into a separate library
        https://bugs.webkit.org/show_bug.cgi?id=94435

        Reviewed by Martin Robinson.

        More people have been reporting problems when linking WebCore because
        the command line limit is being exceeded. Splitting WebCore a bit more
        is in order.

        * GNUmakefile.am: link libWebCorePlatform into DRT

2012-11-15  Dana Jansens  <danakj@chromium.org>

        [chromium] Stop using the WebCompositorSupport methods for changing settings
        https://bugs.webkit.org/show_bug.cgi?id=101968

        Reviewed by James Robinson.

        * DumpRenderTree/chromium/TestShell.cpp:
        * DumpRenderTree/chromium/TestShell.h:
        (TestShell::setPerTilePaintingEnabled):
        (TestShell::setAcceleratedAnimationEnabled):

2012-11-15  Tony Chang  <tony@chromium.org>

        Generate Settings from a .in file
        https://bugs.webkit.org/show_bug.cgi?id=100393

        Reviewed by Adam Barth.

        Add the generated WebCore files to the include dir.

        * TestWebKitAPI/CMakeLists.txt:
        * WebKitTestRunner/CMakeLists.txt:

2012-11-15  Roger Fong  <roger_fong@apple.com>

        Make old-run-webkit-tests handle setting the results directory properly.
        https://bugs.webkit.org/show_bug.cgi?id=102273
        <rdar://problem/11571607>

        Reviewed by Timothy Horton.

        A call to chdirWebkit in old-run-webkit-tests set the current working directory to the OpenSource folder.
        Thus setting --results-directory to OpenSource/layout-test-results would create OpenSource/layout-test-results inside the main OpenSource folder.
        This caused many other problems including failure to upload test results and failed future test runs.
        The solution is to save the current working directory before calling chdirWebKit and then reconstructing the full path to the results directory 
        using the saved directory when setting $testResultsDirectory.

        * Scripts/old-run-webkit-tests:

2012-11-15  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r134800 and r134805.
        http://trac.webkit.org/changeset/134800
        http://trac.webkit.org/changeset/134805
        https://bugs.webkit.org/show_bug.cgi?id=102417

        This patch broke chromium port (Requested by jianli on
        #webkit).

        * DumpRenderTree/chromium/MockWebRTCPeerConnectionHandler.cpp:
        (MockWebRTCPeerConnectionHandler::openDataChannel):

2012-11-15  Tommy Widenflycht  <tommyw@google.com>

        [chromium] MediaStream API: Add missing WebRTCPeerConnectionHandlerClient::didAddRemoteDataChannel
        https://bugs.webkit.org/show_bug.cgi?id=102386

        Reviewed by Adam Barth.

        Adding mock data channel functionality.

        * DumpRenderTree/chromium/MockWebRTCPeerConnectionHandler.cpp:
        (MockWebRTCPeerConnectionHandler::openDataChannel):

2012-11-15  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r134649 and r134665.
        http://trac.webkit.org/changeset/134649
        http://trac.webkit.org/changeset/134665
        https://bugs.webkit.org/show_bug.cgi?id=102413

        Broke a ton of downstream chromium tests (Requested by japhet
        on #webkit).

        * DumpRenderTree/chromium/WebViewHost.cpp:
        (WebViewHost::updateForCommittedLoad):

2012-11-15  Andreas Kling  <akling@apple.com>

        Update my e-mail address.

        Rubber-stamped by Anders Koivisto.

        * Scripts/webkitpy/common/config/committers.py:

2012-11-15  Dominik RÃ¶ttsches  <dominik.rottsches@intel.com>

        [EFL] Bump Harfbuzz to allow fixing bug 101009 on EFL
        https://bugs.webkit.org/show_bug.cgi?id=101323

        Reviewed by Martin Robinson.

        Bumping Harfbuzz to newer version so that we can remove the
        ifdef round the fix for bug 101009 for EFL, too.
        We're using the zip snapshot since jhbuild can fallback to the previously
        downloaded blob in case of network failures which leads to better
        buildbot robustness. This zip snapshot currently needs to be locally
        patched to fix ICU detection on systems that don't have icu pkg-config files.
        The patch is suggested for merging into HarfBuzz. We can remove it locally
        once it's accepted into HarfBuzz upstream.

        * efl/patches/harfbuzz-icu-detection-fix.patch: Applied after retrieving source to fix harfbuzz detection on systems that don't have pkg-config files for it.
        * efl/jhbuild.modules: Bumping harfbuzz version.

2012-11-15  Alexey Proskuryakov  <ap@apple.com>

        [Mac] Implement WTR --no-timeout-at-all option
        https://bugs.webkit.org/show_bug.cgi?id=102251

        Reviewed by Eric Carlson.

        * WebKitTestRunner/mac/TestControllerMac.mm: (WTR::TestController::platformRunUntil):
        Just do it, and convert to Objective C on the way for simplicity.

2012-11-14  Ryuan Choi  <ryuan.choi@gmail.com>

        [EFL] Port tiled backing store
        https://bugs.webkit.org/show_bug.cgi?id=71352

        Reviewed by Gyuyoung Kim.

        * EWebLauncher/main.c: Added option to test the WebCore's tiled backing store.
        (_User_Arguments):
        (windowCreate):
        (parseUserArguments):

2012-11-14  Andy Estes  <aestes@apple.com>

        Fix the build.

        * TestWebKitAPI/mac/TestBrowsingContextLoadDelegate.h:

2012-11-14  Dirk Pranke  <dpranke@chromium.org>

        webkitpy: consolidate webkit-base-finding code
        https://bugs.webkit.org/show_bug.cgi?id=102007

        Reviewed by Eric Seidel.

        This patch creates a new "WebKitFinder" class that other
        modules can use to find the top of the WebKit tree and
        commonly used subdirectories. This logic was in the
        webkitpy.layout_test.port classes but wasn't specific to those
        classes and now can be used by other modules without needing a port
        (e.g., by the check-webkit-style python linter).

        This code is somewhat redundant with the code for find_checkout_root()
        in the scm modules, but it does not rely on the presence of a version
        control system to work. This is a requirement for some uses of the
        tree (e.g., Chromium tester checkouts).

        This patch removes most of the logic from the layout_tests.port.config
        module and makes that as private as possible. Now we just need to move
        the default_configuration and flag_from_configuration logic into
        DeprecatedPort (or someplace else appropriate) and we can finish
        getting rid of the Config class (but that is a separate patch).

        * Scripts/webkitpy/common/webkit_finder.py: Added.
        (WebKitFinder):
        (WebKitFinder.__init__):
        (WebKitFinder.webkit_base):
        (WebKitFinder.path_from_webkit_base):
        (WebKitFinder.path_to_script):
        (WebKitFinder.layout_tests_dir):
        (WebKitFinder.perf_tests_dir):
        * Scripts/webkitpy/layout_tests/port/base.py:
        (Port.__init__):
        (Port):
        (Port.webkit_base):
        (Port.path_from_webkit_base):
        (Port.path_to_script):
        (Port.layout_tests_dir):
        (Port.perf_tests_dir):
        (Port.set_option_default):
        (Port._run_script):
        * Scripts/webkitpy/layout_tests/port/base_unittest.py:
        (PortTest.test_diff_text):
        * Scripts/webkitpy/layout_tests/port/chromium_linux.py:
        (ChromiumLinuxPort._determine_driver_path_statically):
        * Scripts/webkitpy/layout_tests/port/chromium_unittest.py:
        * Scripts/webkitpy/layout_tests/port/config.py:
        (Config.__init__):
        (Config.build_directory):
        (Config.default_configuration):
        (Config._read_configuration):
        * Scripts/webkitpy/layout_tests/port/config_mock.py: Removed.
        * Scripts/webkitpy/layout_tests/port/config_unittest.py:
        (ConfigTest.test_default_configuration__standalone):
        (ConfigTest.test_default_configuration__scripterror):
        * Scripts/webkitpy/layout_tests/port/driver_unittest.py:
        (DriverTest.make_port):
        (DriverTest.test_no_timeout):
        * Scripts/webkitpy/layout_tests/port/gtk.py:
        (GtkPort.setup_environ_for_server):
        * Scripts/webkitpy/layout_tests/port/mac.py:
        (MacPort.show_results_html_file):
        * Scripts/webkitpy/layout_tests/port/port_testcase.py:
        (TestWebKitPort.__init__):
        (PortTestCase.make_port):
        * Scripts/webkitpy/layout_tests/port/win_unittest.py:
        (WinPortTest.test_expectations_files):
        * Scripts/webkitpy/layout_tests/port/xvfbdriver_unittest.py:
        (XvfbDriverTest.make_driver):
        (XvfbDriverTest.test_stop):
        * Scripts/webkitpy/style/checkers/python.py:
        (Pylinter.__init__):

2012-11-14  Dana Jansens  <danakj@chromium.org>

        [chromium] WebPreferences reset() should set perTilePainting and acceleratedAnimation settings to false.
        https://bugs.webkit.org/show_bug.cgi?id=102296

        Reviewed by James Robinson.

        These settings are always set by TestShell anyhow, but we should be
        setting them to false here along with everything else.

        * DumpRenderTree/chromium/WebPreferences.cpp:
        (WebPreferences::reset):

2012-11-08  Andy Estes  <aestes@apple.com>

        [WebKit2] Need API in UIProcess to enable loading of custom protocols
        https://bugs.webkit.org/show_bug.cgi?id=101674

        Reviewed by Brady Eidson.

        Add an API test that implements a custom protocol and attempts to load
        a resource requiring that protocol in a WKView. The test passes only if
        didFinishLoadForFrame: fires.

        * TestWebKitAPI/TestWebKitAPI.xcodeproj/project.pbxproj:
        * TestWebKitAPI/Tests/WebKit2ObjC/CustomProtocolsTest.mm: Added.
        (+[TestProtocol canInitWithRequest:]):
        (+[TestProtocol canonicalRequestForRequest:]):
        (+[TestProtocol requestIsCacheEquivalent:toRequest:]):
        (-[TestProtocol startLoading]):
        (-[TestProtocol stopLoading]):
        * TestWebKitAPI/Tests/WebKit2ObjC/UserContentTest.mm:
        * TestWebKitAPI/mac/TestBrowsingContextLoadDelegate.h: Copied from Source/WebKit2/UIProcess/API/mac/WKBrowsingContextControllerInternal.h.
        * TestWebKitAPI/mac/TestBrowsingContextLoadDelegate.mm: Copied from Source/WebKit2/UIProcess/API/mac/WKBrowsingContextControllerInternal.h.
        (-[TestBrowsingContextLoadDelegate initWithBlockToRunOnLoad:]):
        (-[TestBrowsingContextLoadDelegate browsingContextControllerDidFinishLoad:]):

2012-11-14  Ojan Vafai  <ojan@chromium.org>

        Fix some defuct flakiness dashboard unittests.
        * TestResultServer/static-dashboards/flakiness_dashboard_unittests.js:

2012-11-14  Glenn Adams  <glenn@skynav.com>

        webkitpy: print-expectations - add --paths option to print only paths of test expectation files
        https://bugs.webkit.org/show_bug.cgi?id=102269

        Reviewed by Dirk Pranke.

        Add --paths option to print-expectations command in order to obtain list of applicable
        test expectation file paths.

        * Scripts/webkitpy/tool/commands/queries.py:
        (PrintExpectations.__init__):
        (PrintExpectations.execute):
        * Scripts/webkitpy/tool/commands/queries_unittest.py:
        (PrintExpectationsTest.run_test):
        (PrintExpectationsTest.test_paths):

2012-11-14  James Robinson  <jamesr@chromium.org>

        webgl-background-color.html started failing
        https://bugs.webkit.org/show_bug.cgi?id=102247

        Reviewed by Adrienne Walker.

        The compositor thread should outlive the WebView.

        * DumpRenderTree/chromium/TestShell.h:
        (TestShell):

2012-11-14  Nate Chapin  <japhet@chromium.org>

        Move empty loading to DocumentLoader, simplify FrameLoader::init()
        https://bugs.webkit.org/show_bug.cgi?id=101512

        Reviewed by Adam Barth.

        Chromium DRT has some code that doesn't play nicely with empty urls and incorrectly
        interprets them as a non-empty load. This ensures
        http/tests/navigation/new-window-redirect-history.html continues to pass
        in chromium.

        * DumpRenderTree/chromium/WebViewHost.cpp:
        (WebViewHost::updateForCommittedLoad):

2012-11-14  Zan Dobersek  <zandobersek@gmail.com>

        Remove uses of deprecated unittest.TestCase aliases
        https://bugs.webkit.org/show_bug.cgi?id=102253

        Reviewed by Dirk Pranke.

        Replace the deprecated unittest.TestCase methods with the corresponding methods
        everywhere inside the Tools directory. The following replacements are done:
        - assertEquals -> assertEqual
        - assert_ -> assertTrue
        - failUnlessRaises -> assertRaises

        * BuildSlaveSupport/build.webkit.org-config/mastercfg_unittest.py:
        (SVNMirrorTest.test_CheckOutSource):
        * QueueStatusServer/model/queuepropertymixin_unittest.py:
        (QueuePropertyMixinTest.test_queue_property):
        * QueueStatusServer/model/queues_unittest.py:
        (QueueTest._assert_short_name):
        (QueueTest._assert_display_name):
        (QueueTest._assert_name_with_underscores):
        * QueueStatusServer/model/workitems_unittest.py:
        (WorkItemsTest.test_display_position_for_attachment):
        * Scripts/webkitpy/common/checkout/changelog_unittest.py:
        (test_parse_log_entries_from_changelog):
        (test_parse_log_entries_from_annotated_file):
        (_assert_parse_reviewer_text_and_list):
        (_assert_parse_reviewer_text_list):
        (_assert_fuzzy_reviewer_match):
        (_assert_parse_authors):
        (test_latest_entry_parse):
        (test_latest_entry_parse_single_entry):
        (test_set_reviewer):
        (test_set_short_description_and_bug_url):
        * Scripts/webkitpy/common/checkout/diff_parser_unittest.py:
        (DiffParserTest.test_diff_parser):
        * Scripts/webkitpy/common/checkout/scm/scm_unittest.py:
        (GitSVNTest.test_revisions_changing_files_with_local_commit):
        (GitSVNTest.test_upstream_branch):
        (GitSVNTest.test_create_patch_with_rm_and_changed_files):
        (GitTestWithMock.test_push_local_commits_to_server_with_username_and_password):
        * Scripts/webkitpy/common/config/ports_unittest.py:
        (DeprecatedPortTest.test_mac_port):
        (DeprecatedPortTest.test_gtk_port):
        (DeprecatedPortTest.test_efl_port):
        (DeprecatedPortTest.test_qt_port):
        (DeprecatedPortTest.test_chromium_port):
        (DeprecatedPortTest.test_chromium_android_port):
        (DeprecatedPortTest.test_chromium_xvfb_port):
        * Scripts/webkitpy/common/config/urls_unittest.py:
        (URLsTest.test_parse_bug_id):
        (URLsTest.test_parse_attachment_id):
        * Scripts/webkitpy/common/find_files_unittest.py:
        (TestWinNormalize.assert_filesystem_normalizes):
        * Scripts/webkitpy/common/net/bugzilla/bugzilla_unittest.py:
        (test_url_creation):
        (test_parse_bug_id):
        (_assert_dictionaries_equal):
        (test_parse_bugs_from_xml):
        (test_attachment_detail_bug_parsing):
        (_assert_result_count):
        (test_request_page_parsing):
        (test_quip_page_parsing):
        (EditUsersParserTest._assert_login_userid_pairs):
        * Scripts/webkitpy/common/net/buildbot/buildbot_unittest.py:
        (test_status_parsing):
        (test_latest_cached_build):
        (test_results_zip_url):
        * Scripts/webkitpy/common/net/credentials_unittest.py:
        (test_credentials_from_environment):
        * Scripts/webkitpy/common/net/failuremap_unittest.py:
        (FailureMapTest.test_failing_revisions):
        (FailureMapTest.test_new_failures):
        (FailureMapTest.test_new_failures_with_old_revisions):
        (FailureMapTest.test_new_failures_with_more_old_revisions):
        (FailureMapTest.test_tests_failing_for):
        (FailureMapTest.test_failing_tests):
        * Scripts/webkitpy/common/net/layouttestresults_unittest.py:
        (LayoutTestResultsTest.test_set_failure_limit_count):
        * Scripts/webkitpy/common/net/unittestresults_unittest.py:
        (UnitTestResultsTest.test_nostring):
        (UnitTestResultsTest.test_emptystring):
        * Scripts/webkitpy/common/read_checksum_from_png_unittest.py:
        (ReadChecksumFromPngTest.test_read_checksum):
        * Scripts/webkitpy/common/system/deprecated_logging_unittest.py:
        (LoggingTest.assert_log_equals):
        * Scripts/webkitpy/common/system/executive_unittest.py:
        (ScriptErrorTest.test_string_from_args):
        (ScriptErrorTest.test_message_with_output):
        (ExecutiveTest.test_run_command_with_bad_command):
        (ExecutiveTest.test_run_command_with_unicode):
        (ExecutiveTest.serial_test_run_in_parallel):
        * Scripts/webkitpy/common/system/filesystem_mock_unittest.py:
        (MockFileSystemTest.quick_check):
        * Scripts/webkitpy/common/system/filesystem_unittest.py:
        (GenericFileSystemTests.test_glob__trailing_asterisk):
        (GenericFileSystemTests.test_glob__leading_asterisk):
        (GenericFileSystemTests.test_glob__middle_asterisk):
        (GenericFileSystemTests.test_glob__period_is_escaped):
        (RealFileSystemTest.test_chdir):
        (RealFileSystemTest.test_remove_file_with_retry):
        (RealFileSystemTest.test_sep):
        * Scripts/webkitpy/common/system/logtesting.py:
        (TestLogStream.assertMessages):
        * Scripts/webkitpy/common/system/logutils_unittest.py:
        (GetLoggerTest.test_get_logger_in_webkitpy):
        (GetLoggerTest.test_get_logger_not_in_webkitpy):
        * Scripts/webkitpy/common/system/outputcapture.py:
        (OutputCaptureTestCaseBase.assertStdout):
        (OutputCaptureTestCaseBase.assertStderr):
        * Scripts/webkitpy/common/system/path_unittest.py:
        (AbspathTest.test_abspath_to_uri_cygwin):
        (AbspathTest.test_abspath_to_uri_unixy):
        (AbspathTest.test_abspath_to_uri_win):
        (AbspathTest.test_abspath_to_uri_escaping_unixy):
        (AbspathTest.test_abspath_to_uri_escaping_cygwin):
        * Scripts/webkitpy/common/system/platforminfo_unittest.py:
        (TestPlatformInfo.test_real_code):
        (TestPlatformInfo.test_os_name_and_wrappers):
        (TestPlatformInfo.test_os_version):
        (TestPlatformInfo.test_total_bytes_memory):
        * Scripts/webkitpy/common/system/user_unittest.py:
        (UserTest.test_confirm.mock_raw_input):
        (UserTest.test_confirm):
        * Scripts/webkitpy/common/system/zipfileset_unittest.py:
        (ZipFileSetTest.test_open):
        (ZipFileSetTest.test_read):
        * Scripts/webkitpy/common/watchlist/watchlist_unittest.py:
        (WatchListTest.test_filename_definition_no_matches):
        (WatchListTest.test_filename_definition):
        (WatchListTest.test_cc_rules_simple):
        (WatchListTest.test_cc_rules_complex):
        (WatchListTest.test_cc_and_message_rules_complex):
        (WatchListTest.test_cc_and_message_rules_no_matches):
        (WatchListTest.test_added_match):
        (WatchListTest.test_deleted_match):
        (WatchListTest.test_more_and_less_match):
        (WatchListTest.test_complex_match):
        * Scripts/webkitpy/layout_tests/controllers/layout_test_runner_unittest.py:
        (LockCheckingRunner.handle_finished_list):
        (LayoutTestRunnerTests.test_interrupt_if_at_failure_limits):
        (LayoutTestRunnerTests.test_update_summary_with_result):
        (LayoutTestRunnerTests.test_servers_started):
        (SharderTests.assert_shards):
        (SharderTests.test_shard_in_two_has_no_locked_shards):
        (SharderTests.test_shard_in_two_has_no_unlocked_shards):
        (NaturalCompareTest.assert_cmp):
        (KeyCompareTest.assert_cmp):
        * Scripts/webkitpy/layout_tests/models/test_configuration_unittest.py:
        (TestConfigurationTest.test_items):
        (TestConfigurationTest.test_keys):
        (TestConfigurationTest.test_str):
        (TestConfigurationTest.test_repr):
        (TestConfigurationTest.test_hash):
        (TestConfigurationTest.test_eq):
        (TestConfigurationTest.test_values):
        (SpecifierSorterTest.test_init):
        (SpecifierSorterTest.test_add_specifier):
        (SpecifierSorterTest.test_add_macros):
        (SpecifierSorterTest.test_category_priority):
        (SpecifierSorterTest.test_specifier_priority):
        (SpecifierSorterTest.test_sort_specifiers):
        (TestConfigurationConverterTest.test_symmetric_difference):
        (TestConfigurationConverterTest.test_to_config_set):
        (TestConfigurationConverterTest.test_macro_expansion):
        (TestConfigurationConverterTest.test_to_specifier_lists):
        (TestConfigurationConverterTest.test_macro_collapsing):
        (TestConfigurationConverterTest.test_converter_macro_collapsing):
        (TestConfigurationConverterTest.test_specifier_converter_access):
        * Scripts/webkitpy/layout_tests/models/test_expectations_unittest.py:
        (assert_exp):
        (MiscTests.test_result_was_expected):
        (MiscTests.test_remove_pixel_failures):
        (MiscTests.test_suffixes_for_expectations):
        (MiscTests.test_get_expectations_string):
        (SkippedTests.check):
        (ExpectationSyntaxTests.assert_tokenize_exp):
        (SemanticTests.test_bad_bugid):
        (SemanticTests.test_missing_bugid):
        (TestExpectationSerializationTests.test_reconstitute_only_these):
        * Scripts/webkitpy/layout_tests/models/test_failures_unittest.py:
        (TestFailuresTest.test_crashes):
        * Scripts/webkitpy/layout_tests/port/base_unittest.py:
        (PortTest.test_nonexistant_expectations):
        (PortTest.test_additional_expectations):
        * Scripts/webkitpy/layout_tests/port/builders_unittest.py:
        (BuildersTest.test_path_from_name):
        * Scripts/webkitpy/layout_tests/port/chromium_android_unittest.py:
        (ChromiumAndroidPortTest.test_attributes):
        (ChromiumAndroidPortTest.test_default_timeout_ms):
        (ChromiumAndroidPortTest.test_get_devices_one_device):
        (ChromiumAndroidPortTest.test_get_devices_two_devices):
        (ChromiumAndroidPortTest.test_get_device_serial_one_device):
        (ChromiumAndroidPortTest.test_get_device_serial_two_devices):
        (ChromiumAndroidPortTest.test_must_require_http_server):
        (ChromiumAndroidDriverTest.test_get_last_stacktrace):
        (ChromiumAndroidDriverTest.test_get_crash_log):
        (ChromiumAndroidDriverTest.test_cmd_line):
        (ChromiumAndroidDriverTest.test_read_prompt):
        (ChromiumAndroidDriverTest.test_command_from_driver_input):
        (ChromiumAndroidDriverTwoDriversTest.test_two_drivers):
        (ChromiumAndroidTwoPortsTest.test_options_with_two_ports):
        * Scripts/webkitpy/layout_tests/port/chromium_linux_unittest.py:
        (ChromiumLinuxPortTest.assert_architecture):
        (ChromiumLinuxPortTest.test_determine_architecture_fails):
        (ChromiumLinuxPortTest.test_path_to_image_diff):
        * Scripts/webkitpy/layout_tests/port/chromium_mac_unittest.py:
        (ChromiumMacPortTest.assert_name):
        (ChromiumMacPortTest.test_baseline_path):
        (ChromiumMacPortTest.test_path_to_image_diff):
        * Scripts/webkitpy/layout_tests/port/chromium_port_testcase.py:
        (ChromiumPortTestCase.test_default_max_locked_shards):
        (ChromiumPortTestCase.test_default_timeout_ms):
        (ChromiumPortTestCase.test_default_pixel_tests):
        (ChromiumPortTestCase.test_all_test_configurations):
        (ChromiumPortTestCase.test_default_configuration):
        (ChromiumPortTestCase.test_diff_image):
        (ChromiumPortTestCase.test_diff_image_crashed):
        (ChromiumPortTestCase.test_expectations_files):
        * Scripts/webkitpy/layout_tests/port/chromium_win_unittest.py:
        (ChromiumWinTest.test_setup_environ_for_server_cygpath):
        (ChromiumWinTest.assert_name):
        (ChromiumWinTest.test_baseline_path):
        (ChromiumWinTest.test_path_to_image_diff):
        * Scripts/webkitpy/layout_tests/port/driver_unittest.py:
        (DriverTest.test_read_block):
        (DriverTest.test_read_binary_block):
        (DriverTest.test_read_base64_block):
        (DriverTest.test_no_timeout):
        (DriverTest.test_check_for_driver_crash.assert_crash):
        (DriverTest.test_creating_a_port_does_not_write_to_the_filesystem):
        * Scripts/webkitpy/layout_tests/port/factory_unittest.py:
        (FactoryTest.test_get_from_builder_name):
        * Scripts/webkitpy/layout_tests/port/gtk_unittest.py:
        (GtkPortTest.test_default_timeout_ms):
        * Scripts/webkitpy/layout_tests/port/http_lock_unittest.py:
        (HttpLockTest.test_current_lock_pid):
        * Scripts/webkitpy/layout_tests/port/image_diff_unittest.py:
        (TestImageDiffer.test_diff_image_failed):
        (TestImageDiffer.test_diff_image_passed):
        * Scripts/webkitpy/layout_tests/port/leakdetector_unittest.py:
        (LeakDetectorTest.test_leaks_args):
        (test_parse_leaks_output):
        (test_leaks_files_in_directory):
        (test_count_total_leaks):
        * Scripts/webkitpy/layout_tests/port/mac_unittest.py:
        (MacTest.test_default_timeout_ms):
        (assert_name):
        (test_setup_environ_for_server):
        (_assert_search_path):
        (test_32bit):
        (test_64bit):
        * Scripts/webkitpy/layout_tests/port/mock_drt_unittest.py:
        (MockTestShellTest.test_pixeltest__fails):
        (MockTestShellTest.test_test_shell_parse_options):
        * Scripts/webkitpy/layout_tests/port/port_testcase.py:
        (PortTestCase.test_default_max_locked_shards):
        (PortTestCase.test_default_timeout_ms):
        (PortTestCase.test_default_pixel_tests):
        (PortTestCase.test_diff_image):
        (PortTestCase.test_diff_image_crashed):
        (PortTestCase.test_get_crash_log):
        (PortTestCase.assert_build_path):
        (PortTestCase.test_expectations_ordering):
        (_assert_config_file_for_platform):
        (test_path_to_apache_config_file):
        (test_additional_platform_directory):
        * Scripts/webkitpy/layout_tests/port/qt_unittest.py:
        (QtPortTest._assert_search_path):
        (QtPortTest._assert_expectations_files):
        (QtPortTest.test_setup_environ_for_server):
        * Scripts/webkitpy/layout_tests/port/server_process_unittest.py:
        (TestServerProcess.test_basic):
        (TestServerProcess.test_broken_pipe):
        * Scripts/webkitpy/layout_tests/port/win_unittest.py:
        (WinPortTest._assert_search_path):
        (WinPortTest._assert_version):
        (WinPortTest.test_runtime_feature_list):
        (WinPortTest.test_expectations_files):
        * Scripts/webkitpy/layout_tests/run_webkit_tests_integrationtest.py:
        (LintTest.test_all_configurations):
        (MainTest.test_all):
        (MainTest.test_repeat_each):
        (MainTest.test_skipped_flag):
        (MainTest.test_iterations):
        (MainTest.test_run_chunk):
        (MainTest.test_run_part):
        (MainTest.test_run_singly):
        (MainTest.test_run_singly_actually_runs_tests):
        (MainTest.test_single_file):
        (MainTest.test_single_file_with_prefix):
        (MainTest.test_single_skipped_file):
        (MainTest.test_stderr_is_saved):
        (MainTest.test_test_list):
        (MainTest.test_test_list_with_prefix):
        (MainTest.test_missing_and_unexpected_results):
        (MainTest.test_pixel_test_directories):
        (MainTest.test_missing_and_unexpected_results_with_custom_exit_code):
        (MainTest.test_crash_log):
        (MainTest.test_web_process_crash_log):
        (MainTest.test_exit_after_n_failures_upload):
        (MainTest.test_exit_after_n_failures):
        (MainTest.test_exit_after_n_crashes):
        (MainTest.test_retrying_and_flaky_tests):
        (MainTest.test_run_order__inline):
        (MainTest.test_reftest_run):
        (MainTest.test_reftest_run_reftests_if_pixel_tests_are_disabled):
        (MainTest.test_reftest_skip_reftests_if_no_ref_tests):
        (MainTest.test_reftest_expected_html_should_be_ignored):
        (MainTest.test_reftest_driver_should_run_expected_html):
        (MainTest.test_reftest_driver_should_run_expected_mismatch_html):
        (MainTest.test_output_diffs):
        (MainTest.test_unsupported_platform):
        (EndToEndTest.test_end_to_end):
        (RebaselineTest.test_reset_results):
        (RebaselineTest.test_missing_results):
        (RebaselineTest.test_new_baseline):
        * Scripts/webkitpy/layout_tests/servers/http_server_integrationtest.py:
        (BaseTest.integration_test_server__normal):
        (BaseTest.integration_test_server__fails):
        (BaseTest.integration_test_port_and_root):
        * Scripts/webkitpy/layout_tests/servers/http_server_unittest.py:
        (TestHttpServer.test_start_cmd):
        * Scripts/webkitpy/layout_tests/views/metered_stream_unittest.py:
        (RegularTest.test_logging_not_included):
        (RegularTest._basic):
        (RegularTest.test_basic):
        (RegularTest.test_log_after_update):
        (RegularTest.test_log_args):
        (TtyTest.test_basic):
        (TtyTest.test_log_after_update):
        (VerboseTest.test_basic):
        (VerboseTest.test_log_after_update):
        (VerboseTest.test_log_args):
        * Scripts/webkitpy/layout_tests/views/printing_unittest.py:
        (Testprinter.assertWritten):
        (test_test_status_line):
        * Scripts/webkitpy/performance_tests/perftestsrunner_unittest.py:
        (MainTest.assertWritten):
        * Scripts/webkitpy/style/checker_unittest.py:
        (GlobalVariablesTest.test_webkit_base_filter_rules):
        (CheckerDispatcherSkipTest._assert_should_skip_without_warning):
        (CheckerDispatcherCarriageReturnTest.test_should_check_and_strip_carriage_returns):
        (CheckerDispatcherDispatchTest.assert_checker):
        (CheckerDispatcherDispatchTest.test_changelog_paths):
        (CheckerDispatcherDispatchTest.test_cpp_paths):
        (CheckerDispatcherDispatchTest.test_json_paths):
        (CheckerDispatcherDispatchTest.test_python_paths):
        (CheckerDispatcherDispatchTest.test_text_paths):
        (CheckerDispatcherDispatchTest.test_xml_paths):
        (StyleProcessorConfigurationTest.test_init):
        (StyleProcessorConfigurationTest.test_write_style_error_emacs):
        (StyleProcessorConfigurationTest.test_write_style_error_vs7):
        (StyleProcessor_EndToEndTest.test_init):
        (StyleProcessor_EndToEndTest.test_process):
        (StyleProcessor_CodeCoverageTest.test_process__checker_dispatched):
        * Scripts/webkitpy/style/checkers/changelog_unittest.py:
        (ChangeLogCheckerTest.assert_error.handle_style_error):
        (ChangeLogCheckerTest.test_init):
        * Scripts/webkitpy/style/checkers/common_unittest.py:
        (CarriageReturnCheckerTest.assert_carriage_return):
        (TabCheckerTest.assert_tab):
        * Scripts/webkitpy/style/checkers/cpp_unittest.py:
        (CppFunctionsTest.test_convert_to_lower_with_underscores):
        (CppFunctionsTest.test_create_acronym):
        (CppFunctionsTest.test_parameter):
        (CppFunctionsTest.test_single_line_view):
        (CppFunctionsTest.test_create_skeleton_parameters):
        (CppFunctionsTest.test_find_parameter_name_index):
        (CppFunctionsTest.test_parameter_list):
        (CppFunctionsTest.test_check_parameter_against_text):
        (CppStyleTestBase.perform_lint):
        (CppStyleTestBase.assert_lint):
        (CppStyleTestBase.assert_lint_one_of_many_errors_re):
        (CppStyleTestBase.assert_multi_line_lint):
        (CppStyleTestBase.assert_language_rules_check):
        (CppStyleTestBase.assert_include_what_you_use):
        (CppStyleTestBase.assert_blank_lines_check):
        (CppStyleTestBase.assert_positions_equal):
        (FunctionDetectionTest.perform_function_detection):
        (CppStyleTest.test_get_line_width):
        (CppStyleTest.test_find_next_multi_line_comment_start):
        (CppStyleTest.test_find_next_multi_line_comment_end):
        (CppStyleTest.test_remove_multi_line_comments_from_range):
        (CppStyleTest.test_position):
        (CppStyleTest.test_rfind_in_lines):
        (CppStyleTest.test_close_expression):
        (CppStyleTest.test_include_what_you_use_no_implementation_files):
        (CppStyleTest.test_include_what_you_use):
        (CppStyleTest.test_files_belong_to_same_module):
        (CppStyleTest.test_cleanse_line):
        (CppStyleTest.test_multiline_strings):
        (CppStyleTest.test_newline_at_eof.do_test):
        (CppStyleTest.test_invalid_utf8.do_test):
        (CppStyleTest.test_is_blank_line):
        (CppStyleTest.test_allow_blank_line_before_closing_namespace):
        (CppStyleTest.test_allow_blank_line_before_if_else_chain):
        (CppStyleTest.test_else_on_same_line_as_closing_braces):
        (CppStyleTest.test_build_header_guard):
        (CppStyleTest.test_legal_copyright):
        (CleansedLinesTest.test_init):
        (CleansedLinesTest.test_init_empty):
        (CleansedLinesTest.test_collapse_strings):
        (CheckForFunctionLengthsTest.assert_function_lengths_check):
        (PassPtrTest.assert_pass_ptr_check):
        (LeakyPatternTest.assert_leaky_pattern_check):
        (WebKitStyleTest.test_parameter_names):
        (WebKitStyleTest.test_webkit_export_check):
        (CppCheckerTest.test_init):
        * Scripts/webkitpy/style/checkers/jsonchecker_unittest.py:
        (JSONCheckerTest.assert_error.handle_style_error):
        (JSONCheckerTest.test_init):
        * Scripts/webkitpy/style/checkers/png_unittest.py:
        (PNGCheckerTest.test_init):
        (PNGCheckerTest.test_check):
        * Scripts/webkitpy/style/checkers/python_unittest.py:
        (PythonCheckerTest.test_init):
        (PythonCheckerTest.test_check):
        * Scripts/webkitpy/style/checkers/test_expectations_unittest.py:
        (TestExpectationsTestCase._expect_port_for_expectations_path):
        (TestExpectationsTestCase.assert_lines_lint):
        * Scripts/webkitpy/style/checkers/text_unittest.py:
        (TextStyleTestCase.assertNoError):
        (TextStyleTestCase.assertError.error_for_test):
        (TextStyleTestCase.assertError):
        (TextCheckerTest.test_init):
        * Scripts/webkitpy/style/checkers/watchlist_unittest.py:
        (WatchListTest.test_basic_error_message.handle_style_error):
        (WatchListTest):
        * Scripts/webkitpy/style/checkers/xcodeproj_unittest.py:
        (XcodeProjectFileCheckerTest.assert_error):
        * Scripts/webkitpy/style/checkers/xml_unittest.py:
        (XMLCheckerTest.assert_error.handle_style_error):
        (XMLCheckerTest.test_init):
        * Scripts/webkitpy/style/error_handlers_unittest.py:
        (DefaultStyleErrorHandlerTest._check_initialized):
        (DefaultStyleErrorHandlerTest.test_non_reportable_error):
        (DefaultStyleErrorHandlerTest.test_max_reports_per_category):
        (DefaultStyleErrorHandlerTest.test_line_numbers):
        * Scripts/webkitpy/style/filereader_unittest.py:
        (TextFileReaderTest._assert_file_reader):
        (TextFileReaderTest.test_process_file__does_not_exist):
        (TextFileReaderTest.test_count_delete_only_file):
        * Scripts/webkitpy/style/filter_unittest.py:
        (CategoryFilterTest.test_init):
        (CategoryFilterTest.test_init_default_arguments):
        (CategoryFilterTest.test_str):
        (FilterConfigurationTest.test_init):
        (FilterConfigurationTest.test_default_arguments):
        * Scripts/webkitpy/style/main_unittest.py:
        (ChangeDirectoryTest._assert_result):
        * Scripts/webkitpy/style/optparser_unittest.py:
        (ArgumentPrinterTest.test_to_flag_string):
        (ArgumentParserTest.test_parse_default_arguments):
        (ArgumentParserTest.test_parse_explicit_arguments):
        (ArgumentParserTest.test_parse_files):
        (CommandOptionValuesTest.test_init):
        * Scripts/webkitpy/style/patchreader_unittest.py:
        (PatchReaderTest._assert_checked):
        * Scripts/webkitpy/test/finder_unittest.py:
        (FinderTest.test_additional_system_paths):
        (FinderTest.test_to_module):
        (FinderTest.check_names):
        * Scripts/webkitpy/test/main_unittest.py:
        (TesterTest.test_individual_names_are_not_run_twice):
        (TesterTest.test_integration_tests_are_not_found_by_default):
        (TesterTest.test_integration_tests_are_found):
        (TesterTest.integration_test_coverage_works):
        * Scripts/webkitpy/test/runner_unittest.py:
        (RunnerTest.test_run):
        * Scripts/webkitpy/tool/bot/commitqueuetask_unittest.py:
        (_expect_validate):
        * Scripts/webkitpy/tool/bot/expectedfailures_unittest.py:
        (ExpectedFailuresTest._assert_can_trust):
        (ExpectedFailuresTest.test_unexpected_failures_observed):
        (ExpectedFailuresTest.test_unexpected_failures_observed_when_tree_is_hosed):
        * Scripts/webkitpy/tool/bot/feeders_unittest.py:
        (test_patches_with_acceptable_review_flag):
        * Scripts/webkitpy/tool/bot/irc_command_unittest.py:
        (IRCCommandTest.test_whois):
        (IRCCommandTest.test_create_bug):
        (IRCCommandTest.test_roll_chromium_deps):
        (IRCCommandTest.test_rollout):
        * Scripts/webkitpy/tool/bot/layouttestresultsreader_unittest.py:
        (LayoutTestResultsReaderTest.test_missing_layout_test_results):
        (test_missing_unit_test_results_path):
        (test_layout_test_results):
        * Scripts/webkitpy/tool/bot/queueengine_unittest.py:
        (LoggingDelegate.process_work_item):
        (LoggingDelegate.handle_unexpected_error):
        (QueueEngineTest.test_trivial):
        (QueueEngineTest.test_unexpected_error):
        (QueueEngineTest.test_handled_error):
        (QueueEngineTest._test_terminating_queue):
        * Scripts/webkitpy/tool/commands/openbugs_unittest.py:
        (OpenBugsTest.test_find_bugs_in_string):
        * Scripts/webkitpy/tool/commands/queries_unittest.py:
        (FailureReasonTest.test_blame_line_for_revision):
        (PrintExpectationsTest.run_test):
        (PrintBaselinesTest.test_basic):
        (PrintBaselinesTest.test_multiple):
        (PrintBaselinesTest.test_csv):
        * Scripts/webkitpy/tool/commands/queues_unittest.py:
        (AbstractQueueTest.test_log_directory):
        (AbstractPatchQueueTest.test_next_patch):
        (test_auto_retry):
        * Scripts/webkitpy/tool/commands/rebaseline_unittest.py:
        (test_rebaseline_updates_expectations_file):
        (test_rebaseline_does_not_include_overrides):
        (test_rebaseline_test):
        (test_rebaseline_test_with_results_directory):
        (test_rebaseline_test_and_print_scm_changes):
        (test_rebaseline_and_copy_test):
        (test_rebaseline_and_copy_test_no_existing_result):
        (test_rebaseline_and_copy_test_with_lion_result):
        (test_rebaseline_and_copy_no_overwrite_test):
        (test_rebaseline_test_internal_with_move_overwritten_baselines_to):
        (TestRebaselineJson.test_rebaseline_all):
        (TestRebaselineJson.test_rebaseline_debug):
        (TestRebaselineJson.test_move_overwritten):
        (TestRebaselineJson.test_no_optimize):
        (TestRebaselineJson.test_results_directory):
        (TestRebaseline.test_rebaseline):
        (TestRebaselineExpectations.test_rebaseline_expectations_noop):
        (TestRebaselineExpectations.disabled_test_overrides_are_included_correctly):
        (TestAnalyzeBaselines.test_default):
        (TestAnalyzeBaselines.test_missing_baselines):
        * Scripts/webkitpy/tool/commands/roll_unittest.py:
        (PostRollCommandsTest.test_prepare_state):
        * Scripts/webkitpy/tool/servers/gardeningserver_unittest.py:
        (BuildCoverageExtrapolatorTest.test_extrapolate):
        * Scripts/webkitpy/tool/steps/addsvnmimetypeforpng_unittest.py:
        (AddSvnMimetypeForPngTest.test_run):
        * Scripts/webkitpy/tool/steps/preparechangelog_unittest.py:
        (PrepareChangeLogTest.test_ensure_bug_url):
        * Scripts/webkitpy/tool/steps/preparechangelogforrevert_unittest.py:
        (_assert_message_for_revert_output):
        * TestResultServer/model/jsonresults_unittest.py:
        (JsonResultsTest._test_merge):
        (JsonResultsTest._test_get_test_list):

2012-11-14  JÃ¡nos Badics  <jbadics@inf.u-szeged.hu>

        [Qt][ARM] Fix 'nullptr' is a keyword in C++11 [-Wc++0x-compat] warning
        https://bugs.webkit.org/show_bug.cgi?id=102083

        Reviewed by Csaba OsztrogonÃ¡c.

        Modified compiler name regex in condition that tests if -std=c++0x, c++11,
        gnu++0x or gnu++11 are enabled in order to match linux-arm-gnueabi-g++ too,
        thus enabling -Wno-c++0x-compat also on ARM compiler.

        * qmake/mkspecs/features/unix/default_post.prf:

2012-11-14  Thiago Marcos P. Santos  <thiago.santos@intel.com>

        REGRESSION(r133757): Causing webkitpy unit tests to fail
        https://bugs.webkit.org/show_bug.cgi?id=101444

        Reviewed by Csaba OsztrogonÃ¡c.

        Updated the bot name on the unit tests.

        * Scripts/webkitpy/tool/commands/rebaseline_unittest.py:
        (TestRebaselineTest.test_baseline_directory):

2012-11-14  Byungwoo Lee  <bw80.lee@samsung.com>

        [EFL][WK2] Rename variables, structures and functions of the MiniBrowser.
        https://bugs.webkit.org/show_bug.cgi?id=101517

        Reviewed by Gyuyoung Kim.

        Rename variables, structures and functions of the MiniBrowser
        for the naming consistency.

        1) Browser_Window* {app_data|browser_window|window} -> window

        2) Browser_Window::webview -> Browser_Window::ewk_view
             The webkit API functions are ewk_view_xxx not webview_xxx.
             So using ewk_view will be better than webview.

        3) Browser_Window::window -> Browser_Window::elm_window
             The name is changed to be distinguished with 'Browser_Window *window'

        4) browser_{window|view}_find() -> window_find_with_{elm_window|ewk_view}()
             This is changed because the name of the function can be confused.
             Currently, browser_window_find() returns Browser_Window*. And
             browser_view_find() also returns Browser_Window*.

        5) FileSelectorData -> File_Selector_Data / AuthData -> Auth_Data
             The type definition is moved to the top of the source file
             and the name is changed to follow EFL style.

        * MiniBrowser/efl/main.c:
        (miniBrowserViewSmartClass):
        (_Browser_Window):
        (_File_Selector_Data):
        (_Auth_Data):
        (window_find_with_ewk_view):
        (window_free):
        (on_key_down):
        (view_focus_set):
        (on_mouse_down):
        (title_set):
        (on_title_changed):
        (on_url_changed):
        (on_back_forward_list_changed):
        (on_new_window):
        (on_close_window):
        (on_progress):
        (on_error):
        (on_download_request):
        (close_file_picker):
        (on_filepicker_parent_deletion):
        (on_filepicker_deletion):
        (on_fileselector_done):
        (on_file_chooser_request):
        (on_download_finished):
        (on_download_failed):
        (on_favicon_received):
        (on_view_icon_changed):
        (on_url_bar_activated):
        (on_url_bar_clicked):
        (on_back_button_clicked):
        (on_forward_button_clicked):
        (on_refresh_button_clicked):
        (on_javascript_alert):
        (on_javascript_confirm):
        (on_javascript_prompt):
        (on_window_geometry_get):
        (on_window_geometry_set):
        (on_fullscreen_deny):
        (on_fullscreen_enter):
        (on_fullscreen_exit):
        (auth_popup_close):
        (on_auth_cancel):
        (on_auth_ok):
        (on_authentication_request):
        (on_tooltip_text_set):
        (on_tooltip_text_unset):
        (on_home_button_clicked):
        (on_window_deletion):
        (window_create):

2012-11-14  Thiago Marcos P. Santos  <thiago.santos@intel.com>

        webkitpy: Update the EFL list of bots
        https://bugs.webkit.org/show_bug.cgi?id=102121

        Reviewed by Kenneth Rohde Christiansen.

        Update the EFL bots so we can use garden-o-matic.

        * Scripts/webkitpy/layout_tests/port/builders.py:

2012-11-13  Yael Aharon  <yael.aharon@intel.com>

        [EFL][WK2] New window size should consult the window attributes
        https://bugs.webkit.org/show_bug.cgi?id=102122

        Reviewed by Kenneth Rohde Christiansen.

        Take into account the size that was specified in window.open
        when creating a new window. This avoids ugly flashing on the screen.

        * MiniBrowser/efl/main.c:
        (on_key_down):
        (on_new_window):
        (window_create):
        (elm_main):

2012-11-13  Dana Jansens  <danakj@chromium.org>

        [chromium] Plumb WebCompositorSupport settings through WebLayerTreeSettings as well, in preparation for removing the settings from WebCompositorSupport
        https://bugs.webkit.org/show_bug.cgi?id=102146

        Reviewed by James Robinson.

        Pass settings that go through WebCompositorSupport also through
        WebLayerTreeSettings. When the compositor starts using those instead,
        we can remove the callers to the WebCompositorSupport setters.

        * DumpRenderTree/chromium/TestShell.cpp:
        (TestShell::TestShell):
        (TestShell::resetWebSettings):
        (TestShell::setPerTilePaintingEnabled):
        (TestShell::setAcceleratedAnimationEnabled):
        * DumpRenderTree/chromium/TestShell.h:
        (TestShell):
        * DumpRenderTree/chromium/WebPreferences.cpp:
        (WebPreferences::applyTo):
        * DumpRenderTree/chromium/WebPreferences.h:
        (WebPreferences):

2012-11-13  Kentaro Hara  <haraken@chromium.org>

        Unreviewed, rolling out r134503.
        http://trac.webkit.org/changeset/134503

        Roll out a patch that was landed just to investigate svn
        trouble

        * Scripts/webkitpy/common/config/committers.py:

2012-11-13  Kentaro Hara  <haraken@chromium.org>

        Unreviewed. Investigating svn trouble. Test commit.

        * Scripts/webkitpy/common/config/committers.py:

2012-11-13  Dimitri Glazkov  <dglazkov@chromium.org>

        Unreviewed, rolling out r134446.
        http://trac.webkit.org/changeset/134446
        https://bugs.webkit.org/show_bug.cgi?id=101968

        Need to try a different strategy for landing a two-sided patch
        (3/3).

        * DumpRenderTree/chromium/TestShell.cpp:
        (TestShell::TestShell):
        (TestShell::resetWebSettings):
        (TestShell::setPerTilePaintingEnabled):
        (TestShell::setAcceleratedAnimationEnabled):
        * DumpRenderTree/chromium/TestShell.h:
        (TestShell):
        * DumpRenderTree/chromium/WebPreferences.cpp:
        (WebPreferences::applyTo):
        * DumpRenderTree/chromium/WebPreferences.h:
        (WebPreferences):

2012-11-13  Dimitri Glazkov  <dglazkov@chromium.org>

        Unreviewed, rolling out r134449.
        http://trac.webkit.org/changeset/134449
        https://bugs.webkit.org/show_bug.cgi?id=102076

        Re-rolling in the patch, it was innocent.

        * TestWebKitAPI/PlatformEfl.cmake:

2012-11-13  Dimitri Glazkov  <dglazkov@chromium.org>

        Unreviewed, rolling out r134424.
        http://trac.webkit.org/changeset/134424
        https://bugs.webkit.org/show_bug.cgi?id=102076

        Made fast/dom/Window/open-window-min-size.html crash.

        * TestWebKitAPI/PlatformEfl.cmake:

2012-11-12  Dana Jansens  <danakj@chromium.org>

        [chromium] Remove the WebCompositorSupport methods for changing settings, plumb everything through WebLayerTreeSettings
        https://bugs.webkit.org/show_bug.cgi?id=101968

        Reviewed by James Robinson.

        * DumpRenderTree/chromium/TestShell.cpp:
        (TestShell::TestShell):
        (TestShell::resetWebSettings):
        * DumpRenderTree/chromium/TestShell.h:
        (TestShell::setPerTilePaintingEnabled):
        (TestShell::setAcceleratedAnimationEnabled):
        (TestShell):
        * DumpRenderTree/chromium/WebPreferences.cpp:
        (WebPreferences::applyTo):
        * DumpRenderTree/chromium/WebPreferences.h:
        (WebPreferences):

2012-11-13  Dirk Pranke  <dpranke@chromium.org>

        Fix webkitpy issues arising from a partially-installed pylint.
        Unreviewed, build fix.

        This patch ensures that we will re-install the pylint and logilab
        packages if any of them are missing, not just the pylint package.

        * Scripts/webkitpy/thirdparty/__init__.py:
        (AutoinstallImportHook._install_pylint):

2012-11-13  No'am Rosenthal  <noam.rosenthal@nokia.com>

        Unreviewed, adding my new email address to committers.py and watchlist.

        * Scripts/webkitpy/common/config/committers.py:
        * Scripts/webkitpy/common/config/watchlist:

2012-11-13  Raphael Kubo da Costa  <raphael.kubo.da.costa@intel.com>

        [CMake] Incorrect dependency calculation when generating forwarding headers
        https://bugs.webkit.org/show_bug.cgi?id=102076

        Reviewed by Kenneth Rohde Christiansen.

        Explicitly call generate-forwarding-headers.pl on ${WEBKIT2_DIR} as
        well, since some dependencies pulled in via the WebKit2/WebKit2_C.h
        include in config.h are only generated from there.

        This is a bit redundant since this is also done in WebKit2's
        PlatformEfl.cmake, however the WTF and WebCore API tests do not depend
        on WebKit2 so the script may not have been called when these tests are
        being built.

        * TestWebKitAPI/PlatformEfl.cmake:

2012-11-13  Zeno Albisser  <zeno@webkit.org>

        Unreviewed: Adding watchlist definition for CoordinatedGraphics.

        * Scripts/webkitpy/common/config/watchlist:

2012-11-13  Hugo Parente Lima  <hugo.lima@openbossa.org>

        [cmake] Do not use GLOB to add WTR IDL files to buildsystem.
        https://bugs.webkit.org/show_bug.cgi?id=101785

        Reviewed by Caio Marcelo de Oliveira Filho.

        Using *.idl makes impossible to add IDL files depending on compiler flags,
        like a possible GamepadController.idl file found on Chromium.

        * WebKitTestRunner/CMakeLists.txt:

2012-11-13  Jochen Eisinger  <jochen@chromium.org>

        [chromium] TestRunner should depend on webkit_wtf_support instead of compiling the files itself
        https://bugs.webkit.org/show_bug.cgi?id=102075

        Reviewed by Pavel Feldman.

        * DumpRenderTree/DumpRenderTree.gyp/DumpRenderTree.gyp:

2012-11-13  Raphael Kubo da Costa  <raphael.kubo.da.costa@intel.com>

        [EFL][DRT] Remove extra layoutFrame() call when preparing to send an event via EventSender.
        https://bugs.webkit.org/show_bug.cgi?id=102074

        Reviewed by Kenneth Rohde Christiansen.

        * DumpRenderTree/efl/EventSender.cpp:
        (feedMouseEvent): Do not call DumpRenderTreeSupportEfl::layoutFrame()
        when sending an event, as it causes additional repaints that create
        wrong pixel results for tests such as
        fast/repaint/overflow-auto-in-overflow-auto-scrolled.html.

2012-11-13  Csaba OsztrogonÃ¡c  <ossy@webkit.org>

        [Qt] Enable Mutation observer
        https://bugs.webkit.org/show_bug.cgi?id=102066

        Reviewed by Pavel Feldman.

        * qmake/mkspecs/features/features.pri:

2012-11-13  Xiaobo Wang  <xbwang@torchmobile.com.cn>

        [BlackBerry] DRT - platform/blackberry/editing/text-iterator/findString-markers.html failed
        https://bugs.webkit.org/show_bug.cgi?id=102056

        Reviewed by Rob Buis.

        RIM PR 235836

        TestRunner::findString() was changed to call Page::findString() instead
        of WebPage::findNextString(). Page::findString() doesn't update
        TextMatch markers.
        Work-around by calling both Page::findString() and WebPage::findNextString().

        * DumpRenderTree/blackberry/TestRunnerBlackBerry.cpp:
        (TestRunner::findString):

2012-11-12  Jochen Eisinger  <jochen@chromium.org>

        Add the TestRunner public API to the ChromiumPublicApi watchlist, and introduce an entry for ChromiumTestRunner
        https://bugs.webkit.org/show_bug.cgi?id=101957

        Reviewed by Adam Barth.

        Chromium now also depends on the TestRunner public API, and as such, similar rules as for the Chromium WebKit API should apply.

        * Scripts/webkitpy/common/config/watchlist:

2012-11-13  Jochen Eisinger  <jochen@chromium.org>

        [chromium] move tracking of damaged regions from WebViewHost to WebTestProxy
        https://bugs.webkit.org/show_bug.cgi?id=101927

        Reviewed by Adam Barth.

        This will allow for sharing the code with content_shell

        * DumpRenderTree/chromium/DRTTestRunner.cpp:
        (DRTTestRunner::display):
        * DumpRenderTree/chromium/TestRunner/public/WebTestProxy.h:
        (WebKit):
        (WebTestProxyBase):
        (WebTestRunner::WebTestProxy::didInvalidateRect):
        (WebTestRunner::WebTestProxy::didScrollRect):
        (WebTestRunner::WebTestProxy::scheduleComposite):
        (WebTestRunner::WebTestProxy::scheduleAnimation):
        (WebTestRunner::WebTestProxy::setWindowRect):
        (WebTestRunner::WebTestProxy::show):
        (WebTestRunner::WebTestProxy::didAutoResize):
        (WebTestRunner::WebTestProxy::postAccessibilityNotification):
        * DumpRenderTree/chromium/TestRunner/src/WebTestProxy.cpp:
        (WebTestRunner::WebTestProxyBase::setPaintRect):
        (WebTestRunner):
        (WebTestRunner::WebTestProxyBase::paintRect):
        (WebTestRunner::WebTestProxyBase::didInvalidateRect):
        (WebTestRunner::WebTestProxyBase::didScrollRect):
        (WebTestRunner::WebTestProxyBase::scheduleComposite):
        (WebTestRunner::WebTestProxyBase::scheduleAnimation):
        (WebTestRunner::WebTestProxyBase::show):
        (WebTestRunner::WebTestProxyBase::setWindowRect):
        (WebTestRunner::WebTestProxyBase::didAutoResize):
        (WebTestRunner::WebTestProxyBase::postAccessibilityNotification):
        * DumpRenderTree/chromium/TestShell.cpp:
        (TestShell::createNewWindow):
        * DumpRenderTree/chromium/WebViewHost.cpp:
        (WebViewHost::scheduleAnimation):
        (WebViewHost::show):
        (WebViewHost::setWindowRect):
        (WebViewHost::WebViewHost):
        (WebViewHost::proxy):
        (WebViewHost::setProxy):
        (WebViewHost::reset):
        (WebViewHost::paintInvalidatedRegion):
        * DumpRenderTree/chromium/WebViewHost.h:
        (WebViewHost):

2012-11-12  Dirk Pranke  <dpranke@chromium.org>

        webkitpy: clean up lint errors, part 1
        https://bugs.webkit.org/show_bug.cgi?id=102024

        Reviewed by Adam Barth.

        This patch cleans up a lot of miscellaneous minor lint errors that
        apparently aren't caught by unit tests, and suppresses a few
        false positives.

        Also, this patch removes the garden-o-matic "rollout" entry point
        since it's no longer being used by the frontend (rather than
        fix it to not generate lint errors).

        * Scripts/webkitpy/common/system/executive_mock.py:
        (MockExecutive2.run_command):
        * Scripts/webkitpy/common/system/filesystem_mock.py:
        (MockFileSystem.copyfile):
        * Scripts/webkitpy/layout_tests/controllers/manager.py:
        (Manager._http_tests):
        * Scripts/webkitpy/layout_tests/port/apple.py:
        (ApplePort):
        * Scripts/webkitpy/layout_tests/port/base.py:
        (Port.reference_files):
        * Scripts/webkitpy/layout_tests/port/chromium.py:
        (ChromiumPort):
        * Scripts/webkitpy/layout_tests/port/chromium_android.py:
        (ChromiumAndroidDriver._teardown_performance):
        * Scripts/webkitpy/layout_tests/port/chromium_port_testcase.py:
        (ChromiumPortTestCase.TestAndroidPort.__init__):
        (ChromiumPortTestCase.test_default_configuration):
        * Scripts/webkitpy/layout_tests/port/port_testcase.py:
        (PortTestCase):
        (PortTestCase.test_driver_cmd_line):
        (PortTestCase.test_expectations_ordering):
        * Scripts/webkitpy/layout_tests/servers/http_server_base.py:
        (HttpServerBase._check_that_all_ports_are_available):
        * Scripts/webkitpy/style/checkers/python.py:
        (Pylinter):
        * Scripts/webkitpy/tool/commands/gardenomatic.py:
        (GardenOMatic.__init__):
        * Scripts/webkitpy/tool/commands/queues.py:
        (CommitQueue):
        * Scripts/webkitpy/tool/servers/gardeningserver.py:
        (GardeningHTTPRequestHandler):
        (GardeningHTTPRequestHandler.localresult):

2012-11-12  Dirk Pranke  <dpranke@chromium.org>

        webkitpy: clean up lint errors, part 2
        https://bugs.webkit.org/show_bug.cgi?id=102029

        Reviewed by Adam Barth.

        This cleans up the remaining lint errors in webkitpy with four exceptions:
        1) we don't lint thirdparty/ autoinstalled code, obviously
        2) there's an intentional error in the unit tests for pylint itself
        3) the implementation of webkit-patch optimize-expectations has
        an error but I think we can and should just remove that command as well.
        4) I have not yet linted the test code

        * Scripts/webkitpy/common/newstringio.py:
        * Scripts/webkitpy/common/checkout/scm/scm.py:
        (SCM.find_checkout_root):
        (SCM.will.remote_merge_base):
        * Scripts/webkitpy/common/checkout/scm/scm_mock.py:
        * Scripts/webkitpy/common/checkout/scm/svn.py:
        (SVNRepository.has_authorization_for_realm):
        (SVN.__init__):
        * Scripts/webkitpy/common/config/contributionareas.py:
        (ContributionAreas.names):
        * Scripts/webkitpy/common/config/ports.py:
        (DeprecatedPort):
        * Scripts/webkitpy/common/net/buildbot/buildbot.py:
        (Builder.force_build):
        * Scripts/webkitpy/common/net/buildbot/buildbot_mock.py:
        * Scripts/webkitpy/style/checkers/cpp.py:
        (check_posix_threading):
        (check_spacing):
        * Scripts/webkitpy/style/optparser.py:
        (ArgumentParser._create_option_parser):
        * Scripts/webkitpy/tool/commands/abstractlocalservercommand.py:
        (AbstractLocalServerCommand.execute):
        * Scripts/webkitpy/tool/commands/download.py:
        (AbstractPatchProcessingCommand):
        (AbstractPatchProcessingCommand._process_patch):
        * Scripts/webkitpy/tool/commands/earlywarningsystem.py:
        (AbstractEarlyWarningSystem):

2012-11-12  Dirk Pranke  <dpranke@chromium.org>

        remove 'webkit-patch optimize-expectations'
        https://bugs.webkit.org/show_bug.cgi?id=102032

        Reviewed by Adam Barth.

        Removing this command because it is totally broken (probably
        broke when I added support for multiple files in a cascade)
        and doesn't seem to do anything much useful. It certainly
        didn't actually optimize things.

        * Scripts/webkitpy/tool/commands/expectations.py: Removed.

2012-11-12  Xiaobo Wang  <xbwang@torchmobile.com.cn>

        [BlackBerry] DRT - Update Pixel Dump Support for OpenGL renderer
        https://bugs.webkit.org/show_bug.cgi?id=101894

        Reviewed by Rob Buis.

        RIM PR 241686
        Also remove an un-needed pixel lock, and fix a klocwork error in SKIA
        code path.

        * DumpRenderTree/blackberry/PixelDumpSupportBlackBerry.cpp:
        (readPixelsUserInterfaceThread):
        (createBitmapContextFromWebView):

2012-11-12  Daniel Bates  <dbates@webkit.org>

        Perl errors from Tools/Scripts/copy-webkitlibraries-to-product-directory
        https://bugs.webkit.org/show_bug.cgi?id=101980

        Reviewed by Mark Rowe.

        Remove library libWebKitSystemInterfaceLeopard.a and libWebKitSystemInterfaceSnowLeopard.a
        from the list of libraries to copy to the specified built products directory
        as these libraries were removed from the repository in <http://trac.webkit.org/changeset/133670>.

        * Scripts/copy-webkitlibraries-to-product-directory:

2012-11-12  Dirk Pranke  <dpranke@chromium.org>

        webkitpy: integrate pylint into check-webkit-style, part I
        https://bugs.webkit.org/show_bug.cgi?id=101285

        Reviewed by Ojan Vafai.

        This patch re-works lint-webkitpy so that the logic is pushed
        into check-webkit-style (mostly); we don't yet control which
        messages are displayed using the rules in webkitpy/style/checker.py
        (we're still using the pylintrc to suppress messages instead),
        but otherwise things work. For now we will only report pylint
        "errors", not warnings.

        * Scripts/lint-webkitpy:
        * Scripts/webkitpy/style/checker.py:
        * Scripts/webkitpy/style/checkers/python.py:
        (PythonChecker):
        (PythonChecker.check):
        (PythonChecker._check_pep8):
        (PythonChecker._check_pylint):
        (Pylinter):
        (Pylinter.__init__):
        (Pylinter.run):
        (_FilteredStringIO):
        (_FilteredStringIO.__init__):
        (_FilteredStringIO.write):
        (_FilteredStringIO._filter):
        * Scripts/webkitpy/style/checkers/python_unittest.py:
        (PythonCheckerTest.test_check):
        * Scripts/webkitpy/style/checkers/python_unittest_input.py:

2012-11-12  Dirk Pranke  <dpranke@chromium.org>

        nrwt: remove a bunch of broken chromium-specific flags
        https://bugs.webkit.org/show_bug.cgi?id=101979

        Reviewed by Tony Chang.

        There were a bunch of chromium-specific flags that used to be
        supported by NRWT (and handled and passed on to DRT) but have
        probably been broken for a long time and are currently ignored.

        This patch removes all of those flags; the rule of thumb going forward
        is that we should only add flags that affect how the python code functions.
        If a flag is just passed verbatim to DRT, the user can use --additional-drt-flag
        for that.

        * Scripts/webkitpy/layout_tests/run_webkit_tests.py:
        (parse_args):
        * Scripts/webkitpy/layout_tests/run_webkit_tests_integrationtest.py:
        (MainTest.setUp):

2012-11-12  Mikhail Pozdnyakov  <mikhail.pozdnyakov@intel.com>

        [EFL][WK2] Add --device-pixel-ratio command line option to EFL MiniBrowser
        https://bugs.webkit.org/show_bug.cgi?id=101930

        Reviewed by Kenneth Rohde Christiansen.

        Added --device-pixel-ratio command line option to EFL MiniBrowser which sets
        the ratio between the CSS units and device pixels when the content is unscaled.
        Option is applied for all the views created by mini browser.

        * MiniBrowser/efl/main.c:
        (window_create):
        (elm_main):

2012-11-12  Dirk Pranke  <dpranke@chromium.org>

        remove the chromium-mac-mountainlion TestExpectations file
        https://bugs.webkit.org/show_bug.cgi?id=101789

        Reviewed by Ojan Vafai.

        Nearly all of the tests have been updated for 10.8 and the remaining
        failures have been merged into the main TestExpectations file. We
        don't need this hook any more.

        * Scripts/webkitpy/layout_tests/port/chromium_mac.py:
        (ChromiumMacPort.operating_system):
        * Scripts/webkitpy/layout_tests/port/chromium_mac_unittest.py:
        (ChromiumMacPortTest.test_path_to_image_diff):

2012-11-12  Peter Beverloo  <peter@chromium.org>

        [Chromium-Android] Restart the device's shell in root before pushing data
        https://bugs.webkit.org/show_bug.cgi?id=101944

        Reviewed by Adam Barth.

        Setting up md5sum and pushing the executable, fonts and test resources was
        unintentionally being done prior to executing the "adb root" command,
        which restarts the device's shell to be root. Since test data is still
        being pushed to /data/local/tmp, writing to which requires root access,
        devices not running as root would throw a ScriptError.

        * Scripts/webkitpy/layout_tests/port/chromium_android.py:
        (ChromiumAndroidDriver._setup_test):

2012-11-12  Allan Sandfeld Jensen  <allan.jensen@digia.com>

        [Qt] Support ResourceRequest's setTimeoutInterval
        https://bugs.webkit.org/show_bug.cgi?id=101731

        Reviewed by Simon Hausmann.

        Enable XHR_TIMEOUT now that we support the necessary feature.

        * qmake/mkspecs/features/features.pri:

2012-11-12  Gustavo Noronha Silva  <gns@gnome.org>

        Unreviewed. Removing myself from the list of address to CC on EWS
        build failure; the CC turned out to just be too noisy so I'm
        tracking those in a different way.

        * Scripts/webkitpy/tool/commands/earlywarningsystem.py:
        (GtkEWS):

2012-11-12  Allan Sandfeld Jensen  <allan.jensen@digia.com>

        [Qt] Can not load MHTML documents
        https://bugs.webkit.org/show_bug.cgi?id=101765

        Reviewed by Simon Hausmann.

        Enable MHTML feature.

        * qmake/mkspecs/features/features.pri:

2012-11-12  Tommy Widenflycht  <tommyw@google.com>

        MediaStream API: Schedule the RTCDataChannel events to be triggered at idle state
        https://bugs.webkit.org/show_bug.cgi?id=101751

        Reviewed by Adam Barth.

        Makes the data channel mocks to be synchronous instead of asynchronous to be able to
        properly test RTCDataChannel event handling.

        * DumpRenderTree/chromium/MockWebRTCPeerConnectionHandler.cpp:
        (MockWebRTCPeerConnectionHandler::sendStringData):
        (MockWebRTCPeerConnectionHandler::sendRawData):

2012-11-12  Jochen Eisinger  <jochen@chromium.org>

        [chromium] move TestRunner implementation into WebTestRunner namespace
        https://bugs.webkit.org/show_bug.cgi?id=101837

        Reviewed by Adam Barth.

        That way, we don't get collisions when linking e.g. against chromium's
        net test support library.

        * DumpRenderTree/chromium/DRTTestRunner.h:
        (DRTTestRunner):
        * DumpRenderTree/chromium/TestRunner/src/AccessibilityControllerChromium.h:
        (WebTestRunner):
        * DumpRenderTree/chromium/TestRunner/src/AccessibilityUIElementChromium.cpp:
        (WebTestRunner):
        * DumpRenderTree/chromium/TestRunner/src/AccessibilityUIElementChromium.h:
        (WebTestRunner):
        * DumpRenderTree/chromium/TestRunner/src/CppBoundClass.cpp:
        (WebTestRunner):
        * DumpRenderTree/chromium/TestRunner/src/CppBoundClass.h:
        (WebTestRunner):
        * DumpRenderTree/chromium/TestRunner/src/CppVariant.cpp:
        (WebTestRunner):
        * DumpRenderTree/chromium/TestRunner/src/CppVariant.h:
        (WebTestRunner):
        * DumpRenderTree/chromium/TestRunner/src/EventSender.h:
        (WebTestRunner):
        * DumpRenderTree/chromium/TestRunner/src/GamepadController.cpp:
        (WebTestRunner):
        * DumpRenderTree/chromium/TestRunner/src/GamepadController.h:
        (WebTestRunner):
        * DumpRenderTree/chromium/TestRunner/src/TestDelegate.h:
        (WebTestRunner):
        (TestDelegate):
        * DumpRenderTree/chromium/TestRunner/src/TestInterfaces.cpp:
        (WebTestRunner):
        * DumpRenderTree/chromium/TestRunner/src/TestInterfaces.h:
        (WebTestRunner):
        (TestInterfaces):
        * DumpRenderTree/chromium/TestRunner/src/TestRunner.cpp:
        (WebTestRunner):
        * DumpRenderTree/chromium/TestRunner/src/TestRunner.h:
        (WebTestRunner):
        * DumpRenderTree/chromium/TestRunner/src/TextInputController.cpp:
        (WebTestRunner):
        * DumpRenderTree/chromium/TestRunner/src/TextInputController.h:
        (WebTestRunner):

2012-11-12  Zeno Albisser  <zeno@webkit.org>

        [Qt] MiniBrowser should not strongly depend on QtTestSupport.
        https://bugs.webkit.org/show_bug.cgi?id=101775

        Introducing HAVE(QTTESTSUPPORT) to allow building
        MiniBrowser without QtTestSupport.
        This is necessary when using a production build.

        Reviewed by Tor Arne VestbÃ¸.

        * MiniBrowser/qt/MiniBrowserApplication.cpp:
        (MiniBrowserApplication::handleUserOptions):
        * qmake/mkspecs/features/configure.prf:
        * qmake/mkspecs/features/features.prf:

2012-11-11  Kangil Han  <kangil.han@samsung.com>

        Change build congratulation message in EFL
        https://bugs.webkit.org/show_bug.cgi?id=101833

        Reviewed by Gyuyoung Kim.

        EFL port is currently supporting both WK1 and WK2.
        But, build congratulation message still shows WK1(EWebLauncher) only.
        Therefore, this patch adopts WK2 reference execution(MiniBrowser) in its message.

        From 'To run EWebLauncher with this newly-built code, use the'
        to 'To run EWebLauncher/MiniBrowser with this newly-built code, use the'.

        * Scripts/build-webkit:
        (writeCongrats):
        * Scripts/webkitdirs.pm:
        (launcherName):

2012-11-09  Ryosuke Niwa  <rniwa@webkit.org>

        People with dichromacy can't tell crashes and passes on flakiness dashboard
        https://bugs.webkit.org/show_bug.cgi?id=101711

        Reviewed by Ojan Vafai.

        Lower the brightness of orange, and raise the brightness of green so that
        people with color blindnes can still distinguish passes and crashes easily.

        * TestResultServer/static-dashboards/flakiness_dashboard_tests.css:
        (.P):
        (.C):

2012-11-09  Tommy Widenflycht  <tommyw@google.com>

        MediaStream API: Deleting all files relating to the deprecated PeerConnection00
        https://bugs.webkit.org/show_bug.cgi?id=101730

        Reviewed by Adam Barth.

        Since RTCPeerConenction has superseeded PeerConnection00 this patch removes all
        files relating to the old API.

        * DumpRenderTree/chromium/MockWebMediaStreamCenter.cpp:
        * DumpRenderTree/chromium/MockWebMediaStreamCenter.h:
        (MockWebMediaStreamCenter):
        * DumpRenderTree/chromium/TestShell.cpp:
        (TestShell::TestShell):

2012-11-09  Yael Aharon  <yael.aharon@intel.com>

        [EFL] Give the view a size in TestWebKitAPI
        https://bugs.webkit.org/show_bug.cgi?id=101770

        Reviewed by Laszlo Gombos.

        2 tests are currently failing, because they expect us to paint, but we don't paint if the view size is empty.

        * TestWebKitAPI/efl/PlatformWebView.cpp:
        (TestWebKitAPI::PlatformWebView::PlatformWebView):
        (TestWebKitAPI::PlatformWebView::~PlatformWebView):
        (TestWebKitAPI):
        (TestWebKitAPI::PlatformWebView::resizeTo):

2012-11-09  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r134068.
        http://trac.webkit.org/changeset/134068
        https://bugs.webkit.org/show_bug.cgi?id=101766

        Caused crashes on the bots. (Requested by rakuco on #webkit).

        * WebKitTestRunner/cairo/TestInvocationCairo.cpp:
        (WTR::TestInvocation::dumpPixelsAndCompareWithExpected):

2012-11-09  Zan Dobersek  <zandobersek@gmail.com>

        [GTK] Bump the jhbuild Cairo version to 1.12.8
        https://bugs.webkit.org/show_bug.cgi?id=101721

        Bump the Cairo version in Jhbuild moduleset to 1.12.8. This version
        should fix multiple failures in canvas tests and also contains
        fixes for X-related crashes that occurred from the 1.12.4 version onwards.

        * gtk/jhbuild.modules:

2012-11-09  Raphael Kubo da Costa  <raphael.kubo.da.costa@intel.com>

        [WTR][Cairo] Do not call paintRepaintRectOverlay() when there is no repaint rect.
        https://bugs.webkit.org/show_bug.cgi?id=101759

        Reviewed by Kenneth Rohde Christiansen.

        * WebKitTestRunner/cairo/TestInvocationCairo.cpp:
        (WTR::TestInvocation::dumpPixelsAndCompareWithExpected): Improve
        the check for an empty repaintRect -- we need to check if the
        WKArrayRef has any items. `if (repaintRect)' will return true
        regardless of whether the array is empty or not.


2012-11-09  Tor Arne VestbÃ¸  <tor.arne.vestbo@digia.com>

        [Qt] Stop watchlist from triggering QtBuildSystem rule on DerivedSources

        Having DerivedSources.pri in the watchlist regexp was creating too much
        noise.

        Reviewed by Ossy.

        * Scripts/webkitpy/common/config/watchlist:

2012-11-09  Dominik RÃ¶ttsches  <dominik.rottsches@intel.com>

        webkitpy/layouttests integration test fails if high shards/processes environment variables are used
        https://bugs.webkit.org/show_bug.cgi?id=101455

        Reviewed by Dirk Pranke.

        Updating test to disregard WEBKIT_TEST_MAX_LOCKED_SHARDS environment variable.

        * Scripts/webkitpy/layout_tests/run_webkit_tests_integrationtest.py:
        (MainTest.test_max_locked_shards):

2012-11-09  Raphael Kubo da Costa  <raphael.kubo.da.costa@intel.com>

        [EFL][DRT] Force a repaint before tracking repaint rects.
        https://bugs.webkit.org/show_bug.cgi?id=101743

        Reviewed by Kenneth Rohde Christiansen.

        Do like other ports and force a repaint before we start tracking
        repaints so that the pixel results generated look more in line
        with what's expected.

        * DumpRenderTree/efl/DumpRenderTree.cpp:
        (displayWebView): Call DRTSupport::forceLayout() before start
        tracking repaints.

2012-11-09  Xiaobo Wang  <xbwang@torchmobile.com.cn>

        [BlackBerry] DRT - eventSender.keyDown() needs to support pageUp, pageDown, home, end key
        https://bugs.webkit.org/show_bug.cgi?id=100937

        Reviewed by Rob Buis.

        1. Translate these keys to their corresponding BlackBerry key code.
        2. Break down a KeyChar event to a KeyDown/KeyUp pair. This is required
        because we only handle scrolling on a KeyDown event in WebPage::keyEvent()
        , and internally a KeyChar event is interpreted as a KeyDown event + a
        KeyUp event in InputHandler::handleKeyboardInput().

        Tests fixed:
        1. editing/input/scroll-viewport-page-up-down.html
        2. editing/selection/move-begin-end.html
        3. fast/forms/select-popup-pagekeys.html

        * DumpRenderTree/blackberry/EventSender.cpp:
        (keyDownCallback):

2012-11-09  Simon Hausmann  <simon.hausmann@digia.com>

        Unreviewed prospective Qt/Windows build bot fix:

        Make determination of qmake mkspec work with older versions of Qt that
        still create a "mkspecs/default" directory.

        * Scripts/webkitdirs.pm:
        (qtMakeCommand):

2012-11-09  Jochen Eisinger  <jochen@chromium.org>

        [chromium] Introduce a WebTestProxy to override methods in WebViewClient for layout tests
        https://bugs.webkit.org/show_bug.cgi?id=101452

        Reviewed by Adam Barth.

        The WebTestProxy is template, so it can derive from an implementation
        of the WebViewClient interface. That way, WebTestProxy can hook into
        individual methods of the WebViewClient and forward all the rest to the
        actual implementation.

        To demonstrate how I want to use this, I moved the
        postAccessibilityNotification method from WebViewHost to WebTestProxy.

        * DumpRenderTree/DumpRenderTree.gypi:
        * DumpRenderTree/chromium/TestRunner/public/WebTestProxy.h: Added.
        (WebKit):
        (WebTestRunner):
        (WebTestProxyBase):
        (WebTestProxy):
        (WebTestRunner::WebTestProxy::WebTestProxy):
        (WebTestRunner::WebTestProxy::~WebTestProxy):
        (WebTestRunner::WebTestProxy::postAccessibilityNotification):
        * DumpRenderTree/chromium/TestRunner/src/WebTestProxy.cpp: Added.
        (WebTestRunner):
        (WebTestRunner::WebTestProxyBase::WebTestProxyBase):
        (WebTestRunner::WebTestProxyBase::~WebTestProxyBase):
        (WebTestRunner::WebTestProxyBase::setInterfaces):
        (WebTestRunner::WebTestProxyBase::setDelegate):
        (WebTestRunner::WebTestProxyBase::doPostAccessibilityNotification):
        * DumpRenderTree/chromium/TestShell.cpp:
        (TestShell::createNewWindow):
        * DumpRenderTree/chromium/WebViewHost.cpp:
        * DumpRenderTree/chromium/WebViewHost.h:
        (WebViewHost):

2012-11-09  Simon Hausmann  <simon.hausmann@digia.com>

        [Qt] Build with MSVC fails to use nmake instead of make
        https://bugs.webkit.org/show_bug.cgi?id=98645

        Reviewed by Tor Arne VestbÃ¸.

        Don't rely on the "default" mkspec but instead query the target
        mkspec variable from qmake to find the right qmake.conf.

        * Scripts/webkitdirs.pm:
        (qtMakeCommand):

2012-11-08  Sudarsana Nagineni  <sudarsana.nagineni@intel.com>

        [EFL] about:blank should display the blank page
        https://bugs.webkit.org/show_bug.cgi?id=101566

        Reviewed by Laszlo Gombos.

        Add a check to return early without prepending http:// scheme, if the
        URL is 'about:blank'.

        * EWebLauncher/url_utils.c:
        (url_from_user_input):

2012-11-08  Christophe Dumez  <christophe.dumez@intel.com>

        [EFL][WK2] Add proper support for fullscreen API to MiniBrowser
        https://bugs.webkit.org/show_bug.cgi?id=101615

        Reviewed by Kenneth Rohde Christiansen.

        Implement fullscreen API support in MiniBrowser. When entering
        fullscreen a popup is shown to notify the user that something
        is displayed in fullscreen and to advertise that the Escape
        key can be used to exit fullscreen. This behavior is according
        to specification.

        * MiniBrowser/efl/main.c:
        (on_key_down):
        (on_fullscreen_accept):
        (on_fullscreen_deny):
        (on_fullscreen_enter):
        (on_fullscreen_exit):
        (window_create):

2012-11-08  Slavomir Kaslev  <skaslev@google.com>

        [Chromium] DumpRenderTree fix for canvas in software compositing
        https://bugs.webkit.org/show_bug.cgi?id=101509

        Reviewed by Adrienne Walker.

        Don't use accelerated canvas 2d when in software compositing mode.

        * DumpRenderTree/chromium/TestShell.cpp:
        (TestShell::runFileTest):

2012-11-08  Jakob Petsovits  <jpetsovits@rim.com>

        [BlackBerry] Rework the API to use document coordinates
        https://bugs.webkit.org/show_bug.cgi?id=101608
        RIM PR 173292

        Reviewed by Adam Treat.

        Adapt to changed WebPage API.
        See Source/WebKit/blackberry/ChangeLog for details.

        * DumpRenderTree/blackberry/DumpRenderTree.cpp:
        (BlackBerry::WebKit::DumpRenderTree::DumpRenderTree):
        (BlackBerry::WebKit::DumpRenderTree::resetToConsistentStateBeforeTesting):

2012-11-08  Yael Aharon  <yael.aharon@intel.com>

        [EFL] Turn on WTF_USE_TILED_BACKING_STORE by default
        https://bugs.webkit.org/show_bug.cgi?id=101526

        Reviewed by Kenneth Rohde Christiansen.

        Turn on WTF_USE_TILED_BACKING_STORE for EFL port.

        * Scripts/webkitperl/FeatureList.pm:

2012-11-08  Simon Hausmann  <simon.hausmann@digia.com>

        [Qt] Fix build with MSVC 2012 and Angle
        https://bugs.webkit.org/show_bug.cgi?id=101588

        Reviewed by Tor Arne VestbÃ¸.

        Angle includes STL's <memory> header file, which with MSVC 2012 includes stdint.h. MSVC 2012
        does ship stdint.h, but it's lacking other headers such as inttypes.h.

        So for the rest of WebKit we have to continue to use our own versions of these files from
        JavaScriptCore/os-win32. But for Angle we are just including a shipped STL header file (memory)
        and so it's up to the compiler to make that work, i.e. using the stdint.h it ships.

        This patch moves the addition of JavaScriptCore/os-win32 out of default_post.prf, so that it
        doesn't apply to each and every target anymore. In particular it won't apply to Angle anymore,
        because its presence causes a build issue where due to the addition of os-win32/ we end up
        including our own stdint.h but are lacking WTF/ to be in the include search path (which our own
        stdint.h requires). So out of default_post.prf and into WTF.pri, our own wrappers are now only
        used where WTF is also needed, and since os-win32/stdint.h depends on wtf/Platform.h, it seems
        like a logical location.

        * qmake/mkspecs/features/default_post.prf:

2012-11-08  Dominik RÃ¶ttsches  <dominik.rottsches@intel.com>

        Unreviewed, rolling out r133859.
        http://trac.webkit.org/changeset/133859
        https://bugs.webkit.org/show_bug.cgi?id=101526

        Breaks EFL bots test execution.

        * Scripts/webkitperl/FeatureList.pm:

2012-11-08  Csaba OsztrogonÃ¡c  <ossy@webkit.org>

        [Qt] Reduce the number of clean builds
        https://bugs.webkit.org/show_bug.cgi?id=100844

        Reviewed by Tor Arne VestbÃ¸.

        A change in any Qt project file shouldn't trigger clean
        build always, but only if the incremental build failed.

        * Scripts/webkitdirs.pm:
        (buildQMakeProjects):

2012-11-08  Kangil Han  <kangil.han@samsung.com>

        [EFL][MiniBrowser] Add encoding detector option.
        https://bugs.webkit.org/show_bug.cgi?id=100931

        Reviewed by Gyuyoung Kim.

        Add a runtime option to enable/disable encoding detector.

        * MiniBrowser/efl/main.c:
        (window_create):
        (elm_main):

2012-11-08  Balazs Kelemen  <kbalazs@webkit.org>

        [Qt] DumpRenderTree does not honor the shouldDumpPixels boolean argument of dumpAsText
        https://bugs.webkit.org/show_bug.cgi?id=101485

        Reviewed by Csaba OsztrogonÃ¡c.

        [Qt] DumpRenderTree does not honor the shouldDumpPixels boolean argument of dumpAsText

        Support dumpAsText(true) which means we should not dump a render tree
        but should dump pixels. All other platforms already support it.

        * DumpRenderTree/qt/DumpRenderTreeQt.cpp:
        (WebCore::DumpRenderTree::dump):
        * DumpRenderTree/qt/TestRunnerQt.cpp:
        (TestRunner::reset):
        (TestRunner::dumpAsText):
        * DumpRenderTree/qt/TestRunnerQt.h:
        (TestRunner::shouldDumpPixels):
        (TestRunner):

2012-11-08  Yael Aharon  <yael.aharon@intel.com>

        [EFL] Turn on WTF_USE_TILED_BACKING_STORE by default
        https://bugs.webkit.org/show_bug.cgi?id=101526

        Reviewed by Kenneth Rohde Christiansen.

        Turn on WTF_USE_TILED_BACKING_STORE for EFL port.

        * Scripts/webkitperl/FeatureList.pm:

2012-11-07  Csaba OsztrogonÃ¡c  <ossy@webkit.org>

        Make wait-for-SVN-server.py accept empty string as revision
        https://bugs.webkit.org/show_bug.cgi?id=98014

        Reviewed by Dirk Pranke.

        * BuildSlaveSupport/wait-for-SVN-server.py:
        (waitForSVNRevision):

2012-11-07  Dirk Pranke  <dpranke@chromium.org>

        garden-o-matic should handle concurrent requests
        https://bugs.webkit.org/show_bug.cgi?id=101407

        Reviewed by Ojan Vafai.

        Garden-o-Matic is implemented on top of the BaseHttpServer
        python library, which implements a single-threaded (one request at
        a time) server. This means that we can only rebaseline one test at
        a time, and when using a local results file, even fetching the results
        for diffs is single-threaded.

        Mixing in the ThreadingMixin enables concurrent requests (subject
        to the global python interpreter lock). Given that we're doing all
        of the work in webkit-patch subprocesses, I think this is safe.

        Of course, it may not be safe to do some of the subprocesses in
        parallel (e.g., rollout), but I think as long as we don't issue
        commands that touch overlapping sets of files things should be fine.
        The file locking over modifying testexpectations should keep that
        from being corrupted.

        * Scripts/webkitpy/tool/servers/gardeningserver.py:
        (GardeningHTTPServer):
        (GardeningHTTPRequestHandler):

2012-11-07  Andreas Kling  <akling@apple.com>

        Remove build-webkit dependency on Java SDK for Apple Mac WebKit.
        <http://webkit.org/b/101492>

        Reviewed by Anders Carlsson.

        Don't check for a Java SDK before building the Apple Mac port. It's no longer needed for
        the build after the Java bridge was removed.

        * Scripts/build-webkit:
        (cMakeArgsFromFeatures):

2012-11-07  Christophe Dumez  <christophe.dumez@intel.com>

        [EFL][WK2] Allow client to override setWindowFrame() / getWindowFrame()
        https://bugs.webkit.org/show_bug.cgi?id=101496

        Reviewed by Kenneth Rohde Christiansen.

        Provide implementation for on_window_geometry_get() / on_window_geometry_set()
        smart functions that interact with the elm_win widget.

        * MiniBrowser/efl/main.c:
        (on_window_geometry_get):
        (on_window_geometry_set):
        (window_create):

2012-11-07  Yael Aharon  <yael.aharon@intel.com>

        [EFL][WK2][AC] API tests crash
        https://bugs.webkit.org/show_bug.cgi?id=101480

        Reviewed by Kenneth Rohde Christiansen.

        When AC is enabled, 8 API tests are crashing. We need to properly set the evas engine for these tests.

        * TestWebKitAPI/efl/PlatformWebView.cpp:
        (TestWebKitAPI::initEcoreEvas):

2012-11-07  Peter Beverloo  <peter@chromium.org>

        Don't show the Android tester in garden-o-matic yet
        https://bugs.webkit.org/show_bug.cgi?id=101476

        Reviewed by Adam Barth.

        The Android tester just started running layout tests, and doesn't upload its
        results yet. Don't show it for now. This exception will be removed once it
        has a baseline of greenness.

        * BuildSlaveSupport/build.webkit.org-config/public_html/TestFailures/scripts/config.js:
        (.):

2012-11-07  Balazs Kelemen  <kbalazs@webkit.org>

        WebKitTestRunner flakily hangs when running pixel tests on Qt
        https://bugs.webkit.org/show_bug.cgi?id=100686

        Reviewed by Csaba OsztrogonÃ¡c.

        Make WebKitTestRunner harden against the situation when the coordinated
        graphics rendering synchronisation fails. If we time out when waiting
        for the forced repaint to finish it usually a symptom of the synchronisation
        has been broken. In this case all other tests will fail with the same error.
        The underlying problem is not yet known. Ths patch make us report this situation
        as web process unresponsiveness, so the test harness will kill us and launch
        a new instance. This will make our pixel test bot usable while it should not limit
        us debugging the underlying bug.

        * WebKitTestRunner/TestController.cpp:
        (WTR::TestController::run):
        * WebKitTestRunner/TestInvocation.cpp:
        (WTR::TestInvocation::TestInvocation):
        (WTR::TestInvocation::invoke):
        (WTR::TestInvocation::dumpWebProcessUnresponsiveness):
        (WTR::TestInvocation::didReceiveMessageFromInjectedBundle):
        * WebKitTestRunner/TestInvocation.h:
        (TestInvocation): Introduce new members to hold our state
        that was local to invoke() so far.
        * WebKitTestRunner/qt/TestInvocationQt.cpp:
        (WTR::TestInvocation::dumpPixelsAndCompareWithExpected):

2012-11-07  Allan Sandfeld Jensen  <allan.jensen@digia.com>

        [Qt] Open link in this window action
        https://bugs.webkit.org/show_bug.cgi?id=101226

        Reviewed by Simon Hausmann.

        Populates the context-menu with the new action when the default action is to open in a new window.

        * QtTestBrowser/webview.cpp:
        (createContextMenu):

2012-11-07  Mikhail Pozdnyakov  <mikhail.pozdnyakov@intel.com>

        [EFL][WK2] Add ewk_settings_preferred_minimum_contents_width_get/set API
        https://bugs.webkit.org/show_bug.cgi?id=101467

        Reviewed by Kenneth Rohde Christiansen.

        Added ewk_settings_preferred_minimum_contents_width_get/set API which is used for setting/getting
        of default minimum contents width for non viewport meta element sites.
        Set default minimum contents width to '0' for MiniBrowser as it should behave like desktop browser.

        * MiniBrowser/efl/main.c:
        (window_create):

2012-11-07  Thiago Marcos P. Santos  <thiago.santos@intel.com>

        [EFL] Add EFL to garden-o-matic
        https://bugs.webkit.org/show_bug.cgi?id=101444

        Reviewed by Kenneth Rohde Christiansen.

        Added the EFL bots running layout tests to the garden-o-matic report
        page. We are skipping here the bot that just builds WebKit EFL to make
        the data fetching faster.

        * BuildSlaveSupport/build.webkit.org-config/public_html/TestFailures/scripts/config.js:
        (.):

2012-11-07  Mikhail Pozdnyakov  <mikhail.pozdnyakov@intel.com>

        [EFL][WK2] Make EWK classes Ewk_Objects
        https://bugs.webkit.org/show_bug.cgi?id=101057

        Reviewed by Kenneth Rohde Christiansen.

        Now all the existing EWK classes share common Ewk_Object ref/unref API.

        * MiniBrowser/efl/main.c:
        (close_file_picker):
        (on_file_chooser_request):

2012-11-07  Csaba OsztrogonÃ¡c  <ossy@webkit.org>

        [Qt] Unreviewed. Add Qt EWS bots to the watchers list.

        * Scripts/webkitpy/tool/commands/earlywarningsystem.py:
        (QtEWS):
        (QtWK2EWS):

2012-11-07  Grzegorz Czajkowski  <g.czajkowski@samsung.com>

        WebKitTestRunner needs to turn on 'setContinuousSpellCheckingEnabled'
        https://bugs.webkit.org/show_bug.cgi?id=93611

        Reviewed by Gyuyoung Kim.

        WebKitTestRunner enables spelling feature to pass the layout tests from editing/spelling.

        * WebKitTestRunner/TestController.cpp:
        (WTR::TestController::resetStateToConsistentValues):
        Enables spelling by WebKit2 C API.

2012-11-07  Dominik RÃ¶ttsches  <dominik.rottsches@intel.com>

        [EFL] Switch the efl-linux-slave-2 to Wk2 Release
        https://bugs.webkit.org/show_bug.cgi?id=101345

        Reviewed by Gyuyoung Kim.

        Switching efl-linux-slave-2 to Wk2 Release.

        * BuildSlaveSupport/build.webkit.org-config/config.json:

2012-11-07  Christophe Dumez  <christophe.dumez@intel.com>

        Add replaceWithLiteral() method to WTF::String
        https://bugs.webkit.org/show_bug.cgi?id=101257

        Reviewed by Benjamin Poulain.

        Add API tests for String::replaceWithLiteral() and corresponding
        StringImpl methods.

        * TestWebKitAPI/CMakeLists.txt: Add WTFString API tests to CMake.
        * TestWebKitAPI/Tests/WTF/StringImpl.cpp:
        (TestWebKitAPI::TEST):
        (TestWebKitAPI):
        * TestWebKitAPI/Tests/WTF/WTFString.cpp:
        (TestWebKitAPI::TEST):

2012-11-07  Oswald Buddenhagen <oswald.buddenhagen@nokia.com>

        [Qt] Fix build of modules depending on QtWebKit when using prefix
        https://bugs.webkit.org/show_bug.cgi?id=101437

        Reviewed by Simon Hausmann.

        Remove setting of MODULE_QMAKE_OUTDIR from here, it's been moved to .qmake.conf.

        * qmake/mkspecs/features/default_pre.prf:

2012-11-06  Dan Beam  <dbeam@chromium.org>

        Enable REQUEST_AUTOCOMPLETE for chromium port
        https://bugs.webkit.org/show_bug.cgi?id=101376

        Reviewed by Adam Barth.

        This patch enables the feature flag REQUEST_AUTOCOMPLETE in WebKit/chromium only to allow web authors to start to use
        HTMLFormElement#requestAutocomplete as the chrome-side work progresses further.

        * DumpRenderTree/chromium/TestShell.cpp:
        (TestShell::TestShell):

        Enables the requestAutocomplete runtime feature flag during tests.

2012-11-06  KyungTae Kim  <ktf.kim@samsung.com>

        [WK2][EFL] Add shortcut for setting a pagination mode on Minibrowser
        https://bugs.webkit.org/show_bug.cgi?id=100301

        Reviewed by Gyuyoung Kim.

        Setting pagination modes is for a paginated view - left to right / right to left / top to bottom / bottom to top.
        Assign a shortcut "F7" to set pagination modes for tests.

        * MiniBrowser/efl/main.c:
        (on_key_down):

2012-11-06  KyungTae Kim  <ktf.kim@samsung.com>

        [EFL][EWebLauncher] Use Ctrl +/-  to zoom in EWebLauncher
        https://bugs.webkit.org/show_bug.cgi?id=100207

        Reviewed by Gyuyoung Kim.

        Use "Ctrl -" instead of "F7" to zoom out, and use "Ctrl +" instead of "F8" to zoom in, 
        and use "Ctrl 0" to set to default zoom level.
        They are more common shortcuts on usual browsers.

        * EWebLauncher/main.c:
        (on_key_down):

2012-11-06  Oliver Hunt  <oliver@apple.com>

        Don't warn about RefPtr* parameters
        https://bugs.webkit.org/show_bug.cgi?id=101403

        Reviewed by Gavin Barraclough.

        RefPtr<>* is a valid parameter type.

        * Scripts/webkitpy/style/checkers/cpp.py:
        (check_function_definition_and_pass_ptr):
        * Scripts/webkitpy/style/checkers/cpp_unittest.py:
        (PassPtrTest.test_ref_ptr_parameter_value):

2012-11-06  Raphael Kubo da Costa  <raphael.kubo.da.costa@intel.com>

        [WTR] Reset EventSender before running each test.
        https://bugs.webkit.org/show_bug.cgi?id=101353

        Reviewed by Simon Fraser.

        Contrary to what was done to at least some ports in DumpRenderTree,
        EventSender did not currently reset its values in WTR. This caused
        flakiness if a test such as editing/selection/fake-doubleclick.html was
        run twice in a row, since the click count was not reset across each
        run.

        * WebKitTestRunner/TestController.cpp:
        (WTR::TestController::TestController): Do not create m_eventSenderProxy
        in the constructor anymore, it is created in
        resetStateToConsistentValues now.
        (WTR::TestController::resetStateToConsistentValues): Recreate
        m_eventSenderProxy every time this method is run.
        * WebKitTestRunner/TestController.h: Make m_eventSenderProxy an OwnPtr
        and guard it with a platform #ifdef.
        * WebKitTestRunner/gtk/EventSenderProxyGtk.cpp:
        (WTR::EventSenderProxy::~EventSenderProxy): Add an empty
        implementation.
        * WebKitTestRunner/mac/EventSenderProxy.mm:
        (WTR::EventSenderProxy::~EventSenderProxy): Ditto.
        * WebKitTestRunner/qt/EventSenderProxyQt.cpp:
        (WTR::EventSenderProxy::~EventSenderProxy): Ditto.

2012-11-06  Mikhail Pozdnyakov  <mikhail.pozdnyakov@intel.com>

        [EFL][WK2] Refactor Ewk_Auth_Request, Ewk_Url_Scheme_Request and Ewk_Download_Job to be Ewk_Objects
        https://bugs.webkit.org/show_bug.cgi?id=101383

        Reviewed by Kenneth Rohde Christiansen.

        Ewk_Auth_Request, Ewk_Url_Scheme_Request and Ewk_Download_Job are Ewk_Objects now.

        * MiniBrowser/efl/main.c:
        (auth_popup_close):
        (on_authentication_request):

2012-11-06  Tommy Widenflycht  <tommyw@google.com>

        [chromium] MediaStream API: Remove the valgrind issue with MockWebRTCPeerConnectionHandler
        https://bugs.webkit.org/show_bug.cgi?id=101336

        Reviewed by Andreas Kling.

        This patch changes the delete to delete [] to match the new[].

        * DumpRenderTree/chromium/MockWebRTCPeerConnectionHandler.cpp:

2012-11-06  Mihai Balan  <mibalan@adobe.com>

        Add Adobe's bug tracker to committers.py
        https://bugs.webkit.org/show_bug.cgi?id=101338

        Reviewed by Kentaro Hara.

        Adding Adobe's bug tracker mailing list to committers.py
        to enable its inclusion in the autocomplete list.

        * Scripts/webkitpy/common/config/committers.py:

2012-11-06  Sami Kyostila  <skyostil@chromium.org>

        [chromium] Enable fixed position compositing on Android DRT
        https://bugs.webkit.org/show_bug.cgi?id=100263

        Reviewed by James Robinson.

        Chrome on Android forces composited mode for every page and creates
        stacking contexts and graphics layers for fixed positioned elements.
        Change the DumpRenderTree settings to match this.

        * DumpRenderTree/chromium/DumpRenderTree.cpp:
        (main):
        * DumpRenderTree/chromium/TestShell.cpp:
        (TestShell::TestShell):
        (TestShell::resetWebSettings):
        * DumpRenderTree/chromium/TestShell.h:
        (TestShell::setAcceleratedCompositingForFixedPositionEnabled):
        (TestShell):
        * DumpRenderTree/chromium/WebPreferences.cpp:
        (WebPreferences::reset):
        (WebPreferences::applyTo):
        * DumpRenderTree/chromium/WebPreferences.h:
        (WebPreferences):
        * Scripts/webkitpy/layout_tests/port/chromium_android.py:
        (ChromiumAndroidPort.additional_drt_flag):

2012-11-06  Raphael Kubo da Costa  <raphael.kubo.da.costa@intel.com>

        [EFL][WTR] EventSender: Get rid of the WTRMouseButton enum.
        https://bugs.webkit.org/show_bug.cgi?id=101340

        Reviewed by Kenneth Rohde Christiansen.

        Get rid of an enum which was basically a duplicate of the
        WKEventMouseButton one in the shared API.

        The only difference is that it also had a case for a 4th mouse
        button that we treat in a special way in evasMouseButton() now.

        * WebKitTestRunner/EventSenderProxy.h:
        (EventSenderProxy):
        * WebKitTestRunner/efl/EventSenderProxyEfl.cpp:
        (WTR::evasMouseButton):
        (WTR::EventSenderProxy::EventSenderProxy):
        (WTR::EventSenderProxy::mouseUp):
        (WTR::EventSenderProxy::mouseMoveTo):
        (WTR::EventSenderProxy::mouseScrollBy):
        (WTR::EventSenderProxy::leapForward):

2012-11-06  Jussi Kukkonen  <jussi.kukkonen@intel.com>

        [EFL][WK2] Minibrowser forgets http variables when url includes ampersand
        https://bugs.webkit.org/show_bug.cgi?id=101061

        Reviewed by Kenneth Rohde Christiansen.

        Elementary entry only returns 'markup' text, meaning ampersands
        in a url will become "&amp;". Use elm_entry_markup_to_utf8() and
        elm_entry_utf8_to_markup() when interacting with the entry.

        * MiniBrowser/efl/main.c:
        (on_url_changed):
        (on_url_bar_activated):

2012-11-06  Balazs Kelemen  <kbalazs@webkit.org>

        DumpRenderTree should have --pixel-tests option again
        https://bugs.webkit.org/show_bug.cgi?id=98648

        Reviewed by Dirk Pranke.

        Add back the --pixel-tests command line option to DumpRenderTree.
        It was removed r124581 because tools don't use it after that patch.
        However, it turned out that it is useful for debugging and working
        with pixel tests.

        * DumpRenderTree/efl/DumpRenderTree.cpp:
        (parseCommandLineOptions):
        (runTest):
        * DumpRenderTree/gtk/DumpRenderTree.cpp:
        (initializeGlobalsFromCommandLineOptions):
        (runTest):
        * DumpRenderTree/mac/DumpRenderTree.mm:
        (initializeGlobalsFromCommandLineOptions):
        (runTest):
        * DumpRenderTree/qt/DumpRenderTreeMain.cpp:
        (isOption):
        (printUsage):
        (main):
        * DumpRenderTree/qt/DumpRenderTreeQt.cpp:
        (WebCore::DumpRenderTree::processLine):
        * DumpRenderTree/qt/DumpRenderTreeQt.h:
        (WebCore::DumpRenderTree::setShouldDumpPixelsForAllTests):
        (DumpRenderTree):
        * DumpRenderTree/win/DumpRenderTree.cpp:
        (runTest):
        (dllLauncherEntryPoint):
        * DumpRenderTree/wx/DumpRenderTreeWx.cpp:
        (runTest):
        (MyApp::OnInit):
        * WebKitTestRunner/TestController.cpp:
        (WTR::TestController::TestController):
        (WTR::TestController::initialize):
        (WTR::TestController::runTest):
        * WebKitTestRunner/TestController.h:
        (TestController):

2012-11-05  Dirk Pranke  <dpranke@chromium.org>

        webkit-patch rebaseline*: fix typo for --results-directory
        https://bugs.webkit.org/show_bug.cgi?id=101295

        Reviewed by Ojan Vafai.

        Had --results_directory instead of --results-directory in both the
        code and the unit test.

        * Scripts/webkitpy/tool/commands/rebaseline.py:
        (AbstractParallelRebaselineCommand._rebaseline_commands):
        * Scripts/webkitpy/tool/commands/rebaseline_unittest.py:
        (TestRebaselineJson.test_results_directory):

2012-11-05  Dirk Pranke  <dpranke@chromium.org>

        webkit-patch rebaseline*: fix handling of local file urls
        https://bugs.webkit.org/show_bug.cgi?id=101296

        Reviewed by Ojan Vafai.

        When using --results-directory, we need to make sure we're converting
        paths to file:/// urls for urllib to work correctly. Also, this
        patch reworks the unit tests to get better coverage (of the execute()
        command) and reduce copy/pasting of mock options.

        * Scripts/webkitpy/tool/commands/rebaseline.py:
        (RebaselineTest._rebaseline_test_and_update_expectations):
        (RebaselineTest.execute):
        * Scripts/webkitpy/tool/commands/rebaseline_unittest.py:
        (TestRebaselineTest.setUp):
        (test_rebaseline_updates_expectations_file):
        (test_rebaseline_does_not_include_overrides):
        (test_rebaseline_test_with_results_directory):
        (test_rebaseline_test_internal_with_move_overwritten_baselines_to):

2012-11-05  Kenneth Russell  <kbr@google.com>

        Added secondary email address and IRC nick.
        https://bugs.webkit.org/show_bug.cgi?id=101290

        Unreviewed change to committers.py.

        * Scripts/webkitpy/common/config/committers.py:

2012-11-05  Glenn Adams  <glenn@skynav.com>

        Add IRC alias for Glenn Adams
        https://bugs.webkit.org/show_bug.cgi?id=101262

        Reviewed by Eric Seidel.

        Add IRC alias for Glenn Adams.

        * Scripts/webkitpy/common/config/committers.py:

2012-11-05  Dima Gorbik  <dgorbik@apple.com>

        Back out controversial changes from Bug 98665.
        https://bugs.webkit.org/show_bug.cgi?id=101244

        Reviewed by David Kilzer.

        Backing out changes from Bug 98665 until further discussions take place on rules for including Platform.h in Assertions.h.

        * DumpRenderTree/mac/MockGeolocationProvider.mm:

2012-11-05  Dirk Pranke  <dpranke@chromium.org>

        webkitpy: lint, clean up rebaseline.py
        https://bugs.webkit.org/show_bug.cgi?id=101240

        Reviewed by Ojan Vafai.

        Miscellaneous cleanup of lint errors and warnings.

        * Scripts/webkitpy/tool/commands/rebaseline.py:
        (AbstractRebaseliningCommand):
        (RebaselineTest._test_root):
        (OptimizeBaselines._optimize_baseline):
        (OptimizeBaselines.execute):
        (AnalyzeBaselines.__init__):
        (AbstractParallelRebaselineCommand):
        (AbstractParallelRebaselineCommand._builders_to_fetch_from):
        (AbstractParallelRebaselineCommand._files_to_add):
        (AbstractParallelRebaselineCommand._rebaseline):
        (RebaselineExpectations.__init__):
        (Rebaseline.execute):
        * Scripts/webkitpy/tool/commands/rebaseline_unittest.py:
        (_BaseTestCase.setUp):
        (TestAnalyzeBaselines.setUp):

2012-11-05  Dirk Pranke  <dpranke@chromium.org>

        webkit-patch optimize-baselines should take a --platform arg
        https://bugs.webkit.org/show_bug.cgi?id=97623

        Reviewed by Ojan Vafai.

        So that we can optionally limit/control which platforms' results
        are affected.

        This patch adds --platform to analyze-baselines as well.

        * Scripts/webkitpy/common/checkout/baselineoptimizer.py:
        (_baseline_search_hypergraph):
        (BaselineOptimizer.__init__):
        * Scripts/webkitpy/common/checkout/baselineoptimizer_unittest.py:
        (TestBaselineOptimizer.__init__):
        (BaselineOptimizerTest.test_move_baselines):
        * Scripts/webkitpy/tool/commands/rebaseline.py:
        (OptimizeBaselines.__init__):
        (OptimizeBaselines.execute):
        (AnalyzeBaselines.__init__):
        (AnalyzeBaselines.execute):
        * Scripts/webkitpy/tool/commands/rebaseline_unittest.py:
        (TestAnalyzeBaselines.test_default):
        (TestAnalyzeBaselines.test_missing_baselines):

2012-11-05  Dirk Pranke  <dpranke@chromium.org>

        webkit-patch rebaseline-expectations should take a --platform arg
        https://bugs.webkit.org/show_bug.cgi?id=97621

        Reviewed by Ojan Vafai.

        So that we can limit which platforms we attempt to rebaseline;
        this can reduce the noise the command produces if some ports
        have errors or warnings in their TestExpectations files and/or
        help produce more predictable results.

        In testing this patch, I realized that the rebaseline-in-parallel
        commands (rebaseline-json, rebaseline-expectations, etc.) can
        cause multiple rebaseline-test-internal commands to attempt to
        modify the TestExpectations files concurrently, and that we needed
        to lock the files to prevent corruption; it would be nice if
        we can split the updating-the-expectations-files out separately
        from updating the filesystem (much like we do with the scm updates)
        to avoid this concurrency.

        * Scripts/webkitpy/common/system/file_lock_mock.py: Added.
        (MockFileLock):
        (MockFileLock.__init__):
        (MockFileLock.acquire_lock):
        (MockFileLock.release_lock):
        * Scripts/webkitpy/common/system/systemhost.py:
        (SystemHost.copy_current_environment):
        (SystemHost):
        (SystemHost.make_file_lock):
        * Scripts/webkitpy/common/system/systemhost_mock.py:
        (MockSystemHost.copy_current_environment):
        (MockSystemHost):
        (MockSystemHost.make_file_lock):
        * Scripts/webkitpy/tool/commands/rebaseline.py:
        (RebaselineTest._update_expectations_file):
        (RebaselineExpectations.__init__):
        (RebaselineExpectations._add_tests_to_rebaseline_for_port):
        (RebaselineExpectations.execute):

2012-11-05  Dirk Pranke  <dpranke@chromium.org>

        webkitpy: clean up options for specifying multiple platforms at once
        https://bugs.webkit.org/show_bug.cgi?id=101140

        Reviewed by Ojan Vafai.

        This patch reworks how we display the help strings for --platform
        options and how we filter out platforms matching a glob. This will
        be useful as I add patches to ensure that all the webkit-patch
        commands are using --platform consistently to filter ports.

        There should be no functional changes resulting from this patch.

        * Scripts/webkitpy/layout_tests/port/factory.py:
        (platform_options):
        (PortFactory.all_port_names):
        (PortFactory.get_from_builder_name):
        * Scripts/webkitpy/tool/commands/queries.py:
        (PrintExpectations.__init__):
        (PrintBaselines.__init__):
        * Scripts/webkitpy/tool/commands/rebaseline.py:
        (AbstractRebaseliningCommand):
        (RebaselineJson.__init__):
        * Scripts/webkitpy/tool/commands/rebaseline_unittest.py:
        (TestRebaselineExpectations.setUp):
        (TestRebaselineExpectations.test_rebaseline_expectations):

2012-11-05  Peter Beverloo  <peter@chromium.org>

        The layout test runner shouldn't wait for data if stdout/stderr have been closed
        https://bugs.webkit.org/show_bug.cgi?id=101233

        Reviewed by Dirk Pranke.

        Trying to read the file descriptor for the stdout or stderr pipes when DumpRenderTree
        has crashed during a Chromium Android layout test-run, which uses FIFOs for
        communication, causes the File.fileno() method to raise a ValueError. Return early
        if either of the pipes has already been closed.

        * Scripts/webkitpy/layout_tests/port/server_process.py:
        (ServerProcess._wait_for_data_and_update_buffers_using_select):

2012-11-05  Dirk Pranke  <dpranke@chromium.org>

        webkit-patch rebaseline is broken
        https://bugs.webkit.org/show_bug.cgi?id=101235

        Reviewed by Ojan Vafai.

        It didn't get updated to handle the change in parsing --suffixes
        properly, and the unit test didn't get updated either, masking the
        problem.

        * Scripts/webkitpy/tool/commands/rebaseline.py:
        (Rebaseline._tests_to_update):
        (Rebaseline.execute):
        * Scripts/webkitpy/tool/commands/rebaseline_unittest.py:
        (TestRebaseline.test_rebaseline):

2012-11-05  Dirk Pranke  <dpranke@chromium.org>

        lint-webkitpy doesn't autoinstall pylint properly.
        https://bugs.webkit.org/show_bug.cgi?id=101106

        Reviewed by Ojan Vafai.

        Re-land r133381 with fix; ironically, lint-webkitpy would've
        complained about the problem. Also modify pylintrc and clean up
        any other lint errors in the modified files.

        * Scripts/webkitpy/common/system/autoinstall.py:
        (AutoInstaller._set_up_target_dir):
        (AutoInstaller):
        (AutoInstaller._make_package):
        (AutoInstaller._create_scratch_directory):
        (AutoInstaller._install):
        (AutoInstaller.install):
        * Scripts/webkitpy/pylintrc:
        * Scripts/webkitpy/thirdparty/__init__.py:
        (AutoinstallImportHook._ensure_autoinstalled_dir_is_in_sys_path):
        (AutoinstallImportHook):
        (AutoinstallImportHook.find_module):
        (AutoinstallImportHook._install_pylint):
        (AutoinstallImportHook._install_coverage):
        (AutoinstallImportHook._install_eliza):
        (AutoinstallImportHook._install_webpagereplay):
        (AutoinstallImportHook._install):
        * Scripts/webkitpy/thirdparty/__init___unittest.py:
        (ThirdpartyTest.test_import_hook.MockImportHook.__init__):
        (ThirdpartyTest.test_import_hook):
        (ThirdpartyTest.test_imports):

2012-11-05  KyungTae Kim  <ktf.kim@samsung.com>

        [EFL] Fix build warning in EWebLauncher/main.c
        https://bugs.webkit.org/show_bug.cgi?id=101197

        Reviewed by Kentaro Hara.

        Because the strp of _Ecore_Getopt_Value is char** (Ecore_Getopt.h),
        The parameter of ECORE_GETOPT_VALUE_STR should be char*

        * EWebLauncher/main.c:
        (_User_Arguments):

2012-11-05  Mikhail Pozdnyakov  <mikhail.pozdnyakov@intel.com>

        [EFL][WK2] Add --window-size command line option to EFL MiniBrowser
        https://bugs.webkit.org/show_bug.cgi?id=100942

        Reviewed by Kenneth Rohde Christiansen.

        Added window-size (-s) command line option to EFL MiniBrowser.

        * MiniBrowser/efl/main.c:
        (window_create):
        (parse_window_size):
        (elm_main):

2012-11-05  Christophe Dumez  <christophe.dumez@intel.com>

        [EFL][WK2] The icon database path should be set by the client
        https://bugs.webkit.org/show_bug.cgi?id=101182

        Reviewed by Kenneth Rohde Christiansen.

        Enable favicon database functionality in MiniBrowser since
        it is used and it is no longer enabled by default.

        * MiniBrowser/efl/main.c:
        (elm_main):

2012-11-03  Balazs Kelemen  <kbalazs@webkit.org>

        [Qt][WK2] setPlatformStrategies always asserts after r132744
        https://bugs.webkit.org/show_bug.cgi?id=100838

        Reviewed by Simon Hausmann.

        Reland with build fixes.

        Turned test runners to use the new QtTestSupport.

        * DumpRenderTree/qt/DumpRenderTree.pro:
        * DumpRenderTree/qt/DumpRenderTreeMain.cpp:
        (main):
        * DumpRenderTree/qt/DumpRenderTreeQt.cpp:
        (WebCore::DumpRenderTree::open):
        * DumpRenderTree/qt/QtInitializeTestFonts.h: Removed.
        * MiniBrowser/qt/MiniBrowser.pro:
        * QtTestBrowser/QtTestBrowser.pro:
        * QtTestBrowser/qttestbrowser.cpp:
        (LauncherApplication::handleUserOptions):
        * WebKitTestRunner/InjectedBundle/Target.pri:
        * WebKitTestRunner/InjectedBundle/qt/ActivateFontsQt.cpp:
        (WTR::activateFonts):
        * WebKitTestRunner/InjectedBundle/qt/QtInitializeTestFonts.cpp: Removed.
        * WebKitTestRunner/InjectedBundle/qt/QtInitializeTestFonts.h: Removed.
        * WebKitTestRunner/InjectedBundle/qt/TestRunnerQt.cpp:
        (WTR::TestRunner::platformInitialize):  Removed the comment from here
        because it was just lying, apparently two times. First, it is not incorrect
        to reinitialize our font set and clear font caches, it is what the tests
        expect. Second, the use of QRawFont has nothing to do with the font cache.
        * WebKitTestRunner/Target.pri:
        * WebKitTestRunner/qt/main.cpp:
        (main):

2012-11-04  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r133381.
        http://trac.webkit.org/changeset/133381
        https://bugs.webkit.org/show_bug.cgi?id=101161

        It made webkit-patch useless (Requested by Ossy_weekend on
        #webkit).

        * Scripts/webkitpy/common/system/autoinstall.py:
        (AutoInstaller._create_scratch_directory):
        (AutoInstaller._install):
        (AutoInstaller.install):
        * Scripts/webkitpy/thirdparty/__init__.py:
        (AutoinstallImportHook.__init__):
        (AutoinstallImportHook._install_pylint):
        (AutoinstallImportHook._install_coverage):
        (AutoinstallImportHook._install_eliza):
        (AutoinstallImportHook._install):
        * Scripts/webkitpy/thirdparty/__init___unittest.py:
        (ThirdpartyTest.test_import_hook.MockImportHook.__init__):
        (ThirdpartyTest.test_import_hook):

2012-11-03  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r133403, r133404, and r133409.
        http://trac.webkit.org/changeset/133403
        http://trac.webkit.org/changeset/133404
        http://trac.webkit.org/changeset/133409
        https://bugs.webkit.org/show_bug.cgi?id=101158

        "Broke tests" (Requested by kbalazs on #webkit).

        * DumpRenderTree/qt/DumpRenderTree.pro:
        * DumpRenderTree/qt/DumpRenderTreeMain.cpp:
        (main):
        * DumpRenderTree/qt/DumpRenderTreeQt.cpp:
        (WebCore::DumpRenderTree::open):
        * DumpRenderTree/qt/QtInitializeTestFonts.cpp: Renamed from Source/WebCore/platform/qt/QtTestSupport.cpp.
        (WebKit):
        (WebKit::initializeTestFonts):
        * DumpRenderTree/qt/QtInitializeTestFonts.h: Copied from Tools/WebKitTestRunner/InjectedBundle/qt/ActivateFontsQt.cpp.
        (WebKit):
        * MiniBrowser/qt/MiniBrowser.pro:
        * MiniBrowser/qt/MiniBrowserApplication.cpp:
        (MiniBrowserApplication::handleUserOptions):
        * QtTestBrowser/QtTestBrowser.pro:
        * QtTestBrowser/qttestbrowser.cpp:
        (LauncherApplication::handleUserOptions):
        * WebKitTestRunner/InjectedBundle/Target.pri:
        * WebKitTestRunner/InjectedBundle/qt/ActivateFontsQt.cpp:
        (WTR::activateFonts):
        * WebKitTestRunner/InjectedBundle/qt/QtInitializeTestFonts.cpp: Copied from Tools/WebKitTestRunner/InjectedBundle/qt/ActivateFontsQt.cpp.
        * WebKitTestRunner/InjectedBundle/qt/QtInitializeTestFonts.h: Copied from Tools/WebKitTestRunner/InjectedBundle/qt/ActivateFontsQt.cpp.
        * WebKitTestRunner/InjectedBundle/qt/TestRunnerQt.cpp:
        (WTR::TestRunner::platformInitialize):
        * WebKitTestRunner/Target.pri:
        * WebKitTestRunner/qt/main.cpp:
        (main):

2012-11-03  Balazs Kelemen  <kbalazs@webkit.org>

        [Qt][WK2] setPlatformStrategies always asserts after r132744
        https://bugs.webkit.org/show_bug.cgi?id=100838

        2nd unreviewed buildfix.

        * MiniBrowser/qt/MiniBrowserApplication.cpp:

2012-11-03  Balazs Kelemen  <kbalazs@webkit.org>

        [Qt][WK2] setPlatformStrategies always asserts after r132744
        https://bugs.webkit.org/show_bug.cgi?id=100838

        Unreviewed buildfix.

        * WebKitTestRunner/Target.pri:

2012-11-03  Balazs Kelemen  <kbalazs@webkit.org>

        [Qt][WK2] setPlatformStrategies always asserts after r132744
        https://bugs.webkit.org/show_bug.cgi?id=100838

        Reviewed by Simon Hausmann.

        Reland with build fix.

        Turned test runners to use the new QtTestSupport.

        * DumpRenderTree/qt/DumpRenderTree.pro:
        * DumpRenderTree/qt/DumpRenderTreeMain.cpp:
        (main):
        * DumpRenderTree/qt/DumpRenderTreeQt.cpp:
        (WebCore::DumpRenderTree::open):
        * DumpRenderTree/qt/QtInitializeTestFonts.h: Removed.
        * MiniBrowser/qt/MiniBrowser.pro:
        * QtTestBrowser/QtTestBrowser.pro:
        * QtTestBrowser/qttestbrowser.cpp:
        (LauncherApplication::handleUserOptions):
        * WebKitTestRunner/InjectedBundle/Target.pri:
        * WebKitTestRunner/InjectedBundle/qt/ActivateFontsQt.cpp:
        (WTR::activateFonts):
        * WebKitTestRunner/InjectedBundle/qt/QtInitializeTestFonts.cpp: Removed.
        * WebKitTestRunner/InjectedBundle/qt/QtInitializeTestFonts.h: Removed.
        * WebKitTestRunner/InjectedBundle/qt/TestRunnerQt.cpp:
        (WTR::TestRunner::platformInitialize):  Removed the comment from here
        because it was just lying, apparently two times. First, it is not incorrect
        to reinitialize our font set and clear font caches, it is what the tests
        expect. Second, the use of QRawFont has nothing to do with the font cache.
        * WebKitTestRunner/Target.pri:
        * WebKitTestRunner/qt/main.cpp:
        (main):

2012-11-03  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r133397.
        http://trac.webkit.org/changeset/133397
        https://bugs.webkit.org/show_bug.cgi?id=101155

        "Broke Qt. No way to force the damn bots to do a clean build.
        I'm giving up." (Requested by kbalazs on #webkit).

        * DumpRenderTree/qt/DumpRenderTree.pro:
        * DumpRenderTree/qt/DumpRenderTreeMain.cpp:
        (main):
        * DumpRenderTree/qt/DumpRenderTreeQt.cpp:
        (WebCore::DumpRenderTree::open):
        * DumpRenderTree/qt/QtInitializeTestFonts.cpp: Renamed from Source/WebCore/platform/qt/QtTestSupport.cpp.
        (WebKit):
        (WebKit::initializeTestFonts):
        * DumpRenderTree/qt/QtInitializeTestFonts.h: Copied from Tools/WebKitTestRunner/InjectedBundle/qt/ActivateFontsQt.cpp.
        (WebKit):
        * QtTestBrowser/QtTestBrowser.pro:
        * QtTestBrowser/qttestbrowser.cpp:
        (LauncherApplication::handleUserOptions):
        * WebKitTestRunner/InjectedBundle/Target.pri:
        * WebKitTestRunner/InjectedBundle/qt/ActivateFontsQt.cpp:
        (WTR::activateFonts):
        * WebKitTestRunner/InjectedBundle/qt/QtInitializeTestFonts.cpp: Copied from Tools/WebKitTestRunner/InjectedBundle/qt/ActivateFontsQt.cpp.
        * WebKitTestRunner/InjectedBundle/qt/QtInitializeTestFonts.h: Copied from Tools/WebKitTestRunner/InjectedBundle/qt/ActivateFontsQt.cpp.
        * WebKitTestRunner/InjectedBundle/qt/TestRunnerQt.cpp:
        (WTR::TestRunner::platformInitialize):
        * WebKitTestRunner/Target.pri:
        * WebKitTestRunner/qt/main.cpp:
        (main):

2012-11-03  Balazs Kelemen  <kbalazs@webkit.org>

        [Qt][WK2] setPlatformStrategies always asserts after r132744
        https://bugs.webkit.org/show_bug.cgi?id=100838

        Reviewed by Simon Hausmann.

        Turned test runners to use the new QtTestSupport.

        * DumpRenderTree/qt/DumpRenderTree.pro:
        * DumpRenderTree/qt/DumpRenderTreeMain.cpp:
        (main):
        * DumpRenderTree/qt/DumpRenderTreeQt.cpp:
        (WebCore::DumpRenderTree::open):
        * QtTestBrowser/QtTestBrowser.pro:
        * QtTestBrowser/qttestbrowser.cpp:
        (LauncherApplication::handleUserOptions):
        * WebKitTestRunner/InjectedBundle/Target.pri:
        * WebKitTestRunner/InjectedBundle/qt/ActivateFontsQt.cpp:
        (WTR::activateFonts):
        * WebKitTestRunner/InjectedBundle/qt/QtInitializeTestFonts.cpp: Removed.
        * WebKitTestRunner/InjectedBundle/qt/QtInitializeTestFonts.h: Removed.
        * WebKitTestRunner/InjectedBundle/qt/InjectedBundleQt.cpp:
        * WebKitTestRunner/InjectedBundle/qt/TestRunnerQt.cpp:
        (WTR::TestRunner::platformInitialize): Removed the comment from here
        because it was just lying, apparently two times. First, it is not incorrect
        to reinitialize our font set and clear font caches, it is what the tests
        expect. Second, the use of QRawFont has nothing to do with the font cache.
        * WebKitTestRunner/Target.pri:
        * WebKitTestRunner/qt/main.cpp:
        (main):

2012-11-02  Dirk Pranke  <dpranke@chromium.org>

        webkit-patch rebaseline is broken
        https://bugs.webkit.org/show_bug.cgi?id=101081

        Reviewed by Ojan Vafai.

        I broke this in r133061 and the unit tests weren't covering this
        code path. Fixed the issue and the tests. --results-directory
        doesn't make sense for either 'webkit-patch rebaseline' or
        'webkit-patch rebaseline-expectations', so we don't want to expose
        that as a command line option, but they all call a common
        _rebaseline() routine that references options.results_directory,
        so we need to set a default value.

        * Scripts/webkitpy/tool/commands/rebaseline.py:
        (RebaselineExpectations.execute):
        (Rebaseline.execute):
        * Scripts/webkitpy/tool/commands/rebaseline_unittest.py:
        (TestRebaseline):
        (TestRebaseline.test_rebaseline):

2012-11-02  Dirk Pranke  <dpranke@chromium.org>

        lint-webkitpy doesn't autoinstall pylint properly
        https://bugs.webkit.org/show_bug.cgi?id=101106

        Reviewed by Ojan Vafai.

        Turns out the autoinstalling code for pylint didn't install
        pylint's dependencies, and the autoinstaller code didn't work
        using nested directories (e.g., "logilab/astng"). Fix those issues,
        clean up the autoinstaller code, and add tests to make sure everything
        imports successfully.

        * Scripts/webkitpy/common/system/autoinstall.py:
        (AutoInstaller._create_scratch_directory):
        (AutoInstaller._install):
        (AutoInstaller.install):
        * Scripts/webkitpy/thirdparty/__init__.py:
        (AutoinstallImportHook._ensure_autoinstalled_dir_is_in_sys_path):
        (AutoinstallImportHook._install_pylint):
        (AutoinstallImportHook._install_coverage):
        (AutoinstallImportHook._install_eliza):
        (AutoinstallImportHook._install):
        * Scripts/webkitpy/thirdparty/__init___unittest.py:
        (ThirdpartyTest.test_import_hook.MockImportHook.__init__):
        (ThirdpartyTest.test_import_hook):
        (ThirdpartyTest.test_imports):

2012-11-02  Dirk Pranke  <dpranke@chromium.org>

        nrwt prints an awkward result message for missing results
        https://bugs.webkit.org/show_bug.cgi?id=100915

        Reviewed by Ojan Vafai.

        Completely rework how we print out the description of
        each tests's result - we now will print either "passed" or "failed",
        followed by " unexpectedly" if we weren't expecting the result,
        followed by a short description of each type of failure that happened
        (in parentheses). Also reworked the description of each type of
        failure slightly to be clearer.

        Also rework the tests to make sure we have coverage of all of the
        messages. Examples of the new output are posted as an attachment to
        the bug.

        * Scripts/webkitpy/layout_tests/models/test_expectations.py:
        (TestExpectations):
        * Scripts/webkitpy/layout_tests/models/test_failures.py:
        (FailureTimeout.message):
        (FailureMissingResult.message):
        (FailureTextMismatch.message):
        (FailureMissingImageHash.message):
        (FailureMissingImage.message):
        (FailureImageHashMismatch.message):
        (FailureImageHashIncorrect.message):
        (FailureReftestMismatch.message):
        (FailureReftestMismatchDidNotOccur.message):
        (FailureReftestNoImagesGenerated.message):
        (FailureMissingAudio.message):
        (FailureAudioMismatch.message):
        (FailureEarlyExit.message):
        * Scripts/webkitpy/layout_tests/port/test.py:
        * Scripts/webkitpy/layout_tests/run_webkit_tests_integrationtest.py:
        (MainTest.test_run_singly_actually_runs_tests):
        (MainTest.test_missing_and_unexpected_results):
        * Scripts/webkitpy/layout_tests/views/printing.py:
        (Printer._print_result_summary_entry):
        (Printer.print_finished_test):
        (Printer._result_message):
        (Printer._print_unexpected_results):
        * Scripts/webkitpy/tool/bot/flakytestreporter_unittest.py:
        * Scripts/webkitpy/tool/commands/queues_unittest.py:

2012-11-02  Dirk Pranke  <dpranke@chromium.org>

        webkitpy: clean up logging in common.system.autoinstall
        https://bugs.webkit.org/show_bug.cgi?id=101090

        Reviewed by Ojan Vafai.

        This module logged way too much, much of which was logging that
        was either really redundant or useful only during initial development.
        This patch deletes a lot of code and tweaks the remaining log messages
        to be more useful now.

        Also, clean up a bunch of lint errors and warnings.

        * Scripts/webkitpy/common/system/autoinstall.py:
        (AutoInstaller.__init__):
        (AutoInstaller._write_file):
        (AutoInstaller._set_up_target_dir):
        (AutoInstaller._create_scratch_directory):
        (AutoInstaller._url_downloaded_path):
        (AutoInstaller._is_downloaded):
        (AutoInstaller._record_url_downloaded):
        (AutoInstaller._extract_targz):
        (AutoInstaller._extract_all):
        (AutoInstaller._unzip):
        (AutoInstaller._download_to_stream):
        (AutoInstaller._download):
        (AutoInstaller._install):
        (AutoInstaller.install):

2012-11-02  Dirk Pranke  <dpranke@chromium.org>

        webkit-patch analyze-baselines output is weak
        https://bugs.webkit.org/show_bug.cgi?id=100998

        Reviewed by Ojan Vafai.

        Currently analyze-baselines prints a list of baselines that have
        the same checksum per line, but the format is hard to read;
        this patch cleans up the output to print by directory instead
        and use the same format I recently added for debugging optimize-baselines,
        then refactors the code so that we share and adds tests for
        analyze-baselines (which was untested).

        Also, I got rid of a couple of unnecessarily-hardcoded port names,
        and modified the baseline optimizer to log the current world when
        optimize fails.

        * Scripts/webkitpy/common/checkout/baselineoptimizer.py:
        (BaselineOptimizer.read_results_by_directory):
        (BaselineOptimizer.write_by_directory):
        (BaselineOptimizer.optimize):
        * Scripts/webkitpy/tool/commands/rebaseline.py:
        (OptimizeBaselines.execute):
        (AnalyzeBaselines.__init__):
        (AnalyzeBaselines._write):
        (AnalyzeBaselines._analyze_baseline):
        (AnalyzeBaselines.execute):
        * Scripts/webkitpy/tool/commands/rebaseline_unittest.py:
        (_FakeOptimizer):
        (_FakeOptimizer.read_results_by_directory):
        (TestAnalyzeBaselines):
        (TestAnalyzeBaselines.setUp):
        (TestAnalyzeBaselines.test_default):
        (TestAnalyzeBaselines.test_missing_baselines):

2012-11-02  Adam Barth  <abarth@webkit.org>

        ENABLE(UNDO_MANAGER) is disabled everywhere and is not under active development
        https://bugs.webkit.org/show_bug.cgi?id=100711

        Reviewed by Eric Seidel.

        * Scripts/webkitperl/FeatureList.pm:
        * qmake/mkspecs/features/features.pri:

2012-11-02  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r133303.
        http://trac.webkit.org/changeset/133303
        https://bugs.webkit.org/show_bug.cgi?id=101068

        "Broke qt wk2 build (seems like bots fails to rerun qmake if
        needed)" (Requested by kbalazs on #webkit).

        * DumpRenderTree/qt/DumpRenderTree.pro:
        * DumpRenderTree/qt/DumpRenderTreeMain.cpp:
        (main):
        * DumpRenderTree/qt/DumpRenderTreeQt.cpp:
        (WebCore::DumpRenderTree::open):
        * DumpRenderTree/qt/QtInitializeTestFonts.cpp: Renamed from Source/WebCore/platform/qt/QtTestSupport.cpp.
        (WebKit):
        (WebKit::initializeTestFonts):
        * DumpRenderTree/qt/QtInitializeTestFonts.h: Copied from Tools/WebKitTestRunner/InjectedBundle/qt/ActivateFontsQt.cpp.
        (WebKit):
        * QtTestBrowser/QtTestBrowser.pro:
        * QtTestBrowser/qttestbrowser.cpp:
        (LauncherApplication::handleUserOptions):
        * WebKitTestRunner/InjectedBundle/Target.pri:
        * WebKitTestRunner/InjectedBundle/qt/ActivateFontsQt.cpp:
        (WTR::activateFonts):
        * WebKitTestRunner/InjectedBundle/qt/QtInitializeTestFonts.cpp: Copied from Tools/WebKitTestRunner/InjectedBundle/qt/ActivateFontsQt.cpp.
        * WebKitTestRunner/InjectedBundle/qt/QtInitializeTestFonts.h: Copied from Tools/WebKitTestRunner/InjectedBundle/qt/ActivateFontsQt.cpp.
        * WebKitTestRunner/InjectedBundle/qt/TestRunnerQt.cpp:
        (WTR::TestRunner::platformInitialize):
        * WebKitTestRunner/Target.pri:
        * WebKitTestRunner/qt/main.cpp:
        (main):

2012-11-02  Balazs Kelemen  <kbalazs@webkit.org>

        [Qt][WK2] setPlatformStrategies always asserts after r132744
        https://bugs.webkit.org/show_bug.cgi?id=100838

        Reviewed by Simon Hausmann.

        Turned test runners to use the new QtTestSupport.

        * DumpRenderTree/qt/DumpRenderTree.pro:
        * DumpRenderTree/qt/DumpRenderTreeMain.cpp:
        (main):
        * DumpRenderTree/qt/DumpRenderTreeQt.cpp:
        (WebCore::DumpRenderTree::open):
        * QtTestBrowser/QtTestBrowser.pro:
        * QtTestBrowser/qttestbrowser.cpp:
        (LauncherApplication::handleUserOptions):
        * WebKitTestRunner/InjectedBundle/Target.pri:
        * WebKitTestRunner/InjectedBundle/qt/ActivateFontsQt.cpp:
        (WTR::activateFonts):
        * WebKitTestRunner/InjectedBundle/qt/QtInitializeTestFonts.cpp: Removed.
        * WebKitTestRunner/InjectedBundle/qt/QtInitializeTestFonts.h: Removed.
        * WebKitTestRunner/InjectedBundle/qt/InjectedBundleQt.cpp:
        * WebKitTestRunner/InjectedBundle/qt/TestRunnerQt.cpp:
        (WTR::TestRunner::platformInitialize): Removed the comment from here
        because it was just lying, apparently two times. First, it is not incorrect
        to reinitialize our font set and clear font caches, it is what the tests
        expect. Second, the use of QRawFont has nothing to do with the font cache.
        * WebKitTestRunner/Target.pri:
        * WebKitTestRunner/qt/main.cpp:
        (main):

2012-11-02  Peter Beverloo  <peter@chromium.org>

        Output Android's device status before running tests on the bots
        https://bugs.webkit.org/show_bug.cgi?id=100944

        Reviewed by Dirk Pranke.

        This adds a new step to the build master which will be run prior to the
        actual tests-suites on the Chromium Android tester, and soon the Chromium
        Android Perf bot. For each attached device, it outputs the build
        information, battery level, battery temperature and username.

        The Android tester currently is very flaky, and this will help tremendously
        in being able to figure out what's wrong with the bot.

        * BuildSlaveSupport/build.webkit.org-config/master.cfg:
        (OutputAndroidDeviceStatus):
        (TestFactory.__init__):
        * BuildSlaveSupport/chromium/output-android-device-status: Added.
        (GetAttachedDevices):
        (AndroidDeviceStatus):
        (AndroidDeviceStatus.__init__):
        (AndroidDeviceStatus._run_adb_command):
        (AndroidDeviceStatus.device_type):
        (AndroidDeviceStatus.device_build):
        (AndroidDeviceStatus.device_fingerprint):
        (AndroidDeviceStatus.battery_level):
        (AndroidDeviceStatus.battery_temperature):
        (AndroidDeviceStatus.username):
        (main):

2012-11-02  Jocelyn Turcotte  <jocelyn.turcotte@digia.com>

        [Qt] WTR: Make sure that eventSender.mouseDown sends a press event for the second press
        https://bugs.webkit.org/show_bug.cgi?id=101033

        Reviewed by Simon Hausmann.

        eventSender.mouseDown doesn't work properly since r133153 where
        MouseButtonDblClick events aren't interpreted as Press events anymore.
        The problem is that mouseDown sends a DblClick event instead of a Press,
        while the correct way is to send both events.

        Since QQuickWebView isn't doing anything with DblClick events anymore,
        simply send Press events all the time and let WebCore figure out
        where the double clicks are.

        * WebKitTestRunner/qt/EventSenderProxyQt.cpp:
        (WTR::EventSenderProxy::updateClickCountForButton):
        (WTR::EventSenderProxy::mouseDown):

2012-11-02  Christophe Dumez  <christophe.dumez@intel.com>

        [EFL][WK2] Add HTTP authentication support to MiniBrowser
        https://bugs.webkit.org/show_bug.cgi?id=100953

        Reviewed by Kenneth Rohde Christiansen.

        Add HTTP authentication support to MiniBrowser. An authentication
        dialog now pops up to ask the user for credentials whenever
        a Web site requires authentication.

        * MiniBrowser/efl/main.c:
        (auth_popup_close):
        (on_auth_cancel):
        (on_auth_ok):
        (on_authentication_request):
        (window_create):

2012-11-01  Yury Semikhatsky  <yurys@chromium.org>

        Memory instrumentation: do not call checkCountedObject with wrong pointers
        https://bugs.webkit.org/show_bug.cgi?id=100958

        Reviewed by Alexander Pavlov.

        * TestWebKitAPI/Tests/WTF/MemoryInstrumentationTest.cpp: test that if there
        if there is class A derived from classes B and C and we have pointer B* to an
        object of class A then MemoryInstrumentationClient::checkoutCountedObject won't
        be called for B* but only for A*

        Also MemoryInstrumentation implementation used in the test was refactored to
        allow passing client as a parameter. The client implementation was extracted into
        a top-level class MemoryInstrumentationTestClient.

2012-11-01  Christophe Dumez  <christophe.dumez@intel.com>

        [EFL][WK2] Make File Chooser dialog modal in MiniBrowser
        https://bugs.webkit.org/show_bug.cgi?id=100962

        Reviewed by Gyuyoung Kim.

        Make File Chooser dialog modal in MiniBrowser and make
        sure it is closed and freed when its parent window is
        closed.

        * MiniBrowser/efl/main.c:
        (close_file_picker):
        (on_filepicker_parent_deletion):
        (on_file_chooser_request):

2012-11-01  Seonae Kim  <sunaeluv.kim@samsung.com>

        [EFL][DRT] Support Geolocation
        https://bugs.webkit.org/show_bug.cgi?id=97427

        Reviewed by Gyuyoung Kim. 

        Implement methods to use GeolocationClientMock in DumpRenderTree.
        This client attaches to the page whenever a view is created.

        * DumpRenderTree/efl/DumpRenderTreeChrome.cpp:
        (DumpRenderTreeChrome::createView):
        (DumpRenderTreeChrome::resetDefaultsToConsistentValues):
        * DumpRenderTree/efl/TestRunnerEfl.cpp:
        (TestRunner::setMockGeolocationPosition):
        (TestRunner::setMockGeolocationPositionUnavailableError):
        (TestRunner::setGeolocationPermission):
        (TestRunner::numberOfPendingGeolocationPermissionRequests):

2012-11-01  Ryosuke Niwa  <rniwa@webkit.org>

        Remove tests no longer needed after r133229.

        * Scripts/webkitpy/performance_tests/perftest_unittest.py:
        (TestPerfTestFactory.test_inspector_test):
        * Scripts/webkitpy/performance_tests/perftestsrunner_unittest.py:
        (test_collect_tests_with_skipped_list):

2012-11-01  Nico Weber  <thakis@chromium.org>

        [chromium] Try to find ninja if it's not in the path already
        https://bugs.webkit.org/show_bug.cgi?id=100988

        Reviewed by Ryosuke Niwa.

        Similar to the gclient detection logic in update-webkit-chromium

        * Scripts/webkitdirs.pm:
        (buildChromiumNinja):

2012-11-01  Eric Seidel  <eric@webkit.org>

        Add Glenn Adams to the Contributor list
        https://bugs.webkit.org/show_bug.cgi?id=100982

        Reviewed by Adam Barth.

        I CC him enough on bugs it would help me to have him listed here.

        * Scripts/webkitpy/common/config/committers.py:

2012-11-01  Jer Noble  <jer.noble@apple.com>

        Add Python-LLDB support for WTF::Vector types.
        https://bugs.webkit.org/show_bug.cgi?id=100980

        Reviewed by Anders Carlsson.

        Add a synthetic child provider for WTF::Vector types.

        * lldb/lldb_webkit.py:
        (__lldb_init_module): Add both the summary and synthetic providers for WTF::Vector
        (WTFVector_SummaryProvider): Wrapper around WTFVectorProvider
        (WTFVectorProvider):
        (WTFVectorProvider.__init__):
        (WTFVectorProvider.num_children): Return m_size+2 children to account for synthesized children.
        (WTFVectorProvider.get_child_index): Synthesize child indexes for each entry in the Vector.
        (WTFVectorProvider.get_child_at_index): Synthesize children for each entry in the Vector.
        (WTFVectorProvider.update): Retrieve state from the underlying Vector.
        (WTFVectorProvider.has_children): Vectors always have children.

2012-11-01  Zoltan Horvath  <zoltan@webkit.org>

        Remove PageLoad directory entry from PerformanceTests pattern_map
        https://bugs.webkit.org/show_bug.cgi?id=100989

        Reviewed by Ryosuke Niwa.

        Since we removed PageLoad directory from PerformanceTests we don't need this entry in pattern_map.

        * Scripts/webkitpy/performance_tests/perftest.py:
        (PerfTestFactory):

2012-11-01  Jer Noble  <jer.noble@apple.com>

        Add LLDB-Python scripts to support WebKit data types.
        https://bugs.webkit.org/show_bug.cgi?id=100898

        Reviewed by Anders Carlsson.

        Add Summary providers for common WebKit string types.

        * lldb/lldb_webkit.py: Added.
        (__lldb_init_module): Register these providers with the debugger.
        (WTFString_SummaryProvider): Wrapper around WTFStringProvider.
        (WTFStringImpl_SummaryProvider): Wrapper around WTFStringImplProvider.
        (WTFAtomicString_SummaryProvider): Ditto.
        (guess_string_length): Walk through the string looking for a null-byte(s).
        (ustring_to_string): Walk through the string, extracting two-byte values, and concatenate them.
        (lstring_to_string): Walk through the string, extracting byte values, and concatenate them.
        (WTFStringImplProvider): 
        (WTFStringImplProvider.__init__):
        (WTFStringImplProvider.get_length): Extract the m_length variable.
        (WTFStringImplProvider.get_data8): Extract the m_data8 variable.
        (WTFStringImplProvider.get_data16): Extract the m_data16 variable.
        (WTFStringImplProvider.to_string): Pass the appropriate data variable to {u,l}string_to_string.
        (WTFStringImplProvider.is_8bit): Check the m_hashAndFlags variable.
        (WTFStringProvider):
        (WTFStringProvider.__init__):
        (WTFStringProvider.stringimpl): Extract the m_impl variable.
        (WTFStringProvider.get_length): Pass through to WTFStringImplProvider.
        (WTFStringProvider.to_string): Ditto.

2012-11-01  Peter Beverloo  <peter@chromium.org>

        [Chromium-Android] Apache doesn't properly clean up ipc semaphores after a layout test run
        https://bugs.webkit.org/show_bug.cgi?id=100950

        Reviewed by Dirk Pranke.

        When a test run would fail to complete due to an exception in one of
        the workers, the HTTP server wouldn't get a chance to gracefully shut
        down. This caused too much IPC semaphores to be left on the server,
        causing Apache to fail to start in subsequent runs.

        By unifying the Android-specific code with other ports, we no longer
        fail to call the ChromiumPort/Base setup_test_run() and clean_up_test_run()
        methods either. Furthermore, the number_of_servers argument for starting
        the HTTP server is now available as well.

        Because not all tests require an HTTP server, it's not guaranteed that
        it will be started. Android depends on this, so add a new method to Port
        and override it for Android: requires_http_server().

        * Scripts/webkitpy/layout_tests/controllers/layout_test_runner.py:
        (LayoutTestRunner.run_tests):
        * Scripts/webkitpy/layout_tests/controllers/manager.py:
        (Manager._run_tests):
        * Scripts/webkitpy/layout_tests/port/base.py:
        (Port.to.requires_http_server):
        * Scripts/webkitpy/layout_tests/port/base_unittest.py:
        (PortTest.test_dont_require_http_server):
        * Scripts/webkitpy/layout_tests/port/chromium_android.py:
        (ChromiumAndroidPort.requires_http_server):
        (ChromiumAndroidPort.start_http_server):
        * Scripts/webkitpy/layout_tests/port/chromium_android_unittest.py:
        (ChromiumAndroidPortTest.test_must_require_http_server):

2012-11-01  Adam Roben  <aroben@webkit.org>

        Crash beneath WKRelease after failed load in MiniBrowser
        https://bugs.webkit.org/show_bug.cgi?id=100954

        Reviewed by Sam Weinig.

        There were just some simple retain/release bugs.

        * MiniBrowser/mac/WK2BrowserWindowController.m:
        (-[WK2BrowserWindowController updateTextFieldFromURL:]):
        (-[WK2BrowserWindowController updateProvisionalURLForFrame:]):
        Don't try to release null URLs.

        (-[WK2BrowserWindowController updateCommittedURLForFrame:]): Don't
        release a URL for which we don't have ownership.

2012-10-31  Rob Buis  <rbuis@rim.com>

        [BlackBerry] Fix editing/text-iterator/findString-expected.html fail
        https://bugs.webkit.org/show_bug.cgi?id=100902

        Reviewed by Yong Li.

        PR 210039

        Fix the test my using the Page::findString method instead of our own in-page searcher.
        This also syncs some of the changes we did regarding String usage.

        * DumpRenderTree/blackberry/DumpRenderTree.cpp:
        (BlackBerry::WebKit::DumpRenderTree::dumpFramesAsText):
        (BlackBerry::WebKit::dumpHistoryItem):
        (BlackBerry::WebKit::dumpBackForwardListForWebView):
        (BlackBerry::WebKit::DumpRenderTree::dump):
        (BlackBerry::WebKit::DumpRenderTree::didFinishDocumentLoadForFrame):
        (BlackBerry::WebKit::DumpRenderTree::didReceiveTitleForFrame):
        (BlackBerry::WebKit::DumpRenderTree::runJavaScriptAlert):
        * DumpRenderTree/blackberry/DumpRenderTreeBlackBerry.h:
        (DumpRenderTree):
        * DumpRenderTree/blackberry/TestRunnerBlackBerry.cpp:
        (TestRunner::setMockGeolocationError):
        (TestRunner::layerTreeAsText):
        (TestRunner::findString):
        (TestRunner::setStorageDatabaseIdleInterval):

2012-11-01  Christophe Dumez  <christophe.dumez@intel.com>

        [EFL][WK2] Add File Chooser dialog support to MiniBrowser
        https://bugs.webkit.org/show_bug.cgi?id=100822

        Reviewed by Kenneth Rohde Christiansen.

        Add very basic file picker dialog to MiniBrowser so that
        the user can select a file from the file system when
        clicking an input element of type "file".

        * MiniBrowser/efl/main.c:
        (close_file_picker):
        (on_filepicker_deletion):
        (on_fileselector_done):
        (on_file_chooser_request):
        (window_create):

2012-11-01  Yael Aharon  <yael.aharon@intel.com>

        Unreviewed. Change my email address.

        * Scripts/webkitpy/common/config/committers.py:

2012-11-01  Jocelyn Turcotte  <jocelyn.turcotte@digia.com>

        [Qt] Double clicks/taps aren't passed down to the page
        https://bugs.webkit.org/show_bug.cgi?id=100949

        Reviewed by Kenneth Rohde Christiansen.

        Touch mocking shouldn't transform double click events as well,
        this adds an extra touch update between clicks which prevents
        double-tap detection from triggering on web pages.

        Tested on the mobile version of Google maps.

        * MiniBrowser/qt/MiniBrowserApplication.cpp:
        (MiniBrowserApplication::notify):

2012-10-31  Dirk Pranke  <dpranke@chromium.org>

        NRWT: lint warnings don't show up by default
        https://bugs.webkit.org/show_bug.cgi?id=100914

        Reviewed by Ryosuke Niwa.

        NRWT wasn't printing any warnings if you had errors in your
        TestExpectations files; this means you would only notice this
        with --lint-test-files, which is probably bad. I'm not sure
        when this requested, but perhaps when we changed the
        warnings to not be fatal if you weren't linting the files.

        Now they're still not fatal, but at least we print them.

        Also fix one warning message where we were printing the test name twice.

        * Scripts/webkitpy/layout_tests/models/test_expectations.py:
        (TestExpectationsModel._already_seen_better_match):
        (TestExpectations._report_warnings):
        * Scripts/webkitpy/layout_tests/models/test_expectations_unittest.py:
        (MiscTests.test_parse_warnings_are_logged_if_not_in_lint_mode(self): Added.

2012-10-31  Terry Anderson  <tdanderson@chromium.org>

        Missing stderr output when using run-webkit-tests
        https://bugs.webkit.org/show_bug.cgi?id=100709

        Reviewed by Dirk Pranke.

        Appends #EOF to the end of the stderr output only at the end of a test,
        not possibly part-way through. This will allow all of the stderr output 
        to appear on the results page after running run-webkit-tests.

        * DumpRenderTree/chromium/TestEventPrinter.cpp:
        (TestEventPrinter::handleTextFooter):
        (TestEventPrinter::handleTestFooter):

2012-10-30  Mark Lam  <mark.lam@apple.com>

        A JSC printf (support for %J+s and %b).
        https://bugs.webkit.org/show_bug.cgi?id=100566.

        Reviewed by Michael Saboff.

        Added regression tests for VMInspector::fprintf() sprintf() and snprintf().

        * TestWebKitAPI/TestWebKitAPI.xcodeproj/project.pbxproj:
        * TestWebKitAPI/Tests/JavaScriptCore: Added.
        * TestWebKitAPI/Tests/JavaScriptCore/VMInspector.cpp: Added.

2012-10-31  Thiago Marcos P. Santos  <thiago.santos@intel.com>

        Added viewport at-rule to the CSS parser and tokenizer
        https://bugs.webkit.org/show_bug.cgi?id=95961

        Reviewed by Kenneth Rohde Christiansen.

        Enable CSS Device Adaptation by default on EFL.

        * Scripts/webkitperl/FeatureList.pm:

2012-10-31  Terry Anderson  <tdanderson@chromium.org>

        [touchadjustment] touch-links-two-finger-tap test pass incorrectly
        https://bugs.webkit.org/show_bug.cgi?id=100619

        Reviewed by Antonio Gomes.

        Store the touch area when sending a GestureTwoFingerTap event.

        * DumpRenderTree/chromium/TestRunner/src/EventSender.cpp:
        (WebTestRunner):
        (WebTestRunner::EventSender::gestureEvent):

2012-10-31  Dirk Pranke  <dpranke@chromium.org>

        nrwt is not killing stuck DRTs on chromium win
        https://bugs.webkit.org/show_bug.cgi?id=100886

        Unreviewed, build fix.

        In the original implementation of NRWT for Chromium, we used
        to assume that DRT would always manage to exit on its own and
        so NRWT wouldn't attempt to kill DRT if it was stuck (this was the
        "hung worker" problem, and meant that if DRT hung, NRWT would hang).

        Eventually, we merged the chromium code with the other ports and
        now will always try to shut down DRTs if a test times out, but as
        part of that merge we left in a code path where we wouldn't
        shut the driver down on windows. This was resulting in stray
        DRTs being left around, and NRWT sometimes not exiting cleanly as
        a result.

        No unit tests added because this was a windows-only code path (hence
        hard to test) and that is now gone.

        * Scripts/webkitpy/layout_tests/port/server_process.py:
        (ServerProcess.stop):

2012-10-31  Ami Fischman  <fischman@chromium.org>

        [chromium] DRT and WTR should clear the cache between tests
        https://bugs.webkit.org/show_bug.cgi?id=93195

        Reviewed by Tony Chang.

        This change makes chromium DRT match the GTK+, Qt, and EFL ports.

        * DumpRenderTree/chromium/TestShell.cpp:
        (TestShell::resetTestController): added a WebCache::clear() call to achieve the goal of the bug.

2012-10-31  Dirk Pranke  <dpranke@chromium.org>

        Fix typos introduced in r133061.
        Unreviewed, build fix.

        * BuildSlaveSupport/build.webkit.org-config/public_html/TestFailures/scripts/results.js:
        * Scripts/webkitpy/tool/servers/reflectionhandler.py:
        (ReflectionHandler._serve_file):

2012-10-31  Dirk Pranke  <dpranke@chromium.org>

        garden-o-matic should work for local results
        https://bugs.webkit.org/show_bug.cgi?id=100805

        Reviewed by Adam Barth.

        This is the next step in making garden-o-matic replace
        'webkit-patch rebaseline-server' and be able to deal with local
        results. garden-o-matic now accepts a '--results-directory' option
        that will point to a layout-test-results directory. At the moment
        this will only work if you are also filtering to a single bot/
        platform at a time (we can't handle multiple bots' worth of local
        results, but that is a logical next step).

        * BuildSlaveSupport/build.webkit.org-config/public_html/TestFailures/garden-o-matic.html:
        * BuildSlaveSupport/build.webkit.org-config/public_html/TestFailures/scripts/config.js:
        * BuildSlaveSupport/build.webkit.org-config/public_html/TestFailures/scripts/results.js:
        * Scripts/webkitpy/tool/commands/gardenomatic.py:
        (GardenOMatic.__init__):
        (GardenOMatic.execute):
        * Scripts/webkitpy/tool/commands/rebaseline.py:
        (AbstractRebaseliningCommand):
        (RebaselineTest.__init__):
        (RebaselineTest._rebaseline_test):
        (RebaselineTest._rebaseline_test_and_update_expectations):
        (RebaselineTest.execute):
        (AbstractParallelRebaselineCommand._rebaseline_commands):
        (AbstractParallelRebaselineCommand._rebaseline):
        (RebaselineJson.__init__):
        * Scripts/webkitpy/tool/commands/rebaseline_unittest.py:
        (_BaseTestCase):
        (test_rebaseline_updates_expectations_file):
        (test_rebaseline_does_not_include_overrides):
        (test_rebaseline_test):
        (test_rebaseline_test_and_print_scm_changes):
        (test_rebaseline_and_copy_test):
        (test_rebaseline_and_copy_test_no_existing_result):
        (test_rebaseline_and_copy_test_with_lion_result):
        (test_rebaseline_and_copy_no_overwrite_test):
        (test_rebaseline_test_internal_with_move_overwritten_baselines_to):
        (TestRebaselineJson.test_rebaseline_all):
        (TestRebaselineJson.test_rebaseline_debug):
        (TestRebaselineJson.test_move_overwritten):
        (TestRebaselineJson.test_no_optimize):
        (TestRebaselineExpectations.test_rebaseline_expectations):
        * Scripts/webkitpy/tool/servers/gardeningserver.py:
        (GardeningHTTPRequestHandler.rebaselineall):
        (GardeningHTTPRequestHandler):
        (GardeningHTTPRequestHandler.localresult):
        * Scripts/webkitpy/tool/servers/reflectionhandler.py:
        (ReflectionHandler.do_POST):
        (ReflectionHandler):
        (ReflectionHandler.do_HEAD):

2012-10-31  Dirk Pranke  <dpranke@chromium.org>

        garden-o-matic should support gardening a single port and specifying how to deal with overwritten baselines
        https://bugs.webkit.org/show_bug.cgi?id=100563

        Reviewed by Ojan Vafai.

        This patch starts the process of making garden-o-matic more useful for
        bringing up a single new port in two ways. The goal is to fully
        obsolete webkit-patch rebaseline-server.
        
        First, it adds support for the --platform arguments to garden-o-matic
        (so that the UI will default to the right cluster of bots), and if the platform arg
        specifies a single bot, filters the results down to just that bot.

        Second, it adds support for --move-overwritten-baselines and changes
        the implementation of the move_overwritten_baselines setting in builders.py
        so that it is only used if this flag is provided.

        Future patches will make it possible to use local copies of the build
        results (rather than going to the bots) and other optimizations to make
        it faster to review lots of changes on a single bot.

        * BuildSlaveSupport/build.webkit.org-config/public_html/TestFailures/garden-o-matic.html:
        * BuildSlaveSupport/build.webkit.org-config/public_html/TestFailures/scripts/config.js:
        (.):
        * Scripts/webkitpy/layout_tests/port/builders.py:
        * Scripts/webkitpy/tool/commands/gardenomatic.py:
        (GardenOMatic):
        (GardenOMatic.execute):
        * Scripts/webkitpy/tool/commands/rebaseline.py:
        (AbstractRebaseliningCommand):
        (AbstractRebaseliningCommand.__init__):
        (RebaselineTest):
        (OptimizeBaselines):
        (AnalyzeBaselines):
        (AbstractParallelRebaselineCommand):
        (AbstractParallelRebaselineCommand._rebaseline_commands):
        (AbstractParallelRebaselineCommand._rebaseline):
        (Rebaseline.__init__):
        * Scripts/webkitpy/tool/servers/gardeningserver.py:
        (GardeningHTTPServer.url):
        (GardeningHTTPRequestHandler.rebaselineall):

2012-10-31  Dirk Pranke  <dpranke@chromium.org>

        test-webkitpy: fix running modules and classes on the command line
        https://bugs.webkit.org/show_bug.cgi?id=100787

        Reviewed by Eric Seidel.

        Handling modules and classes are arguments on the command line
        was broken due to the way we were parsing test names looking for
        parallel and serial tests.

        * Scripts/webkitpy/test/main.py:
        (Tester._test_names):
        (_Loader):
        * Scripts/webkitpy/test/main_unittest.py:
        (TestStubs.integration_test_empty):
        (TestStubs):
        (TestStubs.serial_test_empty):
        (TestStubs.serial_integration_test_empty):
        (TesterTest._find_test_names):
        (TesterTest):
        (TesterTest.test_individual_names_are_not_run_twice):
        (TesterTest.test_integration_tests_are_not_found_by_default):
        (TesterTest.test_integration_tests_are_found):

2012-10-31  Dirk Pranke  <dpranke@chromium.org>

        webkitpy: refactor common command line arguments for --platform, rebaseline commands
        https://bugs.webkit.org/show_bug.cgi?id=100800

        Reviewed by Ojan Vafai.

        This change shuffles around how we share command-line options
        between NRWT and the various webkit-patch rebaselining commands.

        There are no functional changes in this patch but it should make
        things clearer and will be useful in a couple of upcoming patches.

        * Scripts/webkitpy/layout_tests/port/__init__.py:
        * Scripts/webkitpy/layout_tests/port/factory.py:
        (platform_options):
        (configuration_options):
        * Scripts/webkitpy/layout_tests/run_webkit_tests.py:
        (parse_args):
        * Scripts/webkitpy/tool/commands/queries.py:
        (PrintExpectations.__init__):
        (PrintBaselines.__init__):
        * Scripts/webkitpy/tool/commands/rebaseline.py:
        (AbstractRebaseliningCommand):
        (AbstractRebaseliningCommand.__init__):
        (RebaselineTest.__init__):
        (OptimizeBaselines.__init__):
        (AnalyzeBaselines.__init__):
        (AbstractParallelRebaselineCommand):
        (RebaselineJson.__init__):
        (RebaselineExpectations.__init__):
        (Rebaseline.__init__):

2012-10-31  Thiago Marcos P. Santos  <thiago.santos@intel.com>

        [NRWT] Xvfb driver is leaking application cache files
        https://bugs.webkit.org/show_bug.cgi?id=100864

        Reviewed by Kenneth Rohde Christiansen.

        Application Cache looks for XDG_CACHE_HOME which is now
        prepended with DUMPRENDERTREE_TEMP and cleaned up when
        the test worker finishes his job.

        * Scripts/webkitpy/layout_tests/port/xvfbdriver.py:
        (XvfbDriver._start):

2012-10-31  Thiago Marcos P. Santos  <thiago.santos@intel.com>

        [EFL] DRT doesn't clean up after itself
        https://bugs.webkit.org/show_bug.cgi?id=100346

        Reviewed by Kenneth Rohde Christiansen.

        The test driver exports an environment variable DUMPRENDERTREE_TEMP
        which is used by both DRT and WTR as the folder for storing icons,
        databases, application cache, etc, overriding the default XDG_* path.

        We don't need to create these folders because in fact, they are never
        used and also never cleaned. Things created inside DUMPRENDERTREE_TEMP
        are automatically removed after the test run.

        * Scripts/webkitpy/layout_tests/port/efl.py:
        (EflPort.setup_environ_for_server):

2012-10-31  Thiago Marcos P. Santos  <thiago.santos@intel.com>

        [WTR] WebKitTestRunner is not cleaning up the icon database
        https://bugs.webkit.org/show_bug.cgi?id=100678

        Reviewed by Kenneth Rohde Christiansen.

        The icon database was not being set to the temporary folder created for
        the test runner by the test driver, which is removed automatically
        after the run.

        * WebKitTestRunner/TestController.cpp:
        (WTR::TestController::initialize):

2012-10-31  Mike West  <mkwst@chromium.org>

        Script run from an isolated world should bypass a page's CSP.
        https://bugs.webkit.org/show_bug.cgi?id=97398

        Reviewed by Adam Barth.

        * DumpRenderTree/chromium/DRTTestRunner.cpp:
        (DRTTestRunner::DRTTestRunner):
        (DRTTestRunner::setIsolatedWorldContentSecurityPolicy):
        * DumpRenderTree/chromium/DRTTestRunner.h:
        (DRTTestRunner):
            Adding a mechanism to set the Content Security Policy for an
            isolated world to Chromium's testRunner.

2012-10-31  MichaÅ PakuÅa vel Rutka  <m.pakula@samsung.com>

        [EFL][DRT] EventSender requires contextClick implementation
        https://bugs.webkit.org/show_bug.cgi?id=86091

        Reviewed by Gyuyoung Kim.

        Add contextClick for DumpRenderTreeEventSender basing on WebKit GTK
        implementation.

        * DumpRenderTree/efl/EventSender.cpp:
        (getMenuItemTitleCallback):
        (setMenuItemTitleCallback):
        (menuItemClickCallback):
        (contextClickCallback):

2012-10-30  Sudarsana Nagineni  <sudarsana.nagineni@intel.com>

        [WTR] Memory leaks in TestWebKitAPI::didReceiveMessageFromInjectedBundle()
        https://bugs.webkit.org/show_bug.cgi?id=100770

        Reviewed by Sam Weinig.

        Adopt strings returned by WKStringCreateWithUTF8CString() in
        didReceiveMessageFromInjectedBundle() to avoid memory leaks.

        * TestWebKitAPI/Tests/WebKit2/WillSendSubmitEvent.cpp:
        (TestWebKitAPI::didReceiveMessageFromInjectedBundle):

2012-10-30  Kangil Han  <kangil.han@samsung.com>

        Fix broken python unit test
        https://bugs.webkit.org/show_bug.cgi?id=100810

        Reviewed by Dirk Pranke.

        BUG 100755 has broken python unit test, e.g. assertion fail, since it modified baseline path.
        Therefore, this patch fixes it.

        * Scripts/webkitpy/tool/commands/rebaseline_unittest.py:
        (TestRebaselineTest.test_baseline_directory):

2012-10-30  Dirk Pranke  <dpranke@chromium.org>

        webkit-patch rebaseline*: add more helpful logging
        https://bugs.webkit.org/show_bug.cgi?id=100562

        Reviewed by Ojan Vafai.

        This change rewires the garden-o-matic and rebaseline* commands
        in webkit-patch so that --verbose propagates through all the
        subcommand invocations properly, and cleans up the logging so
        that you can actually tell what is happening. For now, we
        leave all of the logging at the logging.DEBUG level, which
        means that it gets mixed in will all the other debug logging noise
        and is harder to read, but we'll fix that in subsequent patches.

        * Scripts/webkitpy/common/checkout/baselineoptimizer.py:
        (BaselineOptimizer._platform):
        (BaselineOptimizer._move_baselines):
        (BaselineOptimizer.optimize):
        * Scripts/webkitpy/tool/commands/gardenomatic.py:
        (GardenOMatic.execute):
        * Scripts/webkitpy/tool/commands/rebaseline.py:
        (RebaselineTest._copy_existing_baseline):
        (RebaselineTest._rebaseline_test):
        (OptimizeBaselines._optimize_baseline):
        (OptimizeBaselines.execute):
        (AbstractParallelRebaselineCommand._run_webkit_patch):
        (AbstractParallelRebaselineCommand._rebaseline_commands):
        (AbstractParallelRebaselineCommand._files_to_add):
        (AbstractParallelRebaselineCommand._optimize_baselines):
        (AbstractParallelRebaselineCommand._rebaseline):
        (RebaselineExpectations._add_tests_to_rebaseline_for_port):
        (Rebaseline.execute):
        * Scripts/webkitpy/tool/servers/gardeningserver.py:
        (GardeningHTTPServer.__init__):
        (GardeningHTTPRequestHandler):
        (GardeningHTTPRequestHandler._run_webkit_patch):
        (GardeningHTTPRequestHandler.rebaselineall):

2012-10-30  Dirk Pranke  <dpranke@chromium.org>

        clean up tests for webkit-patch rebaseline* commands
        https://bugs.webkit.org/show_bug.cgi?id=100793

        Reviewed by Ojan Vafai.

        The tests in rebaseline_unittest.py had a lot of code cloning,
        and many of the tests tested whether things passed or failed by
        looking at what was logged instead of what was actually done;
        as a result the tests were kinda hard to understand and harder to
        maintain.

        This patch adds hooks to MockWeb() and MockExecutive() so we can
        directly see which URLs were fetched and calls invoked, and
        then reworks all of the unit tests to be easier to follow and
        maintain and not sensitive to the logging. Also there were a
        couple of tests that were redundant.

        There are no functional changes in this patch, and I verified that
        the coverage remains the same.

        * Scripts/webkitpy/common/net/web_mock.py:
        (MockWeb.__init__):
        (MockWeb.get_binary):
        * Scripts/webkitpy/common/system/executive_mock.py:
        (MockExecutive.__init__):
        (MockExecutive.run_command):
        (MockExecutive.kill_all):
        (MockExecutive):
        (MockExecutive.kill_process):
        (MockExecutive.popen):
        (MockExecutive.run_in_parallel):
        (MockExecutive2):
        (MockExecutive2.__init__):
        (MockExecutive2.run_command):
        * Scripts/webkitpy/tool/commands/rebaseline_unittest.py:
        (_BaseTestCase):
        (_BaseTestCase.setUp):
        (_BaseTestCase._expand):
        (_BaseTestCase._read):
        (_BaseTestCase._write):
        (_BaseTestCase._zero_out_test_expectations):
        (TestRebaselineTest):
        (TestRebaselineTest.test_baseline_directory):
        (TestRebaselineTest.test_rebaseline_updates_expectations_file_noop):
        (test_rebaseline_updates_expectations_file):
        (test_rebaseline_does_not_include_overrides):
        (test_rebaseline_test):
        (test_rebaseline_test_and_print_scm_changes):
        (test_rebaseline_and_copy_test):
        (test_rebaseline_and_copy_test_no_existing_result):
        (test_rebaseline_and_copy_test_with_lion_result):
        (test_rebaseline_and_copy_no_overwrite_test):
        (test_rebaseline_test_internal_with_move_overwritten_baselines_to):
        (TestRebaselineJson):
        (TestRebaselineJson.setUp):
        (TestRebaselineJson.tearDown):
        (TestRebaselineJson.test_rebaseline_all):
        (TestRebaselineJson.test_rebaseline_debug):
        (TestRebaseline):
        (TestRebaseline.test_tests_to_update):
        (TestRebaseline.test_rebaseline):
        (TestRebaseline.test_rebaseline.rebaseline_stub):
        (TestRebaselineExpectations):
        (TestRebaselineExpectations.setUp):
        (TestRebaselineExpectations.test_rebaseline_expectations):
        (TestRebaselineExpectations.test_rebaseline_expectations_noop):
        (TestRebaselineExpectations.disabled_test_overrides_are_included_correctly):

2012-10-30  Dirk Pranke  <dpranke@chromium.org>

        test-webkitpy: fix import of coverage so that it works in a clean install
        https://bugs.webkit.org/show_bug.cgi?id=100780

        Reviewed by Tony Chang.

        The coverage module is written so that the parent directory needs
        to be in PYTHONPATH; work around that ...

        * Scripts/webkitpy/test/main_unittest.py:
        (TestStubs.test_empty):
        (TesterTest.test_individual_names_are_not_run_twice):
        (TesterTest):
        (TesterTest.integration_test_coverage_works):
        * Scripts/webkitpy/thirdparty/__init__.py:
        (AutoinstallImportHook._install_coverage):

2012-10-30  Anders Carlsson  <andersca@apple.com>

        Another build fix.

        * TestWebKitAPI/Tests/WebKit2/WebArchive.cpp:
        (TestWebKitAPI::didReceiveMessageFromInjectedBundle):

2012-10-30  Anders Carlsson  <andersca@apple.com>

        Build fix.

        * WebKitTestRunner/mac/EventSenderProxy.mm:
        (WTR::EventSenderProxy::mouseScrollBy):

2012-10-30  Rick Byers  <rbyers@chromium.org>

        [touchadjustment] touch-links-longpress tests passes incorrectly
        https://bugs.webkit.org/show_bug.cgi?id=96810

        Reviewed by Antonio Gomes.

        Add support for suppling width/height information for longpress
        gesture (as for other gestures like tapDown) for the purposes
        of touch adjustment.

        * DumpRenderTree/chromium/TestRunner/src/EventSender.cpp:
        (WebTestRunner):
        (WebTestRunner::EventSender::gestureEvent):

2012-10-29  Anders Carlsson  <andersca@apple.com>

        Build WebKit as C++11 on Mac
        https://bugs.webkit.org/show_bug.cgi?id=100720

        Reviewed by Daniel Bates.

        * DumpRenderTree/mac/Configurations/Base.xcconfig:
        * MiniBrowser/Configurations/Base.xcconfig:
        * TestWebKitAPI/Configurations/Base.xcconfig:
        * WebKitTestRunner/Configurations/Base.xcconfig:
        Add CLANG_CXX_LANGUAGE_STANDARD=gnu++0x.

2012-10-30  Christophe Dumez  <christophe.dumez@intel.com>

        [EFL][JHBUILD] Update EFL libraries to v1.7.1 stable release
        https://bugs.webkit.org/show_bug.cgi?id=100759

        Reviewed by Kenneth Rohde Christiansen.

        Update Bump EFL libraries to the new stable release (v1.7.1)
        in JHBuild to pull the latest bug fixes.

        * efl/jhbuild.modules:

2012-10-29  Anders Carlsson  <andersca@apple.com>

        String::createCFString should return a RetainPtr
        https://bugs.webkit.org/show_bug.cgi?id=100419

        Reviewed by Andreas Kling.

        Update callers of String::createCFString.

        * WebKitTestRunner/InjectedBundle/mac/InjectedBundlePageMac.mm:
        (WTR::InjectedBundlePage::platformDidStartProvisionalLoadForFrame):

2012-10-30  Mikhail Pozdnyakov  <mikhail.pozdnyakov@intel.com>

        [WK2][WTR] WebKitTestRunner needs testRunner.queueLoadHTMLString
        https://bugs.webkit.org/show_bug.cgi?id=100747

        Reviewed by Kenneth Rohde Christiansen.

        Added testRunner.queueLoadHTMLString implementation.

        * WebKitTestRunner/InjectedBundle/Bindings/TestRunner.idl:
        * WebKitTestRunner/InjectedBundle/InjectedBundle.cpp:
        (WTR::InjectedBundle::queueLoadHTMLString):
        (WTR):
        * WebKitTestRunner/InjectedBundle/InjectedBundle.h:
        (InjectedBundle):
        * WebKitTestRunner/InjectedBundle/TestRunner.cpp:
        (WTR::TestRunner::queueLoadHTMLString):
        (WTR):
        * WebKitTestRunner/InjectedBundle/TestRunner.h:
        (TestRunner):
        * WebKitTestRunner/TestInvocation.cpp:
        (WTR::TestInvocation::didReceiveMessageFromInjectedBundle):
        * WebKitTestRunner/WorkQueueManager.cpp:
        (WTR::WorkQueueManager::queueLoadHTMLString):
        (WTR):
        * WebKitTestRunner/WorkQueueManager.h:
        (WorkQueueManager):

2012-10-30  Kangil Han  <kangil.han@samsung.com>

        [EFL] Baseline search path should consider both WK1 and WK2 on layout test.
        https://bugs.webkit.org/show_bug.cgi?id=100755

        Reviewed by Gyuyoung Kim.

        Current implementation doesn't consider WK1 case in baseline search path.
        Therefore, this patch fixes it.

        * Scripts/webkitpy/layout_tests/port/efl.py:
        (EflPort.default_baseline_search_path):

2012-10-30  Mikhail Pozdnyakov  <mikhail.pozdnyakov@intel.com>

        [QT][DRT] Remove unneeded testRunner.setMediaType() implementation
        https://bugs.webkit.org/show_bug.cgi?id=100740

        Reviewed by Kenneth Rohde Christiansen.

        Removed unneeded testRunner.setMediaType() implementation, as tests use
        cross-platform window.internals.settings.setMediaTypeOverride instead.

        * DumpRenderTree/qt/TestRunnerQt.cpp:
        * DumpRenderTree/qt/TestRunnerQt.h:
        (TestRunner):

2012-10-30  Kangil Han  <kangil.han@samsung.com>

        [EFL][DRT] Bitmap should show whole view area.
        https://bugs.webkit.org/show_bug.cgi?id=100642

        Reviewed by Gyuyoung Kim.

        css sticky position test cases haven't been passed even though implementation has been landed by BUG 95182.
        This is because current create bitmap implementation refers to geometry position that considers scroll movement even though
        paint does it. Therefore, this patch always reflects current view size and remove duplicated graphic operation to dump correct bitmap image.

        * DumpRenderTree/efl/PixelDumpSupportEfl.cpp:
        (createBitmapContextFromWebView):

2012-10-30  Jinwoo Song  <jinwoo7.song@samsung.com>

        [EFL] Refactor tooltip callback signal in WebKit1
        https://bugs.webkit.org/show_bug.cgi?id=100571

        Reviewed by Gyuyoung Kim.

        Separate tooltip callback signal into 'tooltip,text,set'
        and 'tooltip,text,unset' to be consistent with WebKit2.

        * EWebLauncher/main.c:
        (on_tooltip_text_set):
        (on_tooltip_text_unset):
        (browserCreate):

2012-10-29  Csaba OsztrogonÃ¡c  <ossy@webkit.org>

        Unreviewed, rolling out r132819.
        http://trac.webkit.org/changeset/132819
        https://bugs.webkit.org/show_bug.cgi?id=100388

        It made layout testing 40% slower and storage tests assert

        * DumpRenderTree/qt/DumpRenderTreeQt.cpp:
        (WebCore::DumpRenderTree::DumpRenderTree):
        (WebCore::DumpRenderTree::resetToConsistentStateBeforeTesting):
        (WebCore::DumpRenderTree::dump):
        * DumpRenderTree/qt/DumpRenderTreeQt.h:
        (DumpRenderTree):
        * DumpRenderTree/qt/TestRunnerQt.cpp:
        (TestRunner::reset):
        * DumpRenderTree/qt/TestRunnerQt.h:
        (TestRunner):

2012-10-29  Jochen Eisinger  <jochen@chromium.org>

        [chromium] TestRunner needs to compile ChromiumCurrentTime and ChromiumThreading in components build
        https://bugs.webkit.org/show_bug.cgi?id=100658

        Reviewed by Tony Chang.

        Before, this was compiled into DumpRenderTree. I also dropped the
        include_dirs and dependencies block as TestRunner already has them.

        * DumpRenderTree/DumpRenderTree.gyp/DumpRenderTree.gyp:

2012-10-29  Takashi Sakamoto  <tasak@google.com>

        Unreviewed. Adding myself as a committer.

        * Scripts/webkitpy/common/config/committers.py:

2012-10-28  Mark Rowe  <mrowe@apple.com>

        Simplify Xcode configuration settings that used to vary between OS versions.

        Reviewed by Dan Bernstein.

        * DumpRenderTree/mac/Configurations/Base.xcconfig:
        * DumpRenderTree/mac/Configurations/DebugRelease.xcconfig:
        * MiniBrowser/Configurations/Base.xcconfig:
        * MiniBrowser/Configurations/DebugRelease.xcconfig:
        * TestWebKitAPI/Configurations/Base.xcconfig:
        * TestWebKitAPI/Configurations/DebugRelease.xcconfig:
        * WebKitTestRunner/Configurations/Base.xcconfig:
        * WebKitTestRunner/Configurations/DebugRelease.xcconfig:

2012-10-28  Mark Rowe  <mrowe@apple.com>

        Remove references to unsupported OS and Xcode versions.

        Reviewed by Anders Carlsson.

        * DumpRenderTree/DumpRenderTree.xcodeproj/project.pbxproj:
        * DumpRenderTree/mac/Configurations/Base.xcconfig:
        * DumpRenderTree/mac/Configurations/CompilerVersion.xcconfig: Removed.
        * DumpRenderTree/mac/Configurations/DebugRelease.xcconfig:
        * MiniBrowser/Configurations/Base.xcconfig:
        * MiniBrowser/Configurations/CompilerVersion.xcconfig: Removed.
        * MiniBrowser/Configurations/DebugRelease.xcconfig:
        * TestWebKitAPI/Configurations/Base.xcconfig:
        * TestWebKitAPI/Configurations/CompilerVersion.xcconfig: Removed.
        * TestWebKitAPI/Configurations/DebugRelease.xcconfig:
        * TestWebKitAPI/TestWebKitAPI.xcodeproj/project.pbxproj:
        * WebKitTestRunner/Configurations/Base.xcconfig:
        * WebKitTestRunner/Configurations/CompilerVersion.xcconfig: Removed.
        * WebKitTestRunner/Configurations/DebugRelease.xcconfig:
        * WebKitTestRunner/WebKitTestRunner.xcodeproj/project.pbxproj:

2012-10-26  Dirk Pranke  <dpranke@chromium.org>

        webkitpy: change non-verbose log format for webkit-patch
        https://bugs.webkit.org/show_bug.cgi?id=100561

        Reviewed by Ojan Vafai.

        Logging the module name and the log level is annoying and nearly useless.
        For starters, this change removes that unless you are doing verbose/
        debug logging. In the future we should split out the concepts of
        verbose and debug logging (like we did in test-webkitpy and
        run-webkit-tests) so that you could get this in debug logging.

        * Scripts/webkitpy/common/system/logutils.py:
        (_default_handlers):
        (configure_logging):
        * Scripts/webkitpy/common/system/logutils_unittest.py:
        (ConfigureLoggingTest.test_info_message):
        (ConfigureLoggingTest):
        (ConfigureLoggingTest.test_debug_message):
        (ConfigureLoggingTest.test_two_messages):
        (ConfigureLoggingVerboseTest):
        (ConfigureLoggingVerboseTest._logging_level):
        (ConfigureLoggingVerboseTest.test_info_message):
        (ConfigureLoggingVerboseTest.test_debug_message):
        (ConfigureLoggingCustomLevelTest.test_logged_message):

2012-10-29  Christophe Dumez  <christophe.dumez@intel.com>

        [CMAKE] Add TestNetscapePlugIn/Tests/NPRuntimeCallsWithNullNPP.cpp to CMakeLists.txt
        https://bugs.webkit.org/show_bug.cgi?id=100681

        Reviewed by Anders Carlsson.

        Add TestNetscapePlugIn/Tests/NPRuntimeCallsWithNullNPP.cpp to CMake since
        it is needed by plugins/npruntime/npruntime-calls-with-null-npp.html
        layout test.

        * DumpRenderTree/TestNetscapePlugIn/CMakeLists.txt:

2012-10-29  Allan Sandfeld Jensen  <allan.jensen@digia.com>

        [Qt] Flaky security tests
        https://bugs.webkit.org/show_bug.cgi?id=100388

        Reviewed by Jocelyn Turcotte.

        Disable text dumping and load a blank URL to ensure the documentLoader is cleared 
        before we start dumping text for the new page. Otherwise messages from the old page
        may end up in the text output of the new test.

        This matches what WebKitTestRunner does, and reuses the Qt code for waiting for flag.

        * DumpRenderTree/qt/DumpRenderTreeQt.cpp:
        (WebCore::DumpRenderTree::DumpRenderTree):
        (WebCore::runUntil):
        (WebCore::DumpRenderTree::resetToConsistentStateBeforeTesting):
        (WebCore::DumpRenderTree::finishedResetting):
        (WebCore::DumpRenderTree::dump):
        * DumpRenderTree/qt/DumpRenderTreeQt.h:
        (DumpRenderTree):
        * DumpRenderTree/qt/TestRunnerQt.cpp:
        (TestRunner::resetDumping):
        (TestRunner::reset):
        * DumpRenderTree/qt/TestRunnerQt.h:
        (TestRunner):

2012-10-29  Christophe Dumez  <christophe.dumez@intel.com>

        [WK2][WKTR] Enable Shadow DOM at runtime if compiled with SHADOW_DOM support
        https://bugs.webkit.org/show_bug.cgi?id=100668

        Reviewed by Kenneth Rohde Christiansen.

        Enable Shadow DOM functionality at run time in WebKitTestRunner
        if compiled with SHADOW_DOM flag set. This is needed to run
        the Shadow DOM layout tests.

        * WebKitTestRunner/InjectedBundle/InjectedBundle.cpp:
        (WTR::InjectedBundle::beginTesting):

2012-10-29  Yael Aharon  <yael.aharon@intel.com>

        [EFL][AC] Fix bugs preventing us from running layout tests with AC turned on
        https://bugs.webkit.org/show_bug.cgi?id=100598

        Reviewed by Kenneth Rohde Christiansen.

        Make sure to use opengl_x11 engine when AC is turned on and X11 is in use.
        We cannot create a gl context otherwise.

        * MiniBrowser/efl/main.c:
        (elm_main):
        * WebKitTestRunner/efl/PlatformWebViewEfl.cpp:
        (WTR::initEcoreEvas):
        * DumpRenderTree/efl/DumpRenderTree.cpp:
        (initEcoreEvas):
        * EWebLauncher/efl/main.c:
        (windowCreate):

2012-10-29  Raphael Kubo da Costa  <raphael.kubo.da.costa@intel.com>

        [EFL][WK2] REGRESSION(r132342): fast/events/frame-tab-focus.html fails
        https://bugs.webkit.org/show_bug.cgi?id=100646

        Reviewed by Kenneth Rohde Christiansen.

        * WebKitTestRunner/efl/PlatformWebViewEfl.cpp:
        (WTR::PlatformWebView::focus): Improve the check we perform to
        decide whether the focus should be taken out of the view before
        focusing it again so that we do not unnecessarily unfocus it and
        cause blur/focus events to be triggered. Instead of just verifying
        if the Evas_Object representing the view has focus, use the WK C
        API to check that the currently focused frame is not the main
        frame.

2012-10-29  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r132782.
        http://trac.webkit.org/changeset/132782
        https://bugs.webkit.org/show_bug.cgi?id=100653

        It made 400+ tests fail and 180 tests flakey on Qt (Requested
        by Ossy on #webkit).

        * DumpRenderTree/qt/DumpRenderTreeQt.cpp:
        (WebCore::DumpRenderTree::resetToConsistentStateBeforeTesting):

2012-10-29  Allan Sandfeld Jensen  <allan.jensen@digia.com>

        [Qt] Flaky security tests
        https://bugs.webkit.org/show_bug.cgi?id=100388

        Reviewed by Jocelyn Turcotte.

        Disable text output and load a blank URL to ensure the documentLoader is cleared
        before we start dumping text for the new page. Otherwise messages from the old page
        may end up in the text output of the new test.

        * DumpRenderTree/qt/DumpRenderTreeQt.cpp:
        (WebCore::DumpRenderTree::resetToConsistentStateBeforeTesting):

2012-10-29  Jochen Eisinger  <jochen@chromium.org>

        [chromium] remove remaining usages of webkit_support from the TestRunner library
        https://bugs.webkit.org/show_bug.cgi?id=100344

        Reviewed by Adam Barth.

        The most important part is to not rely on calling out to gdk/X11 to
        translate keycodes to hardware keycodes, as this is not possible inside
        the sandbox.

        * DumpRenderTree/DumpRenderTree.gypi:
        * DumpRenderTree/chromium/DRTTestRunner.h:
        (WebKit):
        (webkit_support):
        * DumpRenderTree/chromium/TestRunner/public/WebTestDelegate.h:
        (WebTestDelegate):
        * DumpRenderTree/chromium/TestRunner/src/CppVariant.h:
        * DumpRenderTree/chromium/TestRunner/src/EventSender.cpp:
        (WebTestRunner):
        (WebTestRunner::EventSender::doDragDrop):
        (WebTestRunner::EventSender::updateClickCountForButton):
        (WebTestRunner::EventSender::mouseDown):
        (WebTestRunner::EventSender::mouseUp):
        (WebTestRunner::EventSender::mouseMoveTo):
        (WebTestRunner::EventSender::keyDown):
        (WebTestRunner::EventSender::replaySavedEvents):
        (WebTestRunner::EventSender::contextClick):
        (WebTestRunner::EventSender::beginDragWithFiles):
        (WebTestRunner::EventSender::sendCurrentTouchEvent):
        (WebTestRunner::EventSender::handleMouseWheel):
        (WebTestRunner::EventSender::gestureEvent):
        (WebTestRunner::EventSender::gestureFlingCancel):
        (WebTestRunner::EventSender::gestureFlingStart):
        * DumpRenderTree/chromium/TestRunner/src/KeyCodeMapping.cpp: Added.
        (WebTestRunner):
        (WebTestRunner::NativeKeyCodeForWindowsKeyCode):
        * DumpRenderTree/chromium/TestRunner/src/KeyCodeMapping.h: Copied from Tools/DumpRenderTree/chromium/TestRunner/src/TestRunner.h.
        (WebTestRunner):
        * DumpRenderTree/chromium/TestRunner/src/TestDelegate.h:
        (TestDelegate):
        * DumpRenderTree/chromium/TestRunner/src/TestRunner.cpp:
        * DumpRenderTree/chromium/TestRunner/src/TestRunner.h:
        * DumpRenderTree/chromium/TestRunner/src/WebTestInterfaces.cpp:
        (WebTestInterfaces::Internal):
        (WebTestRunner::WebTestInterfaces::Internal::getCurrentTimeInMillisecond):
        (WebTestRunner):
        (WebTestRunner::WebTestInterfaces::Internal::getAbsoluteWebStringFromUTF8Path):
        * DumpRenderTree/chromium/WebViewHost.cpp:
        (WebViewHost::getCurrentTimeInMillisecond):
        (WebViewHost::getAbsoluteWebStringFromUTF8Path):
        * DumpRenderTree/chromium/WebViewHost.h:
        (WebViewHost):

2012-10-29  Jonathan Dong  <jonathan.dong@torchmobile.com.cn>

        Unreviewed. Add jonathan.dong@torchmobile.com.cn as a committer.
        https://bugs.webkit.org/show_bug.cgi?id=100629

        * Scripts/webkitpy/common/config/committers.py:

2012-10-27  Dan Bernstein  <mitz@apple.com>

        REAL_PLATFORM_NAME build setting is no longer needed
        https://bugs.webkit.org/show_bug.cgi?id=100587

        Reviewed by Mark Rowe.

        Removed the definition of REAL_PLATFORM_NAME and replaced references to it with references
        to PLATFORM_NAME.

        * DumpRenderTree/mac/Configurations/Base.xcconfig:
        * DumpRenderTree/mac/Configurations/CompilerVersion.xcconfig:
        * DumpRenderTree/mac/Configurations/DebugRelease.xcconfig:
        * MiniBrowser/Configurations/Base.xcconfig:
        * MiniBrowser/Configurations/CompilerVersion.xcconfig:
        * TestWebKitAPI/Configurations/Base.xcconfig:
        * TestWebKitAPI/Configurations/CompilerVersion.xcconfig:
        * WebKitTestRunner/Configurations/Base.xcconfig:
        * WebKitTestRunner/Configurations/CompilerVersion.xcconfig:
        * WebKitTestRunner/Configurations/DebugRelease.xcconfig:

2012-10-26  Anders Carlsson  <andersca@apple.com>

        Crash when making NPRuntime calls with a null NPP pointer
        https://bugs.webkit.org/show_bug.cgi?id=100569

        Reviewed by Darin Adler.

        Add new NPRuntimeCallsWithNullNPP plug-in test.

        * DumpRenderTree/DumpRenderTree.gypi:
        * DumpRenderTree/DumpRenderTree.xcodeproj/project.pbxproj:
        * DumpRenderTree/TestNetscapePlugIn/PluginTest.cpp:
        (PluginTest::NPN_ReleaseVariantValue):
        (PluginTest::netscapeFuncs):
        * DumpRenderTree/TestNetscapePlugIn/PluginTest.h:
        (PluginTest):
        * DumpRenderTree/TestNetscapePlugIn/Tests/NPRuntimeCallsWithNullNPP.cpp: Added.
        (NPRuntimeCallsWithNullNPP):
        (NPRuntimeCallsWithNullNPP::NPRuntimeCallsWithNullNPP):
        (NPRuntimeCallsWithNullNPP::NPP_New):
        * DumpRenderTree/TestNetscapePlugIn/win/TestNetscapePlugin.vcproj:
        * DumpRenderTree/qt/TestNetscapePlugin/TestNetscapePlugin.pro:
        * GNUmakefile.am:

2012-10-26  Dominic Mazzoni  <dmazzoni@google.com>

        AX: Notification should be sent when accessibilityIsIgnored changes
        https://bugs.webkit.org/show_bug.cgi?id=99547

        Reviewed by Chris Fleizach.

        Add additional accessibility notifications.

        * DumpRenderTree/chromium/WebViewHost.cpp:
        (WebViewHost::postAccessibilityNotification):

2012-10-25  Roger Fong  <roger_fong@apple.com>

        Get rid of (<X%) failing output for old-run-webkit-tests.
        https://bugs.webkit.org/show_bug.cgi?id=100447

        Reviewed by Jessie Berlin.

        Not a particularly useful piece of information. It's pretty much never above 1%.
        new-run-webkit-tests does not output this either.

        * Scripts/old-run-webkit-tests:
        (printResults):

2012-10-26  Xianzhu Wang  <wangxianzhu@chromium.org>

        Build bot gives incorrect link to EWS build failure
        https://bugs.webkit.org/show_bug.cgi?id=100436

        Reviewed by Adam Barth.

        * Scripts/webkitpy/tool/bot/commitqueuetask_unittest.py:
        (MockCommitQueue.__init__):
        (MockCommitQueue.command_failed): Return incremental failure_status_id
        (CommitQueueTaskTest.test_red_tree_patch_rejection): Check failure_status_id
        * Scripts/webkitpy/tool/bot/patchanalysistask.py:
        (PatchAnalysisTask._test_patch): Use the failure_status_id of test with patch when test without patch fails and test with patch has unexpected failures.

2012-10-26  Raphael Kubo da Costa  <raphael.kubo.da.costa@intel.com>

        webkitpy: Pass the `Listen' Apache directive from webkitpy, not the httpd.conf files.
        https://bugs.webkit.org/show_bug.cgi?id=98602

        Reviewed by Dirk Pranke.

        Unify all the different `Listen' directives present in the several
        httpd.conf files we have in LayoutTests/http/conf. For one, we
        were already passing `Listen 127.0.0.1:8000' via webkitpy before,
        and opening the other ports from the conf files.

        The configuration files differed mostly in the way they handled
        IPV6 ports. Some of them did not listen to IPV6 ports because the
        systems which used them sometimes did not have IPV6 support. The
        `http_server_supports_ipv6' method has been added to Port to
        address that. cygwin, on its turn, still seems to use Apache 1.3,
        which does not support IPV6 at all; the newly-added method has a
        special case for that. Plus, perform a socket.getaddrinfo() call
        the same way Apache itself does so we are sure we only enable IPV6
        when setting that up in the httpd server is not going to fail.

        * Scripts/webkitpy/common/system/platforminfo_mock.py:
        (MockPlatformInfo.is_cygwin):
        * Scripts/webkitpy/layout_tests/port/base.py:
        (Port.baseline_version_dir):
        (Port.to.start_websocket_server):
        (Port.to):
        (Port.to.http_server_supports_ipv6):
        * Scripts/webkitpy/layout_tests/port/base_unittest.py:
        (PortTest.test_http_server_supports_ipv6):
        (PortTest.test_build_path):
        * Scripts/webkitpy/layout_tests/servers/apache_http_server.py:
        (LayoutTestApacheHttpd):
        (LayoutTestApacheHttpd.__init__):

2012-10-26  David Barton  <dbarton@mathscribe.com>

        Unreviewed. Update my IRC nickname to a registered one.

        * Scripts/webkitpy/common/config/committers.py:

2012-10-26  Simon Hausmann  <simon.hausmann@digia.com>

        [Qt] Fix the LLInt build on Windows
        https://bugs.webkit.org/show_bug.cgi?id=97648

        Reviewed by Tor Arne VestbÃ¸.

        Added BIN_EXTENSION variable - similar to automake - that expands to .exe as suffix for
        executable programs on Windows. Empty otherwise. Also added support for force_build_all
        to allow overriding us disabling build_all for TEMPLATE = app.

        * qmake/mkspecs/features/default_pre.prf:

2012-10-26  Xiaobo Wang  <xbwang@torchmobile.com.cn>

        [BlackBerry] Support pixel tests for BlackBerry DRT
        https://bugs.webkit.org/show_bug.cgi?id=100210

        Reviewed by Rob Buis.

        (The following 2 files are missed in previous patch(r132582), adding them
        again.)

        * DumpRenderTree/blackberry/build: Added.
        * DumpRenderTree/blackberry/src.pro: Added.
        Adds 2 files for building ImageDiff, by Christopher Wells.

2012-10-26  Thiago Marcos P. Santos  <thiago.santos@intel.com>

        Add feature flags for CSS Device Adaptation
        https://bugs.webkit.org/show_bug.cgi?id=95960

        Reviewed by Kenneth Rohde Christiansen.

        * Scripts/webkitperl/FeatureList.pm:

2012-10-26  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r132552.
        http://trac.webkit.org/changeset/132552
        https://bugs.webkit.org/show_bug.cgi?id=100486

        Makes typeahead tests crash in debug. (Requested by pfeldman
        on #webkit).

        * DumpRenderTree/DumpRenderTree.gypi:
        * DumpRenderTree/chromium/DRTTestRunner.h:
        * DumpRenderTree/chromium/TestRunner/public/WebTestDelegate.h:
        (WebTestDelegate):
        * DumpRenderTree/chromium/TestRunner/src/CppVariant.h:
        * DumpRenderTree/chromium/TestRunner/src/EventSender.cpp:
        (WebTestRunner):
        (WebTestRunner::EventSender::doDragDrop):
        (WebTestRunner::EventSender::updateClickCountForButton):
        (WebTestRunner::EventSender::mouseDown):
        (WebTestRunner::EventSender::mouseUp):
        (WebTestRunner::EventSender::mouseMoveTo):
        (WebTestRunner::EventSender::keyDown):
        (WebTestRunner::EventSender::replaySavedEvents):
        (WebTestRunner::EventSender::contextClick):
        (WebTestRunner::EventSender::beginDragWithFiles):
        (WebTestRunner::EventSender::sendCurrentTouchEvent):
        (WebTestRunner::EventSender::handleMouseWheel):
        (WebTestRunner::EventSender::gestureEvent):
        (WebTestRunner::EventSender::gestureFlingCancel):
        (WebTestRunner::EventSender::gestureFlingStart):
        * DumpRenderTree/chromium/TestRunner/src/KeyCodeMapping.cpp: Removed.
        * DumpRenderTree/chromium/TestRunner/src/KeyCodeMapping.h: Removed.
        * DumpRenderTree/chromium/TestRunner/src/TestDelegate.h:
        (TestDelegate):
        * DumpRenderTree/chromium/TestRunner/src/TestRunner.cpp:
        * DumpRenderTree/chromium/TestRunner/src/TestRunner.h:
        (WebKit):
        (webkit_support):
        * DumpRenderTree/chromium/TestRunner/src/WebTestInterfaces.cpp:
        (WebTestInterfaces::Internal):
        * DumpRenderTree/chromium/WebViewHost.cpp:
        * DumpRenderTree/chromium/WebViewHost.h:
        (WebViewHost):

2012-10-26  Xiaobo Wang  <xbwang@torchmobile.com.cn>

        [BlackBerry] Support pixel tests for BlackBerry DRT
        https://bugs.webkit.org/show_bug.cgi?id=100210

        Reviewed by Rob Buis.

        The implementation is based on the patch from Christopher Wells.

        * DumpRenderTree/blackberry/DumpRenderTree.cpp:
        (BlackBerry::WebKit::DumpRenderTree::DumpRenderTree):
        (BlackBerry::WebKit::DumpRenderTree::runTest):
        (BlackBerry::WebKit::DumpRenderTree::runCurrentTest):
        (BlackBerry::WebKit::DumpRenderTree::resetToConsistentStateBeforeTesting):
        (BlackBerry::WebKit::DumpRenderTree::runTests):
        (BlackBerry::WebKit::DumpRenderTree::dump):
        * DumpRenderTree/blackberry/DumpRenderTreeBlackBerry.h:
        (DumpRenderTree):

        * DumpRenderTree/blackberry/PNGImageEncoder.cpp:
        (BGRAtoRGBA):
        (encodeBitmapToPNG):
        * DumpRenderTree/blackberry/PNGImageEncoder.h:
        The changes to PNGImageEncoder files are from master_40, patched by Tyler
        Abbott and Rob Buis.

        * DumpRenderTree/blackberry/PixelDumpSupportBlackBerry.cpp:
        (createBitmapContextFromWebView):
        (computeMD5HashStringForBitmapContext):
        (printPNG):
        (dumpBitmap):
        * DumpRenderTree/blackberry/PixelDumpSupportBlackBerry.h:
        (BitmapContext::createByAdoptingData):
        (BitmapContext::~BitmapContext):
        (BitmapContext):
        (BitmapContext::BitmapContext):

        * DumpRenderTree/blackberry/build: Added.
        * DumpRenderTree/blackberry/src.pro: Added.
        Adds 2 files for building ImageDiff, by Christopher Wells.

2012-10-25  Min Qin  <qinmin@chromium.org>

        Fix a layout test crash if a TestWebkitPlugin is put inside an iframe
        https://bugs.webkit.org/show_bug.cgi?id=100406

        Reviewed by Adam Barth.

        Resize the context with an empty rect will cause a gl_error in gles2_cmd_decoder.cc.
        Don't paint the plugin if m_rect is empty.

        * DumpRenderTree/chromium/TestWebPlugin.cpp:
        (TestWebPlugin::updateGeometry):

2012-10-25  Jinwoo Song  <jinwoo7.song@samsung.com>

        [EFL][WK2] Display tooltip in MiniBrowser
        https://bugs.webkit.org/show_bug.cgi?id=99322

        Reviewed by Kenneth Rohde Christiansen.

        Display tooltip in MiniBrowser using elm_object_tooltip_text_set().

        * MiniBrowser/efl/main.c:
        (on_tooltip_text_set):
        (on_tooltip_text_unset):
        (window_create):

2012-10-25  Jochen Eisinger  <jochen@chromium.org>

        [chromium] remove remaining usages of webkit_support from the TestRunner library
        https://bugs.webkit.org/show_bug.cgi?id=100344

        Reviewed by Adam Barth.

        The most important part is to not rely on calling out to gdk/X11 to
        translate keycodes to hardware keycodes, as this is not possible inside
        the sandbox.

        * DumpRenderTree/DumpRenderTree.gypi:
        * DumpRenderTree/chromium/DRTTestRunner.h:
        (WebKit):
        (webkit_support):
        * DumpRenderTree/chromium/TestRunner/public/WebTestDelegate.h:
        (WebTestDelegate):
        * DumpRenderTree/chromium/TestRunner/src/CppVariant.h:
        * DumpRenderTree/chromium/TestRunner/src/EventSender.cpp:
        (WebTestRunner):
        (WebTestRunner::EventSender::doDragDrop):
        (WebTestRunner::EventSender::updateClickCountForButton):
        (WebTestRunner::EventSender::mouseDown):
        (WebTestRunner::EventSender::mouseUp):
        (WebTestRunner::EventSender::mouseMoveTo):
        (WebTestRunner::EventSender::keyDown):
        (WebTestRunner::EventSender::replaySavedEvents):
        (WebTestRunner::EventSender::contextClick):
        (WebTestRunner::EventSender::beginDragWithFiles):
        (WebTestRunner::EventSender::sendCurrentTouchEvent):
        (WebTestRunner::EventSender::handleMouseWheel):
        (WebTestRunner::EventSender::gestureEvent):
        (WebTestRunner::EventSender::gestureFlingCancel):
        (WebTestRunner::EventSender::gestureFlingStart):
        * DumpRenderTree/chromium/TestRunner/src/KeyCodeMapping.cpp: Added.
        (WebTestRunner):
        (WebTestRunner::NativeKeyCodeForWindowsKeyCode):
        * DumpRenderTree/chromium/TestRunner/src/KeyCodeMapping.h: Copied from Tools/DumpRenderTree/chromium/TestRunner/src/TestRunner.h.
        (WebTestRunner):
        * DumpRenderTree/chromium/TestRunner/src/TestDelegate.h:
        (TestDelegate):
        * DumpRenderTree/chromium/TestRunner/src/TestRunner.cpp:
        * DumpRenderTree/chromium/TestRunner/src/TestRunner.h:
        * DumpRenderTree/chromium/TestRunner/src/WebTestInterfaces.cpp:
        (WebTestInterfaces::Internal):
        (WebTestRunner::WebTestInterfaces::Internal::getCurrentTimeInMillisecond):
        (WebTestRunner):
        (WebTestRunner::WebTestInterfaces::Internal::getAbsoluteWebStringFromUTF8Path):
        * DumpRenderTree/chromium/WebViewHost.cpp:
        (WebViewHost::getCurrentTimeInMillisecond):
        (WebViewHost::getAbsoluteWebStringFromUTF8Path):
        * DumpRenderTree/chromium/WebViewHost.h:
        (WebViewHost):

2012-10-25  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r132514.
        http://trac.webkit.org/changeset/132514
        https://bugs.webkit.org/show_bug.cgi?id=100440

        "Broke chromium content_browsertests AccessibilityAriaMenu
        AccessibilityInputRange AccessibilityListMarkers" (Requested
        by scheib on #webkit).

        * DumpRenderTree/chromium/WebViewHost.cpp:
        (WebViewHost::postAccessibilityNotification):

2012-10-25  Dirk Pranke  <dpranke@chromium.org>

        rwt --lint-test-files doesn't handle the cascade properly
        https://bugs.webkit.org/show_bug.cgi?id=100315

        Reviewed by Ojan Vafai.

        We were only linting the first file in each port's list of
        expectations.

        This change pushes more of the logic for linting files into
        the TestExpectations classes themselves, but it's still a bit of
        a hack. A better solution will require splitting out the actual
        parsing of the files from the TestExpectations constructor.

        * Scripts/webkitpy/layout_tests/models/test_expectations.py:
        (TestExpectations):
        (TestExpectations.__init__):
        * Scripts/webkitpy/layout_tests/models/test_expectations_unittest.py:
        (parse_exp):
        (SkippedTests.check):
        * Scripts/webkitpy/layout_tests/run_webkit_tests.py:
        (lint):
        * Scripts/webkitpy/layout_tests/run_webkit_tests_integrationtest.py:
        (LintTest.test_all_configurations.FakePort.__init__):
        (LintTest.test_all_configurations):
        (LintTest.test_lint_test_files__errors):
        * Scripts/webkitpy/style/checkers/test_expectations.py:
        (TestExpectationsChecker.check_test_expectations):

2012-10-25  Zan Dobersek  <zandobersek@gmail.com>

        Unreviewed GTK gardening.

        Skipping the atspi-basic-hierarchy test case in the TestWebKitAccessibility
        WebKit2 API test since the test is currently failing.

        * Scripts/run-gtk-tests:
        (TestRunner):

2012-10-25  Dominic Mazzoni  <dmazzoni@google.com>

        AX: Notification should be sent when accessibilityIsIgnored changes
        https://bugs.webkit.org/show_bug.cgi?id=99547

        Reviewed by Chris Fleizach.

        Add additional accessibility notifications.

        * DumpRenderTree/chromium/WebViewHost.cpp:
        (WebViewHost::postAccessibilityNotification):

2012-10-25  Dominik RÃ¶ttsches  <dominik.rottsches@intel.com>

        Conditionalize XHR timeout support
        https://bugs.webkit.org/show_bug.cgi?id=100356

        Reviewed by Adam Barth.

        Adding XHR_TIMEOUT feature in perl and qmake files.

        * Scripts/webkitperl/FeatureList.pm:
        * qmake/mkspecs/features/features.pri:

2012-10-25  Kenneth Rohde Christiansen  <kenneth@webkit.org>

        Unreviewed. Update my contact info.

        * Scripts/webkitpy/common/config/committers.py:

2012-10-25  Terry Anderson  <tdanderson@chromium.org>

        Unreviewed. Adding myself as a committer.

        * Scripts/webkitpy/common/config/committers.py:

2012-10-25  Zeno Albisser  <zeno@webkit.org>

        [Qt] Adjust library name in webkitdirs.pm after r131300.
        https://bugs.webkit.org/show_bug.cgi?id=100376

        The library was renamed from QtWebKit to QtWebKitWidgets.
        run-launcher was still looking for QtWebKit.

        Reviewed by Simon Hausmann.

        * Scripts/webkitdirs.pm:
        (builtDylibPathForName):

2012-10-22  Mikhail Naganov  <mnaganov@chromium.org>

        [Chromium] Add supportMultipleWindows setting, needed for Android
        https://bugs.webkit.org/show_bug.cgi?id=99716

        Reviewed by Adam Barth.

        Add supportMultipleWindows settings for reusing the same view when
        opening popups. This is required for emulating the behavior of
        Android WebView. Adding into WebCore, as other ports might want to
        use this setting in the future.

        * DumpRenderTree/chromium/DRTTestRunner.cpp:
        (DRTTestRunner::overridePreference):
        * DumpRenderTree/chromium/WebPreferences.cpp:
        (WebPreferences::reset):
        (WebPreferences::applyTo):
        * DumpRenderTree/chromium/WebPreferences.h:
        (WebPreferences):

2012-10-25  Sudarsana Nagineni  <sudarsana.nagineni@intel.com>

        [EFL][WK2] JavaScript popups are not focused when opened
        https://bugs.webkit.org/show_bug.cgi?id=100354

        Reviewed by Kenneth Rohde Christiansen.

        Move focus to the JavaScript popups when opened so that the key events
        are forwarded to the popups instead of web view.

        * MiniBrowser/efl/main.c:
        (on_javascript_alert):
        (on_javascript_confirm):
        (on_javascript_prompt):

2012-10-25  Eugene Klyuchnikov  <eustas.bug@gmail.com>

        Web Inspector: Fix "check-inspector-strings" script and fix localized strings.
        https://bugs.webkit.org/show_bug.cgi?id=100090

        Reviewed by Vsevolod Vlasov.

        Script "check-inspector-strings" seems to be broken.
        Fixed it, refined search algorithm.

        * Scripts/check-inspector-strings: Fixed and refined.

2012-10-24  Dirk Pranke  <dpranke@chromium.org>

        nrwt: fix a couple of minor crashing issues under cygwin
        https://bugs.webkit.org/show_bug.cgi?id=100309

        Reviewed by Ojan Vafai.

        Cygwin was crashing on a null object reference and then
        an oserror in kill().

        * Scripts/webkitpy/common/system/executive.py:
        (Executive.kill_process):
        * Scripts/webkitpy/layout_tests/port/server_process.py:
        (ServerProcess.stop):

2012-10-24  Dirk Pranke  <dpranke@chromium.org>

        nrwt: truncate meter lines properly on windows
        https://bugs.webkit.org/show_bug.cgi?id=100062

        Reviewed by Tony Chang.

        This change adds the code to figure out the terminal width
        on windows (it was already there for Unixen) and moves it
        to a platform-specific object.

        * Scripts/webkitpy/common/system/platforminfo.py:
        (PlatformInfo.terminal_width):
        * Scripts/webkitpy/common/system/platforminfo_mock.py:
        (MockPlatformInfo.total_bytes_memory):
        (MockPlatformInfo):
        (MockPlatformInfo.terminal_width):
        * Scripts/webkitpy/layout_tests/views/metered_stream.py:
        (MeteredStream.__init__):
        (MeteredStream.number_of_columns):
        (MeteredStream.flush):
        * Scripts/webkitpy/layout_tests/views/printing.py:
        (Printer.__init__):
        (Printer._test_status_line):

2012-10-24  Dirk Pranke  <dpranke@chromium.org>

        tweak debug logging in webkit-patch optimize-baselines
        https://bugs.webkit.org/show_bug.cgi?id=100294

        Reviewed by Ojan Vafai.

        This changes the logging to print out the baselines found
        (and their checksums) even when we don't do anything.

        * Scripts/webkitpy/common/checkout/baselineoptimizer.py:
        (BaselineOptimizer.optimize):

2012-10-24  Sailesh Agrawal  <sail@chromium.org>

        Incorrect keycodes for numpad /, -, +, .
        https://bugs.webkit.org/show_bug.cgi?id=99188

        Reviewed by Tony Chang.

        Add key mappings for all numpad keys.

        * DumpRenderTree/mac/EventSendingController.mm:
        (KeyMappingEntry):
        (-[EventSendingController keyDown:withModifiers:withLocation:]): Added all numpad keys.

2012-10-24  Dirk Pranke  <dpranke@chromium.org>

        webkitpy: clean up references to Skipped files
        https://bugs.webkit.org/show_bug.cgi?id=100045

        Reviewed by Ojan Vafai.

        Since they are no longer used or needed ...

        * Scripts/webkitpy/layout_tests/port/apple.py:
        (ApplePort._generate_all_test_configurations):
        * Scripts/webkitpy/layout_tests/port/base.py:
        (Port.skipped_layout_tests):
        (Port.expectations_files):
        (Port._wk2_port_name):
        * Scripts/webkitpy/layout_tests/port/gtk.py:
        (GtkPort):
        * Scripts/webkitpy/layout_tests/port/mac_unittest.py:
        (MacTest.test_default_timeout_ms):
        * Scripts/webkitpy/layout_tests/port/port_testcase.py:
        (test_expectations_files):
        (test_expectations_files.platform_dirs):
        * Scripts/webkitpy/layout_tests/port/qt.py:
        (QtPort.__init__):

2012-10-24  Jochen Eisinger  <jochen@chromium.org>

        [chromium] Use include paths relative to Source/ in the TestRunner's public API
        https://bugs.webkit.org/show_bug.cgi?id=100079

        Reviewed by Adam Barth.

        For a inside-chromium build, we usually don't add the WebKit API paths
        as include paths, so including files by name only does not work.

        Eventually we might want to move to a model where all includes are
        relative to Source/, so we're using that here already now.

        * DumpRenderTree/DumpRenderTree.gyp/DumpRenderTree.gyp:
        * DumpRenderTree/chromium/TestRunner/public/WebEventSender.h:
        * DumpRenderTree/chromium/TestRunner/public/WebTestDelegate.h:

2012-10-24  Ojan Vafai  <ojan@chromium.org>

        Show an error when there are no completed builds in the past 20 runs
        https://bugs.webkit.org/show_bug.cgi?id=100266

        Reviewed by Dimitri Glazkov.

        Right now we get a cryptic JS error in the console when loading the gtk port. This at least gives an error in
        the notification stream. We should probably tweak this UI to make it so we can make
        errors in the notification stream stick out (e.g. make the text red).

        We should also consider making the number of runs to load dynamic (e.g. if 20 runs don't work,
        try 40).

        * BuildSlaveSupport/build.webkit.org-config/public_html/TestFailures/scripts/garden-o-matic.js:
        * BuildSlaveSupport/build.webkit.org-config/public_html/TestFailures/scripts/results.js:
        * BuildSlaveSupport/build.webkit.org-config/public_html/TestFailures/scripts/results_unittests.js:

2012-10-24  Ian Vollick  <vollick@chromium.org>

        [chromium] Explicitly disable accelerated animations in DRT
        https://bugs.webkit.org/show_bug.cgi?id=100241

        Reviewed by Adrienne Walker.

        Disable accelerated animations by default in DRT.        

        * DumpRenderTree/chromium/DumpRenderTree.cpp:
        (main):
        * DumpRenderTree/chromium/TestShell.cpp:
        (TestShell::setAcceleratedAnimationEnabled):
        * DumpRenderTree/chromium/TestShell.h:
        (TestShell):

2012-10-24  Jocelyn Turcotte  <jocelyn.turcotte@digia.com>

        [Qt] Move the QQuickWebViewExperimental pointer to QQuickWebViewPrivate
        https://bugs.webkit.org/show_bug.cgi?id=100253

        Reviewed by Kenneth Rohde Christiansen.

        * WebKitTestRunner/qt/PlatformWebViewQt.cpp:
        (WTR::WrapperWindow::handleStatusChanged):
        Use QQuickWebView::experimental rather than creating a new instance.

2012-10-24  Thiago Marcos P. Santos  <thiago.santos@intel.com>

        [EFL] run-webkit-tests writes garbage on stderr when running on Xvfb
        https://bugs.webkit.org/show_bug.cgi?id=100243

        Reviewed by Kenneth Rohde Christiansen.

        These errors generate noise on the reports and in some cases, like when
        running perf tests, makes the test fail. By using Xext, we can add a
        dummy handler to ignore these errors.

        We could have added this handler on the top level EWK API, but that
        would be intrusive and could override handlers defined by the user.

        * WebKitTestRunner/PlatformEfl.cmake:
        * WebKitTestRunner/efl/main.cpp:
        (dummyExtensionErrorHandler):
        (main):

2012-10-24  Carlos Garcia Campos  <cgarcia@igalia.com>

        Unreviewed. Fix the GTK+ build.

        * TestWebKitAPI/GNUmakefile.am: Add GTK_FLAGS to
        libTestWebKitAPIMain and webcore cflags to TestGtk.

2012-10-24  Zeno Albisser  <zeno@webkit.org>

        Implement GraphicsSurface for Windows.
        https://bugs.webkit.org/show_bug.cgi?id=98147

        Reviewed by Kenneth Rohde Christiansen.

        * qmake/mkspecs/features/features.prf:
                Activate GraphicsSurface on windows in case opengles2 (ANGLE)
                is available in QT_CONFIG.

2012-10-24  Raphael Kubo da Costa  <raphael.kubo.da.costa@intel.com>

        [EFL][WK2] fast/repaint/delete-into-nested-block.html and fast/repaint/4776765.html are flaky
        https://bugs.webkit.org/show_bug.cgi?id=100010

        Reviewed by Kenneth Rohde Christiansen.

        Force the main view to receive focus even if Evas already
        considers it to be focused.

        It might happen that a different frame is focused by a page and
        the focus change notification does not reach Evas. When another
        test is run, the main frame is then not considered to be focused
        by WebCore, and things such as focus rings are not drawn as
        expected.

        * WebKitTestRunner/efl/PlatformWebViewEfl.cpp:
        (WTR::PlatformWebView::focus):

2012-10-24  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r132333.
        http://trac.webkit.org/changeset/132333
        https://bugs.webkit.org/show_bug.cgi?id=100234

        Crashes many tests on the EFL-WK2 bot. (Requested by rakuco on
        #webkit).

        * WebKitTestRunner/TestController.cpp:
        (WTR::TestController::resetStateToConsistentValues):
        * WebKitTestRunner/efl/TestControllerEfl.cpp:
        (WTR::TestController::platformInitializeContext):

2012-10-24  Dongwoo Joshua Im  <dw.im@samsung.com>

        [GTK] Fix build break - undefined reference to 'gtk_init'
        https://bugs.webkit.org/show_bug.cgi?id=100221

        Unreviewed build fix.

        GTK_LIBS is needed for TestWTF.

        * TestWebKitAPI/GNUmakefile.am:

2012-10-24  Grzegorz Czajkowski  <g.czajkowski@samsung.com>

        WebKitTestRunner needs to turn on 'setContinuousSpellCheckingEnabled'
        https://bugs.webkit.org/show_bug.cgi?id=93611

        Reviewed by Hajime Morita.

        WebKitTestRunner enables spelling feature to pass the layout tests from editing/spelling.

        * WebKitTestRunner/TestController.cpp:
        (WTR::TestController::resetStateToConsistentValues):
        Enables spelling by WebKit2 C API.

        * WebKitTestRunner/efl/TestControllerEfl.cpp:
        (WTR::TestController::platformInitializeContext):
        Attaches WKTextChecker's client and sets default language for WebKit2-EFL port.

2012-10-24  Mario Sanchez Prada  <mario@webkit.org>

        [WK2] [GTK] TestWebKitAccessibility is not being run
        https://bugs.webkit.org/show_bug.cgi?id=100102

        Reviewed by Carlos Garcia Campos.

        Removed wrong early return in _start_accessibility_daemons().

        * Scripts/run-gtk-tests:
        (TestRunner._lookup_atspi2_binary): Removed wrong line.

2012-10-24  Noel Gordon  <noel.gordon@gmail.com>

        [chromium] Plumb DRT WebkitShouldRespectImageOrientation through to page settings 
        https://bugs.webkit.org/show_bug.cgi?id=100197

        Reviewed by Kent Tamura.

        fast/images/exif-orientation.html and fast/images/exif-orientation-css.html require a DRT
        WebkitShouldRespectImageOrientation preference.  Add the chromium implementation for this
        preference and plumb it through to page settings.

        * DumpRenderTree/chromium/DRTTestRunner.cpp:
        (DRTTestRunner::overridePreference): Update the tests WebkitShouldRespectImageOrientation
        setting in DRT prefs.
        * DumpRenderTree/chromium/WebPreferences.cpp:
        (WebPreferences::reset): Disable the preference before and after each test.
        (WebPreferences::applyTo): Apply the preference to the page settings of each test.
        * DumpRenderTree/chromium/WebPreferences.h:
        (WebPreferences):

2012-10-23  Carlos Garcia Campos  <cgarcia@igalia.com>

        [GTK] TestWebKitAPI/TestWebKit2 and TestWebKitAPI/TestGtk link to the installed libs
        https://bugs.webkit.org/show_bug.cgi?id=100134

        Reviewed by Martin Robinson.

        Do not share the LDADD variable among TestWTF, TestWebKit2 and
        TestGtk.

        * TestWebKitAPI/GNUmakefile.am:

2012-10-23  Kihong Kwon  <kihong.kwon@samsung.com>

        Unreviewed. Adding myself as committer.

        * Scripts/webkitpy/common/config/committers.py:

2012-10-23  Dan Bernstein  <mitz@apple.com>

        Tools changes for <rdar://problem/2966974> [mac] Kerning and ligatures are not enabled by default
        https://bugs.webkit.org/show_bug.cgi?id=100188

        Reviewed by Sam Weinig.

        Disable kerning and ligatures by default when running the tests.

        * DumpRenderTree/mac/DumpRenderTree.mm:
        (resetDefaultsToConsistentValues): Set a value of NO for the
        WebKitKerningAndLigaturesEnabledByDefault user default.
        * WebKitTestRunner/mac/main.mm:
        (main): Register a value of NO for the WebKitKerningAndLigaturesEnabledByDefault user
        default.

2012-10-23  Simon Fraser  <simon.fraser@apple.com>

        Allow tests to run with a tile cache, and optionally dump the tile cache via layerTreeAsText()
        https://bugs.webkit.org/show_bug.cgi?id=100159

        Reviewed by Tim Horton.

        Make WebKitTestRunner use a WKView with a tile cache for tests run in a directory
        whose path includes "tiled-drawing". It does this by passing around a WKDictionary 
        of options, and if the current PlatformWebView doesn't support those options, it will
        create a new one.

        * WebKitTestRunner/PlatformWebView.h:
        (PlatformWebView): Add a WKDictionaryRef options dictionary argument.
        (WTR::PlatformWebView::viewSupportsOptions): Returns true if the view
        supports the options in the WKDictionaryRef.
        * WebKitTestRunner/TestController.cpp:
        (WTR::TestController::initialize): Call createWebViewWithOptions() with
        no options in the normal case.
        (WTR::TestController::createWebViewWithOptions): Moved code into this fuction
        so we can call it in two places.
        (WTR::TestController::ensureViewSupportsOptions): If the current view
        doesn't support the given options, throw it away and makea  new one that does.
        * WebKitTestRunner/TestController.h:
        * WebKitTestRunner/TestInvocation.cpp:
        (WTR::shouldUseTiledDrawing): Return true if the directory contains "tiled-drawing".
        (WTR::updateTiledDrawingForCurrentTest): Tell the TestController to check whether
        the view supports the given options. No-op for non-Mac platforms.
        (WTR::TestInvocation::invoke): Call updateTiledDrawingForCurrentTest().
        * WebKitTestRunner/efl/PlatformWebViewEfl.cpp:
        (WTR::PlatformWebView::PlatformWebView): New constructor parameter.
        * WebKitTestRunner/gtk/PlatformWebViewGtk.cpp:
        (WTR::PlatformWebView::PlatformWebView):  New constructor parameter.
        * WebKitTestRunner/mac/PlatformWebViewMac.mm:
        (-[TestRunnerWKView initWithFrame:contextRef:pageGroupRef:useTiledDrawing:]):
        (-[TestRunnerWKView _shouldUseTiledDrawingArea]): Subclass the WKView so we can return
        a custom value from this method.
        (WTR::PlatformWebView::PlatformWebView):
        (WTR::PlatformWebView::viewSupportsOptions):
        * WebKitTestRunner/qt/PlatformWebViewQt.cpp:
        (WTR::PlatformWebView::PlatformWebView): New constructor parameter.
        * WebKitTestRunner/win/PlatformWebViewWin.cpp:
        (WTR::PlatformWebView::PlatformWebView): New constructor parameter.

2012-10-23  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r132276.
        http://trac.webkit.org/changeset/132276
        https://bugs.webkit.org/show_bug.cgi?id=100189

        It broke the Qt-WK2 build intentionally (Requested by
        Ossy_night on #webkit).

        * WebKitTestRunner/PlatformWebView.h:
        (PlatformWebView):
        * WebKitTestRunner/TestController.cpp:
        (WTR::TestController::initialize):
        * WebKitTestRunner/TestController.h:
        (TestController):
        * WebKitTestRunner/TestInvocation.cpp:
        (WTR):
        (WTR::TestInvocation::invoke):
        * WebKitTestRunner/efl/PlatformWebViewEfl.cpp:
        (WTR::PlatformWebView::PlatformWebView):
        * WebKitTestRunner/gtk/PlatformWebViewGtk.cpp:
        (WTR::PlatformWebView::PlatformWebView):
        * WebKitTestRunner/mac/PlatformWebViewMac.mm:
        (WTR::PlatformWebView::PlatformWebView):
        * WebKitTestRunner/qt/PlatformWebViewQt.cpp:
        (WTR::PlatformWebView::PlatformWebView):
        * WebKitTestRunner/win/PlatformWebViewWin.cpp:
        (WTR::PlatformWebView::PlatformWebView):

2012-10-23  Martin Robinson  <mrobinson@igalia.com>

        [GTK][Soup] Implement the default authentication dialog via WebCoreSupport
        https://bugs.webkit.org/show_bug.cgi?id=99351

        Reviewed by Carlos Garcia Campos.

        We no longer need to turn off the soup authentication dialog soup feature,
        because it's not installed.

        * DumpRenderTree/gtk/DumpRenderTree.cpp:
        (setDefaultsToConsistentStateValuesForTesting): Don't turn off the feature any longer.

2012-10-23  Simon Fraser  <simon.fraser@apple.com>

        Allow tests to run with a tile cache, and optionally dump the tile cache via layerTreeAsText()
        https://bugs.webkit.org/show_bug.cgi?id=100159

        Reviewed by Tim Horton.

        Make WebKitTestRunner use a WKView with a tile cache for tests run in a directory
        whose path includes "tiled-drawing". It does this by passing around a WKDictionary 
        of options, and if the current PlatformWebView doesn't support those options, it will
        create a new one.

        * WebKitTestRunner/PlatformWebView.h:
        (PlatformWebView): Add a WKDictionaryRef options dictionary argument.
        (WTR::PlatformWebView::viewSupportsOptions): Returns true if the view
        supports the options in the WKDictionaryRef.
        * WebKitTestRunner/TestController.cpp:
        (WTR::TestController::initialize): Call createWebViewWithOptions() with
        no options in the normal case.
        (WTR::TestController::createWebViewWithOptions): Moved code into this fuction
        so we can call it in two places.
        (WTR::TestController::ensureViewSupportsOptions): If the current view
        doesn't support the given options, throw it away and makea  new one that does.
        * WebKitTestRunner/TestController.h:
        * WebKitTestRunner/TestInvocation.cpp:
        (WTR::shouldUseTiledDrawing): Return true if the directory contains "tiled-drawing".
        (WTR::updateTiledDrawingForCurrentTest): Tell the TestController to check whether
        the view supports the given options. No-op for non-Mac platforms.
        (WTR::TestInvocation::invoke): Call updateTiledDrawingForCurrentTest().
        * WebKitTestRunner/efl/PlatformWebViewEfl.cpp:
        (WTR::PlatformWebView::PlatformWebView): New constructor parameter.
        * WebKitTestRunner/gtk/PlatformWebViewGtk.cpp:
        (WTR::PlatformWebView::PlatformWebView):  New constructor parameter.
        * WebKitTestRunner/mac/PlatformWebViewMac.mm:
        (-[TestRunnerWKView initWithFrame:contextRef:pageGroupRef:useTiledDrawing:]):
        (-[TestRunnerWKView _shouldUseTiledDrawingArea]): Subclass the WKView so we can return
        a custom value from this method.
        (WTR::PlatformWebView::PlatformWebView):
        (WTR::PlatformWebView::viewSupportsOptions):
        * WebKitTestRunner/qt/PlatformWebViewQt.cpp:
        (WTR::PlatformWebView::PlatformWebView): New constructor parameter.
        * WebKitTestRunner/win/PlatformWebViewWin.cpp:
        (WTR::PlatformWebView::PlatformWebView): New constructor parameter.

2012-10-23  David Barton  <dbarton@mathscribe.com>

        [MathML] Symbol font uses greek letters for roman ones on linux and Windows
        https://bugs.webkit.org/show_bug.cgi?id=99921

        Reviewed by Eric Seidel.

        Enable the STIXSizeOneSym font for testing.

        * DumpRenderTree/mac/DumpRenderTree.mm:
        (allowedFontFamilySet):
        * WebKitTestRunner/InjectedBundle/mac/ActivateFonts.mm:
        (WTR::allowedFontFamilySet):

2012-10-23  Tony Chang  <tony@chromium.org>

        [chromium] Chromium window build system does not rebuild correctly when enabling/disabling a feature
        https://bugs.webkit.org/show_bug.cgi?id=38926

        Reviewed by Eric Seidel.

        Remove hack for clobbering build when features.gypi changes. Now that
        Chromium requires VS2010 or newer, this bug has gone away.

        * Scripts/update-webkit:

2012-10-23  Jochen Eisinger  <jochen@chromium.org>

        [chromium] remove the const qualifier from WebTestDelegate::printMessage
        https://bugs.webkit.org/show_bug.cgi?id=100082

        Reviewed by Adam Barth.

        There's no reason the method should be const, and indeed for
        content_shell we want to send an IPC which is a non-const operation.

        * DumpRenderTree/chromium/TestRunner/public/WebTestDelegate.h:
        (WebTestDelegate):
        * DumpRenderTree/chromium/TestRunner/src/TestDelegate.h:
        (TestDelegate):
        * DumpRenderTree/chromium/TestRunner/src/WebTestInterfaces.cpp:
        (WebTestInterfaces::Internal):
        (WebTestRunner::WebTestInterfaces::Internal::printMessage):
        * DumpRenderTree/chromium/WebViewHost.cpp:
        (WebViewHost::printMessage):
        * DumpRenderTree/chromium/WebViewHost.h:
        (WebViewHost):

2012-10-23  Kenneth Rohde Christiansen  <kenneth@webkit.org>

        Add support for resolution media query
        https://bugs.webkit.org/show_bug.cgi?id=99077

        Reviewed by Antti Koivisto.

        Add support for the RESOLUTION_MEDIA_QUERY feature flag.

        * Scripts/webkitperl/FeatureList.pm:
        * qmake/mkspecs/features/features.pri:

2012-10-23  Bruno de Oliveira Abinader  <bruno.abinader@basyskom.com>

        Adding myself to commiters.py
        https://bugs.webkit.org/show_bug.cgi?id=100122

        Unreviewed update to commiters.py.

        * Scripts/webkitpy/common/config/committers.py:

2012-10-23  Timothy Hatcher  <timothy@apple.com>

        Unreviewed watchlist change to monitor Inspector IDLs.

        * Scripts/webkitpy/common/config/watchlist:

2012-10-23  Mikhail Pozdnyakov  <mikhail.pozdnyakov@intel.com>

        [WK2] [WTR] WebKitTestRunner needs testRunner.queueForwardNavigation
        https://bugs.webkit.org/show_bug.cgi?id=99700

        Reviewed by Kenneth Rohde Christiansen.

        Implemented testRunner.queueForwardNavigation, made little refactoring in Work Queue
        to obviate code duplication.

        * WebKitTestRunner/InjectedBundle/Bindings/TestRunner.idl:
        * WebKitTestRunner/InjectedBundle/InjectedBundle.cpp:
        (WTR::InjectedBundle::queueBackNavigation):
        (WTR):
        (WTR::InjectedBundle::queueForwardNavigation):
        * WebKitTestRunner/InjectedBundle/InjectedBundle.h:
        (InjectedBundle):
        * WebKitTestRunner/InjectedBundle/TestRunner.cpp:
        (WTR::TestRunner::queueForwardNavigation):
        (WTR):
        * WebKitTestRunner/InjectedBundle/TestRunner.h:
        (TestRunner):
        * WebKitTestRunner/TestInvocation.cpp:
        (WTR::TestInvocation::didReceiveMessageFromInjectedBundle):
        * WebKitTestRunner/WorkQueueManager.cpp:
        (NavigationItem):
        (WTR::NavigationItem::NavigationItem):
        (WTR::NavigationItem::invoke):
        (WTR):
        (WTR::WorkQueueManager::queueBackNavigation):
        (WTR::WorkQueueManager::queueForwardNavigation):
        * WebKitTestRunner/WorkQueueManager.h:
        (WorkQueueManager):

2012-10-23  Simon Hausmann  <simon.hausmann@digia.com>

        Unreviewed trivial Qt build fix: Fix build without USE_3D_GRAPHICS

        Disable USE_GRAPHICS_SURFACE if we don't have USE_3D_GRAPHICS because
        GraphicsSurface.h needs GraphicsContext3D.

        * qmake/mkspecs/features/features.prf:

2012-10-23  Simon Pena  <spena@igalia.com>

        Unreviewed. Adding myself as committer.

        * Scripts/webkitpy/common/config/committers.py:

2012-10-22  Jochen Eisinger  <jochen@chromium.org>

        [chromium] Move the call to RegisterIsolatedFileSystem to the WebTestDelegate interface
        https://bugs.webkit.org/show_bug.cgi?id=100048

        Reviewed by Adam Barth.

        The call needs to be done outside of the sandbox.

        * DumpRenderTree/chromium/TestRunner/public/WebTestDelegate.h:
        (WebTestDelegate):
        * DumpRenderTree/chromium/TestRunner/src/EventSender.cpp:
        (WebTestRunner):
        (WebTestRunner::EventSender::beginDragWithFiles):
        * DumpRenderTree/chromium/TestRunner/src/TestDelegate.h:
        (TestDelegate):
        * DumpRenderTree/chromium/TestRunner/src/WebTestInterfaces.cpp:
        (WebTestInterfaces::Internal):
        (WebTestRunner::WebTestInterfaces::Internal::registerIsolatedFileSystem):
        (WebTestRunner):
        * DumpRenderTree/chromium/WebViewHost.cpp:
        (WebViewHost::registerIsolatedFileSystem):
        * DumpRenderTree/chromium/WebViewHost.h:
        (WebViewHost):

2012-10-22  Dirk Pranke  <dpranke@chromium.org>

        webkitpy: remove unneeded debug messages from find_files()
        https://bugs.webkit.org/show_bug.cgi?id=100041

        Reviewed by Adam Barth.

        This routine gets called all the time when loading the virtual
        suites, and the debug messages were spamming me.

        * Scripts/webkitpy/common/find_files.py:
        (_normalized_find):

2012-10-22  Tony Chang  <tony@chromium.org>

        [chromium] Add Mac 10.7 Debug bot since it's on the waterfall
        https://bugs.webkit.org/show_bug.cgi?id=100028

        Reviewed by Eric Seidel.

        garden-o-matic can't baseline without this entry.

        * Scripts/webkitpy/layout_tests/port/builders.py:

2012-10-22  Jochen Eisinger  <jochen@chromium.org>

        [chromium] introduce WebTask to the TestRunner library
        https://bugs.webkit.org/show_bug.cgi?id=99964

        Reviewed by Adam Barth.

        I'm also removing the dependency on webkit_support, and instead go
        through the WebTestDelegate interface.

        * DumpRenderTree/DumpRenderTree.gypi:
        * DumpRenderTree/chromium/DRTDevToolsAgent.cpp:
        * DumpRenderTree/chromium/DRTDevToolsAgent.h:
        (DRTDevToolsAgent::taskList):
        * DumpRenderTree/chromium/DRTDevToolsClient.cpp:
        * DumpRenderTree/chromium/DRTDevToolsClient.h:
        (DRTDevToolsClient::taskList):
        * DumpRenderTree/chromium/DRTTestRunner.cpp:
        (InvokeCallbackTask::InvokeCallbackTask):
        * DumpRenderTree/chromium/DRTTestRunner.h:
        (DRTTestRunner::taskList):
        (DRTTestRunner::WorkQueue::taskList):
        * DumpRenderTree/chromium/MockWebRTCPeerConnectionHandler.cpp:
        (RTCSessionDescriptionRequestSuccededTask::RTCSessionDescriptionRequestSuccededTask):
        (RTCSessionDescriptionRequestFailedTask::RTCSessionDescriptionRequestFailedTask):
        (RTCStatsRequestSucceededTask::RTCStatsRequestSucceededTask):
        (RTCVoidRequestTask::RTCVoidRequestTask):
        (StringDataTask::StringDataTask):
        (CharPtrDataTask::CharPtrDataTask):
        (DataChannelReadyStateTask::DataChannelReadyStateTask):
        (RTCPeerConnectionReadyStateTask::RTCPeerConnectionReadyStateTask):
        * DumpRenderTree/chromium/MockWebRTCPeerConnectionHandler.h:
        (MockWebRTCPeerConnectionHandler):
        (MockWebRTCPeerConnectionHandler::taskList):
        * DumpRenderTree/chromium/MockWebSpeechInputController.cpp:
        (MockWebSpeechInputController::SpeechTask::SpeechTask):
        * DumpRenderTree/chromium/MockWebSpeechInputController.h:
        (MockWebSpeechInputController::taskList):
        (MockWebSpeechInputController):
        * DumpRenderTree/chromium/MockWebSpeechRecognizer.cpp:
        * DumpRenderTree/chromium/MockWebSpeechRecognizer.h:
        (MockWebSpeechRecognizer::taskList):
        (MockWebSpeechRecognizer):
        (MockWebSpeechRecognizer::StepTask::StepTask):
        * DumpRenderTree/chromium/Task.cpp: Copied from Tools/DumpRenderTree/chromium/TestRunner/src/Task.cpp.
        (WebTestRunner):
        (WebTestRunner::invokeTask):
        (TaskWrapper):
        (WebTestRunner::TaskWrapper::TaskWrapper):
        (WebTestRunner::TaskWrapper::~TaskWrapper):
        (WebTestRunner::TaskWrapper::Run):
        (postTask):
        (postDelayedTask):
        * DumpRenderTree/chromium/Task.h: Copied from Tools/DumpRenderTree/chromium/TestRunner/src/TestRunner.h.
        (WebTestRunner):
        * DumpRenderTree/chromium/TestRunner/public/WebTask.h: Renamed from Tools/DumpRenderTree/chromium/TestRunner/src/Task.h.
        (WebTestRunner):
        (WebTask):
        (WebTaskList):
        (WebMethodTask):
        (WebTestRunner::WebMethodTask::WebMethodTask):
        (WebTestRunner::WebMethodTask::~WebMethodTask):
        (WebTestRunner::WebMethodTask::run):
        (WebTestRunner::WebMethodTask::cancel):
        * DumpRenderTree/chromium/TestRunner/public/WebTestDelegate.h:
        (WebTestRunner):
        (WebTestDelegate):
        * DumpRenderTree/chromium/TestRunner/src/EventSender.cpp:
        (WebTestRunner):
        (WebTestRunner::EventSender::scheduleAsynchronousClick):
        (WebTestRunner::KeyDownTask::KeyDownTask):
        (WebTestRunner::EventSender::scheduleAsynchronousKeyDown):
        * DumpRenderTree/chromium/TestRunner/src/EventSender.h:
        (WebTestRunner::EventSender::taskList):
        (EventSender):
        * DumpRenderTree/chromium/TestRunner/src/TestDelegate.h:
        (WebTestRunner):
        (TestDelegate):
        * DumpRenderTree/chromium/TestRunner/src/TestRunner.h:
        * DumpRenderTree/chromium/TestRunner/src/WebTask.cpp: Renamed from Tools/DumpRenderTree/chromium/TestRunner/src/Task.cpp.
        (WebTestRunner):
        (WebTestRunner::WebTask::WebTask):
        (WebTestRunner::WebTask::~WebTask):
        (WebTestRunner::WebTaskList::WebTaskList):
        (WebTestRunner::WebTaskList::~WebTaskList):
        (WebTestRunner::WebTaskList::registerTask):
        (WebTestRunner::WebTaskList::unregisterTask):
        (WebTestRunner::WebTaskList::revokeAll):
        * DumpRenderTree/chromium/TestRunner/src/WebTestInterfaces.cpp:
        (WebTestInterfaces::Internal):
        (WebTestRunner::WebTestInterfaces::Internal::postTask):
        (WebTestRunner):
        (WebTestRunner::WebTestInterfaces::Internal::postDelayedTask):
        * DumpRenderTree/chromium/TestShell.cpp:
        (TestShell::initialize):
        * DumpRenderTree/chromium/WebUserMediaClientMock.cpp:
        (UserMediaRequestTask::UserMediaRequestTask):
        * DumpRenderTree/chromium/WebUserMediaClientMock.h:
        (WebUserMediaClientMock::taskList):
        (WebUserMediaClientMock):
        * DumpRenderTree/chromium/WebViewHost.cpp:
        (WebViewHost::postTask):
        (WebViewHost::postDelayedTask):
        * DumpRenderTree/chromium/WebViewHost.h:
        (WebViewHost):
        (WebViewHost::taskList):
        (WebViewHost::HostMethodTask::HostMethodTask):

2012-10-22  Ojan Vafai  <ojan@chromium.org>

        Update flakiness dashboard to match the state of the builders.
        * TestResultServer/static-dashboards/builders.js:
        (isChromiumDepsGTestRunner):
        Broaden the filter since Chromium naming scheme is not consistent.
        (loadBuildersList):
        The main Chromium master now only runs builders, no tests.
        * TestResultServer/static-dashboards/dashboard_base.js:
        Remove test suites that no longer run on any of these masters.

2012-10-22  Jochen Eisinger  <jochen@chromium.org>

        [chromium] add a method for printing message to the WebTestDelegate
        https://bugs.webkit.org/show_bug.cgi?id=99960

        Reviewed by Adam Barth.

        When using the TestRunner library from the content_shell, we can't print
        message directly but need to send them to the browser process.

        * DumpRenderTree/chromium/TestRunner/public/WebTestDelegate.h:
        (WebTestDelegate):
        * DumpRenderTree/chromium/TestRunner/src/AccessibilityControllerChromium.cpp:
        (WebTestRunner::AccessibilityController::fallbackCallback):
        * DumpRenderTree/chromium/TestRunner/src/AccessibilityControllerChromium.h:
        (WebTestRunner::AccessibilityController::setDelegate):
        (AccessibilityController):
        * DumpRenderTree/chromium/TestRunner/src/EventSender.cpp:
        (WebTestRunner):
        (WebTestRunner::EventSender::dumpFilenameBeingDragged):
        * DumpRenderTree/chromium/TestRunner/src/GamepadController.cpp:
        (GamepadController::connect):
        (GamepadController::disconnect):
        (GamepadController::setId):
        (GamepadController::setButtonCount):
        (GamepadController::setButtonData):
        (GamepadController::setAxisCount):
        (GamepadController::setAxisData):
        (GamepadController::fallbackCallback):
        * DumpRenderTree/chromium/TestRunner/src/TestDelegate.h:
        (TestDelegate):
        * DumpRenderTree/chromium/TestRunner/src/TestInterfaces.cpp:
        (TestInterfaces::~TestInterfaces):
        (TestInterfaces::setDelegate):
        * DumpRenderTree/chromium/TestRunner/src/WebTestInterfaces.cpp:
        (WebTestInterfaces::Internal):
        (WebTestRunner::WebTestInterfaces::Internal::printMessage):
        (WebTestRunner):
        * DumpRenderTree/chromium/WebViewHost.cpp:
        (WebViewHost::didBeginEditing):
        (WebViewHost::lastContextMenuData):
        (WebViewHost::clearContextMenuData):
        (WebViewHost::setEditCommand):
        (WebViewHost::clearEditCommand):
        (WebViewHost::fillSpellingSuggestionList):
        (WebViewHost::setGamepadData):
        (WebViewHost::printMessage):
        * DumpRenderTree/chromium/WebViewHost.h:
        (WebViewHost):

2012-10-22  Allan Sandfeld Jensen  <allan.jensen@digia.com>

        I now only watch Selectors instead of all of CSS.

        Unreviewed update of watchlist.

        * Scripts/webkitpy/common/config/watchlist:

2012-10-22  Yury Semikhatsky  <yurys@chromium.org>

        Make sure base and derived class pointers are different in MemoryInstrumentationTest.instrumentedWithMultipleAncestors
        https://bugs.webkit.org/show_bug.cgi?id=99987

        Reviewed by Alexander Pavlov.

        * TestWebKitAPI/Tests/WTF/MemoryInstrumentationTest.cpp: changed first parent
        class in the list so that it has virtual table as well as the second one. This
        way we may be sure that pointer to the second ancestor class will differ from
        the pointer to the derived class.

2012-10-22  Yury Semikhatsky  <yurys@chromium.org>

        Unreviewed. Fix compilation after r132059.

        * TestWebKitAPI/Tests/WTF/MemoryInstrumentationTest.cpp:

2012-10-22  Dominik RÃ¶ttsches  <dominik.rottsches@intel.com>

        Adding Cairo and Harfbuzz watchlist entries

        Unreviewed watchlist update.

        Added myself to these new ones and SVG.

        * Scripts/webkitpy/common/config/watchlist:

2012-10-22  Yury Semikhatsky  <yurys@chromium.org>

        Web Inspector: do not double count memory of objects with multiple ancestors
        https://bugs.webkit.org/show_bug.cgi?id=99958

        Reviewed by Alexander Pavlov.

        * TestWebKitAPI/Tests/WTF/MemoryInstrumentationTest.cpp: Test that there
        is no double counting in case of multiple inheritance.

2012-10-22  Allan Sandfeld Jensen  <allan.jensen@digia.com>

        [Qt] Basic gesture event handling
        https://bugs.webkit.org/show_bug.cgi?id=66173

        Reviewed by Simon Hausmann.

        Add support for eventSender.gestureLongPress.

        * DumpRenderTree/qt/EventSenderQt.cpp:
        (EventSender::EventSender):
        (EventSender::gestureLongPress):
        * DumpRenderTree/qt/EventSenderQt.h:
        (EventSender):

2012-10-22  Raphael Kubo da Costa  <raphael.kubo.da.costa@intel.com>

        [WTR] Properly initialize TestRunner::m_dumpSelectionRect.
        https://bugs.webkit.org/show_bug.cgi?id=99970

        Reviewed by Kenneth Rohde Christiansen.

        Follow-up to r131476: actually initialize m_dumpSelectionRect to
        some value to avoid some flakyness in the tests.

        * WebKitTestRunner/InjectedBundle/TestRunner.cpp:
        (WTR::TestRunner::TestRunner):

2012-10-22  Tor Arne VestbÃ¸  <tor.arne.vestbo@digia.com>

        [Qt] Don't build any of the tools in production_build

        Reviewed by Simon Hausmann.

        * Tools.pro:
        * qmake/mkspecs/features/configure.prf:

2012-10-22  Tor Arne VestbÃ¸  <tor.arne.vestbo@digia.com>

        [Qt] Move OBJECTS_DIR and friends to default_pre.prf

        The introduction of load(qt_build_config) in .qmake.conf meant
        that we started loading qtmodule.pri, which in turn set both
        MOC_DIR, RCC_DIR, and OBJECTS_DIR.

        We were setting OBJECTS_DIR in default_post under a isEmpty() guard
        so that project files could override the objects dir. Instead of
        using the isEmpty() check we move it to defaul_pre, which will
        override the qtmodule.pri settings, but still allow project files
        to override it.

        Reviewed by Ossy.

        * qmake/mkspecs/features/default_post.prf:
        * qmake/mkspecs/features/default_pre.prf:

2012-10-22  Mikhail Pozdnyakov  <mikhail.pozdnyakov@intel.com>

        WebKitTestRunner needs testRunner.queueLoadingScript and testRunner.queueNonLoadingScript
        https://bugs.webkit.org/show_bug.cgi?id=42675

        Reviewed by Kenneth Rohde Christiansen.

        Added implementation of testRunner.queueLoadingScript and testRunner.queueNonLoadingScript.

        * WebKitTestRunner/InjectedBundle/Bindings/TestRunner.idl:
        * WebKitTestRunner/InjectedBundle/InjectedBundle.cpp:
        (WTR::InjectedBundle::queueLoadingScript):
        (WTR):
        (WTR::InjectedBundle::queueNonLoadingScript):
        * WebKitTestRunner/InjectedBundle/InjectedBundle.h:
        (InjectedBundle):
        * WebKitTestRunner/InjectedBundle/TestRunner.cpp:
        (WTR::TestRunner::queueLoadingScript):
        (WTR):
        (WTR::TestRunner::queueNonLoadingScript):
        * WebKitTestRunner/InjectedBundle/TestRunner.h:
        (TestRunner):
        * WebKitTestRunner/TestInvocation.cpp:
        (WTR::TestInvocation::didReceiveMessageFromInjectedBundle):
        * WebKitTestRunner/WorkQueueManager.cpp:
        (WTR):
        (WTR::runJavaScriptFunction):
        (ScriptItem):
        (WTR::ScriptItem::ScriptItem):
        (WTR::ScriptItem::invoke):
        (WTR::WorkQueueManager::queueBackNavigation):
        (WTR::WorkQueueManager::queueLoadingScript):
        (WTR::WorkQueueManager::queueNonLoadingScript):
        * WebKitTestRunner/WorkQueueManager.h:
        (WorkQueueManager):

2012-10-22  Zan Dobersek  <zandobersek@gmail.com>

        Unreviewed, a follow-up to r132034 where I forgot to address
        Ojan's review comment about the race condition in handleLocationChange.

        * TestResultServer/static-dashboards/dashboard_base.js:
        (handleLocationChange):

2012-10-22  Zan Dobersek  <zandobersek@gmail.com>

        [TestResultServer] Move the resource loading into a dedicated class
        https://bugs.webkit.org/show_bug.cgi?id=99246

        Reviewed by Ojan Vafai.

        A new 'loader' namespace is created, containing the request method (previously located in dashboard_base.js)
        and the new Loader object, which handles the loading of all the necessary data the dashboard might require.

        * TestResultServer/static-dashboards/aggregate_results.html: Include the loader.js source file.
        * TestResultServer/static-dashboards/builders.js:
        (requestBuilderList): Use the request method located in the loader namespace instead of the removed doXHR method.
        (onBuilderListLoad): Now parses the response text of the passed-in XHR. When all the builder lists are loaded the
        resource loader object is notified appropriately.
        (onErrorLoadingBuilderList): The partial function that calls this function also adds an XHR parameter.
        * TestResultServer/static-dashboards/dashboard_base.js: Much of the resource loading-related code is moved to loader.js.
        The Loader object is now used to load all the required resources.
        (parseParameters): Don't push the 'builder' parameter into the current state if the unit tests are being run.
        (resourceLoadingComplete): This method gets called when all the resources are loaded and the dashboard should
        proceed with generating the page.
        (handleLocationChange):
        * TestResultServer/static-dashboards/flakiness_dashboard.html: Include the loader.js source file.
        * TestResultServer/static-dashboards/flakiness_dashboard.js: The request method has been relocated to the loader namespace.
        * TestResultServer/static-dashboards/flakiness_dashboard_unittests.js: The affected test cases are modified appropriately.
        (test):
        * TestResultServer/static-dashboards/loader.js: Added.
        (.): A new namespace is introduced, publicly exporting the request method that performs an XHR operation and a Loader object
        which oversees resource loading. The loading is done in steps, first loading the builders list, after that the results files
        the current dashboard needs, and lastly the TestExpectations files if they are required by the dashboard. When done the loader
        calls the resourceLoadingComplete method located in dashboard_base.js. This signals the dashboard all resources are available
        and it can proceed with generating the dashboard page.
        * TestResultServer/static-dashboards/loader_unittests.js: Added. Contains unit tests for the Loader object, covering the
        incremental loading and the loading of results files and TestExpectations files. The builders list loading is currently not
        tested as the unit tests page overrides related methods that possibly affect other tests' behavior.
        * TestResultServer/static-dashboards/run-unittests.html: Now includes the loader.js and loader_unittests.js source file.
        Refactors the code a bit due to changes in how onBuilderListLoad behaves.
        * TestResultServer/static-dashboards/timeline_explorer.html: Now includes the loader.js source file.
        * TestResultServer/static-dashboards/treemap.html: Ditto. Also refactors the code to take into account
        that all the test files are now loaded before generating the dashboard page.

2012-10-21  Jochen Eisinger  <jochen@chromium.org>

        [chromium] introduce a public API for the TestRunner library
        https://bugs.webkit.org/show_bug.cgi?id=99904

        Reviewed by Adam Barth.

        The API decouples the public API from the underlying implementation, so
        embedders can depend on it. I'm also changing DRT to consume the
        TestRunner API through the public API, except for DRTTestRunner and all
        places that require Task.h. These two will be migrated in later changes.

        * DumpRenderTree/DumpRenderTree.gyp/DumpRenderTree.gyp:
        * DumpRenderTree/DumpRenderTree.gypi:
        * DumpRenderTree/chromium/DRTDevToolsAgent.h:
        * DumpRenderTree/chromium/DRTDevToolsClient.h:
        * DumpRenderTree/chromium/MockSpellCheck.cpp:
        (MockSpellCheck::fillSuggestionList):
        * DumpRenderTree/chromium/MockSpellCheck.h:
        (MockSpellCheck):
        * DumpRenderTree/chromium/MockWebRTCPeerConnectionHandler.h:
        * DumpRenderTree/chromium/MockWebSpeechInputController.h:
        * DumpRenderTree/chromium/MockWebSpeechRecognizer.h:
        * DumpRenderTree/chromium/TestRunner/public/WebAccessibilityController.h: Copied from Tools/DumpRenderTree/chromium/TestRunner/src/TestDelegate.h.
        (WebKit):
        (WebTestRunner):
        (WebAccessibilityController):
        * DumpRenderTree/chromium/TestRunner/public/WebEventSender.h: Copied from Tools/DumpRenderTree/chromium/TestRunner/src/TestDelegate.h.
        (WebKit):
        (WebTestRunner):
        (WebEventSender):
        * DumpRenderTree/chromium/TestRunner/public/WebTestDelegate.h: Copied from Tools/DumpRenderTree/chromium/TestRunner/src/TestDelegate.h.
        (WebKit):
        (WebTestRunner):
        (WebTestDelegate):
        * DumpRenderTree/chromium/TestRunner/public/WebTestInterfaces.h: Copied from Tools/DumpRenderTree/chromium/TestRunner/src/TestInterfaces.h.
        (WebKit):
        (WebTestRunner):
        (WebTestInterfaces):
        * DumpRenderTree/chromium/TestRunner/src/AccessibilityControllerChromium.cpp:
        (WebTestRunner):
        * DumpRenderTree/chromium/TestRunner/src/AccessibilityControllerChromium.h:
        (WebTestRunner):
        * DumpRenderTree/chromium/TestRunner/src/EventSender.cpp:
        (WebTestRunner):
        (WebTestRunner::makeMenuItemStringsFor):
        * DumpRenderTree/chromium/TestRunner/src/EventSender.h:
        (WebTestRunner):
        * DumpRenderTree/chromium/TestRunner/src/TestDelegate.h:
        (TestDelegate):
        * DumpRenderTree/chromium/TestRunner/src/TestInterfaces.cpp:
        * DumpRenderTree/chromium/TestRunner/src/TestInterfaces.h:
        (TestInterfaces):
        * DumpRenderTree/chromium/TestRunner/src/WebAccessibilityController.cpp: Copied from Tools/DumpRenderTree/chromium/TestRunner/src/TestDelegate.h.
        (WebTestRunner):
        (WebTestRunner::WebAccessibilityController::WebAccessibilityController):
        (WebTestRunner::WebAccessibilityController::setFocusedElement):
        (WebTestRunner::WebAccessibilityController::notificationReceived):
        (WebTestRunner::WebAccessibilityController::shouldLogAccessibilityEvents):
        * DumpRenderTree/chromium/TestRunner/src/WebEventSender.cpp: Copied from Tools/DumpRenderTree/chromium/TestRunner/src/TestDelegate.h.
        (WebTestRunner):
        (WebTestRunner::WebEventSender::WebEventSender):
        (WebTestRunner::WebEventSender::doDragDrop):
        * DumpRenderTree/chromium/TestRunner/src/WebTestInterfaces.cpp: Added.
        (WebTestRunner):
        (WebTestInterfaces::Internal):
        (WebTestRunner::WebTestInterfaces::Internal::testInterfaces):
        (WebTestRunner::WebTestInterfaces::Internal::accessibilityController):
        (WebTestRunner::WebTestInterfaces::Internal::eventSender):
        (WebTestRunner::WebTestInterfaces::Internal::Internal):
        (WebTestRunner::WebTestInterfaces::Internal::~Internal):
        (WebTestRunner::WebTestInterfaces::Internal::setDelegate):
        (WebTestRunner::WebTestInterfaces::Internal::clearContextMenuData):
        (WebTestRunner::WebTestInterfaces::Internal::clearEditCommand):
        (WebTestRunner::WebTestInterfaces::Internal::fillSpellingSuggestionList):
        (WebTestRunner::WebTestInterfaces::Internal::setEditCommand):
        (WebTestRunner::WebTestInterfaces::Internal::lastContextMenuData):
        (WebTestRunner::WebTestInterfaces::Internal::setGamepadData):
        (WebTestRunner::WebTestInterfaces::WebTestInterfaces):
        (WebTestRunner::WebTestInterfaces::~WebTestInterfaces):
        (WebTestRunner::WebTestInterfaces::setWebView):
        (WebTestRunner::WebTestInterfaces::setDelegate):
        (WebTestRunner::WebTestInterfaces::bindTo):
        (WebTestRunner::WebTestInterfaces::resetAll):
        (WebTestRunner::WebTestInterfaces::accessibilityController):
        (WebTestRunner::WebTestInterfaces::eventSender):
        * DumpRenderTree/chromium/TestShell.cpp:
        (TestShell::initialize):
        * DumpRenderTree/chromium/TestShell.h:
        (TestShell::eventSender):
        (TestShell::accessibilityController):
        (TestShell):
        * DumpRenderTree/chromium/WebUserMediaClientMock.h:
        * DumpRenderTree/chromium/WebViewHost.cpp:
        (WebViewHost::finishLastTextCheck):
        (WebViewHost::fillSpellingSuggestionList):
        * DumpRenderTree/chromium/WebViewHost.h:
        (WebViewHost):

2012-10-21  Viatcheslav Ostapenko  <v.ostapenko@samsung.com>

        Unreviewed. Updating my emails.

        * Scripts/webkitpy/common/config/committers.py:

2012-10-20  Raphael Kubo da Costa  <raphael.kubo.da.costa@intel.com>

        [EFL][DRT] Implement tracking and painting repaint rectangles.
        https://bugs.webkit.org/show_bug.cgi?id=99838

        Reviewed by Gyuyoung Kim.

        Implement displayWebView() and start tracking/painting the repaint
        rectangles for the repaint tests that rely on it.

        * DumpRenderTree/efl/DumpRenderTree.cpp:
        (displayWebView):
        * DumpRenderTree/efl/DumpRenderTreeChrome.cpp:
        (DumpRenderTreeChrome::resetDefaultsToConsistentValues):
        * DumpRenderTree/efl/PixelDumpSupportEfl.cpp:
        (createBitmapContextFromWebView):

2012-10-19  Dan Bernstein  <mitz@apple.com>

        Add bundle API for hit-testing
        https://bugs.webkit.org/show_bug.cgi?id=99907

        Reviewed by Sam Weinig.

        Added an API test for WKBundleFrameCreateHitTest().

        * TestWebKitAPI/TestWebKitAPI.xcodeproj/project.pbxproj: Added InjectedBundleFrameHitTest.cpp,
        InjectedBundleFrameHitTest_bundle.cpp, and link-with-title.html.

        * TestWebKitAPI/Tests/WebKit2/InjectedBundleFrameHitTest.cpp: Added.
        (TestWebKitAPI::didReceiveMessageFromInjectedBundle): Checks that the message contains the
        title of the link in link-with-title.html.
        (TestWebKitAPI::setInjectedBundleClient):
        (TestWebKitAPI::TEST):
        * TestWebKitAPI/Tests/WebKit2/InjectedBundleFrameHitTest_Bundle.cpp: Added.
        (TestWebKitAPI::InjectedBundleFrameHitTestTest::InjectedBundleFrameHitTestTest):
        (TestWebKitAPI::didFinishLoadForFrameCallback): Hit tests at (50, 50) and sends the link title
        from the result back to the UI process.
        (TestWebKitAPI::InjectedBundleFrameHitTestTest::didCreatePage):
        (TestWebKitAPI::InjectedBundleFrameHitTestTest::frameLoadFinished):
        * TestWebKitAPI/Tests/WebKit2/link-with-title.html: Added.

2012-10-19  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r131944.
        http://trac.webkit.org/changeset/131944
        https://bugs.webkit.org/show_bug.cgi?id=99891

        On second thoughts, not such a great idea (Requested by jamesr
        on #webkit).

        * DumpRenderTree/chromium/TestShell.cpp:
        (TestShell::createNewWindow):

2012-10-19  Alexandre Elias  <aelias@chromium.org>

        [chromium] API to pass impl thread via WebLayerTreeView
        https://bugs.webkit.org/show_bug.cgi?id=99863

        Reviewed by James Robinson.

        This adds an API to pass the compositor impl thread via WebView and
        WebLayerTreeView. This is currently a no-op change, but in the future
        this codepath will supercede WebCompositor. The goal is to avoid statics
        in compositor initialization.

        * DumpRenderTree/chromium/TestShell.cpp:
        (TestShell::createNewWindow):

2012-10-19  Raphael Kubo da Costa  <raphael.kubo.da.costa@intel.com>

        [Cairo][WTR] Implement the painting of repaint rectangles.
        https://bugs.webkit.org/show_bug.cgi?id=99839

        Reviewed by Martin Robinson.

        Implement the required code to paint the gray overlay with
        transparent regions for the repaint rectangles, as other ports
        already do and as is already done in most WK1 ports.

        * WebKitTestRunner/cairo/TestInvocationCairo.cpp:
        (WTR::paintRepaintRectOverlay):
        (WTR::TestInvocation::dumpPixelsAndCompareWithExpected):

2012-09-08  Alpha Lam  <hclam@chromium.org>

        [chromium] Implement deferred image decoding
        https://bugs.webkit.org/show_bug.cgi?id=94240

        Reviewed by Stephen White.

        Add --enable-deferred-image-decoding to DRT.

        * DumpRenderTree/chromium/DumpRenderTree.cpp:
        (main):
        * DumpRenderTree/chromium/TestShell.cpp:
        (TestShell::TestShell):
        (TestShell::resetWebSettings):
        * DumpRenderTree/chromium/TestShell.h:
        (TestShell::setDeferredImageDecodingEnabled):
        (TestShell):
        * DumpRenderTree/chromium/WebPreferences.cpp:
        (WebPreferences::reset):
        (WebPreferences::applyTo):
        * DumpRenderTree/chromium/WebPreferences.h:
        (WebPreferences):
        * Scripts/webkitpy/layout_tests/port/chromium.py:
        (ChromiumPort.virtual_test_suites):

2012-10-19  Dongwoo Joshua Im  <dw.im@samsung.com>

        Rename ENABLE_CSS3_TEXT_DECORATION to ENABLE_CSS3_TEXT
        https://bugs.webkit.org/show_bug.cgi?id=99804

        Reviewed by Julien Chaffraix.

        CSS3 text related properties will be implemented under this flag,
        including text decoration, text-align-last, and text-justify.

        * Scripts/webkitperl/FeatureList.pm:
        * qmake/mkspecs/features/features.pri:

2012-10-19  Balazs Kelemen  <kbalazs@webkit.org>

        [Qt][WTR] renderToOffscreenBuffer should not be set if the real render loop is active
        https://bugs.webkit.org/show_bug.cgi?id=99831

        Reviewed by Jocelyn Turcotte.

        Do not set renderToOffscreenBuffer if we have called setRenderWithoutShowing.
        We do not need it in this case and these things are actually conflicting.

        * WebKitTestRunner/qt/PlatformWebViewQt.cpp:
        (WTR::WrapperWindow::handleStatusChanged):
        (WTR::PlatformWebView::PlatformWebView):
        (WTR::PlatformWebView::windowShapshotEnabled): Added a comment
        describing why this workaround is needed.

2012-10-19  Zan Dobersek  <zandobersek@gmail.com>

        [WK2][GTK] Fullscreen tests timing out in bots
        https://bugs.webkit.org/show_bug.cgi?id=93973

        Reviewed by Philippe Normand.

        Add webcore_cppflags to the CPPFLAGS for WebKitTestRunner and the
        injected bundle library. webcore_cppflags contains all the feature
        defines' macros so the ENABE(*) compilation guards should now work
        properly (i.e. enable the code behind them when the feature is enabled).

        * WebKitTestRunner/GNUmakefile.am:

2012-10-19  Simon Hausmann  <simon.hausmann@digia.com>

        Unreviewed, rolling out r131734.
        http://trac.webkit.org/changeset/131734

        Broke ANGLE build where we end up with @echo foo && @echo -n

        * qmake/mkspecs/features/default_post.prf:

2012-10-19  Carlos Garcia Campos  <cgarcia@igalia.com>

        REGRESSION (r130640 - r130644): TestCookieManager API test is failing
        https://bugs.webkit.org/show_bug.cgi?id=98738

        Reviewed by Philippe Normand.

        * Scripts/run-gtk-tests:
        (TestRunner): Unskip /webkit2/WebKitCookieManager/accept-policy.

2012-10-19  Tommy Widenflycht  <tommyw@google.com>

        MediaStream API: Update the RuntimeEnabledFeatures flags
        https://bugs.webkit.org/show_bug.cgi?id=99714

        Reviewed by Adam Barth.

        Enabling the DeprecatedPeerConnection so that all tests still run.

        * DumpRenderTree/chromium/TestShell.cpp:
        (TestShell::TestShell):

2012-10-18  Dominic Mazzoni  <dmazzoni@google.com>

        AX: labelForElement is slow when there are a lot of DOM elements
        https://bugs.webkit.org/show_bug.cgi?id=97825

        Reviewed by Ryosuke Niwa.

        Implement titleUIElement in the chromium port of DRT, and
        fix getAccessibleElementById so that it ensures the backing store
        is up-to-date.

        * DumpRenderTree/chromium/TestRunner/AccessibilityControllerChromium.cpp:
        (AccessibilityController::getAccessibleElementById):
        * DumpRenderTree/chromium/TestRunner/AccessibilityUIElementChromium.cpp:
        (AccessibilityUIElement::titleUIElementCallback):

2012-10-17  Ilya Tikhonovsky  <loislo@chromium.org>

        Web Inspector: NMI provide data for mixing with tcmalloc heap dumps.
        https://bugs.webkit.org/show_bug.cgi?id=99457

        Reviewed by Yury Semikhatsky.

        countObjectSize now requires pointer to object as the first argument.

        * TestWebKitAPI/Tests/WTF/MemoryInstrumentationTest.cpp:

2012-10-18  Dirk Pranke  <dpranke@chromium.org>

        make move_overwritten_baselines_to work again while rebaselining
        https://bugs.webkit.org/show_bug.cgi?id=99793

        Reviewed by Ojan Vafai.

        We used to have code that would help when rebaselining results
        for new ports (e.g., when moving from Lion to Mountain Lion) but
        it appears that code bitrotted during all the refactoring since
        the last time we needed this. This patch makes things work
        again, adds more tests that will hopefully make clearer what
        is supposed to work, and renames various parameters to be
        consistent.

        * Scripts/webkitpy/layout_tests/port/builders.py:
        (move_overwritten_baselines_to):
        (builder_path_for_port_name):
        * Scripts/webkitpy/tool/commands/rebaseline.py:
        (RebaselineTest.__init__):
        (RebaselineTest._copy_existing_baseline):
        (RebaselineTest._rebaseline_test):
        (RebaselineTest.execute):
        (AbstractParallelRebaselineCommand._rebaseline_commands):
        * Scripts/webkitpy/tool/commands/rebaseline_unittest.py:
        (test_rebaseline_json_with_move_overwritten_baselines_to):
        (test_rebaseline_test_internal_with_move_overwritten_baselines_to):
        * Scripts/webkitpy/tool/servers/gardeningserver_unittest.py:
        (GardeningServerTest.test_rebaselineall):

2012-10-18  Roger Fong  <roger_fong@apple.com>

        Unreviewed. Skip really old flaky failing jscore date test. 
        There's a bug tracking it here: https://bugs.webkit.org/show_bug.cgi?id=53712.

        * Scripts/run-javascriptcore-tests:

2012-10-18  Byungwoo Lee  <bw80.lee@samsung.com>

        Fix build warning.
        https://bugs.webkit.org/show_bug.cgi?id=99788

        Reviewed by Kentaro Hara.

        Use return value of mktemp() for removing -Wunused-result.

        * MiniBrowser/efl/main.c:
        (on_download_request):

2012-10-18  Benjamin Poulain  <bpoulain@apple.com>

        [WK2] WebKit2 does not build without PLUGIN_PROCESS on Mac
        https://bugs.webkit.org/show_bug.cgi?id=99771

        Reviewed by Anders Carlsson.

        * DumpRenderTree/mac/MockWebNotificationProvider.mm: The file was not including config.h,
        effectively breaking feature flags.

2012-10-18  Raphael Kubo da Costa  <raphael.kubo.da.costa@intel.com>

        [EFL][DRT] Make textareas resizable by default.
        https://bugs.webkit.org/show_bug.cgi?id=99719

        Reviewed by Gyuyoung Kim.

        Enable painting the textarea resizer at the corner by default,
        just as it already is the case for WK2. This eases the work needed
        to get the pixel tests in shape and run by the bots, as both the
        WK1 and WK2 ports will have more similar results.

        * DumpRenderTree/efl/DumpRenderTreeChrome.cpp:
        (DumpRenderTreeChrome::resetDefaultsToConsistentValues):

2012-10-18  Jochen Eisinger  <jochen@chromium.org>

        [chromium] Add a webkit_test_support target that WebTestingSupport
        https://bugs.webkit.org/show_bug.cgi?id=99772

        Reviewed by Adam Barth.

        * DumpRenderTree/DumpRenderTree.gyp/DumpRenderTree.gyp:

2012-10-18  Jochen Eisinger  <jochen@chromium.org>

        [chromium] move TestRunner files into a src/ sub directory
        https://bugs.webkit.org/show_bug.cgi?id=99776

        Reviewed by Adam Barth.

        This is in preparation of adding a public API to the TestRunner library.

        * DumpRenderTree/DumpRenderTree.gyp/DumpRenderTree.gyp:
        * DumpRenderTree/DumpRenderTree.gypi:
        * DumpRenderTree/chromium/DRTTestRunner.h:
        * DumpRenderTree/chromium/TestRunner/src/AccessibilityControllerChromium.cpp: Renamed from Tools/DumpRenderTree/chromium/TestRunner/AccessibilityControllerChromium.cpp.
        * DumpRenderTree/chromium/TestRunner/src/AccessibilityControllerChromium.h: Renamed from Tools/DumpRenderTree/chromium/TestRunner/AccessibilityControllerChromium.h.
        * DumpRenderTree/chromium/TestRunner/src/AccessibilityUIElementChromium.cpp: Renamed from Tools/DumpRenderTree/chromium/TestRunner/AccessibilityUIElementChromium.cpp.
        * DumpRenderTree/chromium/TestRunner/src/AccessibilityUIElementChromium.h: Renamed from Tools/DumpRenderTree/chromium/TestRunner/AccessibilityUIElementChromium.h.
        * DumpRenderTree/chromium/TestRunner/src/CppBoundClass.cpp: Renamed from Tools/DumpRenderTree/chromium/TestRunner/CppBoundClass.cpp.
        * DumpRenderTree/chromium/TestRunner/src/CppBoundClass.h: Renamed from Tools/DumpRenderTree/chromium/TestRunner/CppBoundClass.h.
        * DumpRenderTree/chromium/TestRunner/src/CppVariant.cpp: Renamed from Tools/DumpRenderTree/chromium/TestRunner/CppVariant.cpp.
        * DumpRenderTree/chromium/TestRunner/src/CppVariant.h: Renamed from Tools/DumpRenderTree/chromium/TestRunner/CppVariant.h.
        * DumpRenderTree/chromium/TestRunner/src/EventSender.cpp: Renamed from Tools/DumpRenderTree/chromium/TestRunner/EventSender.cpp.
        * DumpRenderTree/chromium/TestRunner/src/EventSender.h: Renamed from Tools/DumpRenderTree/chromium/TestRunner/EventSender.h.
        * DumpRenderTree/chromium/TestRunner/src/GamepadController.cpp: Renamed from Tools/DumpRenderTree/chromium/TestRunner/GamepadController.cpp.
        * DumpRenderTree/chromium/TestRunner/src/GamepadController.h: Renamed from Tools/DumpRenderTree/chromium/TestRunner/GamepadController.h.
        * DumpRenderTree/chromium/TestRunner/src/Task.cpp: Renamed from Tools/DumpRenderTree/chromium/TestRunner/Task.cpp.
        * DumpRenderTree/chromium/TestRunner/src/Task.h: Renamed from Tools/DumpRenderTree/chromium/TestRunner/Task.h.
        * DumpRenderTree/chromium/TestRunner/src/TestDelegate.h: Renamed from Tools/DumpRenderTree/chromium/TestRunner/TestDelegate.h.
        * DumpRenderTree/chromium/TestRunner/src/TestInterfaces.cpp: Renamed from Tools/DumpRenderTree/chromium/TestRunner/TestInterfaces.cpp.
        * DumpRenderTree/chromium/TestRunner/src/TestInterfaces.h: Renamed from Tools/DumpRenderTree/chromium/TestRunner/TestInterfaces.h.
        * DumpRenderTree/chromium/TestRunner/src/TestRunner.cpp: Renamed from Tools/DumpRenderTree/chromium/TestRunner/TestRunner.cpp.
        * DumpRenderTree/chromium/TestRunner/src/TestRunner.h: Renamed from Tools/DumpRenderTree/chromium/TestRunner/TestRunner.h.
        * DumpRenderTree/chromium/TestRunner/src/TextInputController.cpp: Renamed from Tools/DumpRenderTree/chromium/TestRunner/TextInputController.cpp.
        * DumpRenderTree/chromium/TestRunner/src/TextInputController.h: Renamed from Tools/DumpRenderTree/chromium/TestRunner/TextInputController.h.

2012-10-18  Dirk Pranke  <dpranke@chromium.org>

        [chromium] garden-o-matic should ignore the 10.8 Tests bot
        https://bugs.webkit.org/show_bug.cgi?id=99765

        Reviewed by Adam Barth.

        It's really more of an FYI bot at this point and can be safely
        ignored like the Content Shell bots.

        * BuildSlaveSupport/build.webkit.org-config/public_html/TestFailures/scripts/config.js:
        (.):

2012-10-18  Jochen Eisinger  <jochen@chromium.org>

        [chromium] Simplify TestInterfaces, as this class won't be directly exposed in the TestRunner library's interface
        https://bugs.webkit.org/show_bug.cgi?id=99766

        Reviewed by Adam Barth.

        This reverts http://trac.webkit.org/changeset/123240

        * DumpRenderTree/chromium/TestRunner/TestInterfaces.cpp:
        (TestInterfaces::TestInterfaces):
        (TestInterfaces::~TestInterfaces):
        (TestInterfaces::setWebView):
        (TestInterfaces::setDelegate):
        (TestInterfaces::bindTo):
        (TestInterfaces::resetAll):
        (TestInterfaces::accessibilityController):
        (TestInterfaces::eventSender):
        * DumpRenderTree/chromium/TestRunner/TestInterfaces.h:
        (TestInterfaces):

2012-10-18  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r131810.
        http://trac.webkit.org/changeset/131810
        https://bugs.webkit.org/show_bug.cgi?id=99762

        Broke linux debug webkit_unit_tests (Requested by
        danakj|gardening on #webkit).

        * DumpRenderTree/chromium/DumpRenderTree.cpp:
        (main):
        * DumpRenderTree/chromium/TestShell.cpp:
        (TestShell::TestShell):
        (TestShell::resetWebSettings):
        * DumpRenderTree/chromium/TestShell.h:
        (TestShell):
        * DumpRenderTree/chromium/WebPreferences.cpp:
        (WebPreferences::reset):
        (WebPreferences::applyTo):
        * DumpRenderTree/chromium/WebPreferences.h:
        (WebPreferences):
        * Scripts/webkitpy/layout_tests/port/chromium.py:
        (ChromiumPort.virtual_test_suites):

2012-10-18  Alpha Lam  <hclam@chromium.org>

        [chromium] Implement deferred image decoding
        https://bugs.webkit.org/show_bug.cgi?id=94240

        Reviewed by Stephen White.

        Add --enable-deferred-image-decoding to DRT.

        * DumpRenderTree/chromium/DumpRenderTree.cpp:
        (main):
        * DumpRenderTree/chromium/TestShell.cpp:
        (TestShell::TestShell):
        (TestShell::resetWebSettings):
        * DumpRenderTree/chromium/TestShell.h:
        (TestShell::setDeferredImageDecodingEnabled):
        (TestShell):
        * DumpRenderTree/chromium/WebPreferences.cpp:
        (WebPreferences::reset):
        (WebPreferences::applyTo):
        * DumpRenderTree/chromium/WebPreferences.h:
        (WebPreferences):
        * Scripts/webkitpy/layout_tests/port/chromium.py:
        (ChromiumPort.virtual_test_suites):

2012-10-18  Dirk Pranke  <dpranke@chromium.org>

        webkitpy: fix chromium bot configs in builders.py
        https://bugs.webkit.org/show_bug.cgi?id=99638

        Reviewed by Ojan Vafai.

        Updating after the great bot-renaming and deleting a test case
        that is no longer needed.

        * Scripts/webkitpy/layout_tests/port/builders.py:
        * Scripts/webkitpy/tool/servers/gardeningserver_unittest.py:
        (BuildCoverageExtrapolatorTest.test_extrapolate):

2012-10-18  Dirk Pranke  <dpranke@chromium.org>

        [chromium] Add 10.8 bot into fallback path, make work with garden-o-matic
        https://bugs.webkit.org/show_bug.cgi?id=99748

        Reviewed by Ryosuke Niwa.

        Subject pretty much says it all ...

        * BuildSlaveSupport/build.webkit.org-config/public_html/TestFailures/scripts/config.js:
        * Scripts/webkitpy/layout_tests/port/builders.py:
        * Scripts/webkitpy/layout_tests/port/chromium_mac.py:
        (ChromiumMacPort):
        * Scripts/webkitpy/layout_tests/port/chromium_mac_unittest.py:
        (ChromiumMacPortTest.test_versions):
        (ChromiumMacPortTest.test_baseline_path):
        * Scripts/webkitpy/tool/commands/rebaseline_unittest.py:
        (TestRebaseline.test_baseline_directory):
        (test_rebaseline_and_copy_test_with_lion_result):
        (test_rebaseline_expectations):

2012-10-18  Timothy Hatcher  <timothy@apple.com>

        Teach prepare-ChangeLog how to handle non-function properties in JavaScript prototypes.

        https://bugs.webkit.org/show_bug.cgi?id=99747

        Reviewed by Joseph Pecoraro.

        * Scripts/prepare-ChangeLog:
        (get_function_line_ranges_for_javascript): Clear currentIdentifiers when comma is encountered
        so it does not tack those identifiers onto the next changed function.

2012-10-18  James Simonsen  <simonjam@chromium.org>

        Add a script for exporting http/tests/w3c/webperf/submission to W3C
        https://bugs.webkit.org/show_bug.cgi?id=99675

        Reviewed by Tony Gentilcore.

        This does the inverse of Scripts/import-w3c-performance-wg-tests.

        * Scripts/export-w3c-performance-wg-tests: Added.

2012-10-18  Pablo Flouret  <pablof@motorola.com>

        Implement css3-conditional's @supports rule
        https://bugs.webkit.org/show_bug.cgi?id=86146

        Reviewed by Antti Koivisto.

        * Scripts/webkitperl/FeatureList.pm:
        * qmake/mkspecs/features/features.pri:
            Add an ENABLE_CSS3_CONDITIONAL_RULES flag.

2012-10-18  Xiaobo Wang  <xbwang@torchmobile.com.cn>

        [BlackBerry] Dump DRT output to stdout if test is passed as command line argument
        https://bugs.webkit.org/show_bug.cgi?id=99150

        Reviewed by Rob Buis.

        Fixed some code style errors as well.

        * DumpRenderTree/blackberry/DumpRenderTree.cpp:
        (BlackBerry::WebKit::DumpRenderTree::runTest):
        (BlackBerry::WebKit::DumpRenderTree::runRemainingTests):
        (BlackBerry::WebKit::DumpRenderTree::runTests):
        (BlackBerry::WebKit::DumpRenderTree::isHTTPTest):
        (BlackBerry::WebKit::DumpRenderTree::dump):
        (BlackBerry::WebKit::DumpRenderTree::addMessageToConsole):
        * DumpRenderTree/blackberry/DumpRenderTreeBlackBerry.h:
        (DumpRenderTree):

2012-10-18  Simon Hausmann  <simon.hausmann@digia.com>

        [Qt] Improved support for silent builds

        Reviewed by Tor Arne VestbÃ¸.

        Silence our extra compilers when CONFIG+=silent is set.

        * qmake/mkspecs/features/default_post.prf:

2012-10-18  Simon Hausmann  <simon.hausmann@digia.com>

        [Qt] Reduce memory pressure at link time with less compromise on speed of linking

        Reviewed by Csaba OsztrogonÃ¡c.

        Revert r131718 that made us pass -fno-keep-memory to the linker for any
        i386 builds. The downside of passing that option is that it slows down
        the process of linking and as Ossy determined, release builds do _not_
        take as much memory (2.x GB) for linking but much less (~350MB).

        However there is one condition where even release builds do take up too
        much memory, and that is when Qt is configured with
        -separate-debug-info, because it adds a -g next to -O2. The recent
        introduction of loading qt_build_config enabled us to read qmodule.pri,
        which adds the -g if Qt is configured with -separate-debug-info. So
        instead of playing with -fno-keep-memory (which is a last resort
        measure for debug builds) we should tweak our existing mechanism of
        dealing with the debug info:

        production_build.prf tries to ensure that we use -g only in static
        libraries that contain API facing code, so that we get nice backtraces
        at least into the API layer. For other static libraries such as WebCore
        we skip -g via CONFIG += no_debug_info. One of the conditions for
        enabling this tweak is CONFIG(debug, debug|release). This patch adds
        contains(QT_CONFIG,separate_debug_info) to the conditions.

        The patch also extend the CONFIG += no_debug_info part with the removal
        of no_separate_debug_info. There is no point in running an extra
        build step to strip out debug info into a separate file if at the same
        time we tell the compiler to not generate any debug info altogether.

        * qmake/mkspecs/features/production_build.prf:
        * qmake/mkspecs/features/unix/default_post.prf:

2012-10-18  Balazs Kelemen  <kbalazs@webkit.org>

        [Qt] OpenGL rendering is not possible on bots using Xvfb
        https://bugs.webkit.org/show_bug.cgi?id=99463

        Reviewed by Jocelyn Turcotte.

        Added a workaround to be able to disallow UI side OpenGL rendering
        if the environment is not suitable because it can be extremely slow
        with a software backend.

        * Scripts/webkitpy/layout_tests/port/qt.py:
        (QtPort.setup_environ_for_server): Let the environment variable
        QT_WEBKIT_DISABLE_UIPROCESS_DUMPPIXELS reach the driver. This variable
        should be defined on bots that don't have a suitable OpenGL environment.
        * WebKitTestRunner/PlatformWebView.h:
        (PlatformWebView):
        * WebKitTestRunner/qt/PlatformWebViewQt.cpp:
        (WTR::WrapperWindow::handleStatusChanged): Don't try to create an OpenGL
        surface and set the setRenderWithoutShowing flag on the window if the
        variable is set.
        (WTR::PlatformWebView::windowSnapshotImage):
        (WTR::PlatformWebView::windowShapshotEnabled):
        (WTR):
        * WebKitTestRunner/qt/TestInvocationQt.cpp:
        (WTR::TestInvocation::dumpPixelsAndCompareWithExpected): Use the old method
        of evaluating pixel results if the snapshot is not supported, that is to check
        the image we got from the web process. This is necessary for the bots to be able
        to run ref tests.

2012-10-15  Balazs Kelemen  <kbalazs@webkit.org>

        [Qt] Implement pixel snapshot generation in WTR
        https://bugs.webkit.org/show_bug.cgi?id=95992

        Reviewed by Jocelyn Turcotte.

        Switch the Qt implementation of the PlatformWebView to use
        QQuickWindow::grabWindow to generate the pixel results. This way
        we will go through the scenegraph and test the actual rendering backend.
        We use QQuickWindowPrivate::setRenderWithoutShowing to avoid the need of
        showing the window.

        * WebKitTestRunner/Target.pri: Had to added a bunch
        of modules to be able to use QQuickWindowPrivate.
        * WebKitTestRunner/qt/PlatformWebViewQt.cpp:
        (WTR::WrapperWindow::handleStatusChanged):
        (WTR::PlatformWebView::windowSnapshotImage):

2012-10-15  Balazs Kelemen  <kbalazs@webkit.org>

        [Qt][WTR] Do a forced repaint before generating pixel results
        https://bugs.webkit.org/show_bug.cgi?id=98654

        Reviewed by Jocelyn Turcotte.

        Do a forced repaint before grabbing the pixel snapshot. This extra
        synchronisation is necessary with the CoordinatedGraphics rendering
        backend because it has a fully asynchronous nature. This patch make
        us using the window snapshot for pixel results which is necessary to
        capture animations and other dynamic content. The actual grabbing of
        the window has not been implemented in this patch. It will come in
        a follow-up.

        * WebKitTestRunner/TestInvocation.cpp:
        (WTR::TestInvocation::invoke):
        (WTR::TestInvocation::dump): Store results in member variables.
        Don't close output channels yet.
        (WTR::TestInvocation::dumpResults): Added. This is where we dump
        the results if no error happened.
        (WTR):
        (WTR::TestInvocation::didReceiveMessageFromInjectedBundle):
        * WebKitTestRunner/TestInvocation.h:
        (TestInvocation):
        * WebKitTestRunner/qt/PlatformWebViewQt.cpp:
        (WTR::PlatformWebView::windowSnapshotImage):
        * WebKitTestRunner/qt/TestInvocationQt.cpp:
        (WTR::TestInvocation::forceRepaintDoneCallback):
        (WTR):
        (WTR::TestInvocation::dumpPixelsAndCompareWithExpected):

2012-10-18  Simon Hausmann  <simon.hausmann@digia.com>

        [Qt] Clean up variables controlling Qt module creation/handling

        Reviewed by Tor Arne VestbÃ¸.

        We now depend on a Qt 5 version that is new enough to allow us to
        clean this up. Qt's default_pre.prf uses MODULE_QMAKE_OUTDIR, but
        the other MODULE_BASE_* variables are onl used in qmodule.prf.

        * qmake/mkspecs/features/default_pre.prf:

2012-10-18  Simon Hausmann  <simon.hausmann@digia.com>

        [Qt] Reduce memory pressure during link time

        Reviewed by Tor Arne VestbÃ¸.

        If possible always pass -fkeep-memory to the linker on i386. The
        library has grown so big that we need this not only for i386 debug
        builds but at least also for release.

        * qmake/mkspecs/features/unix/default_post.prf:

2012-10-17  Tor Arne VestbÃ¸  <tor.arne.vestbo@digia.com>

        [Qt] Modularize documentation for QtWebKit

        Running 'make docs' would fail unless 'make qmake_all' was ran first,
        but qmake_all involved generating all the derived sources, which seems
        overly complex just for building documentation.

        We solve this by preventing all subdirs except QtWebKit from having a
        docs target. This would normally work fine on its own, but since we
        use CONFIG += ordered, there's now a missing doc target for the
        immediate dependency of the QtWebKit subdir. We solve this by adding
        a dummy-target ourselves.

        Finally, we clean up the qdocconf file to match the rest of the Qt
        documentation modularization efforts.

        Reviewed by Simon Hausmann.

        * qmake/mkspecs/features/default_post.prf:

2012-10-17  Zoltan Horvath  <zoltan@webkit.org>

        Remove the JSHeap memory measurement of the PageLoad performacetests since it creates bogus JSGlobalDatas
        https://bugs.webkit.org/show_bug.cgi?id=99609 

        Reviewed by Ryosuke Niwa.

        Remove the implementation since it creates bogus JSGlobalDatas in the layout tests.

        * DumpRenderTree/mac/DumpRenderTree.mm:
        (dump):

2012-10-17  Dirk Pranke  <dpranke@chromium.org>

        [chromium] stop falling back to platform/mac for LayoutTest results
        https://bugs.webkit.org/show_bug.cgi?id=99666

        Reviewed by James Robinson.

        Previously the Chromium ports would fall back to results in
        platform/mac if a result was not found in platform/chromium-*.
        This allowed us to share a lot of results w/ the Apple Mac port,
        but often surprised people (especially at Apple ;) when changing
        something in that directory would break a Chromium build.

        The tests that are deleted in baselineoptimizer were for cases
        that are no longer relevant or possible in the current fallback
        graph.

        * Scripts/webkitpy/common/checkout/baselineoptimizer_unittest.py:
        (BaselineOptimizerTest.test_move_baselines):
        (BaselineOptimizerTest.test_chromium_covers_mac_win_linux):
        * Scripts/webkitpy/layout_tests/port/chromium_android.py:
        (ChromiumAndroidPort):
        * Scripts/webkitpy/layout_tests/port/chromium_linux.py:
        (ChromiumLinuxPort):
        * Scripts/webkitpy/layout_tests/port/chromium_mac.py:
        (ChromiumMacPort):
        * Scripts/webkitpy/layout_tests/port/chromium_win.py:
        (ChromiumWinPort):
        * TestResultServer/static-dashboards/flakiness_dashboard.js:

2012-10-17  Shashi Shekhar  <shashishekhar@google.com>

        Remove redundant sdk_build parameter.
        https://bugs.webkit.org/show_bug.cgi?id=99648

        Reviewed by Adam Barth.

        sdk_build parameter is no longer needed.

        * DumpRenderTree/DumpRenderTree.gyp/DumpRenderTree.gyp:
        * TestWebKitAPI/TestWebKitAPI.gyp/TestWebKitAPI.gyp:

2012-10-17  Joanmarie Diggs  <jdiggs@igalia.com>

        [GTK] AccessibilityUIElement::role() should be consistent across platforms wherever possible
        https://bugs.webkit.org/show_bug.cgi?id=99640

        Reviewed by Chris Fleizach.

        Convert AtkRole instances to the Mac/Safari-style AXRole string.

        * DumpRenderTree/gtk/AccessibilityUIElementGtk.cpp:
        (roleToString): New method to convert AtkRole instances to the Mac/Safari-style AXRole string
        (AccessibilityUIElement::role): Output the Mac/Safair-style AXRole string rather than the AtkRole's name

2012-10-17  Anders Carlsson  <andersca@apple.com>

        Clean up Vector.h
        https://bugs.webkit.org/show_bug.cgi?id=99622

        Reviewed by Benjamin Poulain.

        Remove ReversedProxy test.

        * TestWebKitAPI/Tests/WTF/Vector.cpp:

2012-10-17  Scott Graham  <scottmg@chromium.org>

        Integer overflows/underflows in all Gamepad controller api calls.
        https://bugs.webkit.org/show_bug.cgi?id=97262

        Reviewed by Abhishek Arya.

        Range check controller inputs. This code is not exposed to the web,
        but makes fuzzers try less hard to break uninteresting code.

        * DumpRenderTree/chromium/TestRunner/GamepadController.cpp:
        (GamepadController::setButtonCount):
        (GamepadController::setButtonData):
        (GamepadController::setAxisCount):
        (GamepadController::setAxisData):

2012-10-17  Joseph Pecoraro  <pecoraro@apple.com>

        Unreviewed watchlist email change.

        * Scripts/webkitpy/common/config/watchlist:

2012-10-17  Dan Carney  <dcarney@google.com>

        Bind isolatedWorldSecurityOrigin to world
        https://bugs.webkit.org/show_bug.cgi?id=99582

        Reviewed by Adam Barth.

        Added ability to unset isolatedWorldSecurityOrigin.

        * DumpRenderTree/chromium/DRTTestRunner.cpp:
        (DRTTestRunner::setIsolatedWorldSecurityOrigin):

2012-10-17  Joseph Pecoraro  <pecoraro@apple.com>

        Unreviewed watchlist addition.

        * Scripts/webkitpy/common/config/watchlist:

2012-10-17  Sadrul Habib Chowdhury  <sadrul@chromium.org>

        plugins: Allow a plugin to dictate whether it can receive drag events or not.
        https://bugs.webkit.org/show_bug.cgi?id=99355

        Reviewed by Tony Chang.

        Update the TestWebPlugin to implement the new |canProcessDrag| interface.

        * DumpRenderTree/chromium/TestWebPlugin.h:
        (TestWebPlugin::canProcessDrag):

2012-10-17  Dominic Mazzoni  <dmazzoni@google.com>

        Unreviewed. Create an accessibility watchlist.

        * Scripts/webkitpy/common/config/committers.py:
        * Scripts/webkitpy/common/config/watchlist:

2012-10-17  Jochen Eisinger  <jochen@chromium.org>

        [gyp] fix bundle resources for DumpRenderTree on mac
        https://bugs.webkit.org/show_bug.cgi?id=99558

        Reviewed by Adam Barth.

        mac_bundle_resources doesn't propagate to targets that depend on it,
        so I'm wrapping it in an all_dependent_settings block.

        * DumpRenderTree/DumpRenderTree.gyp/DumpRenderTree.gyp:

2012-10-17  Harald Alvestrand  <hta@google.com>

        Add myself to the MediaStream watchlist
        https://bugs.webkit.org/show_bug.cgi?id=99589

        Reviewed by Adam Barth.

        * Scripts/webkitpy/common/config/watchlist:

2012-10-17  Mikhail Pozdnyakov  <mikhail.pozdnyakov@intel.com>

        [WK2][WTR] InjectedBundlePage::decidePolicyForNavigationAction() should print only filename part of local URLs
        https://bugs.webkit.org/show_bug.cgi?id=99581

        Reviewed by Kenneth Rohde Christiansen.

        Now InjectedBundlePage::decidePolicyForNavigationAction() prints only filename part of local URLs (URLs where scheme
        equals to 'file').

        * WebKitTestRunner/InjectedBundle/InjectedBundlePage.cpp:
        (WTR::InjectedBundlePage::decidePolicyForNavigationAction):

2012-10-17  Harald Alvestrand  <hta@google.com>

        Implement the Selector argument to RTCPeerConnection.getStats
        https://bugs.webkit.org/show_bug.cgi?id=99460

        Reviewed by Adam Barth.

        The MockWebRTCPeerConnectionHandler will return one object only
        when it gets a selector, and an even number when there is no selector.
        This allows to verify that the argument is passed, but not its value.

        * DumpRenderTree/chromium/MockWebRTCPeerConnectionHandler.cpp:
        (MockWebRTCPeerConnectionHandler::getStats):

2012-10-17  Mikhail Pozdnyakov  <mikhail.pozdnyakov@intel.com>

        WebKitTestRunner needs layoutTestController.queueReload
        https://bugs.webkit.org/show_bug.cgi?id=42672

        Reviewed by Kenneth Rohde Christiansen.

        Added implementation of testRunner.queueReload().

        * WebKitTestRunner/InjectedBundle/Bindings/TestRunner.idl:
        * WebKitTestRunner/InjectedBundle/InjectedBundle.cpp:
        (WTR::InjectedBundle::queueReload):
        (WTR):
        * WebKitTestRunner/InjectedBundle/InjectedBundle.h:
        (InjectedBundle):
        * WebKitTestRunner/InjectedBundle/TestRunner.cpp:
        (WTR::TestRunner::queueReload):
        (WTR):
        * WebKitTestRunner/InjectedBundle/TestRunner.h:
        (TestRunner):
        * WebKitTestRunner/TestInvocation.cpp:
        (WTR::TestInvocation::didReceiveMessageFromInjectedBundle):
        * WebKitTestRunner/WorkQueueManager.cpp:
        (WTR::WorkQueueManager::queueReload):
        (WTR):
        * WebKitTestRunner/WorkQueueManager.h:
        (WorkQueueManager):

2012-10-17  Mark Rowe  <mrowe@apple.com>

        Fix the build with a newer version of clang.

        Reviewed by Dan Bernstein.

        Update to accommodate the renamed methods in WebCoreStatistics.

        * DumpRenderTree/mac/PixelDumpSupportMac.mm:
        (createPagedBitmapContext):

2012-10-17  Mikhail Pozdnyakov  <mikhail.pozdnyakov@intel.com>

        WebKitTestRunner needs testRunner.queueLoad
        https://bugs.webkit.org/show_bug.cgi?id=42674

        Reviewed by Kenneth Rohde Christiansen.

        Added testRunner.queueLoad() and testRunner.queueBackNavigation() implementation to WTR including
        Work Queue implementation. Work Queue is managed by WorkQueueManager which belongs to UI process
        (as the needed functionality, like loading initiation, has to be invoked from UI process) and
        exchanges messages with Injected bundle.

        * WebKitTestRunner/CMakeLists.txt:
        * WebKitTestRunner/GNUmakefile.am:
        * WebKitTestRunner/InjectedBundle/Bindings/TestRunner.idl:
        * WebKitTestRunner/InjectedBundle/InjectedBundle.cpp:
        (WTR::InjectedBundle::InjectedBundle):
        (WTR::InjectedBundle::didReceiveMessage):
        (WTR::InjectedBundle::done):
        (WTR::InjectedBundle::shouldProcessWorkQueue):
        (WTR):
        (WTR::InjectedBundle::processWorkQueue):
        (WTR::InjectedBundle::queueBackNavigation):
        (WTR::InjectedBundle::queueLoad):
        * WebKitTestRunner/InjectedBundle/InjectedBundle.h:
        (InjectedBundle):
        * WebKitTestRunner/InjectedBundle/InjectedBundlePage.cpp:
        (WTR::InjectedBundlePage::didFailProvisionalLoadWithErrorForFrame):
        (WTR::InjectedBundlePage::didFinishLoadForFrame):
        (WTR::InjectedBundlePage::didFailLoadWithErrorForFrame):
        (WTR::InjectedBundlePage::locationChangeForFrame):
        (WTR):
        * WebKitTestRunner/InjectedBundle/InjectedBundlePage.h:
        (InjectedBundlePage):
        * WebKitTestRunner/InjectedBundle/TestRunner.cpp:
        (WTR::TestRunner::queueBackNavigation):
        (WTR):
        (WTR::TestRunner::queueLoad):
        * WebKitTestRunner/InjectedBundle/TestRunner.h:
        (TestRunner):
        * WebKitTestRunner/Target.pri:
        * WebKitTestRunner/TestController.cpp:
        (WTR::TestController::resetStateToConsistentValues):
        * WebKitTestRunner/TestController.h:
        (WTR::TestController::workQueueManager):
        (TestController):
        * WebKitTestRunner/TestInvocation.cpp:
        (WTR::TestInvocation::didReceiveMessageFromInjectedBundle):
        (WTR::TestInvocation::didReceiveSynchronousMessageFromInjectedBundle):
        * WebKitTestRunner/WebKitTestRunner.xcodeproj/project.pbxproj:
        * WebKitTestRunner/WorkQueueManager.cpp: Added.
        (WTR):
        (WTR::mainPage):
        (WTR::goToItemAtIndex):
        (WTR::WorkQueueManager::WorkQueueManager):
        (WTR::WorkQueueManager::clearWorkQueue):
        (WTR::WorkQueueManager::processWorkQueue):
        (WTR::WorkQueueManager::queueLoad):
        (WTR::WorkQueueManager::queueBackNavigation):
        (WTR::WorkQueueManager::enqueue):
        * WebKitTestRunner/WorkQueueManager.h: Added.
        (WTR):
        (WorkQueueManager):
        (WTR::WorkQueueManager::isWorkQueueEmpty):
        (WorkQueueItem):
        (WTR::WorkQueueManager::WorkQueueItem::~WorkQueueItem):
        * WebKitTestRunner/win/WebKitTestRunner.vcproj:

2012-10-16  Andy Estes  <aestes@apple.com>

        [WebKit2] Create Objective-C API for adding and removing user scripts
        https://bugs.webkit.org/show_bug.cgi?id=99528

        Reviewed by Anders Carlsson.

        Add three new API tests.

        * TestWebKitAPI/Tests/WebKit2ObjC/UserContentTest.mm:
        (expectScriptValueIsString):
        (expectScriptValueIsBoolean):
        (expectScriptValueIsUndefined):

2012-10-16  Dirk Pranke  <dpranke@chromium.org>

        [chromium] add Mountain Lion baselines
        https://bugs.webkit.org/show_bug.cgi?id=99505

        Reviewed by Ojan Vafai.

        This change adds a temporary 10.8/MountainLion-specific
        expectations file for Chromium so that the bot can be green
        while we are updating all the baselines and triaging failures.

        * Scripts/webkitpy/layout_tests/port/chromium_mac.py:
        (ChromiumMacPort.expectations_files):
        * Scripts/webkitpy/layout_tests/port/chromium_mac_unittest.py:
        (ChromiumMacPortTest.test_ml_expectations):

2012-10-16  Dima Gorbik  <dgorbik@apple.com>

        Remove Platform.h include from the header files.
        https://bugs.webkit.org/show_bug.cgi?id=98665

        Reviewed by Eric Seidel.

        We don't want other clients that include WebKit headers to know about Platform.h.

        * DumpRenderTree/mac/MockGeolocationProvider.mm:

2012-10-16  Tommy Widenflycht  <tommyw@google.com>

        MediaStream API: Add the chromium API for RTCDataChannel
        https://bugs.webkit.org/show_bug.cgi?id=99435

        Reviewed by Adam Barth.

        Adding mock support for WebRTCDataChannel.

        * DumpRenderTree/chromium/MockWebRTCPeerConnectionHandler.cpp:
        (StringDataTask):
        (StringDataTask::StringDataTask):
        (CharPtrDataTask):
        (CharPtrDataTask::CharPtrDataTask):
        (DataChannelReadyStateTask):
        (DataChannelReadyStateTask::DataChannelReadyStateTask):
        (RTCPeerConnectionReadyStateTask):
        (RTCPeerConnectionReadyStateTask::RTCPeerConnectionReadyStateTask):
        (MockWebRTCPeerConnectionHandler::MockWebRTCPeerConnectionHandler):
        (MockWebRTCPeerConnectionHandler::initialize):
        (MockWebRTCPeerConnectionHandler::stop):
        (MockWebRTCPeerConnectionHandler::openDataChannel):
        (MockWebRTCPeerConnectionHandler::closeDataChannel):
        (MockWebRTCPeerConnectionHandler::sendStringData):
        (MockWebRTCPeerConnectionHandler::sendRawData):
        * DumpRenderTree/chromium/MockWebRTCPeerConnectionHandler.h:
        (MockWebRTCPeerConnectionHandler):

2012-10-16  Chris Rogers  <crogers@google.com>

        Rename some AudioNodes
        https://bugs.webkit.org/show_bug.cgi?id=99358

        Reviewed by Daniel Bates.

        * Scripts/do-webcore-rename:

2012-10-16  Raphael Kubo da Costa  <raphael.kubo.da.costa@intel.com>

        Implement testRunner.dumpSelectionRect() in WebKitTestRunner
        https://bugs.webkit.org/show_bug.cgi?id=69545

        Reviewed by Simon Fraser.

        * WebKitTestRunner/InjectedBundle/InjectedBundlePage.cpp:
        (WTR::InjectedBundlePage::dump): Set the
        kWKSnapshotOptionsPaintSelectionRectangle option if
        testRunner.dumpSelectionRect() is called.
        * WebKitTestRunner/InjectedBundle/TestRunner.h:
        (WTR::TestRunner::dumpSelectionRect):
        (WTR::TestRunner::shouldDumpSelectionRect):
        (TestRunner):

2012-10-16  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r131461.
        http://trac.webkit.org/changeset/131461
        https://bugs.webkit.org/show_bug.cgi?id=99474

        Broke win7 bots (Requested by danakj|gardening on #webkit).

        * DumpRenderTree/chromium/TestEventPrinter.cpp:
        * DumpRenderTree/chromium/TestEventPrinter.h:
        (TestEventPrinter):
        * DumpRenderTree/chromium/TestShell.cpp:
        (TestShell::dump):

2012-10-16  Zoltan Horvath  <zoltan@webkit.org>

        [chromium] Provide used JSHeap size in chromium's DRT for pageloadtest memory measurements
        https://bugs.webkit.org/show_bug.cgi?id=99288

        Reviewed by Ryosuke Niwa.

        Provide used JSHeap size as we did it for the Apple port.

        * DumpRenderTree/chromium/TestEventPrinter.cpp:
        (TestEventPrinter::handleDumpMemoryHeader): Add new function to print the JSHeap memory result.
        * DumpRenderTree/chromium/TestEventPrinter.h:
        (TestEventPrinter): handleDumpMemoryHeader declaration.
        * DumpRenderTree/chromium/TestShell.cpp:
        (TestShell::dump): Dump JSHeap value.

2012-10-16  Simon Hausmann  <simon.hausmann@digia.com>

        [Qt] Fix nmake wipeclean on Windows

        Reviewed by Tor Arne VestbÃ¸.

        Delete all subdirectories and no files instead of ".".

        * qmake/mkspecs/features/configure.prf:

2012-10-16  Simon Hausmann  <simon.hausmann@digia.com>

        [Qt] Fix wipeclean on Windows

        Reviewed by Csaba OsztrogonÃ¡c.

        Make sure to close the .qmake.cache file after opening it, otherwise it cannot be deleted on
        a clean build because this process (build-webkit) is still using it due to Windows' exclusive
        way of opening files.

        * Scripts/webkitdirs.pm:
        (buildQMakeProjects):

2012-10-16  Simon Hausmann  <simon.hausmann@digia.com>

        [Qt] Fix determination of changed files from SVN revisions

        Reviewed by Csaba OsztrogonÃ¡c.

        isSVN() doesn't work from within the build directory, so change to the source directory before
        doing any VCS operations.

        * Scripts/VCSUtils.pm:
        * Scripts/webkitdirs.pm:
        (buildQMakeProjects):

2012-10-16  Simon Hausmann  <simon.hausmann@digia.com>

        Fix build-webkit bailing out of !isSVN() and !isGit()

        Reviewed by Tor Arne VestbÃ¸.

        Added missing else case with early return.

        * Scripts/VCSUtils.pm:

2012-10-16  Simon Hausmann  <simon.hausmann@digia.com>, Tor Arne VestbÃ¸ <tor.arne.vestbo@digia.com>

        [Qt] Add logic for triggering clean builds on changes to build system files

        Reviewed by Csaba OsztrogonÃ¡c.

        Re-use the existing logic that gives us a range between old and new SVN revision and
        parse the summarized output of diff to see if any of the changed files include files
        that are part of the Qt build system. If they change we likely need a clean build and
        trigger it just to be on the safe side and reduce the amount of manual intervention
        needed on the Qt build bots.

        * Scripts/VCSUtils.pm:
        * Scripts/webkitdirs.pm:
        (buildQMakeProjects):

2012-10-16  Allan Sandfeld Jensen  <allan.jensen@digia.com>

        Fix the paths for QtGraphics related WebKit2 files.

        Unreviewed update of watchlist.

        * Scripts/webkitpy/common/config/watchlist:

2012-10-16  Allan Sandfeld Jensen  <allan.jensen@digia.com>

        CSS and TouchAdjustment - I am watching you!

        Unreviewed update of watchlist.

        * Scripts/webkitpy/common/config/watchlist:

2012-10-16  Simon Hausmann  <simon.hausmann@digia.com>

        [Qt] Silence C++11 warnings with older versions of clang

        Rubber-stamped by Tor Arne VestbÃ¸.

        Some clang versions support -Wno-c++11-extensions and some use -Wno-c++0x-extensions.
        We cater both :)

        * qmake/mkspecs/features/unix/default_post.prf:

2012-10-16  Mikhail Pozdnyakov  <mikhail.pozdnyakov@intel.com>

        [WK2] Provide WKURL API for resolving the relative URL with the given base URL
        https://bugs.webkit.org/show_bug.cgi?id=99317

        Reviewed by Kenneth Rohde Christiansen.

        Added API test for newly added WKURLCreateWithBaseURL().

        * TestWebKitAPI/PlatformEfl.cmake:
        * TestWebKitAPI/Tests/WebKit2/WKURL.cpp: Added.
        (TestWebKitAPI):
        (TestWebKitAPI::TEST):

2012-10-16  Zan Dobersek  <zandobersek@gmail.com>

        [GTK] Decrease the Cario jhbuild dep version back to 1.10.2
        https://bugs.webkit.org/show_bug.cgi?id=99443

        Reviewed by Philippe Normand.

        Crashes started to occur after the Cairo version in the JHBuild dependencies
        was bumped up to 1.12.4. This change brings it back down to 1.10.2, which
        worked fine.

        * gtk/jhbuild.modules:

2012-10-16  Szilard Ledan  <szledan@inf.u-szeged.hu>

        Separate WebKit2 instances use the same local storage
        https://bugs.webkit.org/show_bug.cgi?id=89666

        Reviewed by Simon Hausmann.

        TestController has been modified to get the local storage from
        DUMPRENDERTREE_TEMP environment variable. If it's undefined
        then it works with the default directory. The aim is for the parallelly
        started WTRs to use separate directories. It was implemented for WK1
        long time ago and it works fine.

        * WebKitTestRunner/TestController.cpp:
        (WTR::TestController::initialize):

2012-10-15  Christophe Dumez  <christophe.dumez@intel.com>

        [EFL][WK2] Display page favicons in MiniBrowser
        https://bugs.webkit.org/show_bug.cgi?id=99265

        Reviewed by Gyuyoung Kim.

        Display current page favicon in the URL bar.
        This uses the new favicon database API in
        EFL WebKit2.

        * MiniBrowser/efl/main.c:
        (on_favicon_received):
        (on_view_icon_changed):
        (window_create):

2012-10-15  Simon Fraser  <simon.fraser@apple.com>

        Update the url bar in MiniBrowser when getting the committed URL
        https://bugs.webkit.org/show_bug.cgi?id=99388

        Reviewed by Sam Weinig.

        Fix both WK1 and WK2 window controllers to update the URL in the 
        text field when transitioning to the committed URL. This fixes
        the URL when dragging local files into the window.

        * MiniBrowser/mac/WK1BrowserWindowController.m:
        (-[WK1BrowserWindowController webView:didCommitLoadForFrame:]):
        * MiniBrowser/mac/WK2BrowserWindowController.m:
        (-[WK2BrowserWindowController updateTextFieldFromURL:]):
        (-[WK2BrowserWindowController updateProvisionalURLForFrame:]):
        (-[WK2BrowserWindowController updateCommittedURLForFrame:]):
        (-[WK2BrowserWindowController didCommitLoadForFrame:]):

2012-10-15  Ojan Vafai  <ojan@chromium.org>

        Don't show the content shell and android test bots for webkit ToT
        https://bugs.webkit.org/show_bug.cgi?id=99380

        Reviewed by Dirk Pranke.

        Content shell used to coincidentally be skipped because it spelled WebKit correctly.
        Now skip it explicitly. The Android bot is up and running, but only has a stub for
        running tests. Skip it so we don't show a false error.
        * TestResultServer/static-dashboards/builders.js:
        (isChromiumWebkitTipOfTreeTestRunner):

2012-10-15  Zoltan Horvath  <zoltan@webkit.org>

        Add MountainLion Performance-bot to the Performance bots waterfall link
        https://bugs.webkit.org/show_bug.cgi?id=99378

        Reviewed by Dirk Pranke.

        Add MountainLion Performance-bot to the Performance bots waterfall link on the buildbots frontpage.

        * BuildSlaveSupport/build.webkit.org-config/templates/root.html:

2012-10-15  Yael Aharon  <yael.aharon@intel.com>

        [EFL][WK2] Cannot set evas engine from command line
        https://bugs.webkit.org/show_bug.cgi?id=99286

        Reviewed by Kenneth Rohde Christiansen.

        If an engine name is passed on the command line, pass it along to evas.

        * MiniBrowser/efl/main.c:
        (elm_main):

2012-10-15  Ojan Vafai  <ojan@chromium.org>

        Lower the minimum time required to keep a test in the test results json
        https://bugs.webkit.org/show_bug.cgi?id=99346

        Reviewed by Eric Seidel.

        On the run-webkit-tests side, we floor the time. So, 5 seconds is too close to
        the 6 second timeout. Lower the time so that we can get a better sense of tests
        that are close to timing out.

        * TestResultServer/model/jsonresults.py:
        * TestResultServer/model/jsonresults_unittest.py:
        (JsonResultsTest.test_merge_keep_test_with_all_pass_but_slow_time):

2012-10-15  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r131306 and r131307.
        http://trac.webkit.org/changeset/131306
        http://trac.webkit.org/changeset/131307
        https://bugs.webkit.org/show_bug.cgi?id=99354

        It made layout testing extremely slow again (Requested by
        Ossy_night on #webkit).

        * WebKitTestRunner/Target.pri:
        * WebKitTestRunner/TestInvocation.cpp:
        (WTR::TestInvocation::invoke):
        (WTR::TestInvocation::didReceiveMessageFromInjectedBundle):
        * WebKitTestRunner/TestInvocation.h:
        (TestInvocation):
        * WebKitTestRunner/qt/PlatformWebViewQt.cpp:
        (WTR::WrapperWindow::handleStatusChanged):
        (WTR::PlatformWebView::windowSnapshotImage):
        * WebKitTestRunner/qt/TestInvocationQt.cpp:
        (WTR::TestInvocation::dumpPixelsAndCompareWithExpected):

2012-10-15  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r131327.
        http://trac.webkit.org/changeset/131327
        https://bugs.webkit.org/show_bug.cgi?id=99353

        broke the build (Requested by danakj|gardening on #webkit).

        * DumpRenderTree/chromium/TestEventPrinter.cpp:
        * DumpRenderTree/chromium/TestEventPrinter.h:
        (TestEventPrinter):
        * DumpRenderTree/chromium/TestShell.cpp:
        (TestShell::dump):

2012-10-15  Kenichi Ishibashi  <bashi@chromium.org>

        [WebSocket] Update pywebsocket to 0.7.8
        https://bugs.webkit.org/show_bug.cgi?id=99293

        Reviewed by Yuta Kitamura.

        Version 0.7.8 supports WebSocket frames and messages compression
        with blocks in which BFINAL bit is set to 1.
        We need this feature to add a test case of compression extension.

        * Scripts/webkitpy/thirdparty/mod_pywebsocket/extensions.py:
        (DeflateFrameExtensionProcessor.__init__):
        (DeflateFrameExtensionProcessor.set_bfinal):
        (DeflateFrameExtensionProcessor._outgoing_filter):
        (DeflateMessageProcessor.__init__):
        (DeflateMessageProcessor.set_bfinal):
        (DeflateMessageProcessor._process_outgoing_message):
        * Scripts/webkitpy/thirdparty/mod_pywebsocket/util.py:
        (_Deflater.compress_and_finish):
        (_RFC1979Deflater.filter):

2012-10-15  Zan Dobersek  <zandobersek@gmail.com>

        [TestResultServer] TestExpectations should only be loaded for the flakiness dashboard
        https://bugs.webkit.org/show_bug.cgi?id=99245

        Reviewed by Ojan Vafai.

        Only load the TestExpectations when using the flakiness dashboard. Other dashboards
        don't need them so there's no reason to load them.

        * TestResultServer/static-dashboards/dashboard_base.js:
        (isFlakinessDashboard):
        (appendJSONScriptElements):

2012-10-15  Zoltan Horvath  <zoltan@webkit.org>

        [chromium] Provide used JSHeap size in chromium's DRT for pageloadtest memory measurements 
        https://bugs.webkit.org/show_bug.cgi?id=99288

        Reviewed by Ryosuke Niwa.

        Provide used JSHeap size as we did it for the Apple port.

        * DumpRenderTree/chromium/TestEventPrinter.cpp:
        (TestEventPrinter::handleDumpMemoryHeader): Add new function to print the JSHeap memory result.
        * DumpRenderTree/chromium/TestEventPrinter.h:
        (TestEventPrinter): handleDumpMemoryHeader declaration.
        * DumpRenderTree/chromium/TestShell.cpp:
        (TestShell::dump): Dump JSHeap value.

2012-10-15  George Staikos  <staikos@webkit.org>

        [BlackBerry] Adapt to Platform API changes in string handling
        https://bugs.webkit.org/show_bug.cgi?id=99248

        Reviewed by Yong Li.

        Convert usage of WebString, char* and std::string to BlackBerry::Platform::String.

        * DumpRenderTree/blackberry/DumpRenderTree.cpp:
        (BlackBerry::WebKit::DumpRenderTree::runTest):
        * DumpRenderTree/blackberry/WorkQueueItemBlackBerry.cpp:
        (LoadHTMLStringItem::invoke):
        (ScriptItem::invoke):

2012-10-15  Kangil Han  <kangil.han@samsung.com>

        [EFL][EWebLauncher] Add encoding detector option.
        https://bugs.webkit.org/show_bug.cgi?id=98726

        Reviewed by Gyuyoung Kim.

        Added an option to test WebCore's encoding detector functionality on EWebLauncher.
        With this patch, EWebLauncher would display text correctly even if web page wouldn't specify charset information.

        * EWebLauncher/main.c:
        (_User_Arguments):
        (windowCreate):
        (parseUserArguments):

2012-10-15  Ilya Tikhonovsky  <loislo@chromium.org>

        Build fix for Mac debug build.

        * TestWebKitAPI/Tests/WTF/MemoryInstrumentationTest.cpp:

2012-10-15  Balazs Kelemen  <kbalazs@webkit.org>

        [Qt] Implement pixel snapshot generation in WTR
        https://bugs.webkit.org/show_bug.cgi?id=95992

        Reviewed by Jocelyn Turcotte.

        Switch the Qt implementation of the PlatformWebView to use
        QQuickWindow::grabWindow to generate the pixel results. This way
        we will go through the scenegraph and test the actual rendering backend.
        We use QQuickWindowPrivate::setRenderWithoutShowing to avoid the need of
        showing the window.

        * WebKitTestRunner/Target.pri: Had to added a bunch
        of modules to be able to use QQuickWindowPrivate.
        * WebKitTestRunner/qt/PlatformWebViewQt.cpp:
        (WTR::WrapperWindow::handleStatusChanged):
        (WTR::PlatformWebView::windowSnapshotImage):

2012-10-15  Balazs Kelemen  <kbalazs@webkit.org>

        [Qt][WTR] Do a forced repaint before generating pixel results
        https://bugs.webkit.org/show_bug.cgi?id=98654

        Reviewed by Jocelyn Turcotte.

        Do a forced repaint before grabbing the pixel snapshot. This extra
        synchronisation is necessary with the CoordinatedGraphics rendering
        backend because it has a fully asynchronous nature. This patch make
        us using the window snapshot for pixel results which is necessary to
        capture animations and other dynamic content. The actual grabbing of
        the window has not been implemented in this patch. It will come in
        a follow-up.

        * WebKitTestRunner/TestInvocation.cpp:
        (WTR::TestInvocation::invoke):
        (WTR::TestInvocation::dump): Store results in member variables.
        Don't close output channels yet.
        (WTR::TestInvocation::dumpResults): Added. This is where we dump
        the results if no error happened.
        (WTR):
        (WTR::TestInvocation::didReceiveMessageFromInjectedBundle):
        * WebKitTestRunner/TestInvocation.h:
        (TestInvocation):
        * WebKitTestRunner/qt/PlatformWebViewQt.cpp:
        (WTR::PlatformWebView::windowSnapshotImage):
        * WebKitTestRunner/qt/TestInvocationQt.cpp:
        (WTR::TestInvocation::forceRepaintDoneCallback):
        (WTR):
        (WTR::TestInvocation::dumpPixelsAndCompareWithExpected):

2012-10-15  Simon Hausmann  <simon.hausmann@digia.com>

        [Qt] Separate Qt WebKit into Qt WebKit and Qt WebKit Widgets
        https://bugs.webkit.org/show_bug.cgi?id=88162

        Reviewed by Kenneth Rohde Christiansen.

        Rename the QtWebKit module to QtWebKitWidgets.

        * DumpRenderTree/qt/DumpRenderTree.pro:
        * MiniBrowser/qt/MiniBrowser.pro:
        * MiniBrowser/qt/raw/Target.pri:
        * QtTestBrowser/QtTestBrowser.pro:
        * Scripts/webkitpy/layout_tests/port/qt.py:
        (QtPort._path_to_webcore_library):
        * WebKitTestRunner/InjectedBundle/Target.pri:
        * WebKitTestRunner/Target.pri:
        * qmake/mkspecs/features/default_post.prf:
        * qmake/mkspecs/features/webkit_modules.prf:
        * qmake/mkspecs/features/win32/default_post.prf:

2012-10-11  Kinuko Yasuda  <kinuko@chromium.org>

        [chromium] Removes unnecessary dependencies in DumpRenderTree.gyp
        https://bugs.webkit.org/show_bug.cgi?id=99132

        Reviewed by Kent Tamura.

        Removing webkit_support:blob dependency for DumpRenderTree target as it doesn't seem necessary.

        * DumpRenderTree/DumpRenderTree.gyp/DumpRenderTree.gyp:

2012-10-15  Csaba OsztrogonÃ¡c  <ossy@webkit.org>

        [Qt][WK2] Buildfix for newer Qt5.
        https://bugs.webkit.org/show_bug.cgi?id=99303

        Reviewed by Simon Hausmann.

        * WebKitTestRunner/qt/PlatformWebViewQt.cpp:
        (WTR::PlatformWebView::resizeTo):

2012-10-14  Jon Lee  <jonlee@apple.com>

        Allow notification origin permission request when no js callback is provided
        https://bugs.webkit.org/show_bug.cgi?id=63615
        <rdar://problem/11059590>

        Reviewed by Sam Weinig.

        Teach DRT to look at the existing entries in the permission hash map when permission is requested.

        * DumpRenderTree/mac/MockWebNotificationProvider.h: Expose policyForOrigin.
        * DumpRenderTree/mac/MockWebNotificationProvider.mm:
        (-[MockWebNotificationProvider setWebNotificationOrigin:permission:]):
        * DumpRenderTree/mac/UIDelegate.mm:
        (-[UIDelegate webView:decidePolicyForNotificationRequestFromOrigin:listener:]): Look at whether a
        policy for the origin already exists. If so, accept or deny the request as appropriate. Otherwise,
        accept by default.

2012-10-13  Zan Dobersek  <zandobersek@gmail.com>

        [TestResultServer] Unit tests require an update after r131239
        https://bugs.webkit.org/show_bug.cgi?id=99236

        Reviewed by Ojan Vafai.

        Replacing 'Webkit' with 'WebKit' in builder names througout the unit tests
        after the Chromium builders have been renamed recently.

        * TestResultServer/static-dashboards/flakiness_dashboard_unittests.js:

2012-10-12  Zan Dobersek  <zandobersek@gmail.com>

        [TestResultServer] Add support for non-Chromium TestExpectations files
        https://bugs.webkit.org/show_bug.cgi?id=98422

        Reviewed by Ojan Vafai.

        Loads TestExpectations files for several other non-Chromium ports, parses them and
        properly distributes them per various platforms.

        * TestResultServer/static-dashboards/dashboard_base.js: g_expectations is replaced by
        g_expectationsByPlatform, an object that holds raw TestExpectations file contents for
        various platforms.
        (requestExpectationsFiles): First traverses through the platforms tree to gather all
        the TestExpectations files that should be loaded, then loads them in parallel.
        (appendJSONScriptElements):
        * TestResultServer/static-dashboards/flakiness_dashboard.js: The platforms tree is reorganized
        to describe each platform and possible subplatforms plainly yet in detail. The PLATFORM_FALLBACKS
        object is removed as it's not used anywhere. g_allTestsByPlatformAndBuildType is now filled by
        traversing the platforms tree.
        (traversePlatformsTree.traverse):
        (traversePlatformsTree): A helper function that traverses the platforms tree, invoking
        callback on each leaf node.
        (determineWKPlatform): A helper function to determine whether the builder is running WebKit1 or
        WebKit2 layer of a given platform.
        (chromiumPlatform): Chromium-specific platforms are now properly prefixed with 'CHROMIUM_'.
        (TestTrie): A new class that holds all the tests in a trie. The trie is constructed by iterating
        through the tests for each builder, adding each test to the trie.
        (TestTrie.prototype.forEach.traverse):
        (TestTrie.prototype.forEach): A helper function that traverses the tests trie, invoking callback on each leaf.
        (TestTrie.prototype._addTest): Aligns the test into the specified trie based on the test's path.
        (getAllTestsTrie): Instead of in list, the problematic tests from each builder are now stored in a trie.
        (individualTestsForSubstringList): Modified to traverse the trie instead of iterating the list.
        (allTestsWithResult): Ditto.
        (platformObjectForName): Splits the platform name by underscores and finds the appropriate platform object.
        (getParsedExpectations): Now operates on the passed-in parameter rather than on a global variable.
        (addTestToAllExpectationsForPlatform): Links expectations and modifiers to the test on the specified platform
        and any build type the modifiers might apply to (or all build types if there are no such modifiers).
        (processExpectationsForPlatform): Determines if the expectation should actually be processed for the given
        platform by checking if any platform's fallback platforms support platform modifier unions and if any modifiers
        represent such an union. If so, the expectation is then only processed if the given platform is in the union
        the modifier presents or there are no such modifiers.
        (processExpectations): Processes all acquired expectations by traversing the platforms tree and taking into
        account possible fallback platforms.
        (processTestRunsForBuilder):
        (realModifiers.return.modifiers.filter):
        (realModifiers): Modifiers other than build configurations and bug handles are now filtered out only if they
        are present in the platform's platform modifier unions or represent subplatforms of a platform that supports
        platform modifier unions.
        * TestResultServer/static-dashboards/flakiness_dashboard_unittests.js: The test cases are updated and expanded
        where necessary to cover the changes.
        (resetGlobals):
        (test): Added a TestTrie test.

2012-10-12  Dirk Pranke  <dpranke@chromium.org>

        Update chromium bot names in garden-o-matic.

        Unreviewed, build fix.

        * BuildSlaveSupport/build.webkit.org-config/public_html/TestFailures/scripts/config.js:

2012-10-12  Ojan Vafai  <ojan@chromium.org>

        Fix bot name filters now that the Chromium bots have been renamed.
        * TestResultServer/static-dashboards/builders.js:
        (isChromiumWebkitTipOfTreeTestRunner):
        (isChromiumWebkitDepsTestRunner):
        (isChromiumTipOfTreeGTestRunner):

2012-10-12  Dirk Pranke  <dpranke@chromium.org>

        [chromium] add ML bot and update bot names
        https://bugs.webkit.org/show_bug.cgi?id=99209

        Reviewed by Eric Seidel.

        This change adds proper baseline support for Mac10.8 (Mountain
        Lion or ML) to chromium and updates the bot names from "Webkit" 
        to "WebKit" and ensures that all the bots have the OS version in
        the name on Mac and Win.

        We don't yet include a ML bot in garden-o-matic since it isn't
        green yet.

        * BuildSlaveSupport/build.webkit.org-config/public_html/TestFailures/scripts/builders_unittests.js:
        (.):
        * Scripts/webkitpy/layout_tests/port/builders.py:
        * Scripts/webkitpy/layout_tests/port/chromium.py:
        (ChromiumPort):
        * Scripts/webkitpy/layout_tests/port/factory_unittest.py:
        (FactoryTest.test_get_from_builder_name):
        * Scripts/webkitpy/tool/commands/rebaseline_unittest.py:
        (TestRebaseline.test_baseline_directory):
        (TestRebaseline.test_rebaseline_updates_expectations_file_noop):
        (test_rebaseline_updates_expectations_file):
        (test_rebaseline_does_not_include_overrides):
        (test_rebaseline_test):
        (test_rebaseline_test_and_print_scm_changes):
        (test_rebaseline_and_copy_test):
        (test_rebaseline_and_copy_test_with_lion_result):
        (test_rebaseline_and_copy_no_overwrite_test):
        (test_rebaseline_expectations):
        * Scripts/webkitpy/tool/servers/gardeningserver_unittest.py:
        (BuildCoverageExtrapolatorTest.test_extrapolate):

2012-10-12  Mikhail Pozdnyakov  <mikhail.pozdnyakov@intel.com>

        [Qt][WK2] REGRESSION(r131057): It made plugins/plugin-document-back-forward.html timeout
        https://bugs.webkit.org/show_bug.cgi?id=99152

        Reviewed by Simon Fraser.

        Even though Response was already checked in WTR WKBundlePagePolicyClient decidePolicyForResponse callback,
        this check did not take plugins into consideration when deciding whether we can show the given MIME type or not
        so added another check in WTR UI process which also includes plugins.

        * WebKitTestRunner/TestController.cpp:
        (WTR::TestController::decidePolicyForResponse):
        * WebKitTestRunner/TestController.h:
        (TestController):

2012-10-12  Rob Buis  <rbuis@rim.com>

        [BlackBerry] Add tests of WebSocketEnabled preference
        https://bugs.webkit.org/show_bug.cgi?id=84982

        Reviewed by Yong Li.

        PR 209265.

        Allow WebSocketsEnabled preference setting.

        * DumpRenderTree/blackberry/TestRunnerBlackBerry.cpp:
        (TestRunner::overridePreference):

2012-10-12  Tommy Widenflycht  <tommyw@google.com>

        Creating a MediaStream subscription in watchlist
        https://bugs.webkit.org/show_bug.cgi?id=99172

        Reviewed by Yuta Kitamura.

        * Scripts/webkitpy/common/config/watchlist:

2012-10-12  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r131160.
        http://trac.webkit.org/changeset/131160
        https://bugs.webkit.org/show_bug.cgi?id=99163

        "It should not be landed without it's follow-up because it
        break pixal and ref tests without it." (Requested by kbalazs
        on #webkit).

        * WebKitTestRunner/TestInvocation.cpp:
        (WTR::TestInvocation::invoke):
        (WTR::TestInvocation::didReceiveMessageFromInjectedBundle):
        * WebKitTestRunner/TestInvocation.h:
        (TestInvocation):
        * WebKitTestRunner/qt/PlatformWebViewQt.cpp:
        (WTR::PlatformWebView::windowSnapshotImage):
        * WebKitTestRunner/qt/TestInvocationQt.cpp:
        (WTR::TestInvocation::dumpPixelsAndCompareWithExpected):

2012-10-12  Jochen Eisinger  <jochen@chromium.org>

        Create a separate gyp target for dependencies of DumpRenderTree
        https://bugs.webkit.org/show_bug.cgi?id=99023

        Reviewed by Tony Chang.

        This allows for pulling in the fonts and helpers required to run layout
        tests in the content_shell without depending on DumpRenderTree.

        * DumpRenderTree/DumpRenderTree.gyp/DumpRenderTree.gyp:

2012-10-12  Balazs Kelemen  <kbalazs@webkit.org>

        [Qt][WTR] Do a forced repaint before generating pixel results
        https://bugs.webkit.org/show_bug.cgi?id=98654

        Reviewed by Jocelyn Turcotte.

        Do a forced repaint before grabbing the pixel snapshot. This extra
        synchronisation is necessary with the CoordinatedGraphics rendering
        backend because it has a fully asynchronous nature. This patch make
        us using the window snapshot for pixel results which is necessary to
        capture animations and other dynamic content. The actual grabbing of
        the window has not been implemented in this patch. It will come in
        a follow-up.

        * WebKitTestRunner/TestInvocation.cpp:
        (WTR::TestInvocation::invoke):
        (WTR::TestInvocation::dump): Store results in member variables.
        Don't close output channels yet.
        (WTR::TestInvocation::dumpResults): Added. This is where we dump
        the results if no error happened.
        (WTR):
        (WTR::TestInvocation::didReceiveMessageFromInjectedBundle):
        * WebKitTestRunner/TestInvocation.h:
        (TestInvocation):
        * WebKitTestRunner/qt/PlatformWebViewQt.cpp:
        (WTR::PlatformWebView::windowSnapshotImage):
        * WebKitTestRunner/qt/TestInvocationQt.cpp:
        (WTR::TestInvocation::forceRepaintDoneCallback):
        (WTR):
        (WTR::TestInvocation::dumpPixelsAndCompareWithExpected):

2012-10-12  Ilya Tikhonovsky  <loislo@chromium.org>

        Unreviewed compile error fix for chromium windows bot.

        * TestWebKitAPI/Tests/WTF/MemoryInstrumentationTest.cpp:

2012-10-12  Ilya Tikhonovsky  <loislo@chromium.org>

        Another unreviewed fix for clang builders.

        * TestWebKitAPI/Tests/WTF/MemoryInstrumentationTest.cpp:

2012-10-12  Ilya Tikhonovsky  <loislo@chromium.org>

        Unreviewed compile error fix for clang builders.

        * TestWebKitAPI/Tests/WTF/MemoryInstrumentationTest.cpp:

2012-10-11  Ilya Tikhonovsky  <loislo@chromium.org>

        Web Inspector: NMI move instrumentation tests from chromium test set to the cross platform test set.
        https://bugs.webkit.org/show_bug.cgi?id=99046

        Reviewed by Yury Semikhatsky.

        * TestWebKitAPI/Tests/WTF/MemoryInstrumentationTest.cpp:

2012-10-11  Takashi Sakamoto  <tasak@google.com>

        [WebKit IDL] remove all module from idl files.
        https://bugs.webkit.org/show_bug.cgi?id=99007

        Reviewed by Kentaro Hara.

        Since current WebIDL spec doesn't support "module", remove
        module from all idl files.

        No new tests. I ran run-bindings-tests and no error was reported.

        * WebKitTestRunner/InjectedBundle/Bindings/AccessibilityController.idl:
        * WebKitTestRunner/InjectedBundle/Bindings/AccessibilityTextMarker.idl:
        * WebKitTestRunner/InjectedBundle/Bindings/AccessibilityTextMarkerRange.idl:
        * WebKitTestRunner/InjectedBundle/Bindings/AccessibilityUIElement.idl:
        * WebKitTestRunner/InjectedBundle/Bindings/EventSendingController.idl:
        * WebKitTestRunner/InjectedBundle/Bindings/GCController.idl:
        * WebKitTestRunner/InjectedBundle/Bindings/TestRunner.idl:
        * WebKitTestRunner/InjectedBundle/Bindings/TextInputController.idl:
        Removed "module".

2012-10-11  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r131107.
        http://trac.webkit.org/changeset/131107
        https://bugs.webkit.org/show_bug.cgi?id=99126

        Causes an ASSERT (Requested by abarth|gardening on #webkit).

        * DumpRenderTree/chromium/TestRunner/AccessibilityControllerChromium.cpp:
        (AccessibilityController::getAccessibleElementById):
        * DumpRenderTree/chromium/TestRunner/AccessibilityUIElementChromium.cpp:
        (AccessibilityUIElement::titleUIElementCallback):

2012-10-11  Seokju Kwon  <seokju.kwon@samsung.com>

        [EFL][WK2] Add support for Inspector
        https://bugs.webkit.org/show_bug.cgi?id=98639

        Reviewed by Kenneth Rohde Christiansen.

        Enable developer extensions when browser is created.
        And Inspector can be opened by pressing Ctrl+i on browser.

        * MiniBrowser/efl/main.c:
        (on_key_down):
        (window_create):

2012-10-11  Gyuyoung Kim  <gyuyoung.kim@samsung.com>

        [EFL] Remove "web" word in web inspector
        https://bugs.webkit.org/show_bug.cgi?id=98724

        Reviewed by Laszlo Gombos.

        *web* word is redundant in web inspector. Beside r130494 and r130479 removed *web* from EFL WK2.

        * DumpRenderTree/efl/DumpRenderTreeChrome.cpp:
        (DumpRenderTreeChrome::createInspectorView):
        (DumpRenderTreeChrome::removeInspectorView):
        (DumpRenderTreeChrome::waitInspectorLoadFinished):
        (DumpRenderTreeChrome::onInspectorViewCreate):
        (DumpRenderTreeChrome::onInspectorViewClose):
        (DumpRenderTreeChrome::onInspectorFrameLoadFinished):
        * DumpRenderTree/efl/DumpRenderTreeChrome.h:
        (DumpRenderTreeChrome):
        * DumpRenderTree/efl/TestRunnerEfl.cpp:
        (TestRunner::showWebInspector):
        (TestRunner::closeWebInspector):
        * EWebLauncher/main.c:
        (on_inspector_ecore_evas_resize):
        (on_key_down):
        (on_inspector_view_create):
        (on_inspector_view_close):
        (on_inspector_view_destroyed):
        (browserCreate):
        (webInspectorCreate):
        (closeWindow):
        (main_signal_exit):

2012-10-11  Timothy Hatcher  <timothy@apple.com>

        Unreviewed watch list addition for Inspector.json.

        * Scripts/webkitpy/common/config/watchlist:

2012-10-11  Dominic Mazzoni  <dmazzoni@google.com>

        AX: labelForElement is slow when there are a lot of DOM elements
        https://bugs.webkit.org/show_bug.cgi?id=97825

        Reviewed by Ryosuke Niwa.

        Implement titleUIElement in the chromium port of DRT, and
        fix getAccessibleElementById so that it ensures the backing store
        is up-to-date.

        * DumpRenderTree/chromium/TestRunner/AccessibilityControllerChromium.cpp:
        (AccessibilityController::getAccessibleElementById):
        * DumpRenderTree/chromium/TestRunner/AccessibilityUIElementChromium.cpp:
        (AccessibilityUIElement::titleUIElementCallback):

2012-10-11  Dirk Pranke  <dpranke@chromium.org>

        test-webkitpy runs individual tests twice
        https://bugs.webkit.org/show_bug.cgi?id=99098

        Reviewed by Adam Barth.

        If you were to run 'test-webkitpy webkitpy.test.main_unittests.TesterTests.test_no_tests_found',
        it would actually run the test twice. This fixes that.

        * Scripts/webkitpy/test/main.py:
        (Tester._parse_args):
        (Tester._test_names):
        * Scripts/webkitpy/test/main_unittest.py:
        (TesterTest.test_no_tests_found):
        (TesterTest):
        (TesterTest.test_individual_names_are_not_run_twice):

2012-10-11  Xianzhu Wang  <wangxianzhu@chromium.org>

        [Chromium-Android] Exception when the layout test driver is stopped
        https://bugs.webkit.org/show_bug.cgi?id=99084

        Reviewed by Dirk Pranke.

        On chromium-android, the process is killed directly in ServerProcess.stop() as the pipes are closed first.
        Should not try to read data from the pipes after the process is killed.

        * Scripts/webkitpy/layout_tests/port/server_process.py:
        (ServerProcess.stop): Don't read data after the process is killed.

2012-10-11  Mario Sanchez Prada  <msanchez@igalia.com>

        [GTK] REGRESSION(r131033): Favicons don't work in MiniBrowser
        https://bugs.webkit.org/show_bug.cgi?id=99019

        Reviewed by Carlos Garcia Campos.

        Enable the favicons database by specifying the default path for
        the directory where the actual data will be stored.

        * MiniBrowser/gtk/main.c:
        (main): Set the default directory for the favicon database calling
        webkit_web_context_set_favicon_database_directory().

2012-10-11  Sudarsana Nagineni  <sudarsana.nagineni@intel.com>

        [EFL][WK2] NWTR should launch MiniBrowser instead of EWebLauncher after test run
        https://bugs.webkit.org/show_bug.cgi?id=99075

        Reviewed by Kenneth Rohde Christiansen.

        Pass the '-2' flag when executing run-launcher script after
        testing with WebKitTestRunner.

        * Scripts/webkitpy/layout_tests/port/efl.py:
        (EflPort.show_results_html_file):

2012-10-11  Christophe Dumez  <christophe.dumez@intel.com>

        [EFL][WK2] Add support for Javascript popup boxes to MiniBrowser
        https://bugs.webkit.org/show_bug.cgi?id=99021

        Reviewed by Kenneth Rohde Christiansen.

        Add support for JavaScript popups (alert, confirm, prompt)
        to MiniBrowser.

        * MiniBrowser/efl/main.c:
        (miniBrowserViewSmartClass):
        (browser_view_find):
        (quit_event_loop):
        (on_ok_clicked):
        (on_javascript_alert):
        (on_javascript_confirm):
        (on_javascript_prompt):
        (window_create):
        (elm_main):

2012-10-11  Ryuan Choi  <ryuan.choi@samsung.com>

        [EFL][jhbuild] Disable elm-web in elementary
        https://bugs.webkit.org/show_bug.cgi?id=99005

        Reviewed by Laszlo Gombos.

        * efl/jhbuild.modules: Added --disable-web to elementary.

2012-10-11  Mikhail Pozdnyakov  <mikhail.pozdnyakov@intel.com>

        REGRESSION (r129478-r129480): http/tests/loading/text-content-type-with-binary-extension.html failing on Apple MountainLion Debug WK2 (Tests)
        https://bugs.webkit.org/show_bug.cgi?id=98527

        Reviewed by Kenneth Rohde Christiansen.

        Added decidePolicyForResponse callback for WTR PagePolicyClient.

        * WebKitTestRunner/TestController.cpp:
        (WTR::TestController::initialize):
        (WTR::TestController::decidePolicyForResponse):
        (WTR):
        * WebKitTestRunner/TestController.h:
        (TestController):

2012-10-11  Jocelyn Turcotte  <jocelyn.turcotte@digia.com>

        [Qt] Make sure that -Wno-c++0x-compat is set even with production_build

        Reviewed by Simon Hausmann.

        This makes sure that QtWebKit can be built inside Qt without nullptr
        and narrowing warnings producing noise during compilation.

        * qmake/mkspecs/features/unix/default_post.prf:

2012-10-11  Jinwoo Song  <jinwoo7.song@samsung.com>

        [EFL][WK2] Revisit setting API names and documentation
        https://bugs.webkit.org/show_bug.cgi?id=98793

        Reviewed by Kenneth Rohde Christiansen.

        Make frame flattening setting APIs to be consistent with others.

        * MiniBrowser/efl/main.c:
        (window_create):

2012-10-11 Vivek Galatage <vivekgalatage@gmail.com>

        Fix committers.py for the names of contributors to appear on webkit.org/team.html
        https://bugs.webkit.org/show_bug.cgi?id=99004

        Reviewed by Yuta Kitamura

        Some of the nicknames in the committers.py file are using the single quotes (')
        but while parsing these, JSON throws an error: Single quotes (') are not allowed in JSON
        Hence coverting these single quotes to (") so as the contributor names appear properly
        on http://www.webkit.org/team.html

        * Scripts/webkitpy/common/config/committers.py:

2012-10-10  Lucas Forschler  <lforschler@apple.com>

        Remove Apple Mac Snow Leopard bots.
        
        * BuildSlaveSupport/build.webkit.org-config/config.json:

2012-10-10  Christophe Dumez  <christophe.dumez@intel.com>

        [EFL][WK2] Add toolbar buttons to MiniBrowser
        https://bugs.webkit.org/show_bug.cgi?id=98883

        Reviewed by Kenneth Rohde Christiansen.

        Add toolbar buttons to MiniBrowser to support
        navigation back / forward, refresh and go
        to home page.

        * MiniBrowser/efl/main.c:
        (_Browser_Window):
        (on_back_forward_list_changed):
        (on_back_button_clicked):
        (on_forward_button_clicked):
        (on_refresh_button_clicked):
        (on_home_button_clicked):
        (create_toolbar_button):
        (window_create):

2012-10-10  Andy Estes  <aestes@apple.com>

        Fix the Lion build after r130948.

        * TestWebKitAPI/Tests/WebKit2ObjC/UserContentTest.mm:

2012-10-10  Andy Estes  <aestes@apple.com>

        Speculative build fix for Snow Leopard after r130948.

        * TestWebKitAPI/Tests/WebKit2ObjC/UserContentTest.mm: Pull the
        declaration of backgroundColorQuery out of a block to appease GCC.

2012-10-10  Mikhail Pozdnyakov  <mikhail.pozdnyakov@intel.com>

        [WK2][WTR] WebKitTestRunner UI process should be aware of Custom Policy Delegate
        https://bugs.webkit.org/show_bug.cgi?id=95974

        Reviewed by Kenneth Rohde Christiansen.

        Added TestController::decidePolicyForNavigationAction() function as a 'decidePolicyForNavigationAction' WKPagePolicyClient callback
        for WTR UI process. WTR bundle client notifies UI process about Custom Policy Delegate via newly added message,
        so that TestController is aware of whether Custom Policy Delegate as enabled and
        permissive. This data is used then in TestController::decidePolicyForNavigationAction for making policy decision.

        * WebKitTestRunner/InjectedBundle/InjectedBundle.cpp:
        (WTR::InjectedBundle::setCustomPolicyDelegate):
        (WTR):
        * WebKitTestRunner/InjectedBundle/InjectedBundle.h:
        (InjectedBundle):
        * WebKitTestRunner/InjectedBundle/TestRunner.cpp:
        (WTR::TestRunner::setCustomPolicyDelegate):
        * WebKitTestRunner/TestController.cpp:
        (WTR::TestController::TestController):
        (WTR::TestController::initialize):
        (WTR::TestController::resetStateToConsistentValues):
        (WTR::TestController::setCustomPolicyDelegate):
        (WTR):
        (WTR::TestController::decidePolicyForNavigationAction):
        * WebKitTestRunner/TestController.h:
        (TestController):
        * WebKitTestRunner/TestInvocation.cpp:
        (WTR::TestInvocation::didReceiveMessageFromInjectedBundle):

2012-10-10  Zoltan Horvath  <zoltan@webkit.org>

        Pageload tests should measure memory usage
        https://bugs.webkit.org/show_bug.cgi?id=93958

        Reviewed by Ryosuke Niwa.

        Add JS Heap and Heap memory measurement to PageLoad tests.

        * DumpRenderTree/mac/DumpRenderTree.mm:
        (dump): Print memory results with DRT.
        * Scripts/old-run-webkit-tests:
        (readFromDumpToolWithTimer): Hadle memory results.
        * Scripts/webkitpy/layout_tests/port/driver.py:
        (DriverOutput.__init__): Add new parameter for the results.
        (Driver.__init__): Initialize the new parameter.
        (Driver.run_test):
        (Driver._read_first_block): Add support for the new headers.
        (Driver._process_stdout_line):
        (ContentBlock.__init__):
        * Scripts/webkitpy/performance_tests/perftest.py:
        (PageLoadingPerfTest.calculate_statistics): Move statistics calculation into a function.
        (PageLoadingPerfTest.run): Handle the new memory results.
        (PageLoadingPerfTest.run.in):
        (PageLoadingPerfTest):
        * Scripts/webkitpy/performance_tests/perftest_unittest.py: Add test for memory results of pageloadtests.
        (TestPageLoadingPerfTest.MockDriver.__init__):
        (TestPageLoadingPerfTest.MockDriver.run_test):
        (TestPageLoadingPerfTest.test_run_with_memory_output):

2012-10-04  Andy Estes  <aestes@apple.com>

        [WebKit2] Create an API for adding and removing user stylesheets from a page group
        https://bugs.webkit.org/show_bug.cgi?id=98432

        Reviewed by Sam Weinig.

        Add three new API tests:

        - Test adding a user stylesheet before a page is created. This tests
        the code path where the sheet is sent to the web process as part of
        the new page's WebPageCreationParameters.
        - Test adding a user stylesheet after a page is created. This tests the
        code patch where the sheet is sent as a separate message to all
        processes containing the given page group.
        - Test removing all user stylesheets.

        * TestWebKitAPI/TestWebKitAPI.xcodeproj/project.pbxproj:
        * TestWebKitAPI/Tests/WebKit2ObjC/UserContentTest.mm: Added.
        (-[UserContentTestLoadDelegate initWithBlockToRunOnLoad:]):
        (-[UserContentTestLoadDelegate browsingContextControllerDidFinishLoad:]):
        (expectScriptValue):
        * TestWebKitAPI/Tests/WebKit2ObjC/WKBrowsingContextGroupTest.mm:

2012-10-10  Dan Bernstein  <mitz@apple.com>

        Changed debug-safari, debug-minibrowser and debug-test-runner to use LLDB by default when
        using Xcode 4.5 or later.

        Reviewed by Anders Carlsson.

        * Scripts/webkitdirs.pm:
        (determineDebugger): Changed the default debugger from GDB to LLDB when the Xcode version
        is 4.5 or later. Added a --use-gdb switch for overriding this.
        (printHelpAndExitForRunAndDebugWebKitAppIfNeeded): Updated to mention --use-gdb and the
        how the default debugger choice depends on the Xcode version. Also changed the description
        of --no-saved-state to use the same terminology Xcodeâs scheme editor uses to describe this
        option, and clarified to which OS X versions it applies.

2012-10-10  Antonio Gomes  <agomes@rim.com>

        Unreviewed watch list addition.

        * Scripts/webkitpy/common/config/watchlist:

2012-10-10  Dirk Pranke  <dpranke@chromium.org>

        NRWT crashes on too many timeouts
        https://bugs.webkit.org/show_bug.cgi?id=97047

        Reviewed by Tony Chang.

        Apparently if you kill a subprocess directly python doesn't
        auto-close the file descriptors.

        * Scripts/webkitpy/layout_tests/port/server_process.py:
        (ServerProcess._reset):
        * Scripts/webkitpy/layout_tests/port/server_process_unittest.py:

2012-10-10  Zan Dobersek  <zandobersek@gmail.com>

        [TestResultServer] Enable CORS for test files
        https://bugs.webkit.org/show_bug.cgi?id=98918

        Reviewed by Dirk Pranke.

        Serve the JSON test files with the Access-Control-Allow-Origin
        response header to enable cross-origin sharing of these files.
        This eases up hacking on TestResultServer.

        * TestResultServer/handlers/testfilehandler.py:
        (GetFile._serve_json):

2012-10-10  Andreas Kling  <kling@webkit.org>

        Future-proof the WTF.DoubleHashCollisions test.
        <http://webkit.org/b/98853>

        Reviewed by Anders Carlsson.

        Add a check that the two keys that are supposed to clobber each other actually end up
        in the same bucket with the DefaultHash<double> hash function.

        * TestWebKitAPI/Tests/WTF/HashMap.cpp:
        (TestWebKitAPI::bucketForKey):
        (TestWebKitAPI):
        (TestWebKitAPI::TEST):

2012-10-10  Balazs Kelemen  <kbalazs@webkit.org>

        [Qt] Test drivers should handle repaint rects
        https://bugs.webkit.org/show_bug.cgi?id=68870

        Reviewed by Zoltan Herczeg.

        Implemented masking the area not covered by repaint rects.
        This is equivalent with the implementation for Mac.

        * DumpRenderTree/qt/DumpRenderTreeQt.cpp:
        (WebCore::DumpRenderTree::dump):
        * DumpRenderTree/qt/TestRunnerQt.cpp:
        (TestRunner::display):
        * WebKitTestRunner/qt/PlatformWebViewQt.cpp:
        * WebKitTestRunner/qt/TestInvocationQt.cpp:
        (WTR::TestInvocation::dumpPixelsAndCompareWithExpected):

2012-10-10  Vivek Galatage  <vivekgalatage@gmail.com>

        [Qt]QtTestBrowser should have default url(google.com) when no command line args
        https://bugs.webkit.org/show_bug.cgi?id=98880

        Reviewed by Simon Hausmann.

        Making QtTestBrowser use www.google.com as default url when no arguments are passed

        * QtTestBrowser/qttestbrowser.cpp:
        (main):

2012-10-10  Christophe Dumez  <christophe.dumez@intel.com>

        [EFL][WK2] Port MiniBrowser to Elementary
        https://bugs.webkit.org/show_bug.cgi?id=98748

        Reviewed by Kenneth Rohde Christiansen.

        Port MiniBrowser to Elementary to simplify the
        code and make future improvements easier. The
        URL bar is now an Elementary Entry widget and
        supports additional functionality like copy /
        paste.

        * CMakeLists.txt:
        * EWebLauncher/url_bar.c:
        (on_urlbar_key_down): Remove WK2-specific code
        now that this file is no longer used by MiniBrowser.
        * MiniBrowser/efl/CMakeLists.txt:
        * MiniBrowser/efl/main.c:
        (_Browser_Window):
        (window_free):
        (window_close):
        (view_focus_set):
        (on_mouse_down):
        (title_set):
        (on_title_changed):
        (on_url_changed):
        (on_close_window):
        (on_progress):
        (quit):
        (on_url_bar_activated):
        (on_url_bar_clicked):
        (on_window_deletion):
        (window_create):
        (elm_main):
        * efl/jhbuild.modules: Add Elementary to jhbuild and bump
        EFL dependencies to 1.7.

2012-10-10  Christophe Dumez  <christophe.dumez@intel.com>

        [WK2][SOUP] ResourceError.isCancellation() is not carried over IPC
        https://bugs.webkit.org/show_bug.cgi?id=98882

        Reviewed by Kenneth Rohde Christiansen.

        Do not display the error page in MiniBrowser if the loading
        error corresponds to a cancellation.

        * MiniBrowser/efl/main.c:
        (on_error):

2012-10-09  Jocelyn Turcotte  <jocelyn.turcotte@digia.com>

        [Qt] WTR: Fix an assert triggered by EventSenderProxy::touchEnd
        https://bugs.webkit.org/show_bug.cgi?id=98735

        Reviewed by Kenneth Rohde Christiansen.

        ASSERT: "itemForTouchPointId.isEmpty()" in file qt5/qtdeclarative/src/quick/items/qquickwindow.cpp, line 1563
        This assert is caused by QQuickWindow not registering our TouchPointReleased
        since it expects QTouchEvent::touchPointStates() to be filled by the event's sender.

        This patch calculates the touchPointStates like QQuickWindowPrivate::touchEventWithPoints does.

        * WebKitTestRunner/qt/EventSenderProxyQt.cpp:
        (WTR::EventSenderProxy::sendTouchEvent):

2012-10-10  Allan Sandfeld Jensen  <allan.jensen@digia.com>

        [Qt] DumpRenderTree needs a beginDragWithFiles implementation
        https://bugs.webkit.org/show_bug.cgi?id=50902

        Reviewed by Simon Hausmann.

        Implement support for beginDragWithFiles. This function similates dragging without going
        though regular event handling. Which allows us to test effects of dropping files on
        different elements.

        * DumpRenderTree/qt/EventSenderQt.cpp:
        (EventSender::EventSender):
        (EventSender::mouseUp):
        (EventSender::mouseMoveTo):
        (EventSender::beginDragWithFiles):
        * DumpRenderTree/qt/EventSenderQt.h:
        (EventSender):

2012-10-10  KwangYong Choi  <ky0.choi@samsung.com>

        [EFL][WTR][CMake] Add a missing TestNetscapePlugin file
        https://bugs.webkit.org/show_bug.cgi?id=98637

        Reviewed by Kenneth Rohde Christiansen.

        PluginScriptableObjectOverridesAllProperties.cpp is used during
        plugins/npruntime/overrides-all-properties.html test introduced by r123936.

        * DumpRenderTree/TestNetscapePlugIn/CMakeLists.txt:

2012-10-10  Kenichi Ishibashi  <bashi@chromium.org>

        Update pywebsocket to 0.7.7
        https://bugs.webkit.org/show_bug.cgi?id=98872

        Reviewed by Yuta Kitamura.

        This version contains server-side permessage-compress extension support.
        We need this version to add tests for permessage-compress extension.

        I confirmed all tests under http/tests/websocket passed.

        * Scripts/webkitpy/thirdparty/mod_pywebsocket/__init__.py:
        * Scripts/webkitpy/thirdparty/mod_pywebsocket/_stream_hixie75.py:
        * Scripts/webkitpy/thirdparty/mod_pywebsocket/_stream_hybi.py:
        (parse_frame):
        (FragmentedFrameBuilder.__init__):
        (FragmentedFrameBuilder.build):
        (create_closing_handshake_body):
        (StreamOptions.__init__):
        (Stream.__init__):
        (Stream._receive_frame._receive_bytes):
        (Stream._receive_frame):
        (Stream.receive_filtered_frame):
        (Stream.send_message):
        (Stream._get_message_from_frame):
        (Stream):
        (Stream._process_close_message):
        (Stream._process_ping_message):
        (Stream._process_pong_message):
        (Stream.receive_message):
        (Stream._send_closing_handshake):
        (Stream.get_last_received_opcode):
        * Scripts/webkitpy/thirdparty/mod_pywebsocket/common.py:
        * Scripts/webkitpy/thirdparty/mod_pywebsocket/dispatch.py:
        (Dispatcher.transfer_data):
        * Scripts/webkitpy/thirdparty/mod_pywebsocket/extensions.py:
        (ExtensionProcessorInterface.name):
        (DeflateStreamExtensionProcessor):
        (DeflateStreamExtensionProcessor.name):
        (_log_compression_ratio):
        (_log_decompression_ratio):
        (DeflateFrameExtensionProcessor):
        (DeflateFrameExtensionProcessor.name):
        (DeflateFrameExtensionProcessor._outgoing_filter):
        (DeflateFrameExtensionProcessor._incoming_filter):
        (CompressionExtensionProcessorBase):
        (CompressionExtensionProcessorBase.for):
        (CompressionExtensionProcessorBase.__init__):
        (CompressionExtensionProcessorBase.name):
        (CompressionExtensionProcessorBase._get_compression_processor_response):
        (CompressionExtensionProcessorBase.set_compression_processor_hook):
        (PerFrameCompressionExtensionProcessor):
        (PerFrameCompressionExtensionProcessor.__init__):
        (PerFrameCompressionExtensionProcessor.name):
        (PerFrameCompressionExtensionProcessor._lookup_compression_processor):
        (DeflateMessageProcessor):
        (DeflateMessageProcessor.__init__):
        (DeflateMessageProcessor.name):
        (DeflateMessageProcessor.get_extension_response):
        (DeflateMessageProcessor.setup_stream_options):
        (DeflateMessageProcessor.setup_stream_options._OutgoingMessageFilter):
        (DeflateMessageProcessor.setup_stream_options._OutgoingMessageFilter.__init__):
        (DeflateMessageProcessor.setup_stream_options._OutgoingMessageFilter.filter):
        (DeflateMessageProcessor.setup_stream_options._IncomingMessageFilter):
        (DeflateMessageProcessor.setup_stream_options._IncomingMessageFilter.__init__):
        (DeflateMessageProcessor.setup_stream_options._IncomingMessageFilter.decompress_next_message):
        (DeflateMessageProcessor.setup_stream_options._IncomingMessageFilter.filter):
        (DeflateMessageProcessor.setup_stream_options._OutgoingFrameFilter):
        (DeflateMessageProcessor.setup_stream_options._OutgoingFrameFilter.__init__):
        (DeflateMessageProcessor.setup_stream_options._OutgoingFrameFilter.set_compression_bit):
        (DeflateMessageProcessor.setup_stream_options._OutgoingFrameFilter.filter):
        (DeflateMessageProcessor.setup_stream_options._IncomingFrameFilter):
        (DeflateMessageProcessor.setup_stream_options._IncomingFrameFilter.__init__):
        (DeflateMessageProcessor.setup_stream_options._IncomingFrameFilter.filter):
        (DeflateMessageProcessor.set_c2s_max_window_bits):
        (DeflateMessageProcessor.set_c2s_no_context_takeover):
        (DeflateMessageProcessor.enable_outgoing_compression):
        (DeflateMessageProcessor.disable_outgoing_compression):
        (DeflateMessageProcessor._process_incoming_message):
        (DeflateMessageProcessor._process_outgoing_message):
        (DeflateMessageProcessor._process_incoming_frame):
        (DeflateMessageProcessor._process_outgoing_frame):
        (PerMessageCompressionExtensionProcessor):
        (PerMessageCompressionExtensionProcessor.__init__):
        (PerMessageCompressionExtensionProcessor.name):
        (PerMessageCompressionExtensionProcessor._lookup_compression_processor):
        (MuxExtensionProcessor):
        (MuxExtensionProcessor.__init__):
        (MuxExtensionProcessor.name):
        (MuxExtensionProcessor.get_extension_response):
        (MuxExtensionProcessor.setup_stream_options):
        * Scripts/webkitpy/thirdparty/mod_pywebsocket/handshake/__init__.py:
        (do_handshake):
        * Scripts/webkitpy/thirdparty/mod_pywebsocket/handshake/_base.py:
        (validate_subprotocol):
        (check_request_line):
        * Scripts/webkitpy/thirdparty/mod_pywebsocket/handshake/draft75.py: Removed.
        * Scripts/webkitpy/thirdparty/mod_pywebsocket/handshake/hybi.py:
        (Handshaker.do_handshake):
        (Handshaker._set_protocol):
        (Handshaker._create_stream):
        (Handshaker):
        (Handshaker._create_handshake_response):
        (Handshaker._send_handshake):
        * Scripts/webkitpy/thirdparty/mod_pywebsocket/headerparserhandler.py:
        * Scripts/webkitpy/thirdparty/mod_pywebsocket/msgutil.py:
        (send_message):
        * Scripts/webkitpy/thirdparty/mod_pywebsocket/mux.py: Added.
        (MuxUnexpectedException):
        (MuxNotImplementedException):
        (LogicalConnectionClosedException):
        (PhysicalConnectionError):
        (PhysicalConnectionError.__init__):
        (LogicalChannelError):
        (LogicalChannelError.__init__):
        (_encode_channel_id):
        (_encode_number):
        (_create_add_channel_response):
        (_create_drop_channel):
        (_create_flow_control):
        (_create_new_channel_slot):
        (_create_fallback_new_channel_slot):
        (_parse_request_text):
        (_ControlBlock):
        (_ControlBlock.__init__):
        (_MuxFramePayloadParser):
        (_MuxFramePayloadParser.that):
        (_MuxFramePayloadParser.__init__):
        (_MuxFramePayloadParser.read_channel_id):
        (_MuxFramePayloadParser.read_inner_frame):
        (_MuxFramePayloadParser._read_number):
        (_MuxFramePayloadParser._read_size_and_contents):
        (_MuxFramePayloadParser._read_add_channel_request):
        (_MuxFramePayloadParser._read_add_channel_response):
        (_MuxFramePayloadParser._read_flow_control):
        (_MuxFramePayloadParser._read_drop_channel):
        (_MuxFramePayloadParser._read_new_channel_slot):
        (_MuxFramePayloadParser.read_control_blocks):
        (_MuxFramePayloadParser.remaining_data):
        (_LogicalRequest):
        (_LogicalRequest.__init__):
        (_LogicalRequest.is_https):
        (_LogicalConnection):
        (_LogicalConnection.__init__):
        (_LogicalConnection.get_local_addr):
        (_LogicalConnection.get_remote_addr):
        (_LogicalConnection.get_memorized_lines):
        (_LogicalConnection.write):
        (_LogicalConnection.write_control_data):
        (_LogicalConnection.notify_write_done):
        (_LogicalConnection.append_frame_data):
        (_LogicalConnection.read):
        (_LogicalConnection.set_read_state):
        (_LogicalStream):
        (_LogicalStream.interprets):
        (_LogicalStream.__init__):
        (_LogicalStream._create_inner_frame):
        (_LogicalStream._write_inner_frame):
        (_LogicalStream.replenish_send_quota):
        (_LogicalStream.consume_receive_quota):
        (_LogicalStream.send_message):
        (_LogicalStream._receive_frame):
        (_LogicalStream.receive_message):
        (_LogicalStream._send_closing_handshake):
        (_LogicalStream.send_ping):
        (_LogicalStream._send_pong):
        (_LogicalStream.close_connection):
        (_LogicalStream._drain_received_data):
        (_OutgoingData):
        (_OutgoingData.__init__):
        (_PhysicalConnectionWriter):
        (_PhysicalConnectionWriter.__init__):
        (_PhysicalConnectionWriter.put_outgoing_data):
        (_PhysicalConnectionWriter._write_data):
        (_PhysicalConnectionWriter.run):
        (_PhysicalConnectionWriter.stop):
        (_PhysicalConnectionReader):
        (_PhysicalConnectionReader.__init__):
        (_PhysicalConnectionReader.run):
        (_Worker):
        (_Worker.__init__):
        (_Worker.run):
        (_MuxHandshaker):
        (_MuxHandshaker.__init__):
        (_MuxHandshaker._create_stream):
        (_MuxHandshaker._create_handshake_response):
        (_MuxHandshaker._send_handshake):
        (_LogicalChannelData):
        (_LogicalChannelData.__init__):
        (_HandshakeDeltaBase):
        (_HandshakeDeltaBase.that):
        (_HandshakeDeltaBase.__init__):
        (_HandshakeDeltaBase.create_headers):
        (_MuxHandler):
        (_MuxHandler.are):
        (_MuxHandler.__init__):
        (_MuxHandler.start):
        (_MuxHandler.add_channel_slots):
        (_MuxHandler.wait_until_done):
        (_MuxHandler.notify_write_done):
        (_MuxHandler.send_control_data):
        (_MuxHandler.send_data):
        (_MuxHandler._send_drop_channel):
        (_MuxHandler._send_error_add_channel_response):
        (_MuxHandler._create_logical_request):
        (_MuxHandler._do_handshake_for_logical_request):
        (_MuxHandler._add_logical_channel):
        (_MuxHandler._process_add_channel_request):
        (_MuxHandler._process_flow_control):
        (_MuxHandler._process_drop_channel):
        (_MuxHandler._process_control_blocks):
        (_MuxHandler._process_logical_frame):
        (_MuxHandler.dispatch_message):
        (_MuxHandler.notify_worker_done):
        (_MuxHandler.notify_reader_done):
        (_MuxHandler.fail_physical_connection):
        (_MuxHandler.fail_logical_channel):
        (use_mux):
        (start):
        * Scripts/webkitpy/thirdparty/mod_pywebsocket/standalone.py:
        (_StandaloneRequest.get_protocol):
        (_StandaloneRequest):
        (_alias_handlers):
        (WebSocketServer.__init__):
        (WebSocketServer._create_sockets):
        (WebSocketServer.server_bind):
        (WebSocketServer.server_activate):
        (WebSocketRequestHandler.parse_request):
        (_configure_logging):
        (_build_option_parser):
        (_main):
        (_main.if):
        * Scripts/webkitpy/thirdparty/mod_pywebsocket/stream.py:
        * Scripts/webkitpy/thirdparty/mod_pywebsocket/util.py:
        (_Deflater.compress):
        (_RFC1979Deflater.filter):

2012-10-09  Damian Kaleta  <dkaleta@apple.com>

        extract-localizable-strings script should be able to handle paths to files containing whitespaces.
        https://bugs.webkit.org/show_bug.cgi?id=98844

        Reviewed by Dan Bernstein.

        * Scripts/extract-localizable-strings: Added ability to handle whitespace.

2012-10-09  Sudarsana Nagineni  <sudarsana.nagineni@intel.com>

        [Cairo] Bump Cairo to fix more canvas/philip tests
        https://bugs.webkit.org/show_bug.cgi?id=97658

        Reviewed by Martin Robinson.

        Bumping cairo to version 1.12.4 which fixes more canvas/philip tests.

        * efl/jhbuild.modules:
        * gtk/jhbuild.modules:

2012-10-09  Julien Chaffraix  <jchaffraix@webkit.org>

        Unreviewed Chromium Windows build fix after r130823.

        * DumpRenderTree/chromium/TestRunner/AccessibilityUIElementChromium.cpp:
        (roleToString): Re-added the 'default' label as some cases are not handled.

2012-10-09  Sadrul Habib Chowdhury  <sadrul@chromium.org>

        [chromium] Add drop event for plugins.
        https://bugs.webkit.org/show_bug.cgi?id=98827

        Reviewed by Adam Barth.

        Update the test plugin to receive drop events.

        * DumpRenderTree/chromium/TestWebPlugin.cpp:
        (TestWebPlugin::handleDragStatusUpdate):

2012-10-09  Dominic Mazzoni  <dmazzoni@google.com>

        AX: 5 accessibility tests just need minor tweaks to pass on chromium
        https://bugs.webkit.org/show_bug.cgi?id=98311

        Reviewed by Chris Fleizach.

        Update roleToString on Chromium to include all missing roles,
        which enables some layout tests to pass.

        * DumpRenderTree/chromium/TestRunner/AccessibilityUIElementChromium.cpp:
        (roleToString):

2012-10-09  Dirk Pranke  <dpranke@chromium.org>

        webkit-patch rebaseline-expectations doesn't work w/o failures specified
        https://bugs.webkit.org/show_bug.cgi?id=98810

        Reviewed by Ojan Vafai.

        If you try to mark a test as foo.html [ Rebaseline ] it wasn't
        getting picked up for rebaselining; we needed to think the test
        was failing.

        * Scripts/webkitpy/layout_tests/models/test_expectations.py:
        (TestExpectations.get_rebaselining_failures):
        * Scripts/webkitpy/layout_tests/models/test_expectations_unittest.py:
        (RebaseliningTest.test_get_rebaselining_failures):

2012-10-09  Daniel Bates  <dbates@webkit.org>

        VCSUtils.pm doesn't support SVN 1.7 diff files
        <https://bugs.webkit.org/show_bug.cgi?id=80762>

        Reviewed by Eric Seidel.

        Implement support for the SVN 1.7 diff format.

        * Scripts/VCSUtils.pm:
        (parseChunkRange): Modified to support parsing an SVN 1.7 chunk range
        that begins and ends with "##" (e.g. ## -0,0 +1,7 ##). For comparison,
        earlier versions of SVN parsed chunk ranges of the form "@@ -0,0 +1,7 @@".

        (parseSvnDiffHeader): Modified to parse an SVN 1.7 binary diff; SVN 1.7
        has an unusual display format for a binary diff. It repeats the first
        two lines of the diff header.

        (parseSvnProperty): Modified to ignore both an SVN 1.7 chunk range and
        lines of the form "\ No newline at end of property". SVN 1.7 emits the latter
        message after a property value that doesn't end in a newline.

        (parseSvnPropertyValue): Stop parsing an SVN property value when we encounter
        a line of the form "\ No newline at end of property" (emitted by svn diff as of
        SVN 1.7).

        * Scripts/webkitperl/VCSUtils_unittest/parseChunkRange.pl:
          - Added the following unit tests:
          "Line count is 0"
          "New line count is 1"

        * Scripts/webkitperl/VCSUtils_unittest/parseSvnDiffFooter.pl:
          - Added the following unit tests:
          "svn:executable followed by custom property using SVN 1.7 syntax"
          "svn:executable followed by custom property without newline using SVN 1.7 syntax"

        * Scripts/webkitperl/VCSUtils_unittest/parseSvnDiffHeader.pl:
          - Updated test results for test "binary file".
          - Added unit test "binary file using SVN 1.7 syntax".

        * Scripts/webkitperl/VCSUtils_unittest/parseSvnProperty.pl:
          - Added the following unit tests:
          "simple: add svn:executable using SVN 1.7 syntax"
          "simple: delete svn:executable using SVN 1.7 syntax"
          "add svn:mime-type and add svn:executable using SVN 1.7 syntax"

        * Scripts/webkitperl/VCSUtils_unittest/parseSvnPropertyValue.pl:
          - Added the following unit tests:
          "singe-line '+' change using SVN 1.7 syntax"
          "single-line '-' change using SVN 1.7 syntax"

2012-10-09  James Robinson  <jamesr@chromium.org>

        Unreviewed, rolling out r128488.
        http://trac.webkit.org/changeset/128488
        https://bugs.webkit.org/show_bug.cgi?id=96678

        The bot is fixed now

        * BuildSlaveSupport/build.webkit.org-config/public_html/TestFailures/scripts/config.js:
        (.):

2012-10-09  Zan Dobersek  <zandobersek@gmail.com>

        XvfbDriver unit test is flaky on Linux builders
        https://bugs.webkit.org/show_bug.cgi?id=98346

        Reviewed by Adam Barth.

        Temporarily skip the XvfbDriver test case that tests
        the display number of the next free display. The test
        is flaky on Linux builders.

        * Scripts/webkitpy/layout_tests/port/xvfbdriver_unittest.py:
        (XvfbDriverTest.disabled_test_next_free_display):

2012-10-09  Ojan Vafai  <ojan@chromium.org>

        Don't duplicated build numbers when merging flakiness dashboard JSON
        https://bugs.webkit.org/show_bug.cgi?id=98812

        Reviewed by Dirk Pranke.

        In general, build numbers are not unique, but we should basically never
        get the same build number uploaded twice in a row. This is a workaround
        for https://bugs.webkit.org/show_bug.cgi?id=97643, which frequently hits this
        because we update results_small.json and timeout updating results.json and then
        we retry the whole request.

        * TestResultServer/model/jsonresults.py:
        (JsonResults.merge):
        * TestResultServer/model/jsonresults_unittest.py:
        (JsonResultsTest.test_merge_duplicate_build_number):

2012-10-09  Alexis Menard  <alexis@webkit.org>

        [GTK] Shadow builds are not working anymore.
        https://bugs.webkit.org/show_bug.cgi?id=98785

        Reviewed by Martin Robinson.

        When setting WEBKITOUTPUTDIR the build was failing with a python
        error : the os.execve expect three arguments. Also the condition
        to check whether we build the GTK port with jhbuild or not was buggy
        as it was always assuming an in source build. We can use now jhbuildutils
        which has a convenient function to locate the directory where 
        the dependencies built with jhbuild are and take into account WEBKITOUTPUTDIR.
        If the Dependencies path does not exist then the build was not done using
        jhbuild so we can fallback to a regular build against system libraries.

        * gtk/run-with-jhbuild:

2012-10-08  Simon Fraser  <simon.fraser@apple.com>

        Remove DRT/WTR implementations of layerTreeAsText
        https://bugs.webkit.org/show_bug.cgi?id=98697

        Reviewed by Tim Horton, James Robinson, Alexey Proskuryakov.

        Remove code related to layerTreeAsText(), which is now on window.internals.

        * DumpRenderTree/TestRunner.cpp:
        (TestRunner::staticFunctions):
        * DumpRenderTree/TestRunner.h:
        (TestRunner):
        * DumpRenderTree/blackberry/TestRunnerBlackBerry.cpp:
        * DumpRenderTree/chromium/DRTTestRunner.cpp:
        (DRTTestRunner::DRTTestRunner):
        * DumpRenderTree/chromium/DRTTestRunner.h:
        (DRTTestRunner):
        * DumpRenderTree/efl/TestRunnerEfl.cpp:
        * DumpRenderTree/gtk/TestRunnerGtk.cpp:
        * DumpRenderTree/mac/TestRunnerMac.mm:
        * DumpRenderTree/qt/TestRunnerQt.cpp:
        * DumpRenderTree/qt/TestRunnerQt.h:
        (TestRunner):
        * DumpRenderTree/win/TestRunnerWin.cpp:
        * DumpRenderTree/wx/TestRunnerWx.cpp:
        * WebKitTestRunner/InjectedBundle/TestRunner.cpp:
        * WebKitTestRunner/InjectedBundle/TestRunner.h:

2012-10-09  Zoltan Horvath  <zoltan@webkit.org>

        Unreviewed. Remove myself from QtWebKit2 subscriptions.

        * Scripts/webkitpy/common/config/watchlist:

2012-10-09  Harald Alvestrand  <hta@google.com>

        Change PeerConnection getStats function to single value local / remote
        elements in RTCStatsReport.
        https://bugs.webkit.org/show_bug.cgi?id=98753

        Reviewed by Adam Barth.

        * DumpRenderTree/chromium/MockWebRTCPeerConnectionHandler.cpp:
        (MockWebRTCPeerConnectionHandler::getStats):

2012-10-09  Sadrul Habib Chowdhury  <sadrul@chromium.org>

        [chromium] Make sure events are transformed correctly for plugins.
        https://bugs.webkit.org/show_bug.cgi?id=89250

        Reviewed by Tony Chang.

        Update the test plugin to print event details for mouse and gesture events.

        * DumpRenderTree/chromium/TestWebPlugin.cpp:
        (printEventDetails):

2012-10-09  Simon Hausmann  <simon.hausmann@digia.com>

        Unreviewed trivial Qt build fix: Remove stray closing braces from r130758.

        * qmake/mkspecs/features/features.prf:

2012-10-09  Simon Hausmann  <simon.hausmann@digia.com>

        [Qt] Clean up Qt module detection

        Reviewed by Tor Arne VestbÃ¸.

        Replace the use of MOBILITY_CONFIG (not supported anymore) with modern use of haveQtModule.

        * qmake/mkspecs/features/features.prf:

2012-10-09  Raphael Kubo da Costa  <raphael.kubo.da.costa@intel.com>

        [GTK] Respect WEBKITOUTPUTDIR in run-with-jhbuild.
        https://bugs.webkit.org/show_bug.cgi?id=98732

        Reviewed by Gustavo Noronha Silva.

        Follow-up to r113066: if the WEBKITOUTPUTDIR environment variable
        was used when running update-webkitgtk-libs,
        WebKitBuild/Dependencies will not exist, so we now check its
        contents first and then fall back to WebKitBuild/.

        * gtk/run-with-jhbuild:

2012-10-09  Zan Dobersek  <zandobersek@gmail.com>

        Unreviewed GTK gardening.

        Skipping the accept-policy test in TestCookieManager API test that's
        currently failing. The test failure is covered by
        https://bugs.webkit.org/show_bug.cgi?id=98738.

        * Scripts/run-gtk-tests:
        (TestRunner):

2012-10-09  Laszlo Gombos  <l.gombos@samsung.com>

        [Qt] Remove redundant JAVASCRIPTCORE_JIT variable
        https://bugs.webkit.org/show_bug.cgi?id=50000

        Reviewed by Simon Hausmann.

        Use ENABLE_JIT instead.

        * qmake/mkspecs/features/valgrind.prf:

2012-10-08  Kiran Muppala  <cmuppala@apple.com>

        Throttle DOM timers on hidden pages.
        https://bugs.webkit.org/show_bug.cgi?id=98474

        Reviewed by Maciej Stachowiak.

        Implement testRunner.setPageVisibility on mac for testing throttling
        of timers on hidden pages using DumpRenderTree.

        * DumpRenderTree/mac/Configurations/Base.xcconfig:
        Fix build error on mac-ews bot.  Add JSC copy of ICU headers to search path.

        * DumpRenderTree/mac/TestRunnerMac.mm:
        (TestRunner::resetPageVisibility):
        (TestRunner::setPageVisibility):

2012-10-08  Dirk Pranke  <dpranke@chromium.org>

        results.html and garden-o-matic are ignoring IMAGE failures when expected to FAIL
        https://bugs.webkit.org/show_bug.cgi?id=98706

        Reviewed by Ojan Vafai.

        FAIL is supposed to map onto Failure which is supposed to map
        onto the old [ TEXT, IMAGE_PLUS_TEXT, AUDIO ] mapping.
        results.html was including IMAGE in this and garden-o-matic was
        including CRASH and TIMEOUT as well :(.

        * BuildSlaveSupport/build.webkit.org-config/public_html/TestFailures/scripts/results.js:
        * BuildSlaveSupport/build.webkit.org-config/public_html/TestFailures/scripts/results_unittests.js:

2012-10-08  Ryuan Choi  <ryuan.choi@samsung.com>

        [EFL] Build ControlTheme only when necessary
        https://bugs.webkit.org/show_bug.cgi?id=98519

        Reviewed by Eric Seidel.

        * EWebLauncher/ControlTheme/CMakeLists.txt:
        Added custom command keyword not to build ControlTheme every time.
        In addition, removed `ALL` keyword because targets, which use ControlTheme,
        already have dependency.

2012-10-08  Peter Rybin  <peter.rybin@gmail.com>

        Do not swallow fatal messages in qt/DumpRenderTree
        https://bugs.webkit.org/show_bug.cgi?id=98211

        Reviewed by Eric Seidel.

        Fix condition in message type filtering.

        * DumpRenderTree/qt/DumpRenderTreeMain.cpp:
        (messageHandler):

2012-10-08  Caio Marcelo de Oliveira Filho  <caio.oliveira@openbossa.org>

        Unreviewed. Moving myself from Committer to Reviewer list.
        http://lists.webkit.org/pipermail/webkit-dev/2012-October/022460.html

        * Scripts/webkitpy/common/config/committers.py:

2012-10-08  Dirk Pranke  <dpranke@chromium.org>

        nrwt: [chromium] run http tests in parallel on bigger machines
        https://bugs.webkit.org/show_bug.cgi?id=98562

        Reviewed by Eric Seidel.

        The "locked tests" shard (which includes the http tests and the
        perf tests) is the long pole on machines where we have 4 or more
        workers, so we should start making sure that
        we can run http tests in parallel, following the normal sharding
        rules (all tests in the same directory are in the same shard by
        default). We should still probably limit the number of workers
        hitting the web server in parallel where we can; a heuristic of
        no more than 25% of them seems okay for a start. This will
        likely only affect developer workstations and a couple of bots
        at first, so should be low risk and a good reward.

        * Scripts/webkitpy/layout_tests/port/base.py:
        (Port.default_max_locked_shards):
        * Scripts/webkitpy/layout_tests/port/chromium.py:
        (ChromiumPort.default_max_locked_shards):
        * Scripts/webkitpy/layout_tests/port/chromium_port_testcase.py:
        (ChromiumPortTestCase.test_default_max_locked_shards):
        * Scripts/webkitpy/layout_tests/port/port_testcase.py:
        (PortTestCase.test_default_max_locked_shards):
        * Scripts/webkitpy/layout_tests/run_webkit_tests.py:
        (_set_up_derived_options):
        (parse_args):
        * Scripts/webkitpy/layout_tests/run_webkit_tests_integrationtest.py:
        (MainTest.test_max_locked_shards):

2012-10-08  Zan Dobersek  <zandobersek@gmail.com>

        GTK port should warn if bug modifier is missing in TestExpectations
        https://bugs.webkit.org/show_bug.cgi?id=98678

        Reviewed by Dirk Pranke.

        Reimplement the warn_if_bug_missing_in_test_expectations method in
        GtkPort, returning True for producing a warning in such cases.

        * Scripts/webkitpy/layout_tests/port/gtk.py:
        (GtkPort.warn_if_bug_missing_in_test_expectations):

2012-10-08  Ryuan Choi  <ryuan.choi@samsung.com>

        [EFL][DRT] Switch default backing store to single
        https://bugs.webkit.org/show_bug.cgi?id=98591

        Reviewed by Eric Seidel.

        There are two backing stores for WebKit/Efl, Single Backing Store(SBS) and
        Tiled Backing Store(TBS), and DRT/Efl has used TBS.
        But, TBS is not suitable to run pixel tests because it does not have a good way
        to render mock scrollbars well.

        So, this patch changes the default backing store to SBS.
        In addition, this changes the environment variable from DRT_USE_SINGLE_BACKING_STORE
        to DRT_USE_TILED_BACKING_STORE.

        * DumpRenderTree/efl/DumpRenderTreeView.cpp:
        (shouldUseTiledBackingStore):
        (chooseAndInitializeAppropriateSmartClass):

2012-10-08  Sudarsana Nagineni  <sudarsana.nagineni@intel.com>

        [WK2][WTR] WebKitTestRunner needs testRunner.dispatchPendingLoadRequests
        https://bugs.webkit.org/show_bug.cgi?id=98638

        Reviewed by Eric Seidel.

        Add implementation for testRunner.dispatchPendingLoadRequests in
        WebKitTestRunner.

        * WebKitTestRunner/InjectedBundle/Bindings/TestRunner.idl:
        * WebKitTestRunner/InjectedBundle/TestRunner.cpp:
        (WTR::TestRunner::dispatchPendingLoadRequests):
        (WTR):
        * WebKitTestRunner/InjectedBundle/TestRunner.h:
        (TestRunner):

2012-10-08  Christophe Dumez  <christophe.dumez@intel.com>

        [EFL][WK2] Add support for window.close in Minibrowser
        https://bugs.webkit.org/show_bug.cgi?id=98667

        Reviewed by Laszlo Gombos.

        When calling window.close() from JavaScript, MiniBrowser
        now closes the given window.

        * MiniBrowser/efl/main.c:
        (window_close):
        (on_ecore_evas_delete):
        (on_close_window):
        (window_create):

2012-10-08  Ojan Vafai  <ojan@chromium.org>

        Properly strip new tests from the test results json if they are pass/nodata/skip.
        https://bugs.webkit.org/show_bug.cgi?id=98669

        Reviewed by Eric Seidel.

        In _merge_json, we had a codepath that didn't call _normalize_results_json
        for tests that aren't already in the aggregated results.
        Instead, now do all the merging first and then normalize the aggregated results.

        * TestResultServer/model/jsonresults.py:
        (JsonResults._merge_json):
        (JsonResults._merge_tests):
        (JsonResults._normalize_results):
        (JsonResults):
        (JsonResults._should_delete_leaf):
        * TestResultServer/model/jsonresults_unittest.py:
        Removed test_merge_build_directory_hierarchy_old_version since there is
        no longer any version 3 json to support.
        (JsonResultsTest.test_merge_remove_new_test):
        (JsonResultsTest.test_merge_prune_extra_results_with_new_result_of_same_type):

2012-10-08  Christophe Dumez  <christophe.dumez@intel.com>

        [EFL][WK2] Simplify frame flattening support in MiniBrowser
        https://bugs.webkit.org/show_bug.cgi?id=98657

        Reviewed by Kenneth Rohde Christiansen.

        Simplify frame flattening support code in MiniBrowser to
        avoid passing the setting around to window_create()
        function().

        * MiniBrowser/efl/main.c:
        (on_key_down):
        (on_new_window):
        (window_create):
        (main):

2012-10-08  Christophe Dumez  <christophe.dumez@intel.com>

        [EFL] Use Ctrl+n shortcut to create a new window in MiniBrowser / EWebLauncher
        https://bugs.webkit.org/show_bug.cgi?id=98655

        Reviewed by Kenneth Rohde Christiansen.

        Use "Ctrl+n" shortcut instead of "F9" to open a new window in
        MiniBrowser and EWebLauncher. This is the shortcut that is
        commonly used for this action.

        * EWebLauncher/main.c:
        (on_key_down):
        * MiniBrowser/efl/main.c:
        (on_key_down):

2012-10-08  Christophe Dumez  <christophe.dumez@intel.com>

        [EFL][WK2] Add support for window.create in Minibrowser
        https://bugs.webkit.org/show_bug.cgi?id=98649

        Reviewed by Kenneth Rohde Christiansen.

        Calling window.create() from JavaScript now creates a
        new window in Minibrowser, as directed.

        * MiniBrowser/efl/main.c:
        (on_new_window):
        (window_create):

2012-10-08  Andreas Kling  <kling@webkit.org>

        Using float/double as WTF hash table key is unreliable.
        <http://webkit.org/b/98627>

        Reviewed by Geoffrey Garen.

        Add a test case checking that using double as the hash table key type won't
        have problems distinguishing between keys that are considered equal by operator==
        but have different binary representations.

        * TestWebKitAPI/Tests/WTF/HashMap.cpp:
        (TestDoubleHashTraits):

2012-10-08  Christophe Dumez  <christophe.dumez@intel.com>

        [EFL][WK2] Use URL instead of URI in the API
        https://bugs.webkit.org/show_bug.cgi?id=98643

        Reviewed by Kenneth Rohde Christiansen.

        Update Minibrowser to reflect API changes. We now
        use URL instead of URI in WK2 EFL API.

        * EWebLauncher/url_bar.c:
        (on_urlbar_key_down):
        * MiniBrowser/efl/CMakeLists.txt:
        * MiniBrowser/efl/main.c:
        (on_url_changed):
        (window_create):

2012-10-08  Balazs Kelemen  <kbalazs@webkit.org>

        [Qt] Reenable plugin tests
        https://bugs.webkit.org/show_bug.cgi?id=98528

        Reviewed by Csaba OsztrogonÃ¡c.

        Uncomment this function so we can pick up the test plugin.
        It was commented out because of https://bugs.webkit.org/show_bug.cgi?id=86620
        and that bug seems to be fixed now.

        * WebKitTestRunner/qt/TestControllerQt.cpp:
        (WTR::TestController::initializeTestPluginDirectory):

2012-10-08  Jinwoo Song  <jinwoo7.song@samsung.com>

        [EFL][WK2] Support multiple window creation for MiniBrowser
        https://bugs.webkit.org/show_bug.cgi?id=97884

        Reviewed by Kenneth Rohde Christiansen.

        Implement the multiple window creation for MiniBrowser and bind the 'F9' key for opening a new window.
        Also, refactored MiniBrowser codes according to EFL coding style.

        * MiniBrowser/efl/main.c:
        (_Browser_Window):
        (window_free):
        (main_signal_exit):
        (on_ecore_evas_delete):
        (on_ecore_evas_resize):
        (on_key_down):
        (on_title_changed):
        (on_url_changed):
        (on_progress):
        (window_create):
        (main):

2012-10-07  Seokju Kwon  <seokju.kwon@samsung.com>

        [EFL] Add Web Inspector to EWebLauncher
        https://bugs.webkit.org/show_bug.cgi?id=91718

        Reviewed by Gyuyoung Kim.

        Implementation of Web Inspector in EWebLauncher.
        The Web Inspector can be opened or closed by pressing ctrl+i on web page.

        * EWebLauncher/main.c:
        (on_browser_ecore_evas_resize):
        (on_web_inspector_ecore_evas_resize):
        (on_key_down):
        (on_web_inspector_view_create):
        (on_web_inspector_view_close):
        (on_web_inspector_view_destroyed):
        (browserCreate):
        (webInspectorCreate):
        (windowCreate):
        (closeWindow):
        (main_signal_exit):
        (parseUserArguments):

2012-10-07  Caio Marcelo de Oliveira Filho  <caio.oliveira@openbossa.org>

        Rename first/second to key/value in HashMap iterators
        https://bugs.webkit.org/show_bug.cgi?id=82784

        Reviewed by Eric Seidel.

        * DumpRenderTree/chromium/MockWebSpeechInputController.cpp:
        (MockWebSpeechInputController::addMockRecognitionResult):
        * DumpRenderTree/chromium/NotificationPresenter.cpp:
        (NotificationPresenter::simulateClick):
        (NotificationPresenter::show):
        * DumpRenderTree/chromium/TestRunner/CppBoundClass.cpp:
        (CppBoundClass::~CppBoundClass):
        (CppBoundClass::invoke):
        (CppBoundClass::getProperty):
        (CppBoundClass::setProperty):
        (CppBoundClass::bindCallback):
        (CppBoundClass::bindProperty):
        * DumpRenderTree/chromium/WebPreferences.cpp:
        (applyFontMap):
        * DumpRenderTree/chromium/WebViewHost.cpp:
        (WebViewHost::printResourceDescription):
        * DumpRenderTree/mac/TestRunnerMac.mm:
        (worldIDForWorld):
        (TestRunner::evaluateScriptInIsolatedWorld):
        * DumpRenderTree/win/AccessibilityControllerWin.cpp:
        (AccessibilityController::~AccessibilityController):
        (AccessibilityController::winNotificationReceived):
        * DumpRenderTree/win/ResourceLoadDelegate.cpp:
        (ResourceLoadDelegate::descriptionSuitableForTestResult):
        * DumpRenderTree/win/TestRunnerWin.cpp:
        (worldIDForWorld):
        (TestRunner::evaluateScriptInIsolatedWorld):
        * TestWebKitAPI/Tests/WebKit2/DOMWindowExtensionBasic_Bundle.cpp:
        (TestWebKitAPI::DOMWindowExtensionBasic::willDestroyPage):
        * TestWebKitAPI/Tests/WebKit2/DOMWindowExtensionNoCache_Bundle.cpp:
        (TestWebKitAPI::DOMWindowExtensionNoCache::willDestroyPage):
        * WebKitTestRunner/InjectedBundle/TestRunner.cpp:
        (WTR::TestRunner::worldIDForWorld):
        (WTR::TestRunner::evaluateScriptInIsolatedWorld):

2012-10-07  Raphael Kubo da Costa  <raphael.kubo.da.costa@intel.com>

        Unreviewed, rolling out r130596.
        http://trac.webkit.org/changeset/130596
        https://bugs.webkit.org/show_bug.cgi?id=98616

        Broke build bots without IPV6 support

        * Scripts/webkitpy/common/system/platforminfo_mock.py:
        (MockPlatformInfo.is_cygwin):
        * Scripts/webkitpy/layout_tests/port/base.py:
        (Port.baseline_version_dir):
        (Port.to.start_websocket_server):
        * Scripts/webkitpy/layout_tests/port/base_unittest.py:
        (PortTest.test_operating_system):
        (PortTest.test_build_path):
        * Scripts/webkitpy/layout_tests/servers/apache_http_server.py:
        (LayoutTestApacheHttpd):
        (LayoutTestApacheHttpd.__init__):

2012-10-07  Raphael Kubo da Costa  <raphael.kubo.da.costa@intel.com>

        webkitpy: Pass the `Listen' Apache directive from Apache, not the httpd.conf files.
        https://bugs.webkit.org/show_bug.cgi?id=98602

        Reviewed by Eric Seidel.

        Unify all the different `Listen' directives present in the several
        httpd.conf files we have in LayoutTests/http/conf. For one, we
        were already passing `Listen 127.0.0.1:8000' via webkitpy before,
        and opening the other ports from the conf files.

        The configuration files differed mostly in the way they handled
        IPV6 ports. Some of them did not listen to IPV6 ports because the
        systems which used them sometimes did not have IPV6 support. The
        `http_server_supports_ipv6' method has been added to Port to
        address that. cygwin, on its turn, still seems to use Apache 1.3,
        which does not support IPV6 at all; the newly-added method has a
        special case for that.

        * Scripts/webkitpy/common/system/platforminfo_mock.py:
        (MockPlatformInfo.is_cygwin):
        * Scripts/webkitpy/layout_tests/port/base.py:
        (Port.baseline_version_dir):
        (Port.to.start_websocket_server):
        (Port.to):
        (Port.to.http_server_supports_ipv6):
        * Scripts/webkitpy/layout_tests/port/base_unittest.py:
        (PortTest.test_http_server_supports_ipv6):
        (PortTest.test_build_path):
        * Scripts/webkitpy/layout_tests/servers/apache_http_server.py:
        (LayoutTestApacheHttpd):
        (LayoutTestApacheHttpd.__init__):

2012-10-05  Simon Fraser  <simon.fraser@apple.com>

        Attempt to fix the SnowLeopard build to making the implementation of
        -isPaginated come before its use.

        * MiniBrowser/mac/WK1BrowserWindowController.m:
        (-[WK1BrowserWindowController reload:]):
        (-[WK1BrowserWindowController forceRepaint:]):
        (-[WK1BrowserWindowController goBack:]):
        (-[WK1BrowserWindowController goForward:]):
        (-[WK1BrowserWindowController isPaginated]):

2012-10-05  Simon Fraser  <simon.fraser@apple.com>

        Provide a way to run WebKit1
        https://bugs.webkit.org/show_bug.cgi?id=98568

        Reviewed by Tim Horton.

        Make it possible to create both WebKit1 and WebKit2 windows in MiniBrowser.
        
        Turn BrowserWindowController into a base class; subclassed by
        WK1BrowserWindowController and WK2BrowserWindowController, each of
        which implement the BrowserController protocol.
        
        Use Command-N to get a WebKit1 window, and Command-Option-N to
        get a WK2 window. Also add "Open Location" to focus the URL bar,
        and code to add an http:// if missing.
        
        Hook up window title callbacks; append " [WK1/2]" to window title
        as appropriate.

        * MiniBrowser/MiniBrowser.xcodeproj/project.pbxproj:
        * MiniBrowser/mac/AppDelegate.m:
        (-[BrowserAppDelegate newWindow:]):
        (-[BrowserAppDelegate openPanelDidEnd:returnCode:contextInfo:]):
        * MiniBrowser/mac/BrowserWindowController.h:
        * MiniBrowser/mac/BrowserWindowController.m:
        (-[BrowserWindowController initWithWindow:]):
        (-[BrowserWindowController windowDidLoad]):
        (-[BrowserWindowController openLocation:]):
        (-[BrowserWindowController loadURLString:]):
        (-[BrowserWindowController applicationTerminating]):
        (-[BrowserWindowController addProtocolIfNecessary:]):
        * MiniBrowser/mac/MainMenu.xib:
        * MiniBrowser/mac/WK1BrowserWindowController.h: Copied from Tools/MiniBrowser/mac/BrowserWindowController.h.
        (WebView):
        * MiniBrowser/mac/WK1BrowserWindowController.m: Added.
        (-[WK1BrowserWindowController awakeFromNib]):
        (-[WK1BrowserWindowController dealloc]):
        (-[WK1BrowserWindowController loadURLString:]):
        (-[WK1BrowserWindowController fetch:]):
        (-[WK1BrowserWindowController showHideWebView:]):
        (-[WK1BrowserWindowController removeReinsertWebView:]):
        (-[WK1BrowserWindowController validateMenuItem:]):
        (-[WK1BrowserWindowController reload:]):
        (-[WK1BrowserWindowController forceRepaint:]):
        (-[WK1BrowserWindowController goBack:]):
        (-[WK1BrowserWindowController goForward:]):
        (-[WK1BrowserWindowController validateUserInterfaceItem:]):
        (-[WK1BrowserWindowController validateToolbar]):
        (-[WK1BrowserWindowController windowShouldClose:]):
        (-[WK1BrowserWindowController windowWillClose:]):
        (-[WK1BrowserWindowController applicationTerminating]):
        (-[WK1BrowserWindowController currentZoomFactor]):
        (-[WK1BrowserWindowController canZoomIn]):
        (-[WK1BrowserWindowController zoomIn:]):
        (-[WK1BrowserWindowController canZoomOut]):
        (-[WK1BrowserWindowController zoomOut:]):
        (-[WK1BrowserWindowController canResetZoom]):
        (-[WK1BrowserWindowController resetZoom:]):
        (-[WK1BrowserWindowController toggleZoomMode:]):
        (-[WK1BrowserWindowController isPaginated]):
        (-[WK1BrowserWindowController togglePaginationMode:]):
        (-[WK1BrowserWindowController find:]):
        (-[WK1BrowserWindowController dumpSourceToConsole:]):
        (-[WK1BrowserWindowController webView:didStartProvisionalLoadForFrame:]):
        (-[WK1BrowserWindowController webView:didReceiveTitle:forFrame:]):
        * MiniBrowser/mac/WK2BrowserWindowController.h: Copied from Tools/MiniBrowser/mac/BrowserWindowController.h.
        * MiniBrowser/mac/WK2BrowserWindowController.m: Copied from Tools/MiniBrowser/mac/BrowserWindowController.m.
        (-[WK2BrowserWindowController initWithContext:pageGroup:]):
        (-[WK2BrowserWindowController dealloc]):
        (-[WK2BrowserWindowController fetch:]):
        (-[WK2BrowserWindowController showHideWebView:]):
        (-[WK2BrowserWindowController removeReinsertWebView:]):
        (-[WK2BrowserWindowController validateMenuItem:]):
        (-[WK2BrowserWindowController reload:]):
        (-[WK2BrowserWindowController forceRepaint:]):
        (-[WK2BrowserWindowController goBack:]):
        (-[WK2BrowserWindowController goForward:]):
        (-[WK2BrowserWindowController validateUserInterfaceItem:]):
        (-[WK2BrowserWindowController validateToolbar]):
        (-[WK2BrowserWindowController windowShouldClose:]):
        (-[WK2BrowserWindowController windowWillClose:]):
        (-[WK2BrowserWindowController applicationTerminating]):
        (-[WK2BrowserWindowController currentZoomFactor]):
        (-[WK2BrowserWindowController setCurrentZoomFactor:]):
        (-[WK2BrowserWindowController canZoomIn]):
        (-[WK2BrowserWindowController zoomIn:]):
        (-[WK2BrowserWindowController canZoomOut]):
        (-[WK2BrowserWindowController zoomOut:]):
        (-[WK2BrowserWindowController canResetZoom]):
        (-[WK2BrowserWindowController resetZoom:]):
        (-[WK2BrowserWindowController toggleZoomMode:]):
        (-[WK2BrowserWindowController isPaginated]):
        (-[WK2BrowserWindowController togglePaginationMode:]):
        (-[WK2BrowserWindowController dumpSourceToConsole:]):
        (didStartProvisionalLoadForFrame):
        (didReceiveServerRedirectForProvisionalLoadForFrame):
        (didFailProvisionalLoadWithErrorForFrame):
        (didCommitLoadForFrame):
        (didFinishDocumentLoadForFrame):
        (didFinishLoadForFrame):
        (didFailLoadWithErrorForFrame):
        (didSameDocumentNavigationForFrame):
        (didReceiveTitleForFrame):
        (didFirstLayoutForFrame):
        (didFirstVisuallyNonEmptyLayoutForFrame):
        (didRemoveFrameFromHierarchy):
        (didDisplayInsecureContentForFrame):
        (didRunInsecureContentForFrame):
        (didDetectXSSForFrame):
        (didStartProgress):
        (didChangeProgress):
        (didFinishProgress):
        (didBecomeUnresponsive):
        (didBecomeResponsive):
        (processDidExit):
        (didChangeBackForwardList):
        (decidePolicyForNavigationAction):
        (decidePolicyForNewWindowAction):
        (decidePolicyForResponse):
        (createNewPage):
        (showPage):
        (closePage):
        (runJavaScriptAlert):
        (runJavaScriptConfirm):
        (runJavaScriptPrompt):
        (setStatusText):
        (mouseDidMoveOverElement):
        (getWindowFrame):
        (setWindowFrame):
        (runBeforeUnloadConfirmPanel):
        (runOpenPanel):
        (-[WK2BrowserWindowController awakeFromNib]):
        (-[WK2BrowserWindowController didStartProgress]):
        (-[WK2BrowserWindowController didChangeProgress:]):
        (-[WK2BrowserWindowController didFinishProgress]):
        (-[WK2BrowserWindowController updateProvisionalURLForFrame:]):
        (-[WK2BrowserWindowController didStartProvisionalLoadForFrame:]):
        (-[WK2BrowserWindowController didReceiveServerRedirectForProvisionalLoadForFrame:]):
        (-[WK2BrowserWindowController didFailProvisionalLoadWithErrorForFrame:]):
        (-[WK2BrowserWindowController didFailLoadWithErrorForFrame:]):
        (-[WK2BrowserWindowController didSameDocumentNavigationForFrame:]):
        (-[WK2BrowserWindowController didCommitLoadForFrame:]):
        (-[WK2BrowserWindowController loadURLString:]):
        (-[WK2BrowserWindowController performFindPanelAction:]):
        (-[WK2BrowserWindowController find:]):

2012-10-05  Sudarsana Nagineni  <sudarsana.nagineni@intel.com>

        [WK2][WTR] WebKitTestRunner needs testRunner.setSerializeHTTPLoads
        https://bugs.webkit.org/show_bug.cgi?id=98524

        Reviewed by Alexey Proskuryakov.

        Add implementation for testRunner.setSerializeHTTPLoads in
        WebKitTestRunner.

        * WebKitTestRunner/InjectedBundle/Bindings/TestRunner.idl:
        * WebKitTestRunner/InjectedBundle/InjectedBundle.cpp:
        (WTR::InjectedBundle::beginTesting):
        * WebKitTestRunner/InjectedBundle/TestRunner.cpp:
        (WTR::TestRunner::setSerializeHTTPLoads):
        (WTR):
        * WebKitTestRunner/InjectedBundle/TestRunner.h:
        (TestRunner):

2012-10-05  Richard Larocque  <rlarocque@chromium.org>

        TestResultsServer does not display sync_integration_tests results
        https://bugs.webkit.org/show_bug.cgi?id=98551

        Reviewed by Ojan Vafai.

        Allow builders whose name contains "Sync" to pass through the
        isChromiumWebkitDepsTestRunner filter.

        The test expectations in flakiness_dashboard_unittests.js have been
        updated to match the new behaviour.

        * TestResultServer/static-dashboards/builders.js:
        (isChromiumDepsGTestRunner):

2012-10-05  Roger Fong  <roger_fong@apple.com>

        Tests in webkitpy involving child processes are flaky. 
        Skipping run_webkit_tests_integrationtest.py.
        https://bugs.webkit.org/show_bug.cgi?id=98559

        Reviewed by Dirk Pranke.

        * Scripts/webkitpy/layout_tests/run_webkit_tests_integrationtest.py:
        (MainTest.test_verbose_in_child_processes):

2012-10-05  Zan Dobersek  <zandobersek@gmail.com>

        [Gtk] fast/xsl/xslt-missing-namespace-in-xslt.xml is failing on the 64-bit Debug builder
        https://bugs.webkit.org/show_bug.cgi?id=91009

        Reviewed by Martin Robinson.

        Include libxml2 into the jhbuild module. Version 2.8.0 introduces
        a more correct (but not completely correct) behavior in the
        fast/xsl/xslt-missing-namespace-in-xslt.html test.

        * gtk/jhbuild.modules:

2012-10-05  Rob Buis  <rbuis@rim.com>

        [BlackBerry] Implement TestRunner.setMockDeviceOrientation
        https://bugs.webkit.org/show_bug.cgi?id=98542

        Reviewed by Antonio Gomes.

        PR 120681

        This fixes tests in fast/dom/DeviceOrientation.

        * DumpRenderTree/blackberry/TestRunnerBlackBerry.cpp:
        (TestRunner::setMockDeviceOrientation):

2012-10-05  Christophe Dumez  <christophe.dumez@intel.com>

        [WK2][WKTR] Implement UIClient focus callbacks in WebKitTestRunner
        https://bugs.webkit.org/show_bug.cgi?id=98256

        Reviewed by Kenneth Rohde Christiansen.

        Implement UIClient's focus callbacks for the main page in
        WebKitTestRunner.

        * WebKitTestRunner/TestController.cpp:
        (WTR::focus):
        (WTR::TestController::initialize):

2012-10-05  Mark Hahnenberg  <mhahnenberg@apple.com>

        JSC should have a way to gather and log Heap memory use and pause times
        https://bugs.webkit.org/show_bug.cgi?id=98431

        Reviewed by Geoffrey Garen.

        * DumpRenderTree/mac/DumpRenderTree.mm:
        (main): Added a check as to whether we should dump our JSC Heap statistics on exit.

2012-10-05  Christophe Dumez  <christophe.dumez@intel.com>

        [EFL][WK2] Fix mktemp() compilation warning in Minibrowser
        https://bugs.webkit.org/show_bug.cgi?id=98493

        Reviewed by Kenneth Rohde Christiansen.

        Fix wrong mktemp usage causing a compilation warning
        in MiniBrowser.

        * MiniBrowser/efl/main.c:
        (on_download_request):

2012-10-05  Christophe Dumez  <christophe.dumez@intel.com>

        [WK2][WKTR] Avoid duplication of UIClient callbacks for main page and other pages
        https://bugs.webkit.org/show_bug.cgi?id=98503

        Reviewed by Kenneth Rohde Christiansen.

        Avoid the need for duplicating UIClient callbacks for main page
        and other pages by passing the view as clientInfo
        for those callbacks.

        Previously, callbacks for the main page were passed the
        TestController as clientInfo while the callbacks for other pages
        were passed the PlatformWebView as clientInfo. This was error prone
        and leads to useless code duplication.

        * WebKitTestRunner/TestController.cpp:
        (WTR::getWindowFrame):
        (WTR::setWindowFrame):
        (WTR::runBeforeUnloadConfirmPanel):
        (WTR::TestController::createOtherPage):
        (WTR::TestController::initialize):
        (WTR::TestController::decidePolicyForNotificationPermissionRequest):

2012-10-05  Sadrul Habib Chowdhury  <sadrul@chromium.org>

        [chromium] Allow dragging into plugins.
        https://bugs.webkit.org/show_bug.cgi?id=98277

        Reviewed by Tony Chang.

        Update the TestWebPlugin to receive drag events and print them out.

        * DumpRenderTree/chromium/TestWebPlugin.cpp:
        (TestWebPlugin::handleDragStatusUpdate):
        * DumpRenderTree/chromium/TestWebPlugin.h:
        (TestWebPlugin):

2012-10-05  Jongseok Yang  <js45.yang@samsung.com>

        [EFL][WK2] Remove "web" word from ewk_web_error APIs
        https://bugs.webkit.org/show_bug.cgi?id=97886

        Reviewed by Gyuyoung Kim.

        Remove "web" word from ewk_web_error APIs.
        "web" word was redundant because "ewk" means "EFL WebKit" and WK APIs for error does not have "web" word.

        * MiniBrowser/efl/main.c:
        (on_error):

2012-10-05  Csaba OsztrogonÃ¡c  <ossy@webkit.org>

        [Qt] Enable CSS compositing by default
        https://bugs.webkit.org/show_bug.cgi?id=98490

        Reviewed by Simon Hausmann.

        * qmake/mkspecs/features/features.pri:

2012-10-05  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r130466.
        http://trac.webkit.org/changeset/130466
        https://bugs.webkit.org/show_bug.cgi?id=98495

        It made 12 tests crash on Qt-WK2 (Requested by Ossy on
        #webkit).

        * WebKitTestRunner/TestController.cpp:
        (WTR::focus):
        (WTR::TestController::initialize):

2012-10-05  Christophe Dumez  <christophe.dumez@intel.com>

        [EFL] Fix window resizing / moving in WK1 and WKTR
        https://bugs.webkit.org/show_bug.cgi?id=98486

        Reviewed by Gyuyoung Kim.

        Fix PlatformWebView::windowFrame() and
        PlatformWebView::setWindowFrame() in EFL's WKTR so
        that it resizes / moves the window, not the view.

        The new code matches the implementation in EwkView's
        UIClient.

        * WebKitTestRunner/efl/PlatformWebViewEfl.cpp:
        (WTR::PlatformWebView::windowFrame):
        (WTR::PlatformWebView::setWindowFrame):

2012-10-04  KyungTae Kim  <ktf.kim@samsung.com>

        [EFL][WK2] Fix destination path when download with suggested filename on the Minibrowser
        https://bugs.webkit.org/show_bug.cgi?id=98334

        Reviewed by Gyuyoung Kim.

        Add callback functions for download requests to Minibrowser to set the destination path for download.
        Set the destination path with suggested file name as (destination folder) + (suggested file name).
        The 'destination folder' should be a specific folder user selected, but is set to '/tmp' for now.

        Additionally, for printing out the download status, 
        use the info macro and set the verbose variable to 1 to enable it.

        * MiniBrowser/efl/main.c:
        (on_download_request):
        (on_download_finished):
        (on_download_failed):
        (browserCreate):

2012-10-04  Christophe Dumez  <christophe.dumez@intel.com>

        [WK2][WKTR] Implement UIClient focus callbacks in WebKitTestRunner
        https://bugs.webkit.org/show_bug.cgi?id=98256

        Reviewed by Kenneth Rohde Christiansen.

        Implement UIClient's focus callbacks in WebKitTestRunner.

        * WebKitTestRunner/TestController.cpp:
        (WTR::focus):
        (WTR::TestController::initialize):

2012-10-04  Rik Cabanier  <cabanier@adobe.com>

        Turn Compositing on by default in WebKit build
        https://bugs.webkit.org/show_bug.cgi?id=98315

        Reviewed by Simon Fraser.

        enable -webkit-blend-mode on trunk.

        * Scripts/webkitperl/FeatureList.pm:

2012-10-04  Ryuan Choi  <ryuan.choi@samsung.com>

        [EFL][WK2] Add APIs to get/set the frame flattening.
        https://bugs.webkit.org/show_bug.cgi?id=95982

        Reviewed by Gyuyoung Kim.

        * MiniBrowser/efl/main.c: Added frame flattening option to test.
        (browserCreate):
        (main):

2012-10-04  Christophe Dumez  <christophe.dumez@intel.com>

        [EFL] Add libxml 2.8.0 to jhbuild
        https://bugs.webkit.org/show_bug.cgi?id=98418

        Reviewed by Laszlo Gombos.

        Add libxml 2.8.0 to EFL's jhbuild for consistency.

        * efl/jhbuild.modules:

2012-10-03  Benjamin Poulain  <bpoulain@apple.com>

        [WK2] Support all attributes of GeolocationPosition
        https://bugs.webkit.org/show_bug.cgi?id=98212

        Reviewed by Sam Weinig.

        Expand WebKitTestRunner and DumpRenderTree to test all the attributes
        of GeolocationPosition.

        * DumpRenderTree/TestRunner.cpp:
        (setMockGeolocationPositionCallback):
        * DumpRenderTree/TestRunner.h:
        (TestRunner):
        * DumpRenderTree/efl/TestRunnerEfl.cpp:
        (TestRunner::setMockGeolocationPosition):
        * DumpRenderTree/gtk/TestRunnerGtk.cpp:
        (TestRunner::setMockGeolocationPosition):
        * DumpRenderTree/mac/TestRunnerMac.mm:
        (TestRunner::setMockGeolocationPosition):
        * DumpRenderTree/win/TestRunnerWin.cpp:
        (TestRunner::setMockGeolocationPosition):
        * DumpRenderTree/wx/TestRunnerWx.cpp:
        (TestRunner::setMockGeolocationPosition):
        * WebKitTestRunner/GeolocationProviderMock.cpp:
        (WTR::GeolocationProviderMock::setPosition):
        * WebKitTestRunner/GeolocationProviderMock.h:
        (GeolocationProviderMock):
        * WebKitTestRunner/InjectedBundle/Bindings/CodeGeneratorTestRunner.pm:
        (_platformTypeVariableDeclaration):
        Use a proper constructor for the JSValueRef, it is an opaque type, we are not supposed
        to build the pointer outself.
        This is necessary to support optional JSValueRef properly.

        * WebKitTestRunner/InjectedBundle/Bindings/TestRunner.idl:
        * WebKitTestRunner/InjectedBundle/InjectedBundle.cpp:
        (WTR::InjectedBundle::setMockGeolocationPosition):
        * WebKitTestRunner/InjectedBundle/InjectedBundle.h:
        (InjectedBundle):
        * WebKitTestRunner/InjectedBundle/TestRunner.cpp:
        (WTR::TestRunner::setMockGeolocationPosition):
        * WebKitTestRunner/InjectedBundle/TestRunner.h:
        (TestRunner):
        * WebKitTestRunner/TestController.cpp:
        (WTR::TestController::setMockGeolocationPosition):
        * WebKitTestRunner/TestController.h:
        (TestController):
        * WebKitTestRunner/TestInvocation.cpp:
        (WTR::TestInvocation::didReceiveMessageFromInjectedBundle):

2012-10-04  Raphael Kubo da Costa  <raphael.kubo.da.costa@intel.com>

        Make the Xvfb driver recognize `X' as a valid X server binary.
        https://bugs.webkit.org/show_bug.cgi?id=98434

        Reviewed by Dirk Pranke.

        The X server binary can also be called `X', so account for that
        possibility in the _next_free_display regexp.

        Additionally, make the regular expression require at least one
        space character after the `ps comm' part.

        * Scripts/webkitpy/layout_tests/port/xvfbdriver.py:
        (XvfbDriver._next_free_display):
        * Scripts/webkitpy/layout_tests/port/xvfbdriver_unittest.py:
        (XvfbDriverTest.test_next_free_display):

2012-10-04  Raphael Kubo da Costa  <raphael.kubo.da.costa@intel.com>

        webkitpy: Accept WEBKITOUTPUTDIR in Port._setup_environ_for_server.
        https://bugs.webkit.org/show_bug.cgi?id=98436

        Reviewed by Dirk Pranke.

        The Xvfb driver (ab)uses Port._setup_environ_for_server() to set
        the environment for the server process, and the WEBKITOUTPUTDIR
        environment variable was not being passed through, causing the
        build directory to be wrongfully set to WebKitBuild/ all the time.

        * Scripts/webkitpy/layout_tests/port/base.py:
        (Port.to.setup_environ_for_server):

2012-10-04  Christophe Dumez  <christophe.dumez@intel.com>

        [EFL][WK2] Add setting to allow file access from file:// URLs
        https://bugs.webkit.org/show_bug.cgi?id=98121

        Reviewed by Laszlo Gombos.

        Allow file access from file:// URLs by default in Minibrowser
        to facilitate testing.

        * MiniBrowser/efl/main.c:
        (browserCreate):

2012-10-04  Christophe Dumez  <christophe.dumez@intel.com>

        [EFL] Run unit tests with Xvfb
        https://bugs.webkit.org/show_bug.cgi?id=98389

        Reviewed by Laszlo Gombos.

        Run EFL unit tests with Xvfb, similarly to GTK port.

        * Scripts/run-efl-tests:

2012-10-04  Adrian Perez de Castro  <aperez@igalia.com>

        [GTK] Enable inspector by default in GtkLauncher/MiniBrowser
        https://bugs.webkit.org/show_bug.cgi?id=98333

        Reviewed by Xan Lopez.

        Both MiniBrowser and GtkLauncher are tools for testing, so in
        the end every time we want to test the inspector we have to
        manually enable enable the âdeveloper extrasâ setting when using
        them. It make sense to have this setting enabled by default.

        * GtkLauncher/main.c:
        (main):
        * MiniBrowser/gtk/main.c:
        (main):

2012-10-04  Harald Alvestrand  <hta@google.com>

        Change RTCPeerConnection GetStats to use Date timestamp format
        https://bugs.webkit.org/show_bug.cgi?id=98263

        Reviewed by Yury Semikhatsky.

        * DumpRenderTree/chromium/MockWebRTCPeerConnectionHandler.cpp:
        (MockWebRTCPeerConnectionHandler::getStats):

2012-10-04  Dirk Pranke  <dpranke@chromium.org>

        [NRWT] --skipped option is ignored when --test-list is used
        https://bugs.webkit.org/show_bug.cgi?id=98260

        Reviewed by Ojan Vafai.

        Adds a --skipped=always flag that will skip any tests listed in
        TestExpectations even if they're listed explicitly on the
        command line.

        This is most useful if you are using --test-list to specify a
        long list of files but you still want to skip some of them
        depending on what's in TestExpectations.

        * Scripts/webkitpy/layout_tests/controllers/layout_test_finder.py:
        (LayoutTestFinder.skip_tests):
        * Scripts/webkitpy/layout_tests/run_webkit_tests.py:
        (parse_args):
        * Scripts/webkitpy/layout_tests/run_webkit_tests_integrationtest.py:
        (MainTest.test_skipped_flag):

2012-10-04  Sheriff Bot  <webkit.review.bot@gmail.com>

        Unreviewed, rolling out r130377.
        http://trac.webkit.org/changeset/130377
        https://bugs.webkit.org/show_bug.cgi?id=98392

        Chromium Win compilation is broken (Requested by yurys on
        #webkit).

        * DumpRenderTree/chromium/MockWebRTCPeerConnectionHandler.cpp:
        (MockWebRTCPeerConnectionHandler::getStats):

2012-10-04  Harald Alvestrand  <hta@google.com>

        Change RTCPeerConnection GetStats to use Date timestamp format
        https://bugs.webkit.org/show_bug.cgi?id=98263

        Reviewed by Adam Barth.

        * DumpRenderTree/chromium/MockWebRTCPeerConnectionHandler.cpp:
        (MockWebRTCPeerConnectionHandler::getStats):

2012-10-04  Raphael Kubo da Costa  <raphael.kubo.da.costa@intel.com>

        Unreviewed, remove unused $legacyWebKitBlobBuilderSupport variable after r130343.

        * Scripts/webkitperl/FeatureList.pm:

2012-10-03  Philip Rogers  <pdr@google.com>

        Force GC between PageLoad tests.
        https://bugs.webkit.org/show_bug.cgi?id=98203

        Reviewed by Ryosuke Niwa.

        Previously, our PageLoad PerfTests had multi-modal distributions,
        typically with a small cluster at 1-2x the median. This turned out
        to be caused by not garbage collecting between tests!

        This patch adds a new file, force-gc.html, and loads this file between
        PageLoad tests to force a GC. I manually verified that this cleans up
        our perf test outliers.

        * Scripts/webkitpy/performance_tests/perftest.py:
        (PageLoadingPerfTest.__init__):
        (PageLoadingPerfTest):
        (PageLoadingPerfTest.run_single):

            This function now loads two pages: one to force a gc and
            then the test to run.

        * Scripts/webkitpy/performance_tests/perftest_unittest.py:

            Modified several existing tests to show that the force-gc file
            is loaded.

        (MockPort):
        (MockPort.__init__):
        (MockPort.perf_tests_dir):
        (TestPageLoadingPerfTest.MockDriver.__init__):
        (TestPageLoadingPerfTest.MockDriver.run_test):
        (TestPageLoadingPerfTest.test_run):
        (TestPageLoadingPerfTest.test_run_with_bad_output):
        (TestReplayPerfTest.ReplayTestPort):
        (TestReplayPerfTest.ReplayTestPort.__init__):
        (TestReplayPerfTest.test_run_single.run_test):
        (TestReplayPerfTest.test_run_single):
        (TestReplayPerfTest.test_run_single_fails_when_output_has_error):
        (TestPerfTestFactory.test_regular_test):
        (TestPerfTestFactory.test_inspector_test):
        (TestPerfTestFactory.test_page_loading_test):

2012-10-03  Christophe Dumez  <christophe.dumez@intel.com>

        [EFL] Enable use of X11 in DumpRenderTree / WebKitTestRunner
        https://bugs.webkit.org/show_bug.cgi?id=98231

        Reviewed by Gyuyoung Kim.

        Enable use of X11 in DumpRenderTree / WebKitTestRunner.
        Call ecore_evas_new() instead of ecore_evas_buffer_new()
        in EFL's DumpRenderTree and WebKitTestRunner.
        It is safe to do this now that we are using XvfbDriver
        for the layout tests.

        * DumpRenderTree/efl/DumpRenderTree.cpp:
        (parseCommandLineOptions):
        (initEcoreEvas):
        * WebKitTestRunner/efl/PlatformWebViewEfl.cpp:
        (WTR::initEcoreEvas):
        * WebKitTestRunner/efl/main.cpp:
        (main):

2012-10-03  Dirk Pranke  <dpranke@chromium.org>

        run-webkit-tests tests on win32 after r127302
        https://bugs.webkit.org/show_bug.cgi?id=98323

        Reviewed by Eric Seidel.

        run-webkit-tests tests on win32 after r127302
        https://bugs.webkit.org/show_bug.cgi?id=98323

        Reviewed by Eric Seidel.

        Looks like when we converted the json-building logic to use scm
        to try and get the svn revision, we missed a win32-ism and
        didn't check to make sure had initialized the scm subsystem.

        This change fixes that and renames _initialize_scm to be a public method.

        * Scripts/webkitpy/common/host.py:
        (Host.initialize_scm):
        * Scripts/webkitpy/common/host_mock.py:
        (MockHost.__init__):
        (MockHost.initialize_scm):
        * Scripts/webkitpy/layout_tests/controllers/manager.py:
        (summarize_results):
        * Scripts/webkitpy/layout_tests/layout_package/json_results_generator.py:
        (JSONResultsGeneratorBase.get_json):
        (JSONResultsGeneratorBase._get_result_char):
        (JSONResultsGeneratorBase._get_svn_revision):
        * Scripts/webkitpy/performance_tests/perftestsrunner.py:
        (PerfTestsRunner.__init__):
        * Scripts/webkitpy/style/checkers/test_expectations.py:
        (TestExpectationsChecker.__init__):
        * Scripts/webkitpy/style/main.py:
        (CheckWebKitStyle.main):
        * Scripts/webkitpy/tool/main.py:
        (WebKitPatch.handle_global_options):
        * Scripts/webkitpy/tool/servers/rebaselineserver.py:
        (get_test_baselines):

2012-10-03  Adrian Perez de Castro  <aperez@igalia.com>

        [GTK] Make inspector directly useable in GtkLauncher/MiniBrowser
        https://bugs.webkit.org/show_bug.cgi?id=98310

        Reviewed by Martin Robinson.

        Make MiniBrowser/GtkLauncher define the path to the inspector
        resources by setting the WEBKIT_INSPECTOR_PATH environment
        variable pointing to the copy of the inspector resources in
        the build directory. If the environment variable is already
        defined, its value is not overwritten. The path is derived
        from the WEBKIT_EXEC_PATH macro defined in the makefiles.

        * GNUmakefile.am:
        * GtkLauncher/main.c:
        (main):
        * MiniBrowser/gtk/main.c:
        (main):

2012-10-03  Benjamin Poulain  <bpoulain@apple.com>

        Fix Geolocation/window-close-crash.html and harden WebKitTestRunner for Geolocation
        https://bugs.webkit.org/show_bug.cgi?id=97608

        Reviewed by Sam Weinig.

        The test fast/dom/Geolocation/window-close-crash.html was crashing because
        handleGeolocationPermissionRequest() was executed on the wrong pointer. Depending on how
        the page was created, the void* clientInfo can either be a PlatformWebView or
        a TestController.

        Using the global TestController fixes the issue.

        * WebKitTestRunner/GeolocationProviderMock.cpp:
        (WTR::GeolocationProviderMock::setPosition):
        (WTR::GeolocationProviderMock::setPositionUnavailableError):
        To be reliable, the test fast/dom/Geolocation/maximum-age.html needs the setting the position
        to clear the error and vice versa.
        This is the same behavior as GeolocationClientMock and MockGeolocationProvider of WebKit1.

        (WTR::GeolocationProviderMock::sendPositionIfNeeded):
        (WTR::GeolocationProviderMock::sendErrorIfNeeded):
        Some tests expect the position/error cant be sent multiple time,
        just keep the position after sending.

        * WebKitTestRunner/TestController.cpp:
        (WTR::decidePolicyForGeolocationPermissionRequest):
        (WTR::TestController::decidePolicyForGeolocationPermissionRequestIfPossible):
        * WebKitTestRunner/TestController.h:
        Let's play as if we did not know what is in GeolocationPermissionRequestManagerProxy like a real
        client would have to do.

2012-10-03  Otto Derek Cheung  <otcheung@rim.com>

        [BlackBerry] Implementing the NetworkInfo API for BB port
        https://bugs.webkit.org/show_bug.cgi?id=98273

        Reviewed by Rob Buis.

        Enabling NetworkInfo API for the BlackBerry port.

        * Scripts/webkitperl/FeatureList.pm:

2012-10-03  Anders Carlsson  <andersca@apple.com>

        Exception thrown when running accessibility/container-node-delete-causes-crash.html test
        https://bugs.webkit.org/show_bug.cgi?id=98291

        Reviewed by Andreas Kling.

        The accessibility/container-node-delete-causes-crash.html test will cause a full accessibility tree
        to be created by trying to look up an element with a non-existent ID. This caused an exception to be thrown
        when trying to access the children of an element that didn't have any children. Fix this by adding
        BEGIN_AX_OBJC_EXCEPTIONS/END_AX_OBJC_EXCEPTIONS around the call to get the children.

        * DumpRenderTree/mac/AccessibilityControllerMac.mm:
        (findAccessibleObjectById):

2012-10-03  Ojan Vafai  <ojan@chromium.org>

        Make partytime work when loading garden-o-matic from trac.webkit.org
        https://bugs.webkit.org/show_bug.cgi?id=98283

        Reviewed by Adam Barth.

        CSP was blocking the reqest for partytime.gif because 'self' wasn't on the img-src directive.
        * BuildSlaveSupport/build.webkit.org-config/public_html/TestFailures/garden-o-matic.html:

2012-10-03  Roger Fong  <roger_fong@apple.com>

        Unreviewed. Adding sys.platform check to skip a failing assert on the Apple Windows platform.
        https://bugs.webkit.org/show_bug.cgi?id=98288

        * Scripts/webkitpy/layout_tests/port/chromium_android_unittest.py:
        (ChromiumAndroidDriverTest.test_command_from_driver_input):

2012-10-03  Ojan Vafai  <ojan@chromium.org>

        Get rid of warning about non-existant platform name when loading garden-o-matic
        https://bugs.webkit.org/show_bug.cgi?id=98282

        Reviewed by Adam Barth.

        If you loaded without a platform query parameter we'd return "null" as the platform name
        instead of null.
        * BuildSlaveSupport/build.webkit.org-config/public_html/TestFailures/scripts/base.js:
        * BuildSlaveSupport/build.webkit.org-config/public_html/TestFailures/scripts/base_unittests.js:

2012-10-03  Balazs Kelemen  <kbalazs@webkit.org>

        [Qt] Enable mock scrollbars
        https://bugs.webkit.org/show_bug.cgi?id=98011

        Reviewed by Csaba OsztrogonÃ¡c.

        Enable mock scrollbars for the Qt port. This patch will require a huge rebaseline.

        * DumpRenderTree/qt/DumpRenderTreeQt.cpp:
        (WebCore::DumpRenderTree::DumpRenderTree):
        * WebKitTestRunner/TestController.cpp:
        (WTR::TestController::resetStateToConsistentValues):

2012-10-03  Alberto Garcia  <agarcia@igalia.com>

        [GTK] [WK2] Add favicon support to the MiniBrowser
        https://bugs.webkit.org/show_bug.cgi?id=98063

        Reviewed by Carlos Garcia Campos.

        Set the icon in the URI text entry using the favicon property of
        the WebKitWebView.

        * MiniBrowser/gtk/BrowserWindow.c:
        (_BrowserWindow):
        (updateUriEntryIcon):
        (uriEntryTextChanged):
        (faviconChanged):
        (browserWindowFinalize):
        (browser_window_init):
        (browserWindowConstructed):

2012-10-03  Raphael Kubo da Costa  <raphael.kubo.da.costa@intel.com>

        [Qt][DRT] Add support for overriding the "WebKitDisplayImagesKey" preference.
        https://bugs.webkit.org/show_bug.cgi?id=98200

        Reviewed by Csaba OsztrogonÃ¡c.

        * DumpRenderTree/qt/TestRunnerQt.cpp:
        (TestRunner::overridePreference):

2012-10-03  Zoltan Arvai  <zarvai@inf.u-szeged.hu>

        [Qt][WRT] Fix build error with MSVC on Windows.
        https://bugs.webkit.org/show_bug.cgi?id=97697

        Reviewed by Simon Hausmann.

        WTR build is failing when WebKit directory is located on a longer path.
        This seems to caused by source files that has the same name in
        WTR and DRT directories. The solution is removing referencies 
        from Target.pri to DRT directory and adding an alternate version of
        the required files to WTR. Those files simply include the real ones from DRT.

        * WebKitTestRunner/InjectedBundle/Target.pri:
        * WebKitTestRunner/InjectedBundle/qt/QtInitializeTestFonts.cpp: Added.
        * WebKitTestRunner/InjectedBundle/qt/QtInitializeTestFonts.h: Added.

2012-10-03  Christophe Dumez  <christophe.dumez@intel.com>

        [WK2][WKTR] TestRunner.setAlwaysAcceptCookies() causes flakiness
        https://bugs.webkit.org/show_bug.cgi?id=98238

        Reviewed by Csaba OsztrogonÃ¡c.

        Reset AlwaysAcceptCookies setting between tests to avoid
        flakiness due to TestRunner.setAlwaysAcceptCookies().

        * WebKitTestRunner/InjectedBundle/InjectedBundle.cpp:
        (WTR::InjectedBundle::beginTesting):

2012-10-03  Harald Alvestrand  <hta@google.com>

        Add data passing to the GetStats interface of RTCPeerConnection
        https://bugs.webkit.org/show_bug.cgi?id=98003

        Reviewed by Adam Barth.

        * DumpRenderTree/chromium/MockWebRTCPeerConnectionHandler.cpp:
        (RTCStatsRequestSucceededTask::RTCStatsRequestSucceededTask):
        (MockWebRTCPeerConnectionHandler::MockWebRTCPeerConnectionHandler):
        (MockWebRTCPeerConnectionHandler::addStream):
        (MockWebRTCPeerConnectionHandler::removeStream):
        (MockWebRTCPeerConnectionHandler::getStats):
        * DumpRenderTree/chromium/MockWebRTCPeerConnectionHandler.h:
        (MockWebRTCPeerConnectionHandler):

== Rolled over to ChangeLog-2012-10-02 ==
