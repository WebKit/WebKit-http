#!/usr/bin/env python
#
# Copyright (C) 2018 Apple Inc.  All rights reserved.
# Copyright (C) 2012 Google Inc. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1.  Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer. 
# 2.  Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution. 
#
# THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS "AS IS" AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

import argparse
import os
import sys
import logging

absolute_file_path = os.path.abspath(__file__)
build_slave_support_dir = os.path.dirname(absolute_file_path)
webkit_tools_dir = os.path.dirname(build_slave_support_dir)
scripts_dir = os.path.join(webkit_tools_dir, 'Scripts')
sys.path.append(scripts_dir)

# sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from webkitpy.common.build_binaries_fetcher import BuildBinariesFetcher
from webkitpy.common.host import Host

BUILD_DIRECTORY = 'DownloadedBinaries'


_log = logging.getLogger(__name__)

logging.basicConfig()

_log.setLevel(logging.INFO)

def main():
    parser = argparse.ArgumentParser("usage: %prog [options] [url]") # TODO update all these with help and aliases
    parser.add_argument("--platform", dest="platform", default="mac-highsierra")
    parser.add_argument("--debug", action="store_const", const="debug", dest="configuration")
    parser.add_argument("--release", action="store_const", const="release", dest="configuration")
    parser.add_argument('--architecture', default='x86_64', help='The architecture to query [x86_64 | i386]')
    parser.add_argument('--build-directory', nargs='?', const=BUILD_DIRECTORY, help='TODO')
    parser.add_argument('--full', action='store_true', default=False, help='Use full archives containing debug symbols. These are significantly larger files!')
    parser.add_argument('--revision', default=None, help='Pass in a build revision number from WebKit archives to download binaries. Revision=None will download the latest build.')
    parser.add_argument('--delete-first', action='store_true', default=False, help='Flag will clobber existing build directory')
    parser.add_argument('--no-extract', action='store_true', default=False, help='TODO')
    parser.add_argument('url', nargs='?', help='TODO')
    args = parser.parse_args()

    args.host = Host()

    build_binaries_fetcher = BuildBinariesFetcher(args)
    build_binaries_fetcher.get_path()


if __name__ == '__main__':
    sys.exit(main())
